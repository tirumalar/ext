ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_CHARGE.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_CHARGE_initVar
  18              		.bss
  19              		.type	PWM_CHARGE_initVar, %object
  20              		.size	PWM_CHARGE_initVar, 1
  21              	PWM_CHARGE_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_CHARGE_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_CHARGE_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_CHARGE_Init, %function
  29              	PWM_CHARGE_Init:
  30              	.LFB1:
  31              		.file 1 "Generated_Source\\PSoC4\\PWM_CHARGE.c"
   1:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_CHARGE.c **** * File Name: PWM_CHARGE.c
   3:Generated_Source\PSoC4/PWM_CHARGE.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM_CHARGE.c **** *
   5:Generated_Source\PSoC4/PWM_CHARGE.c **** * Description:
   6:Generated_Source\PSoC4/PWM_CHARGE.c **** *  This file provides the source code to the API for the PWM_CHARGE
   7:Generated_Source\PSoC4/PWM_CHARGE.c **** *  component
   8:Generated_Source\PSoC4/PWM_CHARGE.c **** *
   9:Generated_Source\PSoC4/PWM_CHARGE.c **** * Note:
  10:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
  11:Generated_Source\PSoC4/PWM_CHARGE.c **** *
  12:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM_CHARGE.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM_CHARGE.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM_CHARGE.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM_CHARGE.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  19:Generated_Source\PSoC4/PWM_CHARGE.c **** #include "PWM_CHARGE.h"
  20:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  21:Generated_Source\PSoC4/PWM_CHARGE.c **** uint8 PWM_CHARGE_initVar = 0u;
  22:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  23:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  24:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_Init
  26:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 2


  27:Generated_Source\PSoC4/PWM_CHARGE.c **** *
  28:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
  29:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Initialize/Restore default PWM_CHARGE configuration.
  30:Generated_Source\PSoC4/PWM_CHARGE.c **** *
  31:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
  33:Generated_Source\PSoC4/PWM_CHARGE.c **** *
  34:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
  35:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
  36:Generated_Source\PSoC4/PWM_CHARGE.c **** *
  37:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_Init(void)
  39:Generated_Source\PSoC4/PWM_CHARGE.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  41:Generated_Source\PSoC4/PWM_CHARGE.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE__QUAD == PWM_CHARGE_CONFIG)
  43:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_CONTROL_REG = PWM_CHARGE_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM_CHARGE.c ****         
  45:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_TRIG_CONTROL1_REG  = PWM_CHARGE_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  48:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_SetInterruptMode(PWM_CHARGE_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM_CHARGE.c ****         
  51:Generated_Source\PSoC4/PWM_CHARGE.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_SetCounterMode(PWM_CHARGE_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_WritePeriod(PWM_CHARGE_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_WriteCounter(PWM_CHARGE_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif  /* (PWM_CHARGE__QUAD == PWM_CHARGE_CONFIG) */
  56:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  57:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE__TIMER == PWM_CHARGE_CONFIG)
  58:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_CONTROL_REG = PWM_CHARGE_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM_CHARGE.c ****         
  60:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_TRIG_CONTROL1_REG  = PWM_CHARGE_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM_CHARGE.c ****     
  63:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_SetInterruptMode(PWM_CHARGE_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM_CHARGE.c ****         
  66:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_WritePeriod(PWM_CHARGE_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  69:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (PWM_CHARGE__COMPARE == PWM_CHARGE_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_WriteCompare(PWM_CHARGE_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  72:Generated_Source\PSoC4/PWM_CHARGE.c ****             #if (1u == PWM_CHARGE_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_WriteCompareBuf(PWM_CHARGE_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM_CHARGE.c ****             #endif  /* (1u == PWM_CHARGE_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 3


  76:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif  /* (PWM_CHARGE__COMPARE == PWM_CHARGE_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  78:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (PWM_CHARGE_CY_TCPWM_V2 && PWM_CHARGE_TIMER_UPDOWN_CNT_USED && !PWM_CHARGE_CY_TCPWM_400
  80:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM_CHARGE.c ****         #elif(PWM_CHARGE__COUNT_DOWN == PWM_CHARGE_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_WriteCounter(PWM_CHARGE_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM_CHARGE.c ****         #else
  84:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif /* (PWM_CHARGE_CY_TCPWM_V2 && PWM_CHARGE_TIMER_UPDOWN_CNT_USED && !PWM_CHARGE_CY_TCP
  86:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif  /* (PWM_CHARGE__TIMER == PWM_CHARGE_CONFIG) */
  87:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  88:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE__PWM_SEL == PWM_CHARGE_CONFIG)
  89:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_CONTROL_REG = PWM_CHARGE_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 0F4B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/PWM_CHARGE.c **** 
  91:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (PWM_CHARGE__PWM_PR == PWM_CHARGE_PWM_MODE)
  92:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_CONTROL_REG |= PWM_CHARGE_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_WriteCounter(PWM_CHARGE_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM_CHARGE.c ****         #else
  95:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_CONTROL_REG |= PWM_CHARGE_CTRL_PWM_ALIGN | PWM_CHARGE_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 0D4B     		ldr	r3, .L2
  47 000e 0D4A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 1A60     		str	r2, [r3]
  96:Generated_Source\PSoC4/PWM_CHARGE.c ****             
  97:Generated_Source\PSoC4/PWM_CHARGE.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM_CHARGE.c ****             #if (PWM_CHARGE_CY_TCPWM_V2 && PWM_CHARGE_PWM_UPDOWN_CNT_USED && !PWM_CHARGE_CY_TCPWM_4
  99:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM_CHARGE.c ****             #elif (PWM_CHARGE__RIGHT == PWM_CHARGE_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_WriteCounter(PWM_CHARGE_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM_CHARGE.c ****             #else 
 103:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_WriteCounter(0u);
  50              		.loc 1 103 0
  51 0014 0020     		mov	r0, #0
  52 0016 FFF7FEFF 		bl	PWM_CHARGE_WriteCounter
 104:Generated_Source\PSoC4/PWM_CHARGE.c ****             #endif  /* (PWM_CHARGE_CY_TCPWM_V2 && PWM_CHARGE_PWM_UPDOWN_CNT_USED && !PWM_CHARGE_CY_
 105:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif  /* (PWM_CHARGE__PWM_PR == PWM_CHARGE_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 107:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (PWM_CHARGE__PWM_DT == PWM_CHARGE_PWM_MODE)
 108:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_CONTROL_REG |= PWM_CHARGE_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif  /* (PWM_CHARGE__PWM_DT == PWM_CHARGE_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 111:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (PWM_CHARGE__PWM == PWM_CHARGE_PWM_MODE)
 112:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_CONTROL_REG |= PWM_CHARGE_CTRL_PWM_PRESCALER;
  53              		.loc 1 112 0
  54 001a 0A4B     		ldr	r3, .L2
  55 001c 094A     		ldr	r2, .L2
  56 001e 1268     		ldr	r2, [r2]
  57 0020 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif  /* (PWM_CHARGE__PWM == PWM_CHARGE_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM_CHARGE.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 4


 115:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_TRIG_CONTROL1_REG  = PWM_CHARGE_PWM_SIGNALS_MODES;
  58              		.loc 1 116 0
  59 0022 094B     		ldr	r3, .L2+4
  60 0024 0C22     		mov	r2, #12
  61 0026 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/PWM_CHARGE.c ****     
 118:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_SetInterruptMode(PWM_CHARGE_PWM_INTERRUPT_MASK);
  62              		.loc 1 119 0
  63 0028 0120     		mov	r0, #1
  64 002a FFF7FEFF 		bl	PWM_CHARGE_SetInterruptMode
 120:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 121:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (PWM_CHARGE__PWM_PR == PWM_CHARGE_PWM_MODE)
 123:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM_CHARGE.c ****                     (PWM_CHARGE_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM_CHARGE.c ****                     PWM_CHARGE_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM_CHARGE.c ****                     PWM_CHARGE_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM_CHARGE.c ****         #else
 128:Generated_Source\PSoC4/PWM_CHARGE.c ****             #if (PWM_CHARGE__LEFT == PWM_CHARGE_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_TRIG_CONTROL2_REG = PWM_CHARGE_PWM_MODE_LEFT;
  65              		.loc 1 129 0
  66 002e 074B     		ldr	r3, .L2+8
  67 0030 3122     		mov	r2, #49
  68 0032 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/PWM_CHARGE.c ****             #endif  /* ( PWM_CHARGE_PWM_LEFT == PWM_CHARGE_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 132:Generated_Source\PSoC4/PWM_CHARGE.c ****             #if (PWM_CHARGE__RIGHT == PWM_CHARGE_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_TRIG_CONTROL2_REG = PWM_CHARGE_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM_CHARGE.c ****             #endif  /* ( PWM_CHARGE_PWM_RIGHT == PWM_CHARGE_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 136:Generated_Source\PSoC4/PWM_CHARGE.c ****             #if (PWM_CHARGE__CENTER == PWM_CHARGE_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_TRIG_CONTROL2_REG = PWM_CHARGE_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM_CHARGE.c ****             #endif  /* ( PWM_CHARGE_PWM_CENTER == PWM_CHARGE_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 140:Generated_Source\PSoC4/PWM_CHARGE.c ****             #if (PWM_CHARGE__ASYMMETRIC == PWM_CHARGE_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM_CHARGE.c ****                 PWM_CHARGE_TRIG_CONTROL2_REG = PWM_CHARGE_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM_CHARGE.c ****             #endif  /* (PWM_CHARGE__ASYMMETRIC == PWM_CHARGE_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif  /* (PWM_CHARGE__PWM_PR == PWM_CHARGE_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 145:Generated_Source\PSoC4/PWM_CHARGE.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_WritePeriod(PWM_CHARGE_PWM_PERIOD_VALUE );
  69              		.loc 1 146 0
  70 0034 8020     		mov	r0, #128
  71 0036 FFF7FEFF 		bl	PWM_CHARGE_WritePeriod
 147:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_WriteCompare(PWM_CHARGE_PWM_COMPARE_VALUE);
  72              		.loc 1 147 0
  73 003a 0120     		mov	r0, #1
  74 003c FFF7FEFF 		bl	PWM_CHARGE_WriteCompare
 148:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 149:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (1u == PWM_CHARGE_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_WriteCompareBuf(PWM_CHARGE_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif  /* (1u == PWM_CHARGE_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 154:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (1u == PWM_CHARGE_PWM_PERIOD_SWAP)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 5


 155:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_WritePeriodBuf(PWM_CHARGE_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif  /* (1u == PWM_CHARGE_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif  /* (PWM_CHARGE__PWM_SEL == PWM_CHARGE_CONFIG) */
 159:Generated_Source\PSoC4/PWM_CHARGE.c ****     
 160:Generated_Source\PSoC4/PWM_CHARGE.c **** }
  75              		.loc 1 160 0
  76 0040 BD46     		mov	sp, r7
  77              		@ sp needed
  78 0042 80BD     		pop	{r7, pc}
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 0044 00012040 		.word	1075839232
  83 0048 24012040 		.word	1075839268
  84 004c 28012040 		.word	1075839272
  85              		.cfi_endproc
  86              	.LFE1:
  87              		.size	PWM_CHARGE_Init, .-PWM_CHARGE_Init
  88              		.section	.text.PWM_CHARGE_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	PWM_CHARGE_Enable
  91              		.code	16
  92              		.thumb_func
  93              		.type	PWM_CHARGE_Enable, %function
  94              	PWM_CHARGE_Enable:
  95              	.LFB2:
 161:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 162:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 163:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_Enable
 165:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 167:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 168:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Enables the PWM_CHARGE.
 169:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 170:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 172:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 173:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 174:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 175:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 176:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_Enable(void)
 178:Generated_Source\PSoC4/PWM_CHARGE.c **** {
  96              		.loc 1 178 0
  97              		.cfi_startproc
  98 0000 90B5     		push	{r4, r7, lr}
  99              		.cfi_def_cfa_offset 12
 100              		.cfi_offset 4, -12
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 83B0     		sub	sp, sp, #12
 104              		.cfi_def_cfa_offset 24
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 6


 180:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 181:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 107              		.loc 1 181 0
 108 0006 FC1D     		add	r4, r7, #7
 109 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 110 000c 031C     		mov	r3, r0
 111 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_BLOCK_CONTROL_REG |= PWM_CHARGE_MASK;
 112              		.loc 1 182 0
 113 0010 084B     		ldr	r3, .L5
 114 0012 084A     		ldr	r2, .L5
 115 0014 1268     		ldr	r2, [r2]
 116 0016 0121     		mov	r1, #1
 117 0018 0A43     		orr	r2, r1
 118 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 119              		.loc 1 183 0
 120 001c FB1D     		add	r3, r7, #7
 121 001e 1B78     		ldrb	r3, [r3]
 122 0020 181C     		mov	r0, r3
 123 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 185:Generated_Source\PSoC4/PWM_CHARGE.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE__PWM_SEL == PWM_CHARGE_CONFIG)
 187:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (0u == PWM_CHARGE_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_TriggerCommand(PWM_CHARGE_MASK, PWM_CHARGE_CMD_START);
 124              		.loc 1 188 0
 125 0026 0120     		mov	r0, #1
 126 0028 1821     		mov	r1, #24
 127 002a FFF7FEFF 		bl	PWM_CHARGE_TriggerCommand
 189:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif /* (0u == PWM_CHARGE_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE__PWM_SEL == PWM_CHARGE_CONFIG) */
 191:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 192:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE__TIMER == PWM_CHARGE_CONFIG)
 193:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (0u == PWM_CHARGE_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_TriggerCommand(PWM_CHARGE_MASK, PWM_CHARGE_CMD_START);
 195:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif /* (0u == PWM_CHARGE_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE__TIMER == PWM_CHARGE_CONFIG) */
 197:Generated_Source\PSoC4/PWM_CHARGE.c ****     
 198:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE__QUAD == PWM_CHARGE_CONFIG)
 199:Generated_Source\PSoC4/PWM_CHARGE.c ****         #if (0u != PWM_CHARGE_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM_CHARGE.c ****             PWM_CHARGE_TriggerCommand(PWM_CHARGE_MASK, PWM_CHARGE_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM_CHARGE.c ****         #endif /* (0u != PWM_CHARGE_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif  /* (PWM_CHARGE__QUAD == PWM_CHARGE_CONFIG) */
 203:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 128              		.loc 1 203 0
 129 002e BD46     		mov	sp, r7
 130 0030 03B0     		add	sp, sp, #12
 131              		@ sp needed
 132 0032 90BD     		pop	{r4, r7, pc}
 133              	.L6:
 134              		.align	2
 135              	.L5:
 136 0034 00002040 		.word	1075838976
 137              		.cfi_endproc
 138              	.LFE2:
 139              		.size	PWM_CHARGE_Enable, .-PWM_CHARGE_Enable
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 7


 140              		.section	.text.PWM_CHARGE_Start,"ax",%progbits
 141              		.align	2
 142              		.global	PWM_CHARGE_Start
 143              		.code	16
 144              		.thumb_func
 145              		.type	PWM_CHARGE_Start, %function
 146              	PWM_CHARGE_Start:
 147              	.LFB3:
 204:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 205:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 206:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_Start
 208:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 210:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 211:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Initializes the PWM_CHARGE with default customizer
 212:Generated_Source\PSoC4/PWM_CHARGE.c **** *  values when called the first time and enables the PWM_CHARGE.
 213:Generated_Source\PSoC4/PWM_CHARGE.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM_CHARGE.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 216:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 218:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 219:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 220:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 221:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 222:Generated_Source\PSoC4/PWM_CHARGE.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PWM_CHARGE_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM_CHARGE.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM_CHARGE.c **** *  to 1 the first time PWM_CHARGE_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM_CHARGE.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM_CHARGE.c **** *  calls to the PWM_CHARGE_Start() routine.
 228:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 229:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_Start(void)
 231:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 148              		.loc 1 231 0
 149              		.cfi_startproc
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/PWM_CHARGE.c ****     if (0u == PWM_CHARGE_initVar)
 156              		.loc 1 232 0
 157 0004 064B     		ldr	r3, .L9
 158 0006 1B78     		ldrb	r3, [r3]
 159 0008 002B     		cmp	r3, #0
 160 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/PWM_CHARGE.c ****     {
 234:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_Init();
 161              		.loc 1 234 0
 162 000c FFF7FEFF 		bl	PWM_CHARGE_Init
 235:Generated_Source\PSoC4/PWM_CHARGE.c ****         PWM_CHARGE_initVar = 1u;
 163              		.loc 1 235 0
 164 0010 034B     		ldr	r3, .L9
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 8


 165 0012 0122     		mov	r2, #1
 166 0014 1A70     		strb	r2, [r3]
 167              	.L8:
 236:Generated_Source\PSoC4/PWM_CHARGE.c ****     }
 237:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 238:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_Enable();
 168              		.loc 1 238 0
 169 0016 FFF7FEFF 		bl	PWM_CHARGE_Enable
 239:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 170              		.loc 1 239 0
 171 001a BD46     		mov	sp, r7
 172              		@ sp needed
 173 001c 80BD     		pop	{r7, pc}
 174              	.L10:
 175 001e C046     		.align	2
 176              	.L9:
 177 0020 00000000 		.word	PWM_CHARGE_initVar
 178              		.cfi_endproc
 179              	.LFE3:
 180              		.size	PWM_CHARGE_Start, .-PWM_CHARGE_Start
 181              		.section	.text.PWM_CHARGE_Stop,"ax",%progbits
 182              		.align	2
 183              		.global	PWM_CHARGE_Stop
 184              		.code	16
 185              		.thumb_func
 186              		.type	PWM_CHARGE_Stop, %function
 187              	PWM_CHARGE_Stop:
 188              	.LFB4:
 240:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 241:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 242:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_Stop
 244:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 246:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 247:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Disables the PWM_CHARGE.
 248:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 249:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 251:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 252:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 253:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 254:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 255:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_Stop(void)
 257:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 189              		.loc 1 257 0
 190              		.cfi_startproc
 191 0000 90B5     		push	{r4, r7, lr}
 192              		.cfi_def_cfa_offset 12
 193              		.cfi_offset 4, -12
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 83B0     		sub	sp, sp, #12
 197              		.cfi_def_cfa_offset 24
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 9


 258:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 260:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 200              		.loc 1 260 0
 201 0006 FC1D     		add	r4, r7, #7
 202 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 203 000c 031C     		mov	r3, r0
 204 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 262:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_BLOCK_CONTROL_REG &= (uint32)~PWM_CHARGE_MASK;
 205              		.loc 1 262 0
 206 0010 064B     		ldr	r3, .L12
 207 0012 064A     		ldr	r2, .L12
 208 0014 1268     		ldr	r2, [r2]
 209 0016 0121     		mov	r1, #1
 210 0018 8A43     		bic	r2, r1
 211 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 264:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 212              		.loc 1 264 0
 213 001c FB1D     		add	r3, r7, #7
 214 001e 1B78     		ldrb	r3, [r3]
 215 0020 181C     		mov	r0, r3
 216 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 217              		.loc 1 265 0
 218 0026 BD46     		mov	sp, r7
 219 0028 03B0     		add	sp, sp, #12
 220              		@ sp needed
 221 002a 90BD     		pop	{r4, r7, pc}
 222              	.L13:
 223              		.align	2
 224              	.L12:
 225 002c 00002040 		.word	1075838976
 226              		.cfi_endproc
 227              	.LFE4:
 228              		.size	PWM_CHARGE_Stop, .-PWM_CHARGE_Stop
 229              		.section	.text.PWM_CHARGE_SetMode,"ax",%progbits
 230              		.align	2
 231              		.global	PWM_CHARGE_SetMode
 232              		.code	16
 233              		.thumb_func
 234              		.type	PWM_CHARGE_SetMode, %function
 235              	PWM_CHARGE_SetMode:
 236              	.LFB5:
 266:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 267:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 268:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetMode
 270:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 272:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 273:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the operation mode of the PWM_CHARGE. This function is used when
 274:Generated_Source\PSoC4/PWM_CHARGE.c **** *  configured as a generic PWM_CHARGE and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM_CHARGE.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 277:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 10


 278:Generated_Source\PSoC4/PWM_CHARGE.c **** *  mode: Mode for the PWM_CHARGE to operate in
 279:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 280:Generated_Source\PSoC4/PWM_CHARGE.c **** *   - PWM_CHARGE_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM_CHARGE.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM_CHARGE.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 289:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 290:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 291:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 292:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 237              		.loc 1 294 0
 238              		.cfi_startproc
 239 0000 90B5     		push	{r4, r7, lr}
 240              		.cfi_def_cfa_offset 12
 241              		.cfi_offset 4, -12
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 0002 85B0     		sub	sp, sp, #20
 245              		.cfi_def_cfa_offset 32
 246 0004 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 297:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 249              		.loc 1 297 0
 250 0008 0F23     		mov	r3, #15
 251 000a FC18     		add	r4, r7, r3
 252 000c FFF7FEFF 		bl	CyEnterCriticalSection
 253 0010 031C     		mov	r3, r0
 254 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 299:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_MODE_MASK;
 255              		.loc 1 299 0
 256 0014 0A4B     		ldr	r3, .L15
 257 0016 0A4A     		ldr	r2, .L15
 258 0018 1268     		ldr	r2, [r2]
 259 001a 0A49     		ldr	r1, .L15+4
 260 001c 0A40     		and	r2, r1
 261 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= mode;
 262              		.loc 1 300 0
 263 0020 074B     		ldr	r3, .L15
 264 0022 074A     		ldr	r2, .L15
 265 0024 1168     		ldr	r1, [r2]
 266 0026 7A68     		ldr	r2, [r7, #4]
 267 0028 0A43     		orr	r2, r1
 268 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 302:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 11


 269              		.loc 1 302 0
 270 002c 0F23     		mov	r3, #15
 271 002e FB18     		add	r3, r7, r3
 272 0030 1B78     		ldrb	r3, [r3]
 273 0032 181C     		mov	r0, r3
 274 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 275              		.loc 1 303 0
 276 0038 BD46     		mov	sp, r7
 277 003a 05B0     		add	sp, sp, #20
 278              		@ sp needed
 279 003c 90BD     		pop	{r4, r7, pc}
 280              	.L16:
 281 003e C046     		.align	2
 282              	.L15:
 283 0040 00012040 		.word	1075839232
 284 0044 FFFFFFF8 		.word	-117440513
 285              		.cfi_endproc
 286              	.LFE5:
 287              		.size	PWM_CHARGE_SetMode, .-PWM_CHARGE_SetMode
 288              		.section	.text.PWM_CHARGE_SetQDMode,"ax",%progbits
 289              		.align	2
 290              		.global	PWM_CHARGE_SetQDMode
 291              		.code	16
 292              		.thumb_func
 293              		.type	PWM_CHARGE_SetQDMode, %function
 294              	PWM_CHARGE_SetQDMode:
 295              	.LFB6:
 304:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 305:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 306:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetQDMode
 308:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 310:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 311:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 314:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM_CHARGE.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 317:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM_CHARGE.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 322:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 323:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 324:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 325:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 296              		.loc 1 327 0
 297              		.cfi_startproc
 298 0000 90B5     		push	{r4, r7, lr}
 299              		.cfi_def_cfa_offset 12
 300              		.cfi_offset 4, -12
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 12


 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303 0002 85B0     		sub	sp, sp, #20
 304              		.cfi_def_cfa_offset 32
 305 0004 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
 307 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 330:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 308              		.loc 1 330 0
 309 0008 0F23     		mov	r3, #15
 310 000a FC18     		add	r4, r7, r3
 311 000c FFF7FEFF 		bl	CyEnterCriticalSection
 312 0010 031C     		mov	r3, r0
 313 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 332:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_QUAD_MODE_MASK;
 314              		.loc 1 332 0
 315 0014 0A4B     		ldr	r3, .L18
 316 0016 0A4A     		ldr	r2, .L18
 317 0018 1268     		ldr	r2, [r2]
 318 001a 0A49     		ldr	r1, .L18+4
 319 001c 0A40     		and	r2, r1
 320 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= qdMode;
 321              		.loc 1 333 0
 322 0020 074B     		ldr	r3, .L18
 323 0022 074A     		ldr	r2, .L18
 324 0024 1168     		ldr	r1, [r2]
 325 0026 7A68     		ldr	r2, [r7, #4]
 326 0028 0A43     		orr	r2, r1
 327 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 335:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 328              		.loc 1 335 0
 329 002c 0F23     		mov	r3, #15
 330 002e FB18     		add	r3, r7, r3
 331 0030 1B78     		ldrb	r3, [r3]
 332 0032 181C     		mov	r0, r3
 333 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 334              		.loc 1 336 0
 335 0038 BD46     		mov	sp, r7
 336 003a 05B0     		add	sp, sp, #20
 337              		@ sp needed
 338 003c 90BD     		pop	{r4, r7, pc}
 339              	.L19:
 340 003e C046     		.align	2
 341              	.L18:
 342 0040 00012040 		.word	1075839232
 343 0044 FFFF8FFF 		.word	-7340033
 344              		.cfi_endproc
 345              	.LFE6:
 346              		.size	PWM_CHARGE_SetQDMode, .-PWM_CHARGE_SetQDMode
 347              		.section	.text.PWM_CHARGE_SetPrescaler,"ax",%progbits
 348              		.align	2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 13


 349              		.global	PWM_CHARGE_SetPrescaler
 350              		.code	16
 351              		.thumb_func
 352              		.type	PWM_CHARGE_SetPrescaler, %function
 353              	PWM_CHARGE_SetPrescaler:
 354              	.LFB7:
 337:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 338:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 339:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetPrescaler
 341:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 343:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 344:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM_CHARGE.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 347:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM_CHARGE.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 350:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 359:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 360:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 361:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 362:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 355              		.loc 1 364 0
 356              		.cfi_startproc
 357 0000 90B5     		push	{r4, r7, lr}
 358              		.cfi_def_cfa_offset 12
 359              		.cfi_offset 4, -12
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 85B0     		sub	sp, sp, #20
 363              		.cfi_def_cfa_offset 32
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 367:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 367              		.loc 1 367 0
 368 0008 0F23     		mov	r3, #15
 369 000a FC18     		add	r4, r7, r3
 370 000c FFF7FEFF 		bl	CyEnterCriticalSection
 371 0010 031C     		mov	r3, r0
 372 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 369:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_PRESCALER_MASK;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 14


 373              		.loc 1 369 0
 374 0014 0A4B     		ldr	r3, .L21
 375 0016 0A4A     		ldr	r2, .L21
 376 0018 1268     		ldr	r2, [r2]
 377 001a 0A49     		ldr	r1, .L21+4
 378 001c 0A40     		and	r2, r1
 379 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= prescaler;
 380              		.loc 1 370 0
 381 0020 074B     		ldr	r3, .L21
 382 0022 074A     		ldr	r2, .L21
 383 0024 1168     		ldr	r1, [r2]
 384 0026 7A68     		ldr	r2, [r7, #4]
 385 0028 0A43     		orr	r2, r1
 386 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 372:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 387              		.loc 1 372 0
 388 002c 0F23     		mov	r3, #15
 389 002e FB18     		add	r3, r7, r3
 390 0030 1B78     		ldrb	r3, [r3]
 391 0032 181C     		mov	r0, r3
 392 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 393              		.loc 1 373 0
 394 0038 BD46     		mov	sp, r7
 395 003a 05B0     		add	sp, sp, #20
 396              		@ sp needed
 397 003c 90BD     		pop	{r4, r7, pc}
 398              	.L22:
 399 003e C046     		.align	2
 400              	.L21:
 401 0040 00012040 		.word	1075839232
 402 0044 FF00FFFF 		.word	-65281
 403              		.cfi_endproc
 404              	.LFE7:
 405              		.size	PWM_CHARGE_SetPrescaler, .-PWM_CHARGE_SetPrescaler
 406              		.section	.text.PWM_CHARGE_SetOneShot,"ax",%progbits
 407              		.align	2
 408              		.global	PWM_CHARGE_SetOneShot
 409              		.code	16
 410              		.thumb_func
 411              		.type	PWM_CHARGE_SetOneShot, %function
 412              	PWM_CHARGE_SetOneShot:
 413              	.LFB8:
 374:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 375:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 376:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetOneShot
 378:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 380:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 381:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the register that controls whether the PWM_CHARGE runs
 382:Generated_Source\PSoC4/PWM_CHARGE.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PWM_CHARGE operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 385:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 15


 386:Generated_Source\PSoC4/PWM_CHARGE.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 388:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 391:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 392:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 393:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 394:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 414              		.loc 1 396 0
 415              		.cfi_startproc
 416 0000 90B5     		push	{r4, r7, lr}
 417              		.cfi_def_cfa_offset 12
 418              		.cfi_offset 4, -12
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 85B0     		sub	sp, sp, #20
 422              		.cfi_def_cfa_offset 32
 423 0004 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 425 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 399:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 426              		.loc 1 399 0
 427 0008 0F23     		mov	r3, #15
 428 000a FC18     		add	r4, r7, r3
 429 000c FFF7FEFF 		bl	CyEnterCriticalSection
 430 0010 031C     		mov	r3, r0
 431 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 401:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_ONESHOT_MASK;
 432              		.loc 1 401 0
 433 0014 0B4B     		ldr	r3, .L24
 434 0016 0B4A     		ldr	r2, .L24
 435 0018 1268     		ldr	r2, [r2]
 436 001a 0B49     		ldr	r1, .L24+4
 437 001c 0A40     		and	r2, r1
 438 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_CHARGE_1BIT_MASK) <<
 439              		.loc 1 402 0
 440 0020 084B     		ldr	r3, .L24
 441 0022 084A     		ldr	r2, .L24
 442 0024 1168     		ldr	r1, [r2]
 443 0026 7A68     		ldr	r2, [r7, #4]
 444 0028 0120     		mov	r0, #1
 445 002a 0240     		and	r2, r0
 446 002c 9204     		lsl	r2, r2, #18
 447 002e 0A43     		orr	r2, r1
 448 0030 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/PWM_CHARGE.c ****                                                                PWM_CHARGE_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 405:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 449              		.loc 1 405 0
 450 0032 0F23     		mov	r3, #15
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 16


 451 0034 FB18     		add	r3, r7, r3
 452 0036 1B78     		ldrb	r3, [r3]
 453 0038 181C     		mov	r0, r3
 454 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 455              		.loc 1 406 0
 456 003e BD46     		mov	sp, r7
 457 0040 05B0     		add	sp, sp, #20
 458              		@ sp needed
 459 0042 90BD     		pop	{r4, r7, pc}
 460              	.L25:
 461              		.align	2
 462              	.L24:
 463 0044 00012040 		.word	1075839232
 464 0048 FFFFFBFF 		.word	-262145
 465              		.cfi_endproc
 466              	.LFE8:
 467              		.size	PWM_CHARGE_SetOneShot, .-PWM_CHARGE_SetOneShot
 468              		.section	.text.PWM_CHARGE_SetPWMMode,"ax",%progbits
 469              		.align	2
 470              		.global	PWM_CHARGE_SetPWMMode
 471              		.code	16
 472              		.thumb_func
 473              		.type	PWM_CHARGE_SetPWMMode, %function
 474              	PWM_CHARGE_SetPWMMode:
 475              	.LFB9:
 407:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 408:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 409:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetPWMMode
 411:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 413:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 414:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM_CHARGE.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM_CHARGE.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM_CHARGE.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM_CHARGE.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 420:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM_CHARGE.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM_CHARGE.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 424:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM_CHARGE.c **** *                             with up counting mode
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 17


 438:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM_CHARGE.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM_CHARGE.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM_CHARGE.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 445:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 446:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 447:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 448:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 476              		.loc 1 450 0
 477              		.cfi_startproc
 478 0000 80B5     		push	{r7, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 82B0     		sub	sp, sp, #8
 483              		.cfi_def_cfa_offset 16
 484 0004 00AF     		add	r7, sp, #0
 485              		.cfi_def_cfa_register 7
 486 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL2_REG = (modeMask & PWM_CHARGE_6BIT_MASK);
 487              		.loc 1 451 0
 488 0008 034B     		ldr	r3, .L27
 489 000a 7A68     		ldr	r2, [r7, #4]
 490 000c 3F21     		mov	r1, #63
 491 000e 0A40     		and	r2, r1
 492 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 493              		.loc 1 452 0
 494 0012 BD46     		mov	sp, r7
 495 0014 02B0     		add	sp, sp, #8
 496              		@ sp needed
 497 0016 80BD     		pop	{r7, pc}
 498              	.L28:
 499              		.align	2
 500              	.L27:
 501 0018 28012040 		.word	1075839272
 502              		.cfi_endproc
 503              	.LFE9:
 504              		.size	PWM_CHARGE_SetPWMMode, .-PWM_CHARGE_SetPWMMode
 505              		.section	.text.PWM_CHARGE_SetPWMSyncKill,"ax",%progbits
 506              		.align	2
 507              		.global	PWM_CHARGE_SetPWMSyncKill
 508              		.code	16
 509              		.thumb_func
 510              		.type	PWM_CHARGE_SetPWMSyncKill, %function
 511              	PWM_CHARGE_SetPWMSyncKill:
 512              	.LFB10:
 453:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 454:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 455:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 456:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetPWMSyncKill
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 18


 458:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 460:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 461:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM_CHARGE.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM_CHARGE.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM_CHARGE.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 466:Generated_Source\PSoC4/PWM_CHARGE.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM_CHARGE.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 469:Generated_Source\PSoC4/PWM_CHARGE.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM_CHARGE.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM_CHARGE.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM_CHARGE.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 474:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 475:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM_CHARGE.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 478:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 481:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 482:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 483:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 484:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 513              		.loc 1 486 0
 514              		.cfi_startproc
 515 0000 90B5     		push	{r4, r7, lr}
 516              		.cfi_def_cfa_offset 12
 517              		.cfi_offset 4, -12
 518              		.cfi_offset 7, -8
 519              		.cfi_offset 14, -4
 520 0002 85B0     		sub	sp, sp, #20
 521              		.cfi_def_cfa_offset 32
 522 0004 00AF     		add	r7, sp, #0
 523              		.cfi_def_cfa_register 7
 524 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 489:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 525              		.loc 1 489 0
 526 0008 0F23     		mov	r3, #15
 527 000a FC18     		add	r4, r7, r3
 528 000c FFF7FEFF 		bl	CyEnterCriticalSection
 529 0010 031C     		mov	r3, r0
 530 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 491:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_PWM_SYNC_KILL_MASK;
 531              		.loc 1 491 0
 532 0014 0B4B     		ldr	r3, .L30
 533 0016 0B4A     		ldr	r2, .L30
 534 0018 1268     		ldr	r2, [r2]
 535 001a 0421     		mov	r1, #4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 19


 536 001c 8A43     		bic	r2, r1
 537 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_CHARGE_1BIT_MASK)  <<
 538              		.loc 1 492 0
 539 0020 084B     		ldr	r3, .L30
 540 0022 084A     		ldr	r2, .L30
 541 0024 1168     		ldr	r1, [r2]
 542 0026 7A68     		ldr	r2, [r7, #4]
 543 0028 0120     		mov	r0, #1
 544 002a 0240     		and	r2, r0
 545 002c 9200     		lsl	r2, r2, #2
 546 002e 0A43     		orr	r2, r1
 547 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/PWM_CHARGE.c ****                                                PWM_CHARGE_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 495:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 548              		.loc 1 495 0
 549 0032 0F23     		mov	r3, #15
 550 0034 FB18     		add	r3, r7, r3
 551 0036 1B78     		ldrb	r3, [r3]
 552 0038 181C     		mov	r0, r3
 553 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 554              		.loc 1 496 0
 555 003e BD46     		mov	sp, r7
 556 0040 05B0     		add	sp, sp, #20
 557              		@ sp needed
 558 0042 90BD     		pop	{r4, r7, pc}
 559              	.L31:
 560              		.align	2
 561              	.L30:
 562 0044 00012040 		.word	1075839232
 563              		.cfi_endproc
 564              	.LFE10:
 565              		.size	PWM_CHARGE_SetPWMSyncKill, .-PWM_CHARGE_SetPWMSyncKill
 566              		.section	.text.PWM_CHARGE_SetPWMStopOnKill,"ax",%progbits
 567              		.align	2
 568              		.global	PWM_CHARGE_SetPWMStopOnKill
 569              		.code	16
 570              		.thumb_func
 571              		.type	PWM_CHARGE_SetPWMStopOnKill, %function
 572              	PWM_CHARGE_SetPWMStopOnKill:
 573              	.LFB11:
 497:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 498:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 499:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 503:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 504:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM_CHARGE.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM_CHARGE.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 508:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 509:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM_CHARGE.c **** *  stopOnKillEnable
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 20


 511:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 512:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 515:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 516:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 517:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 518:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 574              		.loc 1 520 0
 575              		.cfi_startproc
 576 0000 90B5     		push	{r4, r7, lr}
 577              		.cfi_def_cfa_offset 12
 578              		.cfi_offset 4, -12
 579              		.cfi_offset 7, -8
 580              		.cfi_offset 14, -4
 581 0002 85B0     		sub	sp, sp, #20
 582              		.cfi_def_cfa_offset 32
 583 0004 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 585 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 523:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 586              		.loc 1 523 0
 587 0008 0F23     		mov	r3, #15
 588 000a FC18     		add	r4, r7, r3
 589 000c FFF7FEFF 		bl	CyEnterCriticalSection
 590 0010 031C     		mov	r3, r0
 591 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 525:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_PWM_STOP_KILL_MASK;
 592              		.loc 1 525 0
 593 0014 0B4B     		ldr	r3, .L33
 594 0016 0B4A     		ldr	r2, .L33
 595 0018 1268     		ldr	r2, [r2]
 596 001a 0821     		mov	r1, #8
 597 001c 8A43     		bic	r2, r1
 598 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_CHARGE_1BIT_MASK)  <<
 599              		.loc 1 526 0
 600 0020 084B     		ldr	r3, .L33
 601 0022 084A     		ldr	r2, .L33
 602 0024 1168     		ldr	r1, [r2]
 603 0026 7A68     		ldr	r2, [r7, #4]
 604 0028 0120     		mov	r0, #1
 605 002a 0240     		and	r2, r0
 606 002c D200     		lsl	r2, r2, #3
 607 002e 0A43     		orr	r2, r1
 608 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/PWM_CHARGE.c ****                                                          PWM_CHARGE_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 529:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 609              		.loc 1 529 0
 610 0032 0F23     		mov	r3, #15
 611 0034 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 21


 612 0036 1B78     		ldrb	r3, [r3]
 613 0038 181C     		mov	r0, r3
 614 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 615              		.loc 1 530 0
 616 003e BD46     		mov	sp, r7
 617 0040 05B0     		add	sp, sp, #20
 618              		@ sp needed
 619 0042 90BD     		pop	{r4, r7, pc}
 620              	.L34:
 621              		.align	2
 622              	.L33:
 623 0044 00012040 		.word	1075839232
 624              		.cfi_endproc
 625              	.LFE11:
 626              		.size	PWM_CHARGE_SetPWMStopOnKill, .-PWM_CHARGE_SetPWMStopOnKill
 627              		.section	.text.PWM_CHARGE_SetPWMDeadTime,"ax",%progbits
 628              		.align	2
 629              		.global	PWM_CHARGE_SetPWMDeadTime
 630              		.code	16
 631              		.thumb_func
 632              		.type	PWM_CHARGE_SetPWMDeadTime, %function
 633              	PWM_CHARGE_SetPWMDeadTime:
 634              	.LFB12:
 531:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 532:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 533:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 537:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 538:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM_CHARGE.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM_CHARGE.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM_CHARGE.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 543:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 544:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 548:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 549:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 550:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 551:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 635              		.loc 1 553 0
 636              		.cfi_startproc
 637 0000 90B5     		push	{r4, r7, lr}
 638              		.cfi_def_cfa_offset 12
 639              		.cfi_offset 4, -12
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 85B0     		sub	sp, sp, #20
 643              		.cfi_def_cfa_offset 32
 644 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 22


 645              		.cfi_def_cfa_register 7
 646 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 556:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 647              		.loc 1 556 0
 648 0008 0F23     		mov	r3, #15
 649 000a FC18     		add	r4, r7, r3
 650 000c FFF7FEFF 		bl	CyEnterCriticalSection
 651 0010 031C     		mov	r3, r0
 652 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 558:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_PRESCALER_MASK;
 653              		.loc 1 558 0
 654 0014 0B4B     		ldr	r3, .L36
 655 0016 0B4A     		ldr	r2, .L36
 656 0018 1268     		ldr	r2, [r2]
 657 001a 0B49     		ldr	r1, .L36+4
 658 001c 0A40     		and	r2, r1
 659 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= ((uint32)((deadTime & PWM_CHARGE_8BIT_MASK) <<
 660              		.loc 1 559 0
 661 0020 084B     		ldr	r3, .L36
 662 0022 084A     		ldr	r2, .L36
 663 0024 1168     		ldr	r1, [r2]
 664 0026 7A68     		ldr	r2, [r7, #4]
 665 0028 1202     		lsl	r2, r2, #8
 666 002a 1204     		lsl	r2, r2, #16
 667 002c 120C     		lsr	r2, r2, #16
 668 002e 0A43     		orr	r2, r1
 669 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/PWM_CHARGE.c ****                                                           PWM_CHARGE_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 562:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 670              		.loc 1 562 0
 671 0032 0F23     		mov	r3, #15
 672 0034 FB18     		add	r3, r7, r3
 673 0036 1B78     		ldrb	r3, [r3]
 674 0038 181C     		mov	r0, r3
 675 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 676              		.loc 1 563 0
 677 003e BD46     		mov	sp, r7
 678 0040 05B0     		add	sp, sp, #20
 679              		@ sp needed
 680 0042 90BD     		pop	{r4, r7, pc}
 681              	.L37:
 682              		.align	2
 683              	.L36:
 684 0044 00012040 		.word	1075839232
 685 0048 FF00FFFF 		.word	-65281
 686              		.cfi_endproc
 687              	.LFE12:
 688              		.size	PWM_CHARGE_SetPWMDeadTime, .-PWM_CHARGE_SetPWMDeadTime
 689              		.section	.text.PWM_CHARGE_SetPWMInvert,"ax",%progbits
 690              		.align	2
 691              		.global	PWM_CHARGE_SetPWMInvert
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 23


 692              		.code	16
 693              		.thumb_func
 694              		.type	PWM_CHARGE_SetPWMInvert, %function
 695              	PWM_CHARGE_SetPWMInvert:
 696              	.LFB13:
 564:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 565:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 566:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetPWMInvert
 568:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 570:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 571:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM_CHARGE.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM_CHARGE.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 575:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM_CHARGE.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 578:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM_CHARGE.c **** *         - PWM_CHARGE_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 581:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 582:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 583:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 584:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 697              		.loc 1 586 0
 698              		.cfi_startproc
 699 0000 90B5     		push	{r4, r7, lr}
 700              		.cfi_def_cfa_offset 12
 701              		.cfi_offset 4, -12
 702              		.cfi_offset 7, -8
 703              		.cfi_offset 14, -4
 704 0002 85B0     		sub	sp, sp, #20
 705              		.cfi_def_cfa_offset 32
 706 0004 00AF     		add	r7, sp, #0
 707              		.cfi_def_cfa_register 7
 708 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 589:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 709              		.loc 1 589 0
 710 0008 0F23     		mov	r3, #15
 711 000a FC18     		add	r4, r7, r3
 712 000c FFF7FEFF 		bl	CyEnterCriticalSection
 713 0010 031C     		mov	r3, r0
 714 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 591:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_INV_OUT_MASK;
 715              		.loc 1 591 0
 716 0014 0A4B     		ldr	r3, .L39
 717 0016 0A4A     		ldr	r2, .L39
 718 0018 1268     		ldr	r2, [r2]
 719 001a 0A49     		ldr	r1, .L39+4
 720 001c 0A40     		and	r2, r1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 24


 721 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= mask;
 722              		.loc 1 592 0
 723 0020 074B     		ldr	r3, .L39
 724 0022 074A     		ldr	r2, .L39
 725 0024 1168     		ldr	r1, [r2]
 726 0026 7A68     		ldr	r2, [r7, #4]
 727 0028 0A43     		orr	r2, r1
 728 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 594:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 729              		.loc 1 594 0
 730 002c 0F23     		mov	r3, #15
 731 002e FB18     		add	r3, r7, r3
 732 0030 1B78     		ldrb	r3, [r3]
 733 0032 181C     		mov	r0, r3
 734 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 735              		.loc 1 595 0
 736 0038 BD46     		mov	sp, r7
 737 003a 05B0     		add	sp, sp, #20
 738              		@ sp needed
 739 003c 90BD     		pop	{r4, r7, pc}
 740              	.L40:
 741 003e C046     		.align	2
 742              	.L39:
 743 0040 00012040 		.word	1075839232
 744 0044 FFFFCFFF 		.word	-3145729
 745              		.cfi_endproc
 746              	.LFE13:
 747              		.size	PWM_CHARGE_SetPWMInvert, .-PWM_CHARGE_SetPWMInvert
 748              		.section	.text.PWM_CHARGE_WriteCounter,"ax",%progbits
 749              		.align	2
 750              		.global	PWM_CHARGE_WriteCounter
 751              		.code	16
 752              		.thumb_func
 753              		.type	PWM_CHARGE_WriteCounter, %function
 754              	PWM_CHARGE_WriteCounter:
 755              	.LFB14:
 596:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 597:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 598:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 599:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_WriteCounter
 601:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 603:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 604:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM_CHARGE.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM_CHARGE.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 608:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM_CHARGE.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 611:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 612:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 613:Generated_Source\PSoC4/PWM_CHARGE.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 25


 614:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 756              		.loc 1 616 0
 757              		.cfi_startproc
 758 0000 80B5     		push	{r7, lr}
 759              		.cfi_def_cfa_offset 8
 760              		.cfi_offset 7, -8
 761              		.cfi_offset 14, -4
 762 0002 82B0     		sub	sp, sp, #8
 763              		.cfi_def_cfa_offset 16
 764 0004 00AF     		add	r7, sp, #0
 765              		.cfi_def_cfa_register 7
 766 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_COUNTER_REG = (count & PWM_CHARGE_16BIT_MASK);
 767              		.loc 1 617 0
 768 0008 034B     		ldr	r3, .L42
 769 000a 7A68     		ldr	r2, [r7, #4]
 770 000c 1204     		lsl	r2, r2, #16
 771 000e 120C     		lsr	r2, r2, #16
 772 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 773              		.loc 1 618 0
 774 0012 BD46     		mov	sp, r7
 775 0014 02B0     		add	sp, sp, #8
 776              		@ sp needed
 777 0016 80BD     		pop	{r7, pc}
 778              	.L43:
 779              		.align	2
 780              	.L42:
 781 0018 08012040 		.word	1075839240
 782              		.cfi_endproc
 783              	.LFE14:
 784              		.size	PWM_CHARGE_WriteCounter, .-PWM_CHARGE_WriteCounter
 785              		.section	.text.PWM_CHARGE_ReadCounter,"ax",%progbits
 786              		.align	2
 787              		.global	PWM_CHARGE_ReadCounter
 788              		.code	16
 789              		.thumb_func
 790              		.type	PWM_CHARGE_ReadCounter, %function
 791              	PWM_CHARGE_ReadCounter:
 792              	.LFB15:
 619:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 620:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 621:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ReadCounter
 623:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 625:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 626:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 628:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 630:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 631:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 632:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM_CHARGE.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 26


 634:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 793              		.loc 1 636 0
 794              		.cfi_startproc
 795 0000 80B5     		push	{r7, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/PWM_CHARGE.c ****     return (PWM_CHARGE_COUNTER_REG & PWM_CHARGE_16BIT_MASK);
 801              		.loc 1 637 0
 802 0004 034B     		ldr	r3, .L46
 803 0006 1B68     		ldr	r3, [r3]
 804 0008 1B04     		lsl	r3, r3, #16
 805 000a 1B0C     		lsr	r3, r3, #16
 638:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 806              		.loc 1 638 0
 807 000c 181C     		mov	r0, r3
 808 000e BD46     		mov	sp, r7
 809              		@ sp needed
 810 0010 80BD     		pop	{r7, pc}
 811              	.L47:
 812 0012 C046     		.align	2
 813              	.L46:
 814 0014 08012040 		.word	1075839240
 815              		.cfi_endproc
 816              	.LFE15:
 817              		.size	PWM_CHARGE_ReadCounter, .-PWM_CHARGE_ReadCounter
 818              		.section	.text.PWM_CHARGE_SetCounterMode,"ax",%progbits
 819              		.align	2
 820              		.global	PWM_CHARGE_SetCounterMode
 821              		.code	16
 822              		.thumb_func
 823              		.type	PWM_CHARGE_SetCounterMode, %function
 824              	PWM_CHARGE_SetCounterMode:
 825              	.LFB16:
 639:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 640:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 641:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetCounterMode
 643:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 645:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 646:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM_CHARGE.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 649:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM_CHARGE.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 652:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM_CHARGE.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM_CHARGE.c **** *                                         generated both when counter reaches 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 27


 658:Generated_Source\PSoC4/PWM_CHARGE.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 660:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 661:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 662:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 663:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 826              		.loc 1 665 0
 827              		.cfi_startproc
 828 0000 90B5     		push	{r4, r7, lr}
 829              		.cfi_def_cfa_offset 12
 830              		.cfi_offset 4, -12
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0002 85B0     		sub	sp, sp, #20
 834              		.cfi_def_cfa_offset 32
 835 0004 00AF     		add	r7, sp, #0
 836              		.cfi_def_cfa_register 7
 837 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 668:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 838              		.loc 1 668 0
 839 0008 0F23     		mov	r3, #15
 840 000a FC18     		add	r4, r7, r3
 841 000c FFF7FEFF 		bl	CyEnterCriticalSection
 842 0010 031C     		mov	r3, r0
 843 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 670:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_UPDOWN_MASK;
 844              		.loc 1 670 0
 845 0014 0A4B     		ldr	r3, .L49
 846 0016 0A4A     		ldr	r2, .L49
 847 0018 1268     		ldr	r2, [r2]
 848 001a 0A49     		ldr	r1, .L49+4
 849 001c 0A40     		and	r2, r1
 850 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= counterMode;
 851              		.loc 1 671 0
 852 0020 074B     		ldr	r3, .L49
 853 0022 074A     		ldr	r2, .L49
 854 0024 1168     		ldr	r1, [r2]
 855 0026 7A68     		ldr	r2, [r7, #4]
 856 0028 0A43     		orr	r2, r1
 857 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 673:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 858              		.loc 1 673 0
 859 002c 0F23     		mov	r3, #15
 860 002e FB18     		add	r3, r7, r3
 861 0030 1B78     		ldrb	r3, [r3]
 862 0032 181C     		mov	r0, r3
 863 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 864              		.loc 1 674 0
 865 0038 BD46     		mov	sp, r7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 28


 866 003a 05B0     		add	sp, sp, #20
 867              		@ sp needed
 868 003c 90BD     		pop	{r4, r7, pc}
 869              	.L50:
 870 003e C046     		.align	2
 871              	.L49:
 872 0040 00012040 		.word	1075839232
 873 0044 FFFFFCFF 		.word	-196609
 874              		.cfi_endproc
 875              	.LFE16:
 876              		.size	PWM_CHARGE_SetCounterMode, .-PWM_CHARGE_SetCounterMode
 877              		.section	.text.PWM_CHARGE_WritePeriod,"ax",%progbits
 878              		.align	2
 879              		.global	PWM_CHARGE_WritePeriod
 880              		.code	16
 881              		.thumb_func
 882              		.type	PWM_CHARGE_WritePeriod, %function
 883              	PWM_CHARGE_WritePeriod:
 884              	.LFB17:
 675:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 676:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 677:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_WritePeriod
 679:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 681:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 682:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM_CHARGE.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM_CHARGE.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 686:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM_CHARGE.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 689:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 690:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 691:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 692:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 885              		.loc 1 694 0
 886              		.cfi_startproc
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 82B0     		sub	sp, sp, #8
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_PERIOD_REG = (period & PWM_CHARGE_16BIT_MASK);
 896              		.loc 1 695 0
 897 0008 034B     		ldr	r3, .L52
 898 000a 7A68     		ldr	r2, [r7, #4]
 899 000c 1204     		lsl	r2, r2, #16
 900 000e 120C     		lsr	r2, r2, #16
 901 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 29


 696:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 902              		.loc 1 696 0
 903 0012 BD46     		mov	sp, r7
 904 0014 02B0     		add	sp, sp, #8
 905              		@ sp needed
 906 0016 80BD     		pop	{r7, pc}
 907              	.L53:
 908              		.align	2
 909              	.L52:
 910 0018 14012040 		.word	1075839252
 911              		.cfi_endproc
 912              	.LFE17:
 913              		.size	PWM_CHARGE_WritePeriod, .-PWM_CHARGE_WritePeriod
 914              		.section	.text.PWM_CHARGE_ReadPeriod,"ax",%progbits
 915              		.align	2
 916              		.global	PWM_CHARGE_ReadPeriod
 917              		.code	16
 918              		.thumb_func
 919              		.type	PWM_CHARGE_ReadPeriod, %function
 920              	PWM_CHARGE_ReadPeriod:
 921              	.LFB18:
 697:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 698:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 699:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ReadPeriod
 701:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 703:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 704:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 706:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 708:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 709:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 710:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Period value
 711:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 712:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 922              		.loc 1 714 0
 923              		.cfi_startproc
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 00AF     		add	r7, sp, #0
 929              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/PWM_CHARGE.c ****     return (PWM_CHARGE_PERIOD_REG & PWM_CHARGE_16BIT_MASK);
 930              		.loc 1 715 0
 931 0004 034B     		ldr	r3, .L56
 932 0006 1B68     		ldr	r3, [r3]
 933 0008 1B04     		lsl	r3, r3, #16
 934 000a 1B0C     		lsr	r3, r3, #16
 716:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 935              		.loc 1 716 0
 936 000c 181C     		mov	r0, r3
 937 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 30


 938              		@ sp needed
 939 0010 80BD     		pop	{r7, pc}
 940              	.L57:
 941 0012 C046     		.align	2
 942              	.L56:
 943 0014 14012040 		.word	1075839252
 944              		.cfi_endproc
 945              	.LFE18:
 946              		.size	PWM_CHARGE_ReadPeriod, .-PWM_CHARGE_ReadPeriod
 947              		.section	.text.PWM_CHARGE_SetCompareSwap,"ax",%progbits
 948              		.align	2
 949              		.global	PWM_CHARGE_SetCompareSwap
 950              		.code	16
 951              		.thumb_func
 952              		.type	PWM_CHARGE_SetCompareSwap, %function
 953              	PWM_CHARGE_SetCompareSwap:
 954              	.LFB19:
 717:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 718:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 719:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetCompareSwap
 721:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 723:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 724:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM_CHARGE.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM_CHARGE.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM_CHARGE.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 729:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM_CHARGE.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 732:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 735:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 736:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 737:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 738:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 955              		.loc 1 740 0
 956              		.cfi_startproc
 957 0000 90B5     		push	{r4, r7, lr}
 958              		.cfi_def_cfa_offset 12
 959              		.cfi_offset 4, -12
 960              		.cfi_offset 7, -8
 961              		.cfi_offset 14, -4
 962 0002 85B0     		sub	sp, sp, #20
 963              		.cfi_def_cfa_offset 32
 964 0004 00AF     		add	r7, sp, #0
 965              		.cfi_def_cfa_register 7
 966 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 743:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 967              		.loc 1 743 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 31


 968 0008 0F23     		mov	r3, #15
 969 000a FC18     		add	r4, r7, r3
 970 000c FFF7FEFF 		bl	CyEnterCriticalSection
 971 0010 031C     		mov	r3, r0
 972 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 745:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_RELOAD_CC_MASK;
 973              		.loc 1 745 0
 974 0014 0B4B     		ldr	r3, .L59
 975 0016 0B4A     		ldr	r2, .L59
 976 0018 1268     		ldr	r2, [r2]
 977 001a 0121     		mov	r1, #1
 978 001c 8A43     		bic	r2, r1
 979 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= (swapEnable & PWM_CHARGE_1BIT_MASK);
 980              		.loc 1 746 0
 981 0020 084B     		ldr	r3, .L59
 982 0022 084A     		ldr	r2, .L59
 983 0024 1168     		ldr	r1, [r2]
 984 0026 7A68     		ldr	r2, [r7, #4]
 985 0028 0120     		mov	r0, #1
 986 002a 0240     		and	r2, r0
 987 002c 0A43     		orr	r2, r1
 988 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 748:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 989              		.loc 1 748 0
 990 0030 0F23     		mov	r3, #15
 991 0032 FB18     		add	r3, r7, r3
 992 0034 1B78     		ldrb	r3, [r3]
 993 0036 181C     		mov	r0, r3
 994 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 995              		.loc 1 749 0
 996 003c BD46     		mov	sp, r7
 997 003e 05B0     		add	sp, sp, #20
 998              		@ sp needed
 999 0040 90BD     		pop	{r4, r7, pc}
 1000              	.L60:
 1001 0042 C046     		.align	2
 1002              	.L59:
 1003 0044 00012040 		.word	1075839232
 1004              		.cfi_endproc
 1005              	.LFE19:
 1006              		.size	PWM_CHARGE_SetCompareSwap, .-PWM_CHARGE_SetCompareSwap
 1007              		.section	.text.PWM_CHARGE_WritePeriodBuf,"ax",%progbits
 1008              		.align	2
 1009              		.global	PWM_CHARGE_WritePeriodBuf
 1010              		.code	16
 1011              		.thumb_func
 1012              		.type	PWM_CHARGE_WritePeriodBuf, %function
 1013              	PWM_CHARGE_WritePeriodBuf:
 1014              	.LFB20:
 750:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 751:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 752:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_WritePeriodBuf
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 32


 754:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 756:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 757:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 759:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM_CHARGE.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 762:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 763:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 764:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 765:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1015              		.loc 1 767 0
 1016              		.cfi_startproc
 1017 0000 80B5     		push	{r7, lr}
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 7, -8
 1020              		.cfi_offset 14, -4
 1021 0002 82B0     		sub	sp, sp, #8
 1022              		.cfi_def_cfa_offset 16
 1023 0004 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 1025 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_PERIOD_BUF_REG = (periodBuf & PWM_CHARGE_16BIT_MASK);
 1026              		.loc 1 768 0
 1027 0008 034B     		ldr	r3, .L62
 1028 000a 7A68     		ldr	r2, [r7, #4]
 1029 000c 1204     		lsl	r2, r2, #16
 1030 000e 120C     		lsr	r2, r2, #16
 1031 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1032              		.loc 1 769 0
 1033 0012 BD46     		mov	sp, r7
 1034 0014 02B0     		add	sp, sp, #8
 1035              		@ sp needed
 1036 0016 80BD     		pop	{r7, pc}
 1037              	.L63:
 1038              		.align	2
 1039              	.L62:
 1040 0018 18012040 		.word	1075839256
 1041              		.cfi_endproc
 1042              	.LFE20:
 1043              		.size	PWM_CHARGE_WritePeriodBuf, .-PWM_CHARGE_WritePeriodBuf
 1044              		.section	.text.PWM_CHARGE_ReadPeriodBuf,"ax",%progbits
 1045              		.align	2
 1046              		.global	PWM_CHARGE_ReadPeriodBuf
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	PWM_CHARGE_ReadPeriodBuf, %function
 1050              	PWM_CHARGE_ReadPeriodBuf:
 1051              	.LFB21:
 770:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 771:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 772:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ReadPeriodBuf
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 33


 774:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 776:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 777:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 779:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 781:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 782:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 783:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Period value
 784:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 785:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1052              		.loc 1 787 0
 1053              		.cfi_startproc
 1054 0000 80B5     		push	{r7, lr}
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/PWM_CHARGE.c ****     return (PWM_CHARGE_PERIOD_BUF_REG & PWM_CHARGE_16BIT_MASK);
 1060              		.loc 1 788 0
 1061 0004 034B     		ldr	r3, .L66
 1062 0006 1B68     		ldr	r3, [r3]
 1063 0008 1B04     		lsl	r3, r3, #16
 1064 000a 1B0C     		lsr	r3, r3, #16
 789:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1065              		.loc 1 789 0
 1066 000c 181C     		mov	r0, r3
 1067 000e BD46     		mov	sp, r7
 1068              		@ sp needed
 1069 0010 80BD     		pop	{r7, pc}
 1070              	.L67:
 1071 0012 C046     		.align	2
 1072              	.L66:
 1073 0014 18012040 		.word	1075839256
 1074              		.cfi_endproc
 1075              	.LFE21:
 1076              		.size	PWM_CHARGE_ReadPeriodBuf, .-PWM_CHARGE_ReadPeriodBuf
 1077              		.section	.text.PWM_CHARGE_SetPeriodSwap,"ax",%progbits
 1078              		.align	2
 1079              		.global	PWM_CHARGE_SetPeriodSwap
 1080              		.code	16
 1081              		.thumb_func
 1082              		.type	PWM_CHARGE_SetPeriodSwap, %function
 1083              	PWM_CHARGE_SetPeriodSwap:
 1084              	.LFB22:
 790:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 791:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 792:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 796:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 797:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the register that controls whether the period registers are
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 34


 798:Generated_Source\PSoC4/PWM_CHARGE.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM_CHARGE.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM_CHARGE.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 802:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM_CHARGE.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
 805:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 808:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 809:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 810:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 811:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1085              		.loc 1 813 0
 1086              		.cfi_startproc
 1087 0000 90B5     		push	{r4, r7, lr}
 1088              		.cfi_def_cfa_offset 12
 1089              		.cfi_offset 4, -12
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 85B0     		sub	sp, sp, #20
 1093              		.cfi_def_cfa_offset 32
 1094 0004 00AF     		add	r7, sp, #0
 1095              		.cfi_def_cfa_register 7
 1096 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 816:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 1097              		.loc 1 816 0
 1098 0008 0F23     		mov	r3, #15
 1099 000a FC18     		add	r4, r7, r3
 1100 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1101 0010 031C     		mov	r3, r0
 1102 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 818:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG &= (uint32)~PWM_CHARGE_RELOAD_PERIOD_MASK;
 1103              		.loc 1 818 0
 1104 0014 0B4B     		ldr	r3, .L69
 1105 0016 0B4A     		ldr	r2, .L69
 1106 0018 1268     		ldr	r2, [r2]
 1107 001a 0221     		mov	r1, #2
 1108 001c 8A43     		bic	r2, r1
 1109 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_CONTROL_REG |= ((uint32)((swapEnable & PWM_CHARGE_1BIT_MASK) <<
 1110              		.loc 1 819 0
 1111 0020 084B     		ldr	r3, .L69
 1112 0022 084A     		ldr	r2, .L69
 1113 0024 1168     		ldr	r1, [r2]
 1114 0026 7A68     		ldr	r2, [r7, #4]
 1115 0028 0120     		mov	r0, #1
 1116 002a 0240     		and	r2, r0
 1117 002c 5200     		lsl	r2, r2, #1
 1118 002e 0A43     		orr	r2, r1
 1119 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 35


 820:Generated_Source\PSoC4/PWM_CHARGE.c ****                                                             PWM_CHARGE_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 822:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 1120              		.loc 1 822 0
 1121 0032 0F23     		mov	r3, #15
 1122 0034 FB18     		add	r3, r7, r3
 1123 0036 1B78     		ldrb	r3, [r3]
 1124 0038 181C     		mov	r0, r3
 1125 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1126              		.loc 1 823 0
 1127 003e BD46     		mov	sp, r7
 1128 0040 05B0     		add	sp, sp, #20
 1129              		@ sp needed
 1130 0042 90BD     		pop	{r4, r7, pc}
 1131              	.L70:
 1132              		.align	2
 1133              	.L69:
 1134 0044 00012040 		.word	1075839232
 1135              		.cfi_endproc
 1136              	.LFE22:
 1137              		.size	PWM_CHARGE_SetPeriodSwap, .-PWM_CHARGE_SetPeriodSwap
 1138              		.section	.text.PWM_CHARGE_WriteCompare,"ax",%progbits
 1139              		.align	2
 1140              		.global	PWM_CHARGE_WriteCompare
 1141              		.code	16
 1142              		.thumb_func
 1143              		.type	PWM_CHARGE_WriteCompare, %function
 1144              	PWM_CHARGE_WriteCompare:
 1145              	.LFB23:
 824:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 825:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 826:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_WriteCompare
 828:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 830:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 831:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM_CHARGE.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 834:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM_CHARGE.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 837:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 838:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 839:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 840:Generated_Source\PSoC4/PWM_CHARGE.c **** * Note:
 841:Generated_Source\PSoC4/PWM_CHARGE.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM_CHARGE.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM_CHARGE.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM_CHARGE.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 848:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM_CHARGE.c **** {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 36


 1146              		.loc 1 850 0
 1147              		.cfi_startproc
 1148 0000 80B5     		push	{r7, lr}
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 7, -8
 1151              		.cfi_offset 14, -4
 1152 0002 82B0     		sub	sp, sp, #8
 1153              		.cfi_def_cfa_offset 16
 1154 0004 00AF     		add	r7, sp, #0
 1155              		.cfi_def_cfa_register 7
 1156 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM_CHARGE.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 855:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM_CHARGE.c ****         currentMode = ((PWM_CHARGE_CONTROL_REG & PWM_CHARGE_UPDOWN_MASK) >> PWM_CHARGE_UPDOWN_SHIFT
 857:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 858:Generated_Source\PSoC4/PWM_CHARGE.c ****         if (((uint32)PWM_CHARGE__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 860:Generated_Source\PSoC4/PWM_CHARGE.c ****             compare++;
 861:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
 862:Generated_Source\PSoC4/PWM_CHARGE.c ****         else if (((uint32)PWM_CHARGE__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 864:Generated_Source\PSoC4/PWM_CHARGE.c ****             compare--;
 865:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
 866:Generated_Source\PSoC4/PWM_CHARGE.c ****         else
 867:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 868:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
 869:Generated_Source\PSoC4/PWM_CHARGE.c ****         
 870:Generated_Source\PSoC4/PWM_CHARGE.c ****     
 871:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM_CHARGE.c ****     
 873:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_COMP_CAP_REG = (compare & PWM_CHARGE_16BIT_MASK);
 1157              		.loc 1 873 0
 1158 0008 034B     		ldr	r3, .L72
 1159 000a 7A68     		ldr	r2, [r7, #4]
 1160 000c 1204     		lsl	r2, r2, #16
 1161 000e 120C     		lsr	r2, r2, #16
 1162 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1163              		.loc 1 874 0
 1164 0012 BD46     		mov	sp, r7
 1165 0014 02B0     		add	sp, sp, #8
 1166              		@ sp needed
 1167 0016 80BD     		pop	{r7, pc}
 1168              	.L73:
 1169              		.align	2
 1170              	.L72:
 1171 0018 0C012040 		.word	1075839244
 1172              		.cfi_endproc
 1173              	.LFE23:
 1174              		.size	PWM_CHARGE_WriteCompare, .-PWM_CHARGE_WriteCompare
 1175              		.section	.text.PWM_CHARGE_ReadCompare,"ax",%progbits
 1176              		.align	2
 1177              		.global	PWM_CHARGE_ReadCompare
 1178              		.code	16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 37


 1179              		.thumb_func
 1180              		.type	PWM_CHARGE_ReadCompare, %function
 1181              	PWM_CHARGE_ReadCompare:
 1182              	.LFB24:
 875:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 876:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 877:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ReadCompare
 879:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 881:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 882:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM_CHARGE.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 888:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 890:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 891:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 892:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 894:Generated_Source\PSoC4/PWM_CHARGE.c **** * Note:
 895:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 899:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1183              		.loc 1 901 0
 1184              		.cfi_startproc
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM_CHARGE.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM_CHARGE.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 907:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM_CHARGE.c ****         currentMode = ((PWM_CHARGE_CONTROL_REG & PWM_CHARGE_UPDOWN_MASK) >> PWM_CHARGE_UPDOWN_SHIFT
 909:Generated_Source\PSoC4/PWM_CHARGE.c ****         
 910:Generated_Source\PSoC4/PWM_CHARGE.c ****         regVal = PWM_CHARGE_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM_CHARGE.c ****         
 912:Generated_Source\PSoC4/PWM_CHARGE.c ****         if (((uint32)PWM_CHARGE__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 914:Generated_Source\PSoC4/PWM_CHARGE.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
 916:Generated_Source\PSoC4/PWM_CHARGE.c ****         else if (((uint32)PWM_CHARGE__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 918:Generated_Source\PSoC4/PWM_CHARGE.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 38


 920:Generated_Source\PSoC4/PWM_CHARGE.c ****         else
 921:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 922:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
 923:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 924:Generated_Source\PSoC4/PWM_CHARGE.c ****         return (regVal & PWM_CHARGE_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM_CHARGE.c ****     #else
 926:Generated_Source\PSoC4/PWM_CHARGE.c ****         return (PWM_CHARGE_COMP_CAP_REG & PWM_CHARGE_16BIT_MASK);
 1191              		.loc 1 926 0
 1192 0004 034B     		ldr	r3, .L76
 1193 0006 1B68     		ldr	r3, [r3]
 1194 0008 1B04     		lsl	r3, r3, #16
 1195 000a 1B0C     		lsr	r3, r3, #16
 927:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1196              		.loc 1 928 0
 1197 000c 181C     		mov	r0, r3
 1198 000e BD46     		mov	sp, r7
 1199              		@ sp needed
 1200 0010 80BD     		pop	{r7, pc}
 1201              	.L77:
 1202 0012 C046     		.align	2
 1203              	.L76:
 1204 0014 0C012040 		.word	1075839244
 1205              		.cfi_endproc
 1206              	.LFE24:
 1207              		.size	PWM_CHARGE_ReadCompare, .-PWM_CHARGE_ReadCompare
 1208              		.section	.text.PWM_CHARGE_WriteCompareBuf,"ax",%progbits
 1209              		.align	2
 1210              		.global	PWM_CHARGE_WriteCompareBuf
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	PWM_CHARGE_WriteCompareBuf, %function
 1214              	PWM_CHARGE_WriteCompareBuf:
 1215              	.LFB25:
 929:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 930:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 931:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 935:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 936:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM_CHARGE.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 939:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM_CHARGE.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 942:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 943:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 944:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 945:Generated_Source\PSoC4/PWM_CHARGE.c **** * Note:
 946:Generated_Source\PSoC4/PWM_CHARGE.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM_CHARGE.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM_CHARGE.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM_CHARGE.c **** *  compare value in the Down counting mode (except 0xFFFFu).
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 39


 952:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 953:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1216              		.loc 1 955 0
 1217              		.cfi_startproc
 1218 0000 80B5     		push	{r7, lr}
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 7, -8
 1221              		.cfi_offset 14, -4
 1222 0002 82B0     		sub	sp, sp, #8
 1223              		.cfi_def_cfa_offset 16
 1224 0004 00AF     		add	r7, sp, #0
 1225              		.cfi_def_cfa_register 7
 1226 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM_CHARGE.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 960:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM_CHARGE.c ****         currentMode = ((PWM_CHARGE_CONTROL_REG & PWM_CHARGE_UPDOWN_MASK) >> PWM_CHARGE_UPDOWN_SHIFT
 962:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 963:Generated_Source\PSoC4/PWM_CHARGE.c ****         if (((uint32)PWM_CHARGE__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 965:Generated_Source\PSoC4/PWM_CHARGE.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
 967:Generated_Source\PSoC4/PWM_CHARGE.c ****         else if (((uint32)PWM_CHARGE__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 969:Generated_Source\PSoC4/PWM_CHARGE.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
 971:Generated_Source\PSoC4/PWM_CHARGE.c ****         else
 972:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
 973:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
 974:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM_CHARGE.c ****     
 976:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_COMP_CAP_BUF_REG = (compareBuf & PWM_CHARGE_16BIT_MASK);
 1227              		.loc 1 976 0
 1228 0008 034B     		ldr	r3, .L79
 1229 000a 7A68     		ldr	r2, [r7, #4]
 1230 000c 1204     		lsl	r2, r2, #16
 1231 000e 120C     		lsr	r2, r2, #16
 1232 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1233              		.loc 1 977 0
 1234 0012 BD46     		mov	sp, r7
 1235 0014 02B0     		add	sp, sp, #8
 1236              		@ sp needed
 1237 0016 80BD     		pop	{r7, pc}
 1238              	.L80:
 1239              		.align	2
 1240              	.L79:
 1241 0018 10012040 		.word	1075839248
 1242              		.cfi_endproc
 1243              	.LFE25:
 1244              		.size	PWM_CHARGE_WriteCompareBuf, .-PWM_CHARGE_WriteCompareBuf
 1245              		.section	.text.PWM_CHARGE_ReadCompareBuf,"ax",%progbits
 1246              		.align	2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 40


 1247              		.global	PWM_CHARGE_ReadCompareBuf
 1248              		.code	16
 1249              		.thumb_func
 1250              		.type	PWM_CHARGE_ReadCompareBuf, %function
 1251              	PWM_CHARGE_ReadCompareBuf:
 1252              	.LFB26:
 978:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 979:Generated_Source\PSoC4/PWM_CHARGE.c **** 
 980:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 984:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
 985:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 988:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
 990:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 991:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
 992:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 994:Generated_Source\PSoC4/PWM_CHARGE.c **** * Note:
 995:Generated_Source\PSoC4/PWM_CHARGE.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM_CHARGE.c **** *
 999:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1253              		.loc 1 1001 0
 1254              		.cfi_startproc
 1255 0000 80B5     		push	{r7, lr}
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 00AF     		add	r7, sp, #0
 1260              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM_CHARGE.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM_CHARGE.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1007:Generated_Source\PSoC4/PWM_CHARGE.c ****     #if (PWM_CHARGE_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM_CHARGE.c ****         currentMode = ((PWM_CHARGE_CONTROL_REG & PWM_CHARGE_UPDOWN_MASK) >> PWM_CHARGE_UPDOWN_SHIFT
1009:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1010:Generated_Source\PSoC4/PWM_CHARGE.c ****         regVal = PWM_CHARGE_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM_CHARGE.c ****         
1012:Generated_Source\PSoC4/PWM_CHARGE.c ****         if (((uint32)PWM_CHARGE__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
1014:Generated_Source\PSoC4/PWM_CHARGE.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
1016:Generated_Source\PSoC4/PWM_CHARGE.c ****         else if (((uint32)PWM_CHARGE__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
1018:Generated_Source\PSoC4/PWM_CHARGE.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
1020:Generated_Source\PSoC4/PWM_CHARGE.c ****         else
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 41


1021:Generated_Source\PSoC4/PWM_CHARGE.c ****         {
1022:Generated_Source\PSoC4/PWM_CHARGE.c ****         }
1023:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1024:Generated_Source\PSoC4/PWM_CHARGE.c ****         return (regVal & PWM_CHARGE_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM_CHARGE.c ****     #else
1026:Generated_Source\PSoC4/PWM_CHARGE.c ****         return (PWM_CHARGE_COMP_CAP_BUF_REG & PWM_CHARGE_16BIT_MASK);
 1261              		.loc 1 1026 0
 1262 0004 034B     		ldr	r3, .L83
 1263 0006 1B68     		ldr	r3, [r3]
 1264 0008 1B04     		lsl	r3, r3, #16
 1265 000a 1B0C     		lsr	r3, r3, #16
1027:Generated_Source\PSoC4/PWM_CHARGE.c ****     #endif /* (PWM_CHARGE_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1266              		.loc 1 1028 0
 1267 000c 181C     		mov	r0, r3
 1268 000e BD46     		mov	sp, r7
 1269              		@ sp needed
 1270 0010 80BD     		pop	{r7, pc}
 1271              	.L84:
 1272 0012 C046     		.align	2
 1273              	.L83:
 1274 0014 10012040 		.word	1075839248
 1275              		.cfi_endproc
 1276              	.LFE26:
 1277              		.size	PWM_CHARGE_ReadCompareBuf, .-PWM_CHARGE_ReadCompareBuf
 1278              		.section	.text.PWM_CHARGE_ReadCapture,"ax",%progbits
 1279              		.align	2
 1280              		.global	PWM_CHARGE_ReadCapture
 1281              		.code	16
 1282              		.thumb_func
 1283              		.type	PWM_CHARGE_ReadCapture, %function
 1284              	PWM_CHARGE_ReadCapture:
 1285              	.LFB27:
1029:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1030:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1031:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ReadCapture
1033:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1035:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1036:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1039:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1041:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1042:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1043:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1045:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1286              		.loc 1 1047 0
 1287              		.cfi_startproc
 1288 0000 80B5     		push	{r7, lr}
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 7, -8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 42


 1291              		.cfi_offset 14, -4
 1292 0002 00AF     		add	r7, sp, #0
 1293              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/PWM_CHARGE.c ****     return (PWM_CHARGE_COMP_CAP_REG & PWM_CHARGE_16BIT_MASK);
 1294              		.loc 1 1048 0
 1295 0004 034B     		ldr	r3, .L87
 1296 0006 1B68     		ldr	r3, [r3]
 1297 0008 1B04     		lsl	r3, r3, #16
 1298 000a 1B0C     		lsr	r3, r3, #16
1049:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1299              		.loc 1 1049 0
 1300 000c 181C     		mov	r0, r3
 1301 000e BD46     		mov	sp, r7
 1302              		@ sp needed
 1303 0010 80BD     		pop	{r7, pc}
 1304              	.L88:
 1305 0012 C046     		.align	2
 1306              	.L87:
 1307 0014 0C012040 		.word	1075839244
 1308              		.cfi_endproc
 1309              	.LFE27:
 1310              		.size	PWM_CHARGE_ReadCapture, .-PWM_CHARGE_ReadCapture
 1311              		.section	.text.PWM_CHARGE_ReadCaptureBuf,"ax",%progbits
 1312              		.align	2
 1313              		.global	PWM_CHARGE_ReadCaptureBuf
 1314              		.code	16
 1315              		.thumb_func
 1316              		.type	PWM_CHARGE_ReadCaptureBuf, %function
 1317              	PWM_CHARGE_ReadCaptureBuf:
 1318              	.LFB28:
1050:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1051:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1052:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1056:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1057:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1060:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1062:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1063:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1064:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1066:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1319              		.loc 1 1068 0
 1320              		.cfi_startproc
 1321 0000 80B5     		push	{r7, lr}
 1322              		.cfi_def_cfa_offset 8
 1323              		.cfi_offset 7, -8
 1324              		.cfi_offset 14, -4
 1325 0002 00AF     		add	r7, sp, #0
 1326              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 43


1069:Generated_Source\PSoC4/PWM_CHARGE.c ****     return (PWM_CHARGE_COMP_CAP_BUF_REG & PWM_CHARGE_16BIT_MASK);
 1327              		.loc 1 1069 0
 1328 0004 034B     		ldr	r3, .L91
 1329 0006 1B68     		ldr	r3, [r3]
 1330 0008 1B04     		lsl	r3, r3, #16
 1331 000a 1B0C     		lsr	r3, r3, #16
1070:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1332              		.loc 1 1070 0
 1333 000c 181C     		mov	r0, r3
 1334 000e BD46     		mov	sp, r7
 1335              		@ sp needed
 1336 0010 80BD     		pop	{r7, pc}
 1337              	.L92:
 1338 0012 C046     		.align	2
 1339              	.L91:
 1340 0014 10012040 		.word	1075839248
 1341              		.cfi_endproc
 1342              	.LFE28:
 1343              		.size	PWM_CHARGE_ReadCaptureBuf, .-PWM_CHARGE_ReadCaptureBuf
 1344              		.section	.text.PWM_CHARGE_SetCaptureMode,"ax",%progbits
 1345              		.align	2
 1346              		.global	PWM_CHARGE_SetCaptureMode
 1347              		.code	16
 1348              		.thumb_func
 1349              		.type	PWM_CHARGE_SetCaptureMode, %function
 1350              	PWM_CHARGE_SetCaptureMode:
 1351              	.LFB29:
1071:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1072:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1073:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetCaptureMode
1075:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1077:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1078:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM_CHARGE.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1082:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM_CHARGE.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1085:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1090:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1091:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1092:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1093:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1352              		.loc 1 1095 0
 1353              		.cfi_startproc
 1354 0000 90B5     		push	{r4, r7, lr}
 1355              		.cfi_def_cfa_offset 12
 1356              		.cfi_offset 4, -12
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 44


 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 85B0     		sub	sp, sp, #20
 1360              		.cfi_def_cfa_offset 32
 1361 0004 00AF     		add	r7, sp, #0
 1362              		.cfi_def_cfa_register 7
 1363 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1098:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 1364              		.loc 1 1098 0
 1365 0008 0F23     		mov	r3, #15
 1366 000a FC18     		add	r4, r7, r3
 1367 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1368 0010 031C     		mov	r3, r0
 1369 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1100:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG &= (uint32)~PWM_CHARGE_CAPTURE_MASK;
 1370              		.loc 1 1100 0
 1371 0014 0A4B     		ldr	r3, .L94
 1372 0016 0A4A     		ldr	r2, .L94
 1373 0018 1268     		ldr	r2, [r2]
 1374 001a 0321     		mov	r1, #3
 1375 001c 8A43     		bic	r2, r1
 1376 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG |= triggerMode;
 1377              		.loc 1 1101 0
 1378 0020 074B     		ldr	r3, .L94
 1379 0022 074A     		ldr	r2, .L94
 1380 0024 1168     		ldr	r1, [r2]
 1381 0026 7A68     		ldr	r2, [r7, #4]
 1382 0028 0A43     		orr	r2, r1
 1383 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1103:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 1384              		.loc 1 1103 0
 1385 002c 0F23     		mov	r3, #15
 1386 002e FB18     		add	r3, r7, r3
 1387 0030 1B78     		ldrb	r3, [r3]
 1388 0032 181C     		mov	r0, r3
 1389 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1390              		.loc 1 1104 0
 1391 0038 BD46     		mov	sp, r7
 1392 003a 05B0     		add	sp, sp, #20
 1393              		@ sp needed
 1394 003c 90BD     		pop	{r4, r7, pc}
 1395              	.L95:
 1396 003e C046     		.align	2
 1397              	.L94:
 1398 0040 24012040 		.word	1075839268
 1399              		.cfi_endproc
 1400              	.LFE29:
 1401              		.size	PWM_CHARGE_SetCaptureMode, .-PWM_CHARGE_SetCaptureMode
 1402              		.section	.text.PWM_CHARGE_SetReloadMode,"ax",%progbits
 1403              		.align	2
 1404              		.global	PWM_CHARGE_SetReloadMode
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 45


 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	PWM_CHARGE_SetReloadMode, %function
 1408              	PWM_CHARGE_SetReloadMode:
 1409              	.LFB30:
1105:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1106:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1107:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetReloadMode
1109:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1111:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1112:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM_CHARGE.c **** *  input.
1114:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1115:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM_CHARGE.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1118:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1123:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1124:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1125:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1126:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1410              		.loc 1 1128 0
 1411              		.cfi_startproc
 1412 0000 90B5     		push	{r4, r7, lr}
 1413              		.cfi_def_cfa_offset 12
 1414              		.cfi_offset 4, -12
 1415              		.cfi_offset 7, -8
 1416              		.cfi_offset 14, -4
 1417 0002 85B0     		sub	sp, sp, #20
 1418              		.cfi_def_cfa_offset 32
 1419 0004 00AF     		add	r7, sp, #0
 1420              		.cfi_def_cfa_register 7
 1421 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1131:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 1422              		.loc 1 1131 0
 1423 0008 0F23     		mov	r3, #15
 1424 000a FC18     		add	r4, r7, r3
 1425 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1426 0010 031C     		mov	r3, r0
 1427 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1133:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG &= (uint32)~PWM_CHARGE_RELOAD_MASK;
 1428              		.loc 1 1133 0
 1429 0014 0A4B     		ldr	r3, .L97
 1430 0016 0A4A     		ldr	r2, .L97
 1431 0018 1268     		ldr	r2, [r2]
 1432 001a 3021     		mov	r1, #48
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 46


 1433 001c 8A43     		bic	r2, r1
 1434 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_CHARGE_RELOAD_SHIFT));
 1435              		.loc 1 1134 0
 1436 0020 074B     		ldr	r3, .L97
 1437 0022 074A     		ldr	r2, .L97
 1438 0024 1168     		ldr	r1, [r2]
 1439 0026 7A68     		ldr	r2, [r7, #4]
 1440 0028 1201     		lsl	r2, r2, #4
 1441 002a 0A43     		orr	r2, r1
 1442 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1136:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 1443              		.loc 1 1136 0
 1444 002e 0F23     		mov	r3, #15
 1445 0030 FB18     		add	r3, r7, r3
 1446 0032 1B78     		ldrb	r3, [r3]
 1447 0034 181C     		mov	r0, r3
 1448 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1449              		.loc 1 1137 0
 1450 003a BD46     		mov	sp, r7
 1451 003c 05B0     		add	sp, sp, #20
 1452              		@ sp needed
 1453 003e 90BD     		pop	{r4, r7, pc}
 1454              	.L98:
 1455              		.align	2
 1456              	.L97:
 1457 0040 24012040 		.word	1075839268
 1458              		.cfi_endproc
 1459              	.LFE30:
 1460              		.size	PWM_CHARGE_SetReloadMode, .-PWM_CHARGE_SetReloadMode
 1461              		.section	.text.PWM_CHARGE_SetStartMode,"ax",%progbits
 1462              		.align	2
 1463              		.global	PWM_CHARGE_SetStartMode
 1464              		.code	16
 1465              		.thumb_func
 1466              		.type	PWM_CHARGE_SetStartMode, %function
 1467              	PWM_CHARGE_SetStartMode:
 1468              	.LFB31:
1138:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1139:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1140:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetStartMode
1142:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1144:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1145:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM_CHARGE.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1148:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM_CHARGE.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1151:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_BOTH      - Both rising and falling edge
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 47


1155:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1156:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1157:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1158:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1159:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1469              		.loc 1 1161 0
 1470              		.cfi_startproc
 1471 0000 90B5     		push	{r4, r7, lr}
 1472              		.cfi_def_cfa_offset 12
 1473              		.cfi_offset 4, -12
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 0002 85B0     		sub	sp, sp, #20
 1477              		.cfi_def_cfa_offset 32
 1478 0004 00AF     		add	r7, sp, #0
 1479              		.cfi_def_cfa_register 7
 1480 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1164:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 1481              		.loc 1 1164 0
 1482 0008 0F23     		mov	r3, #15
 1483 000a FC18     		add	r4, r7, r3
 1484 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1485 0010 031C     		mov	r3, r0
 1486 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1166:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG &= (uint32)~PWM_CHARGE_START_MASK;
 1487              		.loc 1 1166 0
 1488 0014 0A4B     		ldr	r3, .L100
 1489 0016 0A4A     		ldr	r2, .L100
 1490 0018 1268     		ldr	r2, [r2]
 1491 001a 0A49     		ldr	r1, .L100+4
 1492 001c 0A40     		and	r2, r1
 1493 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_CHARGE_START_SHIFT));
 1494              		.loc 1 1167 0
 1495 0020 074B     		ldr	r3, .L100
 1496 0022 074A     		ldr	r2, .L100
 1497 0024 1168     		ldr	r1, [r2]
 1498 0026 7A68     		ldr	r2, [r7, #4]
 1499 0028 1202     		lsl	r2, r2, #8
 1500 002a 0A43     		orr	r2, r1
 1501 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1169:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 1502              		.loc 1 1169 0
 1503 002e 0F23     		mov	r3, #15
 1504 0030 FB18     		add	r3, r7, r3
 1505 0032 1B78     		ldrb	r3, [r3]
 1506 0034 181C     		mov	r0, r3
 1507 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1508              		.loc 1 1170 0
 1509 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 48


 1510 003c 05B0     		add	sp, sp, #20
 1511              		@ sp needed
 1512 003e 90BD     		pop	{r4, r7, pc}
 1513              	.L101:
 1514              		.align	2
 1515              	.L100:
 1516 0040 24012040 		.word	1075839268
 1517 0044 FFFCFFFF 		.word	-769
 1518              		.cfi_endproc
 1519              	.LFE31:
 1520              		.size	PWM_CHARGE_SetStartMode, .-PWM_CHARGE_SetStartMode
 1521              		.section	.text.PWM_CHARGE_SetStopMode,"ax",%progbits
 1522              		.align	2
 1523              		.global	PWM_CHARGE_SetStopMode
 1524              		.code	16
 1525              		.thumb_func
 1526              		.type	PWM_CHARGE_SetStopMode, %function
 1527              	PWM_CHARGE_SetStopMode:
 1528              	.LFB32:
1171:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1172:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1173:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetStopMode
1175:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1177:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1178:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1180:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM_CHARGE.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1183:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1188:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1189:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1190:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1191:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1529              		.loc 1 1193 0
 1530              		.cfi_startproc
 1531 0000 90B5     		push	{r4, r7, lr}
 1532              		.cfi_def_cfa_offset 12
 1533              		.cfi_offset 4, -12
 1534              		.cfi_offset 7, -8
 1535              		.cfi_offset 14, -4
 1536 0002 85B0     		sub	sp, sp, #20
 1537              		.cfi_def_cfa_offset 32
 1538 0004 00AF     		add	r7, sp, #0
 1539              		.cfi_def_cfa_register 7
 1540 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1196:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 49


 1541              		.loc 1 1196 0
 1542 0008 0F23     		mov	r3, #15
 1543 000a FC18     		add	r4, r7, r3
 1544 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1545 0010 031C     		mov	r3, r0
 1546 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1198:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG &= (uint32)~PWM_CHARGE_STOP_MASK;
 1547              		.loc 1 1198 0
 1548 0014 0A4B     		ldr	r3, .L103
 1549 0016 0A4A     		ldr	r2, .L103
 1550 0018 1268     		ldr	r2, [r2]
 1551 001a C021     		mov	r1, #192
 1552 001c 8A43     		bic	r2, r1
 1553 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_CHARGE_STOP_SHIFT));
 1554              		.loc 1 1199 0
 1555 0020 074B     		ldr	r3, .L103
 1556 0022 074A     		ldr	r2, .L103
 1557 0024 1168     		ldr	r1, [r2]
 1558 0026 7A68     		ldr	r2, [r7, #4]
 1559 0028 9201     		lsl	r2, r2, #6
 1560 002a 0A43     		orr	r2, r1
 1561 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1201:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 1562              		.loc 1 1201 0
 1563 002e 0F23     		mov	r3, #15
 1564 0030 FB18     		add	r3, r7, r3
 1565 0032 1B78     		ldrb	r3, [r3]
 1566 0034 181C     		mov	r0, r3
 1567 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1568              		.loc 1 1202 0
 1569 003a BD46     		mov	sp, r7
 1570 003c 05B0     		add	sp, sp, #20
 1571              		@ sp needed
 1572 003e 90BD     		pop	{r4, r7, pc}
 1573              	.L104:
 1574              		.align	2
 1575              	.L103:
 1576 0040 24012040 		.word	1075839268
 1577              		.cfi_endproc
 1578              	.LFE32:
 1579              		.size	PWM_CHARGE_SetStopMode, .-PWM_CHARGE_SetStopMode
 1580              		.section	.text.PWM_CHARGE_SetCountMode,"ax",%progbits
 1581              		.align	2
 1582              		.global	PWM_CHARGE_SetCountMode
 1583              		.code	16
 1584              		.thumb_func
 1585              		.type	PWM_CHARGE_SetCountMode, %function
 1586              	PWM_CHARGE_SetCountMode:
 1587              	.LFB33:
1203:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1204:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1205:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetCountMode
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 50


1207:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1209:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1210:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM_CHARGE.c **** *  input.
1212:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1213:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM_CHARGE.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1216:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1221:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1222:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1223:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1224:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1588              		.loc 1 1226 0
 1589              		.cfi_startproc
 1590 0000 90B5     		push	{r4, r7, lr}
 1591              		.cfi_def_cfa_offset 12
 1592              		.cfi_offset 4, -12
 1593              		.cfi_offset 7, -8
 1594              		.cfi_offset 14, -4
 1595 0002 85B0     		sub	sp, sp, #20
 1596              		.cfi_def_cfa_offset 32
 1597 0004 00AF     		add	r7, sp, #0
 1598              		.cfi_def_cfa_register 7
 1599 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1229:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 1600              		.loc 1 1229 0
 1601 0008 0F23     		mov	r3, #15
 1602 000a FC18     		add	r4, r7, r3
 1603 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1604 0010 031C     		mov	r3, r0
 1605 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1231:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG &= (uint32)~PWM_CHARGE_COUNT_MASK;
 1606              		.loc 1 1231 0
 1607 0014 0A4B     		ldr	r3, .L106
 1608 0016 0A4A     		ldr	r2, .L106
 1609 0018 1268     		ldr	r2, [r2]
 1610 001a 0C21     		mov	r1, #12
 1611 001c 8A43     		bic	r2, r1
 1612 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_CHARGE_COUNT_SHIFT));
 1613              		.loc 1 1232 0
 1614 0020 074B     		ldr	r3, .L106
 1615 0022 074A     		ldr	r2, .L106
 1616 0024 1168     		ldr	r1, [r2]
 1617 0026 7A68     		ldr	r2, [r7, #4]
 1618 0028 9200     		lsl	r2, r2, #2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 51


 1619 002a 0A43     		orr	r2, r1
 1620 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1234:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 1621              		.loc 1 1234 0
 1622 002e 0F23     		mov	r3, #15
 1623 0030 FB18     		add	r3, r7, r3
 1624 0032 1B78     		ldrb	r3, [r3]
 1625 0034 181C     		mov	r0, r3
 1626 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1627              		.loc 1 1235 0
 1628 003a BD46     		mov	sp, r7
 1629 003c 05B0     		add	sp, sp, #20
 1630              		@ sp needed
 1631 003e 90BD     		pop	{r4, r7, pc}
 1632              	.L107:
 1633              		.align	2
 1634              	.L106:
 1635 0040 24012040 		.word	1075839268
 1636              		.cfi_endproc
 1637              	.LFE33:
 1638              		.size	PWM_CHARGE_SetCountMode, .-PWM_CHARGE_SetCountMode
 1639              		.section	.text.PWM_CHARGE_TriggerCommand,"ax",%progbits
 1640              		.align	2
 1641              		.global	PWM_CHARGE_TriggerCommand
 1642              		.code	16
 1643              		.thumb_func
 1644              		.type	PWM_CHARGE_TriggerCommand, %function
 1645              	PWM_CHARGE_TriggerCommand:
 1646              	.LFB34:
1236:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1237:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1238:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_TriggerCommand
1240:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1242:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1243:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM_CHARGE.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM_CHARGE.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1247:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM_CHARGE.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM_CHARGE.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM_CHARGE.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM_CHARGE.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM_CHARGE.c **** *        define.
1253:Generated_Source\PSoC4/PWM_CHARGE.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM_CHARGE.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1256:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1261:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 52


1262:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1263:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1264:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1647              		.loc 1 1266 0
 1648              		.cfi_startproc
 1649 0000 90B5     		push	{r4, r7, lr}
 1650              		.cfi_def_cfa_offset 12
 1651              		.cfi_offset 4, -12
 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 85B0     		sub	sp, sp, #20
 1655              		.cfi_def_cfa_offset 32
 1656 0004 00AF     		add	r7, sp, #0
 1657              		.cfi_def_cfa_register 7
 1658 0006 7860     		str	r0, [r7, #4]
 1659 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/PWM_CHARGE.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1269:Generated_Source\PSoC4/PWM_CHARGE.c ****     enableInterrupts = CyEnterCriticalSection();
 1660              		.loc 1 1269 0
 1661 000a 0F23     		mov	r3, #15
 1662 000c FC18     		add	r4, r7, r3
 1663 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1664 0012 031C     		mov	r3, r0
 1665 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1271:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_COMMAND_REG = ((uint32)(mask << command));
 1666              		.loc 1 1271 0
 1667 0016 074B     		ldr	r3, .L109
 1668 0018 3A68     		ldr	r2, [r7]
 1669 001a 7968     		ldr	r1, [r7, #4]
 1670 001c 9140     		lsl	r1, r1, r2
 1671 001e 0A1C     		mov	r2, r1
 1672 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1273:Generated_Source\PSoC4/PWM_CHARGE.c ****     CyExitCriticalSection(enableInterrupts);
 1673              		.loc 1 1273 0
 1674 0022 0F23     		mov	r3, #15
 1675 0024 FB18     		add	r3, r7, r3
 1676 0026 1B78     		ldrb	r3, [r3]
 1677 0028 181C     		mov	r0, r3
 1678 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1679              		.loc 1 1274 0
 1680 002e BD46     		mov	sp, r7
 1681 0030 05B0     		add	sp, sp, #20
 1682              		@ sp needed
 1683 0032 90BD     		pop	{r4, r7, pc}
 1684              	.L110:
 1685              		.align	2
 1686              	.L109:
 1687 0034 08002040 		.word	1075838984
 1688              		.cfi_endproc
 1689              	.LFE34:
 1690              		.size	PWM_CHARGE_TriggerCommand, .-PWM_CHARGE_TriggerCommand
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 53


 1691              		.section	.text.PWM_CHARGE_ReadStatus,"ax",%progbits
 1692              		.align	2
 1693              		.global	PWM_CHARGE_ReadStatus
 1694              		.code	16
 1695              		.thumb_func
 1696              		.type	PWM_CHARGE_ReadStatus, %function
 1697              	PWM_CHARGE_ReadStatus:
 1698              	.LFB35:
1275:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1276:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1277:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ReadStatus
1279:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1281:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1282:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Reads the status of the PWM_CHARGE.
1283:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1284:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1286:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1287:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1288:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Status
1289:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1290:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1293:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1699              		.loc 1 1295 0
 1700              		.cfi_startproc
 1701 0000 80B5     		push	{r7, lr}
 1702              		.cfi_def_cfa_offset 8
 1703              		.cfi_offset 7, -8
 1704              		.cfi_offset 14, -4
 1705 0002 00AF     		add	r7, sp, #0
 1706              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/PWM_CHARGE.c ****     return ((PWM_CHARGE_STATUS_REG >> PWM_CHARGE_RUNNING_STATUS_SHIFT) |
 1707              		.loc 1 1296 0
 1708 0004 054B     		ldr	r3, .L113
 1709 0006 1B68     		ldr	r3, [r3]
 1710 0008 9A0F     		lsr	r2, r3, #30
1297:Generated_Source\PSoC4/PWM_CHARGE.c ****             (PWM_CHARGE_STATUS_REG & PWM_CHARGE_STATUS_DOWN));
 1711              		.loc 1 1297 0
 1712 000a 044B     		ldr	r3, .L113
 1713 000c 1B68     		ldr	r3, [r3]
 1714 000e 0121     		mov	r1, #1
 1715 0010 0B40     		and	r3, r1
1296:Generated_Source\PSoC4/PWM_CHARGE.c ****     return ((PWM_CHARGE_STATUS_REG >> PWM_CHARGE_RUNNING_STATUS_SHIFT) |
 1716              		.loc 1 1296 0
 1717 0012 1343     		orr	r3, r2
1298:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1718              		.loc 1 1298 0
 1719 0014 181C     		mov	r0, r3
 1720 0016 BD46     		mov	sp, r7
 1721              		@ sp needed
 1722 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 54


 1723              	.L114:
 1724 001a C046     		.align	2
 1725              	.L113:
 1726 001c 04012040 		.word	1075839236
 1727              		.cfi_endproc
 1728              	.LFE35:
 1729              		.size	PWM_CHARGE_ReadStatus, .-PWM_CHARGE_ReadStatus
 1730              		.section	.text.PWM_CHARGE_SetInterruptMode,"ax",%progbits
 1731              		.align	2
 1732              		.global	PWM_CHARGE_SetInterruptMode
 1733              		.code	16
 1734              		.thumb_func
 1735              		.type	PWM_CHARGE_SetInterruptMode, %function
 1736              	PWM_CHARGE_SetInterruptMode:
 1737              	.LFB36:
1299:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1300:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1301:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetInterruptMode
1303:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1305:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1306:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM_CHARGE.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1309:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM_CHARGE.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1312:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1315:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1316:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1317:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1318:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1738              		.loc 1 1320 0
 1739              		.cfi_startproc
 1740 0000 80B5     		push	{r7, lr}
 1741              		.cfi_def_cfa_offset 8
 1742              		.cfi_offset 7, -8
 1743              		.cfi_offset 14, -4
 1744 0002 82B0     		sub	sp, sp, #8
 1745              		.cfi_def_cfa_offset 16
 1746 0004 00AF     		add	r7, sp, #0
 1747              		.cfi_def_cfa_register 7
 1748 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_INTERRUPT_MASK_REG =  interruptMask;
 1749              		.loc 1 1321 0
 1750 0008 024B     		ldr	r3, .L116
 1751 000a 7A68     		ldr	r2, [r7, #4]
 1752 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1753              		.loc 1 1322 0
 1754 000e BD46     		mov	sp, r7
 1755 0010 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 55


 1756              		@ sp needed
 1757 0012 80BD     		pop	{r7, pc}
 1758              	.L117:
 1759              		.align	2
 1760              	.L116:
 1761 0014 38012040 		.word	1075839288
 1762              		.cfi_endproc
 1763              	.LFE36:
 1764              		.size	PWM_CHARGE_SetInterruptMode, .-PWM_CHARGE_SetInterruptMode
 1765              		.section	.text.PWM_CHARGE_GetInterruptSourceMasked,"ax",%progbits
 1766              		.align	2
 1767              		.global	PWM_CHARGE_GetInterruptSourceMasked
 1768              		.code	16
 1769              		.thumb_func
 1770              		.type	PWM_CHARGE_GetInterruptSourceMasked, %function
 1771              	PWM_CHARGE_GetInterruptSourceMasked:
 1772              	.LFB37:
1323:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1324:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1325:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1329:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1330:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1332:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM_CHARGE.c **** *   None
1334:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1335:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1336:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1338:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1341:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1773              		.loc 1 1343 0
 1774              		.cfi_startproc
 1775 0000 80B5     		push	{r7, lr}
 1776              		.cfi_def_cfa_offset 8
 1777              		.cfi_offset 7, -8
 1778              		.cfi_offset 14, -4
 1779 0002 00AF     		add	r7, sp, #0
 1780              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/PWM_CHARGE.c ****     return (PWM_CHARGE_INTERRUPT_MASKED_REG);
 1781              		.loc 1 1344 0
 1782 0004 024B     		ldr	r3, .L120
 1783 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1784              		.loc 1 1345 0
 1785 0008 181C     		mov	r0, r3
 1786 000a BD46     		mov	sp, r7
 1787              		@ sp needed
 1788 000c 80BD     		pop	{r7, pc}
 1789              	.L121:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 56


 1790 000e C046     		.align	2
 1791              	.L120:
 1792 0010 3C012040 		.word	1075839292
 1793              		.cfi_endproc
 1794              	.LFE37:
 1795              		.size	PWM_CHARGE_GetInterruptSourceMasked, .-PWM_CHARGE_GetInterruptSourceMasked
 1796              		.section	.text.PWM_CHARGE_GetInterruptSource,"ax",%progbits
 1797              		.align	2
 1798              		.global	PWM_CHARGE_GetInterruptSource
 1799              		.code	16
 1800              		.thumb_func
 1801              		.type	PWM_CHARGE_GetInterruptSource, %function
 1802              	PWM_CHARGE_GetInterruptSource:
 1803              	.LFB38:
1346:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1347:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1348:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_GetInterruptSource
1350:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1352:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1353:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1355:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1357:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1358:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1359:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1361:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1364:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM_CHARGE.c **** uint32 PWM_CHARGE_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1804              		.loc 1 1366 0
 1805              		.cfi_startproc
 1806 0000 80B5     		push	{r7, lr}
 1807              		.cfi_def_cfa_offset 8
 1808              		.cfi_offset 7, -8
 1809              		.cfi_offset 14, -4
 1810 0002 00AF     		add	r7, sp, #0
 1811              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/PWM_CHARGE.c ****     return (PWM_CHARGE_INTERRUPT_REQ_REG);
 1812              		.loc 1 1367 0
 1813 0004 024B     		ldr	r3, .L124
 1814 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1815              		.loc 1 1368 0
 1816 0008 181C     		mov	r0, r3
 1817 000a BD46     		mov	sp, r7
 1818              		@ sp needed
 1819 000c 80BD     		pop	{r7, pc}
 1820              	.L125:
 1821 000e C046     		.align	2
 1822              	.L124:
 1823 0010 30012040 		.word	1075839280
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 57


 1824              		.cfi_endproc
 1825              	.LFE38:
 1826              		.size	PWM_CHARGE_GetInterruptSource, .-PWM_CHARGE_GetInterruptSource
 1827              		.section	.text.PWM_CHARGE_ClearInterrupt,"ax",%progbits
 1828              		.align	2
 1829              		.global	PWM_CHARGE_ClearInterrupt
 1830              		.code	16
 1831              		.thumb_func
 1832              		.type	PWM_CHARGE_ClearInterrupt, %function
 1833              	PWM_CHARGE_ClearInterrupt:
 1834              	.LFB39:
1369:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1370:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1371:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_ClearInterrupt
1373:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1375:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1376:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1378:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM_CHARGE.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1381:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1384:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1385:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1386:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1387:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1835              		.loc 1 1389 0
 1836              		.cfi_startproc
 1837 0000 80B5     		push	{r7, lr}
 1838              		.cfi_def_cfa_offset 8
 1839              		.cfi_offset 7, -8
 1840              		.cfi_offset 14, -4
 1841 0002 82B0     		sub	sp, sp, #8
 1842              		.cfi_def_cfa_offset 16
 1843 0004 00AF     		add	r7, sp, #0
 1844              		.cfi_def_cfa_register 7
 1845 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_INTERRUPT_REQ_REG = interruptMask;
 1846              		.loc 1 1390 0
 1847 0008 024B     		ldr	r3, .L127
 1848 000a 7A68     		ldr	r2, [r7, #4]
 1849 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1850              		.loc 1 1391 0
 1851 000e BD46     		mov	sp, r7
 1852 0010 02B0     		add	sp, sp, #8
 1853              		@ sp needed
 1854 0012 80BD     		pop	{r7, pc}
 1855              	.L128:
 1856              		.align	2
 1857              	.L127:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 58


 1858 0014 30012040 		.word	1075839280
 1859              		.cfi_endproc
 1860              	.LFE39:
 1861              		.size	PWM_CHARGE_ClearInterrupt, .-PWM_CHARGE_ClearInterrupt
 1862              		.section	.text.PWM_CHARGE_SetInterrupt,"ax",%progbits
 1863              		.align	2
 1864              		.global	PWM_CHARGE_SetInterrupt
 1865              		.code	16
 1866              		.thumb_func
 1867              		.type	PWM_CHARGE_SetInterrupt, %function
 1868              	PWM_CHARGE_SetInterrupt:
 1869              	.LFB40:
1392:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1393:Generated_Source\PSoC4/PWM_CHARGE.c **** 
1394:Generated_Source\PSoC4/PWM_CHARGE.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM_CHARGE.c **** * Function Name: PWM_CHARGE_SetInterrupt
1396:Generated_Source\PSoC4/PWM_CHARGE.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1398:Generated_Source\PSoC4/PWM_CHARGE.c **** * Summary:
1399:Generated_Source\PSoC4/PWM_CHARGE.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1401:Generated_Source\PSoC4/PWM_CHARGE.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM_CHARGE.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM_CHARGE.c **** *   Values:
1404:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM_CHARGE.c **** *     - PWM_CHARGE_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1407:Generated_Source\PSoC4/PWM_CHARGE.c **** * Return:
1408:Generated_Source\PSoC4/PWM_CHARGE.c **** *  None
1409:Generated_Source\PSoC4/PWM_CHARGE.c **** *
1410:Generated_Source\PSoC4/PWM_CHARGE.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM_CHARGE.c **** void PWM_CHARGE_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM_CHARGE.c **** {
 1870              		.loc 1 1412 0
 1871              		.cfi_startproc
 1872 0000 80B5     		push	{r7, lr}
 1873              		.cfi_def_cfa_offset 8
 1874              		.cfi_offset 7, -8
 1875              		.cfi_offset 14, -4
 1876 0002 82B0     		sub	sp, sp, #8
 1877              		.cfi_def_cfa_offset 16
 1878 0004 00AF     		add	r7, sp, #0
 1879              		.cfi_def_cfa_register 7
 1880 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/PWM_CHARGE.c ****     PWM_CHARGE_INTERRUPT_SET_REG = interruptMask;
 1881              		.loc 1 1413 0
 1882 0008 024B     		ldr	r3, .L130
 1883 000a 7A68     		ldr	r2, [r7, #4]
 1884 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/PWM_CHARGE.c **** }
 1885              		.loc 1 1414 0
 1886 000e BD46     		mov	sp, r7
 1887 0010 02B0     		add	sp, sp, #8
 1888              		@ sp needed
 1889 0012 80BD     		pop	{r7, pc}
 1890              	.L131:
 1891              		.align	2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 59


 1892              	.L130:
 1893 0014 34012040 		.word	1075839284
 1894              		.cfi_endproc
 1895              	.LFE40:
 1896              		.size	PWM_CHARGE_SetInterrupt, .-PWM_CHARGE_SetInterrupt
 1897              		.text
 1898              	.Letext0:
 1899              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1900              		.section	.debug_info,"",%progbits
 1901              	.Ldebug_info0:
 1902 0000 F0060000 		.4byte	0x6f0
 1903 0004 0400     		.2byte	0x4
 1904 0006 00000000 		.4byte	.Ldebug_abbrev0
 1905 000a 04       		.byte	0x4
 1906 000b 01       		.uleb128 0x1
 1907 000c 5A050000 		.4byte	.LASF76
 1908 0010 01       		.byte	0x1
 1909 0011 F7040000 		.4byte	.LASF77
 1910 0015 39000000 		.4byte	.LASF78
 1911 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1912 001d 00000000 		.4byte	0
 1913 0021 00000000 		.4byte	.Ldebug_line0
 1914 0025 02       		.uleb128 0x2
 1915 0026 01       		.byte	0x1
 1916 0027 06       		.byte	0x6
 1917 0028 F9000000 		.4byte	.LASF0
 1918 002c 02       		.uleb128 0x2
 1919 002d 01       		.byte	0x1
 1920 002e 08       		.byte	0x8
 1921 002f 13040000 		.4byte	.LASF1
 1922 0033 02       		.uleb128 0x2
 1923 0034 02       		.byte	0x2
 1924 0035 05       		.byte	0x5
 1925 0036 32040000 		.4byte	.LASF2
 1926 003a 02       		.uleb128 0x2
 1927 003b 02       		.byte	0x2
 1928 003c 07       		.byte	0x7
 1929 003d 9D020000 		.4byte	.LASF3
 1930 0041 02       		.uleb128 0x2
 1931 0042 04       		.byte	0x4
 1932 0043 05       		.byte	0x5
 1933 0044 37010000 		.4byte	.LASF4
 1934 0048 02       		.uleb128 0x2
 1935 0049 04       		.byte	0x4
 1936 004a 07       		.byte	0x7
 1937 004b 38020000 		.4byte	.LASF5
 1938 004f 02       		.uleb128 0x2
 1939 0050 08       		.byte	0x8
 1940 0051 05       		.byte	0x5
 1941 0052 EB000000 		.4byte	.LASF6
 1942 0056 02       		.uleb128 0x2
 1943 0057 08       		.byte	0x8
 1944 0058 07       		.byte	0x7
 1945 0059 A9000000 		.4byte	.LASF7
 1946 005d 03       		.uleb128 0x3
 1947 005e 04       		.byte	0x4
 1948 005f 05       		.byte	0x5
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 60


 1949 0060 696E7400 		.ascii	"int\000"
 1950 0064 02       		.uleb128 0x2
 1951 0065 04       		.byte	0x4
 1952 0066 07       		.byte	0x7
 1953 0067 DD010000 		.4byte	.LASF8
 1954 006b 04       		.uleb128 0x4
 1955 006c 71010000 		.4byte	.LASF9
 1956 0070 02       		.byte	0x2
 1957 0071 B901     		.2byte	0x1b9
 1958 0073 2C000000 		.4byte	0x2c
 1959 0077 04       		.uleb128 0x4
 1960 0078 96010000 		.4byte	.LASF10
 1961 007c 02       		.byte	0x2
 1962 007d BB01     		.2byte	0x1bb
 1963 007f 48000000 		.4byte	0x48
 1964 0083 02       		.uleb128 0x2
 1965 0084 04       		.byte	0x4
 1966 0085 04       		.byte	0x4
 1967 0086 03040000 		.4byte	.LASF11
 1968 008a 02       		.uleb128 0x2
 1969 008b 08       		.byte	0x8
 1970 008c 04       		.byte	0x4
 1971 008d 77010000 		.4byte	.LASF12
 1972 0091 02       		.uleb128 0x2
 1973 0092 01       		.byte	0x1
 1974 0093 08       		.byte	0x8
 1975 0094 64040000 		.4byte	.LASF13
 1976 0098 04       		.uleb128 0x4
 1977 0099 05030000 		.4byte	.LASF14
 1978 009d 02       		.byte	0x2
 1979 009e 6502     		.2byte	0x265
 1980 00a0 A4000000 		.4byte	0xa4
 1981 00a4 05       		.uleb128 0x5
 1982 00a5 77000000 		.4byte	0x77
 1983 00a9 02       		.uleb128 0x2
 1984 00aa 04       		.byte	0x4
 1985 00ab 07       		.byte	0x7
 1986 00ac 4E030000 		.4byte	.LASF15
 1987 00b0 06       		.uleb128 0x6
 1988 00b1 B7010000 		.4byte	.LASF16
 1989 00b5 01       		.byte	0x1
 1990 00b6 26       		.byte	0x26
 1991 00b7 00000000 		.4byte	.LFB1
 1992 00bb 50000000 		.4byte	.LFE1-.LFB1
 1993 00bf 01       		.uleb128 0x1
 1994 00c0 9C       		.byte	0x9c
 1995 00c1 07       		.uleb128 0x7
 1996 00c2 0B030000 		.4byte	.LASF18
 1997 00c6 01       		.byte	0x1
 1998 00c7 B1       		.byte	0xb1
 1999 00c8 00000000 		.4byte	.LFB2
 2000 00cc 38000000 		.4byte	.LFE2-.LFB2
 2001 00d0 01       		.uleb128 0x1
 2002 00d1 9C       		.byte	0x9c
 2003 00d2 E5000000 		.4byte	0xe5
 2004 00d6 08       		.uleb128 0x8
 2005 00d7 E6040000 		.4byte	.LASF20
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 61


 2006 00db 01       		.byte	0x1
 2007 00dc B3       		.byte	0xb3
 2008 00dd 6B000000 		.4byte	0x6b
 2009 00e1 02       		.uleb128 0x2
 2010 00e2 91       		.byte	0x91
 2011 00e3 6F       		.sleb128 -17
 2012 00e4 00       		.byte	0
 2013 00e5 06       		.uleb128 0x6
 2014 00e6 99040000 		.4byte	.LASF17
 2015 00ea 01       		.byte	0x1
 2016 00eb E6       		.byte	0xe6
 2017 00ec 00000000 		.4byte	.LFB3
 2018 00f0 24000000 		.4byte	.LFE3-.LFB3
 2019 00f4 01       		.uleb128 0x1
 2020 00f5 9C       		.byte	0x9c
 2021 00f6 09       		.uleb128 0x9
 2022 00f7 4A050000 		.4byte	.LASF19
 2023 00fb 01       		.byte	0x1
 2024 00fc 0001     		.2byte	0x100
 2025 00fe 00000000 		.4byte	.LFB4
 2026 0102 30000000 		.4byte	.LFE4-.LFB4
 2027 0106 01       		.uleb128 0x1
 2028 0107 9C       		.byte	0x9c
 2029 0108 1C010000 		.4byte	0x11c
 2030 010c 0A       		.uleb128 0xa
 2031 010d E6040000 		.4byte	.LASF20
 2032 0111 01       		.byte	0x1
 2033 0112 0201     		.2byte	0x102
 2034 0114 6B000000 		.4byte	0x6b
 2035 0118 02       		.uleb128 0x2
 2036 0119 91       		.byte	0x91
 2037 011a 6F       		.sleb128 -17
 2038 011b 00       		.byte	0
 2039 011c 09       		.uleb128 0x9
 2040 011d E8050000 		.4byte	.LASF21
 2041 0121 01       		.byte	0x1
 2042 0122 2501     		.2byte	0x125
 2043 0124 00000000 		.4byte	.LFB5
 2044 0128 48000000 		.4byte	.LFE5-.LFB5
 2045 012c 01       		.uleb128 0x1
 2046 012d 9C       		.byte	0x9c
 2047 012e 51010000 		.4byte	0x151
 2048 0132 0B       		.uleb128 0xb
 2049 0133 69040000 		.4byte	.LASF23
 2050 0137 01       		.byte	0x1
 2051 0138 2501     		.2byte	0x125
 2052 013a 77000000 		.4byte	0x77
 2053 013e 02       		.uleb128 0x2
 2054 013f 91       		.byte	0x91
 2055 0140 64       		.sleb128 -28
 2056 0141 0A       		.uleb128 0xa
 2057 0142 E6040000 		.4byte	.LASF20
 2058 0146 01       		.byte	0x1
 2059 0147 2701     		.2byte	0x127
 2060 0149 6B000000 		.4byte	0x6b
 2061 014d 02       		.uleb128 0x2
 2062 014e 91       		.byte	0x91
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 62


 2063 014f 6F       		.sleb128 -17
 2064 0150 00       		.byte	0
 2065 0151 09       		.uleb128 0x9
 2066 0152 84040000 		.4byte	.LASF22
 2067 0156 01       		.byte	0x1
 2068 0157 4601     		.2byte	0x146
 2069 0159 00000000 		.4byte	.LFB6
 2070 015d 48000000 		.4byte	.LFE6-.LFB6
 2071 0161 01       		.uleb128 0x1
 2072 0162 9C       		.byte	0x9c
 2073 0163 86010000 		.4byte	0x186
 2074 0167 0B       		.uleb128 0xb
 2075 0168 C0000000 		.4byte	.LASF24
 2076 016c 01       		.byte	0x1
 2077 016d 4601     		.2byte	0x146
 2078 016f 77000000 		.4byte	0x77
 2079 0173 02       		.uleb128 0x2
 2080 0174 91       		.byte	0x91
 2081 0175 64       		.sleb128 -28
 2082 0176 0A       		.uleb128 0xa
 2083 0177 E6040000 		.4byte	.LASF20
 2084 017b 01       		.byte	0x1
 2085 017c 4801     		.2byte	0x148
 2086 017e 6B000000 		.4byte	0x6b
 2087 0182 02       		.uleb128 0x2
 2088 0183 91       		.byte	0x91
 2089 0184 6F       		.sleb128 -17
 2090 0185 00       		.byte	0
 2091 0186 09       		.uleb128 0x9
 2092 0187 81030000 		.4byte	.LASF25
 2093 018b 01       		.byte	0x1
 2094 018c 6B01     		.2byte	0x16b
 2095 018e 00000000 		.4byte	.LFB7
 2096 0192 48000000 		.4byte	.LFE7-.LFB7
 2097 0196 01       		.uleb128 0x1
 2098 0197 9C       		.byte	0x9c
 2099 0198 BB010000 		.4byte	0x1bb
 2100 019c 0B       		.uleb128 0xb
 2101 019d 09040000 		.4byte	.LASF26
 2102 01a1 01       		.byte	0x1
 2103 01a2 6B01     		.2byte	0x16b
 2104 01a4 77000000 		.4byte	0x77
 2105 01a8 02       		.uleb128 0x2
 2106 01a9 91       		.byte	0x91
 2107 01aa 64       		.sleb128 -28
 2108 01ab 0A       		.uleb128 0xa
 2109 01ac E6040000 		.4byte	.LASF20
 2110 01b0 01       		.byte	0x1
 2111 01b1 6D01     		.2byte	0x16d
 2112 01b3 6B000000 		.4byte	0x6b
 2113 01b7 02       		.uleb128 0x2
 2114 01b8 91       		.byte	0x91
 2115 01b9 6F       		.sleb128 -17
 2116 01ba 00       		.byte	0
 2117 01bb 09       		.uleb128 0x9
 2118 01bc 0B020000 		.4byte	.LASF27
 2119 01c0 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 63


 2120 01c1 8B01     		.2byte	0x18b
 2121 01c3 00000000 		.4byte	.LFB8
 2122 01c7 4C000000 		.4byte	.LFE8-.LFB8
 2123 01cb 01       		.uleb128 0x1
 2124 01cc 9C       		.byte	0x9c
 2125 01cd F0010000 		.4byte	0x1f0
 2126 01d1 0B       		.uleb128 0xb
 2127 01d2 F7020000 		.4byte	.LASF28
 2128 01d6 01       		.byte	0x1
 2129 01d7 8B01     		.2byte	0x18b
 2130 01d9 77000000 		.4byte	0x77
 2131 01dd 02       		.uleb128 0x2
 2132 01de 91       		.byte	0x91
 2133 01df 64       		.sleb128 -28
 2134 01e0 0A       		.uleb128 0xa
 2135 01e1 E6040000 		.4byte	.LASF20
 2136 01e5 01       		.byte	0x1
 2137 01e6 8D01     		.2byte	0x18d
 2138 01e8 6B000000 		.4byte	0x6b
 2139 01ec 02       		.uleb128 0x2
 2140 01ed 91       		.byte	0x91
 2141 01ee 6F       		.sleb128 -17
 2142 01ef 00       		.byte	0
 2143 01f0 0C       		.uleb128 0xc
 2144 01f1 6E040000 		.4byte	.LASF29
 2145 01f5 01       		.byte	0x1
 2146 01f6 C101     		.2byte	0x1c1
 2147 01f8 00000000 		.4byte	.LFB9
 2148 01fc 1C000000 		.4byte	.LFE9-.LFB9
 2149 0200 01       		.uleb128 0x1
 2150 0201 9C       		.byte	0x9c
 2151 0202 16020000 		.4byte	0x216
 2152 0206 0B       		.uleb128 0xb
 2153 0207 4A020000 		.4byte	.LASF30
 2154 020b 01       		.byte	0x1
 2155 020c C101     		.2byte	0x1c1
 2156 020e 77000000 		.4byte	0x77
 2157 0212 02       		.uleb128 0x2
 2158 0213 91       		.byte	0x91
 2159 0214 74       		.sleb128 -12
 2160 0215 00       		.byte	0
 2161 0216 09       		.uleb128 0x9
 2162 0217 88000000 		.4byte	.LASF31
 2163 021b 01       		.byte	0x1
 2164 021c E501     		.2byte	0x1e5
 2165 021e 00000000 		.4byte	.LFB10
 2166 0222 48000000 		.4byte	.LFE10-.LFB10
 2167 0226 01       		.uleb128 0x1
 2168 0227 9C       		.byte	0x9c
 2169 0228 4B020000 		.4byte	0x24b
 2170 022c 0B       		.uleb128 0xb
 2171 022d 57030000 		.4byte	.LASF32
 2172 0231 01       		.byte	0x1
 2173 0232 E501     		.2byte	0x1e5
 2174 0234 77000000 		.4byte	0x77
 2175 0238 02       		.uleb128 0x2
 2176 0239 91       		.byte	0x91
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 64


 2177 023a 64       		.sleb128 -28
 2178 023b 0A       		.uleb128 0xa
 2179 023c E6040000 		.4byte	.LASF20
 2180 0240 01       		.byte	0x1
 2181 0241 E701     		.2byte	0x1e7
 2182 0243 6B000000 		.4byte	0x6b
 2183 0247 02       		.uleb128 0x2
 2184 0248 91       		.byte	0x91
 2185 0249 6F       		.sleb128 -17
 2186 024a 00       		.byte	0
 2187 024b 09       		.uleb128 0x9
 2188 024c 1D000000 		.4byte	.LASF33
 2189 0250 01       		.byte	0x1
 2190 0251 0702     		.2byte	0x207
 2191 0253 00000000 		.4byte	.LFB11
 2192 0257 48000000 		.4byte	.LFE11-.LFB11
 2193 025b 01       		.uleb128 0x1
 2194 025c 9C       		.byte	0x9c
 2195 025d 80020000 		.4byte	0x280
 2196 0261 0B       		.uleb128 0xb
 2197 0262 21040000 		.4byte	.LASF34
 2198 0266 01       		.byte	0x1
 2199 0267 0702     		.2byte	0x207
 2200 0269 77000000 		.4byte	0x77
 2201 026d 02       		.uleb128 0x2
 2202 026e 91       		.byte	0x91
 2203 026f 64       		.sleb128 -28
 2204 0270 0A       		.uleb128 0xa
 2205 0271 E6040000 		.4byte	.LASF20
 2206 0275 01       		.byte	0x1
 2207 0276 0902     		.2byte	0x209
 2208 0278 6B000000 		.4byte	0x6b
 2209 027c 02       		.uleb128 0x2
 2210 027d 91       		.byte	0x91
 2211 027e 6F       		.sleb128 -17
 2212 027f 00       		.byte	0
 2213 0280 09       		.uleb128 0x9
 2214 0281 53020000 		.4byte	.LASF35
 2215 0285 01       		.byte	0x1
 2216 0286 2802     		.2byte	0x228
 2217 0288 00000000 		.4byte	.LFB12
 2218 028c 4C000000 		.4byte	.LFE12-.LFB12
 2219 0290 01       		.uleb128 0x1
 2220 0291 9C       		.byte	0x9c
 2221 0292 B5020000 		.4byte	0x2b5
 2222 0296 0B       		.uleb128 0xb
 2223 0297 AE010000 		.4byte	.LASF36
 2224 029b 01       		.byte	0x1
 2225 029c 2802     		.2byte	0x228
 2226 029e 77000000 		.4byte	0x77
 2227 02a2 02       		.uleb128 0x2
 2228 02a3 91       		.byte	0x91
 2229 02a4 64       		.sleb128 -28
 2230 02a5 0A       		.uleb128 0xa
 2231 02a6 E6040000 		.4byte	.LASF20
 2232 02aa 01       		.byte	0x1
 2233 02ab 2A02     		.2byte	0x22a
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 65


 2234 02ad 6B000000 		.4byte	0x6b
 2235 02b1 02       		.uleb128 0x2
 2236 02b2 91       		.byte	0x91
 2237 02b3 6F       		.sleb128 -17
 2238 02b4 00       		.byte	0
 2239 02b5 09       		.uleb128 0x9
 2240 02b6 6D020000 		.4byte	.LASF37
 2241 02ba 01       		.byte	0x1
 2242 02bb 4902     		.2byte	0x249
 2243 02bd 00000000 		.4byte	.LFB13
 2244 02c1 48000000 		.4byte	.LFE13-.LFB13
 2245 02c5 01       		.uleb128 0x1
 2246 02c6 9C       		.byte	0x9c
 2247 02c7 EA020000 		.4byte	0x2ea
 2248 02cb 0B       		.uleb128 0xb
 2249 02cc A9010000 		.4byte	.LASF38
 2250 02d0 01       		.byte	0x1
 2251 02d1 4902     		.2byte	0x249
 2252 02d3 77000000 		.4byte	0x77
 2253 02d7 02       		.uleb128 0x2
 2254 02d8 91       		.byte	0x91
 2255 02d9 64       		.sleb128 -28
 2256 02da 0A       		.uleb128 0xa
 2257 02db E6040000 		.4byte	.LASF20
 2258 02df 01       		.byte	0x1
 2259 02e0 4B02     		.2byte	0x24b
 2260 02e2 6B000000 		.4byte	0x6b
 2261 02e6 02       		.uleb128 0x2
 2262 02e7 91       		.byte	0x91
 2263 02e8 6F       		.sleb128 -17
 2264 02e9 00       		.byte	0
 2265 02ea 0C       		.uleb128 0xc
 2266 02eb 7E010000 		.4byte	.LASF39
 2267 02ef 01       		.byte	0x1
 2268 02f0 6702     		.2byte	0x267
 2269 02f2 00000000 		.4byte	.LFB14
 2270 02f6 1C000000 		.4byte	.LFE14-.LFB14
 2271 02fa 01       		.uleb128 0x1
 2272 02fb 9C       		.byte	0x9c
 2273 02fc 10030000 		.4byte	0x310
 2274 0300 0B       		.uleb128 0xb
 2275 0301 00000000 		.4byte	.LASF40
 2276 0305 01       		.byte	0x1
 2277 0306 6702     		.2byte	0x267
 2278 0308 77000000 		.4byte	0x77
 2279 030c 02       		.uleb128 0x2
 2280 030d 91       		.byte	0x91
 2281 030e 74       		.sleb128 -12
 2282 030f 00       		.byte	0
 2283 0310 0D       		.uleb128 0xd
 2284 0311 06000000 		.4byte	.LASF45
 2285 0315 01       		.byte	0x1
 2286 0316 7B02     		.2byte	0x27b
 2287 0318 77000000 		.4byte	0x77
 2288 031c 00000000 		.4byte	.LFB15
 2289 0320 18000000 		.4byte	.LFE15-.LFB15
 2290 0324 01       		.uleb128 0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 66


 2291 0325 9C       		.byte	0x9c
 2292 0326 09       		.uleb128 0x9
 2293 0327 4A040000 		.4byte	.LASF41
 2294 032b 01       		.byte	0x1
 2295 032c 9802     		.2byte	0x298
 2296 032e 00000000 		.4byte	.LFB16
 2297 0332 48000000 		.4byte	.LFE16-.LFB16
 2298 0336 01       		.uleb128 0x1
 2299 0337 9C       		.byte	0x9c
 2300 0338 5B030000 		.4byte	0x35b
 2301 033c 0B       		.uleb128 0xb
 2302 033d AA040000 		.4byte	.LASF42
 2303 0341 01       		.byte	0x1
 2304 0342 9802     		.2byte	0x298
 2305 0344 77000000 		.4byte	0x77
 2306 0348 02       		.uleb128 0x2
 2307 0349 91       		.byte	0x91
 2308 034a 64       		.sleb128 -28
 2309 034b 0A       		.uleb128 0xa
 2310 034c E6040000 		.4byte	.LASF20
 2311 0350 01       		.byte	0x1
 2312 0351 9A02     		.2byte	0x29a
 2313 0353 6B000000 		.4byte	0x6b
 2314 0357 02       		.uleb128 0x2
 2315 0358 91       		.byte	0x91
 2316 0359 6F       		.sleb128 -17
 2317 035a 00       		.byte	0
 2318 035b 0C       		.uleb128 0xc
 2319 035c 21020000 		.4byte	.LASF43
 2320 0360 01       		.byte	0x1
 2321 0361 B502     		.2byte	0x2b5
 2322 0363 00000000 		.4byte	.LFB17
 2323 0367 1C000000 		.4byte	.LFE17-.LFB17
 2324 036b 01       		.uleb128 0x1
 2325 036c 9C       		.byte	0x9c
 2326 036d 81030000 		.4byte	0x381
 2327 0371 0B       		.uleb128 0xb
 2328 0372 A2000000 		.4byte	.LASF44
 2329 0376 01       		.byte	0x1
 2330 0377 B502     		.2byte	0x2b5
 2331 0379 77000000 		.4byte	0x77
 2332 037d 02       		.uleb128 0x2
 2333 037e 91       		.byte	0x91
 2334 037f 74       		.sleb128 -12
 2335 0380 00       		.byte	0
 2336 0381 0D       		.uleb128 0xd
 2337 0382 C7010000 		.4byte	.LASF46
 2338 0386 01       		.byte	0x1
 2339 0387 C902     		.2byte	0x2c9
 2340 0389 77000000 		.4byte	0x77
 2341 038d 00000000 		.4byte	.LFB18
 2342 0391 18000000 		.4byte	.LFE18-.LFB18
 2343 0395 01       		.uleb128 0x1
 2344 0396 9C       		.byte	0x9c
 2345 0397 09       		.uleb128 0x9
 2346 0398 15060000 		.4byte	.LASF47
 2347 039c 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 67


 2348 039d E302     		.2byte	0x2e3
 2349 039f 00000000 		.4byte	.LFB19
 2350 03a3 48000000 		.4byte	.LFE19-.LFB19
 2351 03a7 01       		.uleb128 0x1
 2352 03a8 9C       		.byte	0x9c
 2353 03a9 CC030000 		.4byte	0x3cc
 2354 03ad 0B       		.uleb128 0xb
 2355 03ae B6040000 		.4byte	.LASF48
 2356 03b2 01       		.byte	0x1
 2357 03b3 E302     		.2byte	0x2e3
 2358 03b5 77000000 		.4byte	0x77
 2359 03b9 02       		.uleb128 0x2
 2360 03ba 91       		.byte	0x91
 2361 03bb 64       		.sleb128 -28
 2362 03bc 0A       		.uleb128 0xa
 2363 03bd E6040000 		.4byte	.LASF20
 2364 03c1 01       		.byte	0x1
 2365 03c2 E502     		.2byte	0x2e5
 2366 03c4 6B000000 		.4byte	0x6b
 2367 03c8 02       		.uleb128 0x2
 2368 03c9 91       		.byte	0x91
 2369 03ca 6F       		.sleb128 -17
 2370 03cb 00       		.byte	0
 2371 03cc 0C       		.uleb128 0xc
 2372 03cd 1D030000 		.4byte	.LASF49
 2373 03d1 01       		.byte	0x1
 2374 03d2 FE02     		.2byte	0x2fe
 2375 03d4 00000000 		.4byte	.LFB20
 2376 03d8 1C000000 		.4byte	.LFE20-.LFB20
 2377 03dc 01       		.uleb128 0x1
 2378 03dd 9C       		.byte	0x9c
 2379 03de F2030000 		.4byte	0x3f2
 2380 03e2 0B       		.uleb128 0xb
 2381 03e3 2F060000 		.4byte	.LASF50
 2382 03e7 01       		.byte	0x1
 2383 03e8 FE02     		.2byte	0x2fe
 2384 03ea 77000000 		.4byte	0x77
 2385 03ee 02       		.uleb128 0x2
 2386 03ef 91       		.byte	0x91
 2387 03f0 74       		.sleb128 -12
 2388 03f1 00       		.byte	0
 2389 03f2 0D       		.uleb128 0xd
 2390 03f3 EA010000 		.4byte	.LASF51
 2391 03f7 01       		.byte	0x1
 2392 03f8 1203     		.2byte	0x312
 2393 03fa 77000000 		.4byte	0x77
 2394 03fe 00000000 		.4byte	.LFB21
 2395 0402 18000000 		.4byte	.LFE21-.LFB21
 2396 0406 01       		.uleb128 0x1
 2397 0407 9C       		.byte	0x9c
 2398 0408 09       		.uleb128 0x9
 2399 0409 DE020000 		.4byte	.LASF52
 2400 040d 01       		.byte	0x1
 2401 040e 2C03     		.2byte	0x32c
 2402 0410 00000000 		.4byte	.LFB22
 2403 0414 48000000 		.4byte	.LFE22-.LFB22
 2404 0418 01       		.uleb128 0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 68


 2405 0419 9C       		.byte	0x9c
 2406 041a 3D040000 		.4byte	0x43d
 2407 041e 0B       		.uleb128 0xb
 2408 041f B6040000 		.4byte	.LASF48
 2409 0423 01       		.byte	0x1
 2410 0424 2C03     		.2byte	0x32c
 2411 0426 77000000 		.4byte	0x77
 2412 042a 02       		.uleb128 0x2
 2413 042b 91       		.byte	0x91
 2414 042c 64       		.sleb128 -28
 2415 042d 0A       		.uleb128 0xa
 2416 042e E6040000 		.4byte	.LASF20
 2417 0432 01       		.byte	0x1
 2418 0433 2E03     		.2byte	0x32e
 2419 0435 6B000000 		.4byte	0x6b
 2420 0439 02       		.uleb128 0x2
 2421 043a 91       		.byte	0x91
 2422 043b 6F       		.sleb128 -17
 2423 043c 00       		.byte	0
 2424 043d 0C       		.uleb128 0xc
 2425 043e 05010000 		.4byte	.LASF53
 2426 0442 01       		.byte	0x1
 2427 0443 5103     		.2byte	0x351
 2428 0445 00000000 		.4byte	.LFB23
 2429 0449 1C000000 		.4byte	.LFE23-.LFB23
 2430 044d 01       		.uleb128 0x1
 2431 044e 9C       		.byte	0x9c
 2432 044f 63040000 		.4byte	0x463
 2433 0453 0B       		.uleb128 0xb
 2434 0454 79030000 		.4byte	.LASF54
 2435 0458 01       		.byte	0x1
 2436 0459 5103     		.2byte	0x351
 2437 045b 77000000 		.4byte	0x77
 2438 045f 02       		.uleb128 0x2
 2439 0460 91       		.byte	0x91
 2440 0461 74       		.sleb128 -12
 2441 0462 00       		.byte	0
 2442 0463 0D       		.uleb128 0xd
 2443 0464 1B050000 		.4byte	.LASF55
 2444 0468 01       		.byte	0x1
 2445 0469 8403     		.2byte	0x384
 2446 046b 77000000 		.4byte	0x77
 2447 046f 00000000 		.4byte	.LFB24
 2448 0473 18000000 		.4byte	.LFE24-.LFB24
 2449 0477 01       		.uleb128 0x1
 2450 0478 9C       		.byte	0x9c
 2451 0479 0C       		.uleb128 0xc
 2452 047a B5030000 		.4byte	.LASF56
 2453 047e 01       		.byte	0x1
 2454 047f BA03     		.2byte	0x3ba
 2455 0481 00000000 		.4byte	.LFB25
 2456 0485 1C000000 		.4byte	.LFE25-.LFB25
 2457 0489 01       		.uleb128 0x1
 2458 048a 9C       		.byte	0x9c
 2459 048b 9F040000 		.4byte	0x49f
 2460 048f 0B       		.uleb128 0xb
 2461 0490 C1040000 		.4byte	.LASF57
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 69


 2462 0494 01       		.byte	0x1
 2463 0495 BA03     		.2byte	0x3ba
 2464 0497 77000000 		.4byte	0x77
 2465 049b 02       		.uleb128 0x2
 2466 049c 91       		.byte	0x91
 2467 049d 74       		.sleb128 -12
 2468 049e 00       		.byte	0
 2469 049f 0D       		.uleb128 0xd
 2470 04a0 FB050000 		.4byte	.LASF58
 2471 04a4 01       		.byte	0x1
 2472 04a5 E803     		.2byte	0x3e8
 2473 04a7 77000000 		.4byte	0x77
 2474 04ab 00000000 		.4byte	.LFB26
 2475 04af 18000000 		.4byte	.LFE26-.LFB26
 2476 04b3 01       		.uleb128 0x1
 2477 04b4 9C       		.byte	0x9c
 2478 04b5 0D       		.uleb128 0xd
 2479 04b6 37030000 		.4byte	.LASF59
 2480 04ba 01       		.byte	0x1
 2481 04bb 1604     		.2byte	0x416
 2482 04bd 77000000 		.4byte	0x77
 2483 04c1 00000000 		.4byte	.LFB27
 2484 04c5 18000000 		.4byte	.LFE27-.LFB27
 2485 04c9 01       		.uleb128 0x1
 2486 04ca 9C       		.byte	0x9c
 2487 04cb 0D       		.uleb128 0xd
 2488 04cc D0030000 		.4byte	.LASF60
 2489 04d0 01       		.byte	0x1
 2490 04d1 2B04     		.2byte	0x42b
 2491 04d3 77000000 		.4byte	0x77
 2492 04d7 00000000 		.4byte	.LFB28
 2493 04db 18000000 		.4byte	.LFE28-.LFB28
 2494 04df 01       		.uleb128 0x1
 2495 04e0 9C       		.byte	0x9c
 2496 04e1 09       		.uleb128 0x9
 2497 04e2 CC040000 		.4byte	.LASF61
 2498 04e6 01       		.byte	0x1
 2499 04e7 4604     		.2byte	0x446
 2500 04e9 00000000 		.4byte	.LFB29
 2501 04ed 44000000 		.4byte	.LFE29-.LFB29
 2502 04f1 01       		.uleb128 0x1
 2503 04f2 9C       		.byte	0x9c
 2504 04f3 16050000 		.4byte	0x516
 2505 04f7 0B       		.uleb128 0xb
 2506 04f8 9D010000 		.4byte	.LASF62
 2507 04fc 01       		.byte	0x1
 2508 04fd 4604     		.2byte	0x446
 2509 04ff 77000000 		.4byte	0x77
 2510 0503 02       		.uleb128 0x2
 2511 0504 91       		.byte	0x91
 2512 0505 64       		.sleb128 -28
 2513 0506 0A       		.uleb128 0xa
 2514 0507 E6040000 		.4byte	.LASF20
 2515 050b 01       		.byte	0x1
 2516 050c 4804     		.2byte	0x448
 2517 050e 6B000000 		.4byte	0x6b
 2518 0512 02       		.uleb128 0x2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 70


 2519 0513 91       		.byte	0x91
 2520 0514 6F       		.sleb128 -17
 2521 0515 00       		.byte	0
 2522 0516 09       		.uleb128 0x9
 2523 0517 EA030000 		.4byte	.LASF63
 2524 051b 01       		.byte	0x1
 2525 051c 6704     		.2byte	0x467
 2526 051e 00000000 		.4byte	.LFB30
 2527 0522 44000000 		.4byte	.LFE30-.LFB30
 2528 0526 01       		.uleb128 0x1
 2529 0527 9C       		.byte	0x9c
 2530 0528 4B050000 		.4byte	0x54b
 2531 052c 0B       		.uleb128 0xb
 2532 052d 9D010000 		.4byte	.LASF62
 2533 0531 01       		.byte	0x1
 2534 0532 6704     		.2byte	0x467
 2535 0534 77000000 		.4byte	0x77
 2536 0538 02       		.uleb128 0x2
 2537 0539 91       		.byte	0x91
 2538 053a 64       		.sleb128 -28
 2539 053b 0A       		.uleb128 0xa
 2540 053c E6040000 		.4byte	.LASF20
 2541 0540 01       		.byte	0x1
 2542 0541 6904     		.2byte	0x469
 2543 0543 6B000000 		.4byte	0x6b
 2544 0547 02       		.uleb128 0x2
 2545 0548 91       		.byte	0x91
 2546 0549 6F       		.sleb128 -17
 2547 054a 00       		.byte	0
 2548 054b 09       		.uleb128 0x9
 2549 054c B0020000 		.4byte	.LASF64
 2550 0550 01       		.byte	0x1
 2551 0551 8804     		.2byte	0x488
 2552 0553 00000000 		.4byte	.LFB31
 2553 0557 48000000 		.4byte	.LFE31-.LFB31
 2554 055b 01       		.uleb128 0x1
 2555 055c 9C       		.byte	0x9c
 2556 055d 80050000 		.4byte	0x580
 2557 0561 0B       		.uleb128 0xb
 2558 0562 9D010000 		.4byte	.LASF62
 2559 0566 01       		.byte	0x1
 2560 0567 8804     		.2byte	0x488
 2561 0569 77000000 		.4byte	0x77
 2562 056d 02       		.uleb128 0x2
 2563 056e 91       		.byte	0x91
 2564 056f 64       		.sleb128 -28
 2565 0570 0A       		.uleb128 0xa
 2566 0571 E6040000 		.4byte	.LASF20
 2567 0575 01       		.byte	0x1
 2568 0576 8A04     		.2byte	0x48a
 2569 0578 6B000000 		.4byte	0x6b
 2570 057c 02       		.uleb128 0x2
 2571 057d 91       		.byte	0x91
 2572 057e 6F       		.sleb128 -17
 2573 057f 00       		.byte	0
 2574 0580 09       		.uleb128 0x9
 2575 0581 5A010000 		.4byte	.LASF65
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 71


 2576 0585 01       		.byte	0x1
 2577 0586 A804     		.2byte	0x4a8
 2578 0588 00000000 		.4byte	.LFB32
 2579 058c 44000000 		.4byte	.LFE32-.LFB32
 2580 0590 01       		.uleb128 0x1
 2581 0591 9C       		.byte	0x9c
 2582 0592 B5050000 		.4byte	0x5b5
 2583 0596 0B       		.uleb128 0xb
 2584 0597 9D010000 		.4byte	.LASF62
 2585 059b 01       		.byte	0x1
 2586 059c A804     		.2byte	0x4a8
 2587 059e 77000000 		.4byte	0x77
 2588 05a2 02       		.uleb128 0x2
 2589 05a3 91       		.byte	0x91
 2590 05a4 64       		.sleb128 -28
 2591 05a5 0A       		.uleb128 0xa
 2592 05a6 E6040000 		.4byte	.LASF20
 2593 05aa 01       		.byte	0x1
 2594 05ab AA04     		.2byte	0x4aa
 2595 05ad 6B000000 		.4byte	0x6b
 2596 05b1 02       		.uleb128 0x2
 2597 05b2 91       		.byte	0x91
 2598 05b3 6F       		.sleb128 -17
 2599 05b4 00       		.byte	0
 2600 05b5 09       		.uleb128 0x9
 2601 05b6 85020000 		.4byte	.LASF66
 2602 05ba 01       		.byte	0x1
 2603 05bb C904     		.2byte	0x4c9
 2604 05bd 00000000 		.4byte	.LFB33
 2605 05c1 44000000 		.4byte	.LFE33-.LFB33
 2606 05c5 01       		.uleb128 0x1
 2607 05c6 9C       		.byte	0x9c
 2608 05c7 EA050000 		.4byte	0x5ea
 2609 05cb 0B       		.uleb128 0xb
 2610 05cc 9D010000 		.4byte	.LASF62
 2611 05d0 01       		.byte	0x1
 2612 05d1 C904     		.2byte	0x4c9
 2613 05d3 77000000 		.4byte	0x77
 2614 05d7 02       		.uleb128 0x2
 2615 05d8 91       		.byte	0x91
 2616 05d9 64       		.sleb128 -28
 2617 05da 0A       		.uleb128 0xa
 2618 05db E6040000 		.4byte	.LASF20
 2619 05df 01       		.byte	0x1
 2620 05e0 CB04     		.2byte	0x4cb
 2621 05e2 6B000000 		.4byte	0x6b
 2622 05e6 02       		.uleb128 0x2
 2623 05e7 91       		.byte	0x91
 2624 05e8 6F       		.sleb128 -17
 2625 05e9 00       		.byte	0
 2626 05ea 09       		.uleb128 0x9
 2627 05eb 1D010000 		.4byte	.LASF67
 2628 05ef 01       		.byte	0x1
 2629 05f0 F104     		.2byte	0x4f1
 2630 05f2 00000000 		.4byte	.LFB34
 2631 05f6 38000000 		.4byte	.LFE34-.LFB34
 2632 05fa 01       		.uleb128 0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 72


 2633 05fb 9C       		.byte	0x9c
 2634 05fc 2E060000 		.4byte	0x62e
 2635 0600 0B       		.uleb128 0xb
 2636 0601 A9010000 		.4byte	.LASF38
 2637 0605 01       		.byte	0x1
 2638 0606 F104     		.2byte	0x4f1
 2639 0608 77000000 		.4byte	0x77
 2640 060c 02       		.uleb128 0x2
 2641 060d 91       		.byte	0x91
 2642 060e 64       		.sleb128 -28
 2643 060f 0B       		.uleb128 0xb
 2644 0610 03020000 		.4byte	.LASF68
 2645 0614 01       		.byte	0x1
 2646 0615 F104     		.2byte	0x4f1
 2647 0617 77000000 		.4byte	0x77
 2648 061b 02       		.uleb128 0x2
 2649 061c 91       		.byte	0x91
 2650 061d 60       		.sleb128 -32
 2651 061e 0A       		.uleb128 0xa
 2652 061f E6040000 		.4byte	.LASF20
 2653 0623 01       		.byte	0x1
 2654 0624 F304     		.2byte	0x4f3
 2655 0626 6B000000 		.4byte	0x6b
 2656 062a 02       		.uleb128 0x2
 2657 062b 91       		.byte	0x91
 2658 062c 6F       		.sleb128 -17
 2659 062d 00       		.byte	0
 2660 062e 0D       		.uleb128 0xd
 2661 062f C8020000 		.4byte	.LASF69
 2662 0633 01       		.byte	0x1
 2663 0634 0E05     		.2byte	0x50e
 2664 0636 77000000 		.4byte	0x77
 2665 063a 00000000 		.4byte	.LFB35
 2666 063e 20000000 		.4byte	.LFE35-.LFB35
 2667 0642 01       		.uleb128 0x1
 2668 0643 9C       		.byte	0x9c
 2669 0644 0C       		.uleb128 0xc
 2670 0645 99030000 		.4byte	.LASF70
 2671 0649 01       		.byte	0x1
 2672 064a 2705     		.2byte	0x527
 2673 064c 00000000 		.4byte	.LFB36
 2674 0650 18000000 		.4byte	.LFE36-.LFB36
 2675 0654 01       		.uleb128 0x1
 2676 0655 9C       		.byte	0x9c
 2677 0656 6A060000 		.4byte	0x66a
 2678 065a 0B       		.uleb128 0xb
 2679 065b 3C040000 		.4byte	.LASF71
 2680 065f 01       		.byte	0x1
 2681 0660 2705     		.2byte	0x527
 2682 0662 77000000 		.4byte	0x77
 2683 0666 02       		.uleb128 0x2
 2684 0667 91       		.byte	0x91
 2685 0668 74       		.sleb128 -12
 2686 0669 00       		.byte	0
 2687 066a 0D       		.uleb128 0xd
 2688 066b C7000000 		.4byte	.LASF72
 2689 066f 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 73


 2690 0670 3E05     		.2byte	0x53e
 2691 0672 77000000 		.4byte	0x77
 2692 0676 00000000 		.4byte	.LFB37
 2693 067a 14000000 		.4byte	.LFE37-.LFB37
 2694 067e 01       		.uleb128 0x1
 2695 067f 9C       		.byte	0x9c
 2696 0680 0D       		.uleb128 0xd
 2697 0681 6A000000 		.4byte	.LASF73
 2698 0685 01       		.byte	0x1
 2699 0686 5505     		.2byte	0x555
 2700 0688 77000000 		.4byte	0x77
 2701 068c 00000000 		.4byte	.LFB38
 2702 0690 14000000 		.4byte	.LFE38-.LFB38
 2703 0694 01       		.uleb128 0x1
 2704 0695 9C       		.byte	0x9c
 2705 0696 0C       		.uleb128 0xc
 2706 0697 40010000 		.4byte	.LASF74
 2707 069b 01       		.byte	0x1
 2708 069c 6C05     		.2byte	0x56c
 2709 069e 00000000 		.4byte	.LFB39
 2710 06a2 18000000 		.4byte	.LFE39-.LFB39
 2711 06a6 01       		.uleb128 0x1
 2712 06a7 9C       		.byte	0x9c
 2713 06a8 BC060000 		.4byte	0x6bc
 2714 06ac 0B       		.uleb128 0xb
 2715 06ad 3C040000 		.4byte	.LASF71
 2716 06b1 01       		.byte	0x1
 2717 06b2 6C05     		.2byte	0x56c
 2718 06b4 77000000 		.4byte	0x77
 2719 06b8 02       		.uleb128 0x2
 2720 06b9 91       		.byte	0x91
 2721 06ba 74       		.sleb128 -12
 2722 06bb 00       		.byte	0
 2723 06bc 0C       		.uleb128 0xc
 2724 06bd 32050000 		.4byte	.LASF75
 2725 06c1 01       		.byte	0x1
 2726 06c2 8305     		.2byte	0x583
 2727 06c4 00000000 		.4byte	.LFB40
 2728 06c8 18000000 		.4byte	.LFE40-.LFB40
 2729 06cc 01       		.uleb128 0x1
 2730 06cd 9C       		.byte	0x9c
 2731 06ce E2060000 		.4byte	0x6e2
 2732 06d2 0B       		.uleb128 0xb
 2733 06d3 3C040000 		.4byte	.LASF71
 2734 06d7 01       		.byte	0x1
 2735 06d8 8305     		.2byte	0x583
 2736 06da 77000000 		.4byte	0x77
 2737 06de 02       		.uleb128 0x2
 2738 06df 91       		.byte	0x91
 2739 06e0 74       		.sleb128 -12
 2740 06e1 00       		.byte	0
 2741 06e2 0E       		.uleb128 0xe
 2742 06e3 66030000 		.4byte	.LASF79
 2743 06e7 01       		.byte	0x1
 2744 06e8 15       		.byte	0x15
 2745 06e9 6B000000 		.4byte	0x6b
 2746 06ed 05       		.uleb128 0x5
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 74


 2747 06ee 03       		.byte	0x3
 2748 06ef 00000000 		.4byte	PWM_CHARGE_initVar
 2749 06f3 00       		.byte	0
 2750              		.section	.debug_abbrev,"",%progbits
 2751              	.Ldebug_abbrev0:
 2752 0000 01       		.uleb128 0x1
 2753 0001 11       		.uleb128 0x11
 2754 0002 01       		.byte	0x1
 2755 0003 25       		.uleb128 0x25
 2756 0004 0E       		.uleb128 0xe
 2757 0005 13       		.uleb128 0x13
 2758 0006 0B       		.uleb128 0xb
 2759 0007 03       		.uleb128 0x3
 2760 0008 0E       		.uleb128 0xe
 2761 0009 1B       		.uleb128 0x1b
 2762 000a 0E       		.uleb128 0xe
 2763 000b 55       		.uleb128 0x55
 2764 000c 17       		.uleb128 0x17
 2765 000d 11       		.uleb128 0x11
 2766 000e 01       		.uleb128 0x1
 2767 000f 10       		.uleb128 0x10
 2768 0010 17       		.uleb128 0x17
 2769 0011 00       		.byte	0
 2770 0012 00       		.byte	0
 2771 0013 02       		.uleb128 0x2
 2772 0014 24       		.uleb128 0x24
 2773 0015 00       		.byte	0
 2774 0016 0B       		.uleb128 0xb
 2775 0017 0B       		.uleb128 0xb
 2776 0018 3E       		.uleb128 0x3e
 2777 0019 0B       		.uleb128 0xb
 2778 001a 03       		.uleb128 0x3
 2779 001b 0E       		.uleb128 0xe
 2780 001c 00       		.byte	0
 2781 001d 00       		.byte	0
 2782 001e 03       		.uleb128 0x3
 2783 001f 24       		.uleb128 0x24
 2784 0020 00       		.byte	0
 2785 0021 0B       		.uleb128 0xb
 2786 0022 0B       		.uleb128 0xb
 2787 0023 3E       		.uleb128 0x3e
 2788 0024 0B       		.uleb128 0xb
 2789 0025 03       		.uleb128 0x3
 2790 0026 08       		.uleb128 0x8
 2791 0027 00       		.byte	0
 2792 0028 00       		.byte	0
 2793 0029 04       		.uleb128 0x4
 2794 002a 16       		.uleb128 0x16
 2795 002b 00       		.byte	0
 2796 002c 03       		.uleb128 0x3
 2797 002d 0E       		.uleb128 0xe
 2798 002e 3A       		.uleb128 0x3a
 2799 002f 0B       		.uleb128 0xb
 2800 0030 3B       		.uleb128 0x3b
 2801 0031 05       		.uleb128 0x5
 2802 0032 49       		.uleb128 0x49
 2803 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 75


 2804 0034 00       		.byte	0
 2805 0035 00       		.byte	0
 2806 0036 05       		.uleb128 0x5
 2807 0037 35       		.uleb128 0x35
 2808 0038 00       		.byte	0
 2809 0039 49       		.uleb128 0x49
 2810 003a 13       		.uleb128 0x13
 2811 003b 00       		.byte	0
 2812 003c 00       		.byte	0
 2813 003d 06       		.uleb128 0x6
 2814 003e 2E       		.uleb128 0x2e
 2815 003f 00       		.byte	0
 2816 0040 3F       		.uleb128 0x3f
 2817 0041 19       		.uleb128 0x19
 2818 0042 03       		.uleb128 0x3
 2819 0043 0E       		.uleb128 0xe
 2820 0044 3A       		.uleb128 0x3a
 2821 0045 0B       		.uleb128 0xb
 2822 0046 3B       		.uleb128 0x3b
 2823 0047 0B       		.uleb128 0xb
 2824 0048 27       		.uleb128 0x27
 2825 0049 19       		.uleb128 0x19
 2826 004a 11       		.uleb128 0x11
 2827 004b 01       		.uleb128 0x1
 2828 004c 12       		.uleb128 0x12
 2829 004d 06       		.uleb128 0x6
 2830 004e 40       		.uleb128 0x40
 2831 004f 18       		.uleb128 0x18
 2832 0050 9642     		.uleb128 0x2116
 2833 0052 19       		.uleb128 0x19
 2834 0053 00       		.byte	0
 2835 0054 00       		.byte	0
 2836 0055 07       		.uleb128 0x7
 2837 0056 2E       		.uleb128 0x2e
 2838 0057 01       		.byte	0x1
 2839 0058 3F       		.uleb128 0x3f
 2840 0059 19       		.uleb128 0x19
 2841 005a 03       		.uleb128 0x3
 2842 005b 0E       		.uleb128 0xe
 2843 005c 3A       		.uleb128 0x3a
 2844 005d 0B       		.uleb128 0xb
 2845 005e 3B       		.uleb128 0x3b
 2846 005f 0B       		.uleb128 0xb
 2847 0060 27       		.uleb128 0x27
 2848 0061 19       		.uleb128 0x19
 2849 0062 11       		.uleb128 0x11
 2850 0063 01       		.uleb128 0x1
 2851 0064 12       		.uleb128 0x12
 2852 0065 06       		.uleb128 0x6
 2853 0066 40       		.uleb128 0x40
 2854 0067 18       		.uleb128 0x18
 2855 0068 9642     		.uleb128 0x2116
 2856 006a 19       		.uleb128 0x19
 2857 006b 01       		.uleb128 0x1
 2858 006c 13       		.uleb128 0x13
 2859 006d 00       		.byte	0
 2860 006e 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 76


 2861 006f 08       		.uleb128 0x8
 2862 0070 34       		.uleb128 0x34
 2863 0071 00       		.byte	0
 2864 0072 03       		.uleb128 0x3
 2865 0073 0E       		.uleb128 0xe
 2866 0074 3A       		.uleb128 0x3a
 2867 0075 0B       		.uleb128 0xb
 2868 0076 3B       		.uleb128 0x3b
 2869 0077 0B       		.uleb128 0xb
 2870 0078 49       		.uleb128 0x49
 2871 0079 13       		.uleb128 0x13
 2872 007a 02       		.uleb128 0x2
 2873 007b 18       		.uleb128 0x18
 2874 007c 00       		.byte	0
 2875 007d 00       		.byte	0
 2876 007e 09       		.uleb128 0x9
 2877 007f 2E       		.uleb128 0x2e
 2878 0080 01       		.byte	0x1
 2879 0081 3F       		.uleb128 0x3f
 2880 0082 19       		.uleb128 0x19
 2881 0083 03       		.uleb128 0x3
 2882 0084 0E       		.uleb128 0xe
 2883 0085 3A       		.uleb128 0x3a
 2884 0086 0B       		.uleb128 0xb
 2885 0087 3B       		.uleb128 0x3b
 2886 0088 05       		.uleb128 0x5
 2887 0089 27       		.uleb128 0x27
 2888 008a 19       		.uleb128 0x19
 2889 008b 11       		.uleb128 0x11
 2890 008c 01       		.uleb128 0x1
 2891 008d 12       		.uleb128 0x12
 2892 008e 06       		.uleb128 0x6
 2893 008f 40       		.uleb128 0x40
 2894 0090 18       		.uleb128 0x18
 2895 0091 9642     		.uleb128 0x2116
 2896 0093 19       		.uleb128 0x19
 2897 0094 01       		.uleb128 0x1
 2898 0095 13       		.uleb128 0x13
 2899 0096 00       		.byte	0
 2900 0097 00       		.byte	0
 2901 0098 0A       		.uleb128 0xa
 2902 0099 34       		.uleb128 0x34
 2903 009a 00       		.byte	0
 2904 009b 03       		.uleb128 0x3
 2905 009c 0E       		.uleb128 0xe
 2906 009d 3A       		.uleb128 0x3a
 2907 009e 0B       		.uleb128 0xb
 2908 009f 3B       		.uleb128 0x3b
 2909 00a0 05       		.uleb128 0x5
 2910 00a1 49       		.uleb128 0x49
 2911 00a2 13       		.uleb128 0x13
 2912 00a3 02       		.uleb128 0x2
 2913 00a4 18       		.uleb128 0x18
 2914 00a5 00       		.byte	0
 2915 00a6 00       		.byte	0
 2916 00a7 0B       		.uleb128 0xb
 2917 00a8 05       		.uleb128 0x5
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 77


 2918 00a9 00       		.byte	0
 2919 00aa 03       		.uleb128 0x3
 2920 00ab 0E       		.uleb128 0xe
 2921 00ac 3A       		.uleb128 0x3a
 2922 00ad 0B       		.uleb128 0xb
 2923 00ae 3B       		.uleb128 0x3b
 2924 00af 05       		.uleb128 0x5
 2925 00b0 49       		.uleb128 0x49
 2926 00b1 13       		.uleb128 0x13
 2927 00b2 02       		.uleb128 0x2
 2928 00b3 18       		.uleb128 0x18
 2929 00b4 00       		.byte	0
 2930 00b5 00       		.byte	0
 2931 00b6 0C       		.uleb128 0xc
 2932 00b7 2E       		.uleb128 0x2e
 2933 00b8 01       		.byte	0x1
 2934 00b9 3F       		.uleb128 0x3f
 2935 00ba 19       		.uleb128 0x19
 2936 00bb 03       		.uleb128 0x3
 2937 00bc 0E       		.uleb128 0xe
 2938 00bd 3A       		.uleb128 0x3a
 2939 00be 0B       		.uleb128 0xb
 2940 00bf 3B       		.uleb128 0x3b
 2941 00c0 05       		.uleb128 0x5
 2942 00c1 27       		.uleb128 0x27
 2943 00c2 19       		.uleb128 0x19
 2944 00c3 11       		.uleb128 0x11
 2945 00c4 01       		.uleb128 0x1
 2946 00c5 12       		.uleb128 0x12
 2947 00c6 06       		.uleb128 0x6
 2948 00c7 40       		.uleb128 0x40
 2949 00c8 18       		.uleb128 0x18
 2950 00c9 9742     		.uleb128 0x2117
 2951 00cb 19       		.uleb128 0x19
 2952 00cc 01       		.uleb128 0x1
 2953 00cd 13       		.uleb128 0x13
 2954 00ce 00       		.byte	0
 2955 00cf 00       		.byte	0
 2956 00d0 0D       		.uleb128 0xd
 2957 00d1 2E       		.uleb128 0x2e
 2958 00d2 00       		.byte	0
 2959 00d3 3F       		.uleb128 0x3f
 2960 00d4 19       		.uleb128 0x19
 2961 00d5 03       		.uleb128 0x3
 2962 00d6 0E       		.uleb128 0xe
 2963 00d7 3A       		.uleb128 0x3a
 2964 00d8 0B       		.uleb128 0xb
 2965 00d9 3B       		.uleb128 0x3b
 2966 00da 05       		.uleb128 0x5
 2967 00db 27       		.uleb128 0x27
 2968 00dc 19       		.uleb128 0x19
 2969 00dd 49       		.uleb128 0x49
 2970 00de 13       		.uleb128 0x13
 2971 00df 11       		.uleb128 0x11
 2972 00e0 01       		.uleb128 0x1
 2973 00e1 12       		.uleb128 0x12
 2974 00e2 06       		.uleb128 0x6
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 78


 2975 00e3 40       		.uleb128 0x40
 2976 00e4 18       		.uleb128 0x18
 2977 00e5 9742     		.uleb128 0x2117
 2978 00e7 19       		.uleb128 0x19
 2979 00e8 00       		.byte	0
 2980 00e9 00       		.byte	0
 2981 00ea 0E       		.uleb128 0xe
 2982 00eb 34       		.uleb128 0x34
 2983 00ec 00       		.byte	0
 2984 00ed 03       		.uleb128 0x3
 2985 00ee 0E       		.uleb128 0xe
 2986 00ef 3A       		.uleb128 0x3a
 2987 00f0 0B       		.uleb128 0xb
 2988 00f1 3B       		.uleb128 0x3b
 2989 00f2 0B       		.uleb128 0xb
 2990 00f3 49       		.uleb128 0x49
 2991 00f4 13       		.uleb128 0x13
 2992 00f5 3F       		.uleb128 0x3f
 2993 00f6 19       		.uleb128 0x19
 2994 00f7 02       		.uleb128 0x2
 2995 00f8 18       		.uleb128 0x18
 2996 00f9 00       		.byte	0
 2997 00fa 00       		.byte	0
 2998 00fb 00       		.byte	0
 2999              		.section	.debug_aranges,"",%progbits
 3000 0000 54010000 		.4byte	0x154
 3001 0004 0200     		.2byte	0x2
 3002 0006 00000000 		.4byte	.Ldebug_info0
 3003 000a 04       		.byte	0x4
 3004 000b 00       		.byte	0
 3005 000c 0000     		.2byte	0
 3006 000e 0000     		.2byte	0
 3007 0010 00000000 		.4byte	.LFB1
 3008 0014 50000000 		.4byte	.LFE1-.LFB1
 3009 0018 00000000 		.4byte	.LFB2
 3010 001c 38000000 		.4byte	.LFE2-.LFB2
 3011 0020 00000000 		.4byte	.LFB3
 3012 0024 24000000 		.4byte	.LFE3-.LFB3
 3013 0028 00000000 		.4byte	.LFB4
 3014 002c 30000000 		.4byte	.LFE4-.LFB4
 3015 0030 00000000 		.4byte	.LFB5
 3016 0034 48000000 		.4byte	.LFE5-.LFB5
 3017 0038 00000000 		.4byte	.LFB6
 3018 003c 48000000 		.4byte	.LFE6-.LFB6
 3019 0040 00000000 		.4byte	.LFB7
 3020 0044 48000000 		.4byte	.LFE7-.LFB7
 3021 0048 00000000 		.4byte	.LFB8
 3022 004c 4C000000 		.4byte	.LFE8-.LFB8
 3023 0050 00000000 		.4byte	.LFB9
 3024 0054 1C000000 		.4byte	.LFE9-.LFB9
 3025 0058 00000000 		.4byte	.LFB10
 3026 005c 48000000 		.4byte	.LFE10-.LFB10
 3027 0060 00000000 		.4byte	.LFB11
 3028 0064 48000000 		.4byte	.LFE11-.LFB11
 3029 0068 00000000 		.4byte	.LFB12
 3030 006c 4C000000 		.4byte	.LFE12-.LFB12
 3031 0070 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 79


 3032 0074 48000000 		.4byte	.LFE13-.LFB13
 3033 0078 00000000 		.4byte	.LFB14
 3034 007c 1C000000 		.4byte	.LFE14-.LFB14
 3035 0080 00000000 		.4byte	.LFB15
 3036 0084 18000000 		.4byte	.LFE15-.LFB15
 3037 0088 00000000 		.4byte	.LFB16
 3038 008c 48000000 		.4byte	.LFE16-.LFB16
 3039 0090 00000000 		.4byte	.LFB17
 3040 0094 1C000000 		.4byte	.LFE17-.LFB17
 3041 0098 00000000 		.4byte	.LFB18
 3042 009c 18000000 		.4byte	.LFE18-.LFB18
 3043 00a0 00000000 		.4byte	.LFB19
 3044 00a4 48000000 		.4byte	.LFE19-.LFB19
 3045 00a8 00000000 		.4byte	.LFB20
 3046 00ac 1C000000 		.4byte	.LFE20-.LFB20
 3047 00b0 00000000 		.4byte	.LFB21
 3048 00b4 18000000 		.4byte	.LFE21-.LFB21
 3049 00b8 00000000 		.4byte	.LFB22
 3050 00bc 48000000 		.4byte	.LFE22-.LFB22
 3051 00c0 00000000 		.4byte	.LFB23
 3052 00c4 1C000000 		.4byte	.LFE23-.LFB23
 3053 00c8 00000000 		.4byte	.LFB24
 3054 00cc 18000000 		.4byte	.LFE24-.LFB24
 3055 00d0 00000000 		.4byte	.LFB25
 3056 00d4 1C000000 		.4byte	.LFE25-.LFB25
 3057 00d8 00000000 		.4byte	.LFB26
 3058 00dc 18000000 		.4byte	.LFE26-.LFB26
 3059 00e0 00000000 		.4byte	.LFB27
 3060 00e4 18000000 		.4byte	.LFE27-.LFB27
 3061 00e8 00000000 		.4byte	.LFB28
 3062 00ec 18000000 		.4byte	.LFE28-.LFB28
 3063 00f0 00000000 		.4byte	.LFB29
 3064 00f4 44000000 		.4byte	.LFE29-.LFB29
 3065 00f8 00000000 		.4byte	.LFB30
 3066 00fc 44000000 		.4byte	.LFE30-.LFB30
 3067 0100 00000000 		.4byte	.LFB31
 3068 0104 48000000 		.4byte	.LFE31-.LFB31
 3069 0108 00000000 		.4byte	.LFB32
 3070 010c 44000000 		.4byte	.LFE32-.LFB32
 3071 0110 00000000 		.4byte	.LFB33
 3072 0114 44000000 		.4byte	.LFE33-.LFB33
 3073 0118 00000000 		.4byte	.LFB34
 3074 011c 38000000 		.4byte	.LFE34-.LFB34
 3075 0120 00000000 		.4byte	.LFB35
 3076 0124 20000000 		.4byte	.LFE35-.LFB35
 3077 0128 00000000 		.4byte	.LFB36
 3078 012c 18000000 		.4byte	.LFE36-.LFB36
 3079 0130 00000000 		.4byte	.LFB37
 3080 0134 14000000 		.4byte	.LFE37-.LFB37
 3081 0138 00000000 		.4byte	.LFB38
 3082 013c 14000000 		.4byte	.LFE38-.LFB38
 3083 0140 00000000 		.4byte	.LFB39
 3084 0144 18000000 		.4byte	.LFE39-.LFB39
 3085 0148 00000000 		.4byte	.LFB40
 3086 014c 18000000 		.4byte	.LFE40-.LFB40
 3087 0150 00000000 		.4byte	0
 3088 0154 00000000 		.4byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 80


 3089              		.section	.debug_ranges,"",%progbits
 3090              	.Ldebug_ranges0:
 3091 0000 00000000 		.4byte	.LFB1
 3092 0004 50000000 		.4byte	.LFE1
 3093 0008 00000000 		.4byte	.LFB2
 3094 000c 38000000 		.4byte	.LFE2
 3095 0010 00000000 		.4byte	.LFB3
 3096 0014 24000000 		.4byte	.LFE3
 3097 0018 00000000 		.4byte	.LFB4
 3098 001c 30000000 		.4byte	.LFE4
 3099 0020 00000000 		.4byte	.LFB5
 3100 0024 48000000 		.4byte	.LFE5
 3101 0028 00000000 		.4byte	.LFB6
 3102 002c 48000000 		.4byte	.LFE6
 3103 0030 00000000 		.4byte	.LFB7
 3104 0034 48000000 		.4byte	.LFE7
 3105 0038 00000000 		.4byte	.LFB8
 3106 003c 4C000000 		.4byte	.LFE8
 3107 0040 00000000 		.4byte	.LFB9
 3108 0044 1C000000 		.4byte	.LFE9
 3109 0048 00000000 		.4byte	.LFB10
 3110 004c 48000000 		.4byte	.LFE10
 3111 0050 00000000 		.4byte	.LFB11
 3112 0054 48000000 		.4byte	.LFE11
 3113 0058 00000000 		.4byte	.LFB12
 3114 005c 4C000000 		.4byte	.LFE12
 3115 0060 00000000 		.4byte	.LFB13
 3116 0064 48000000 		.4byte	.LFE13
 3117 0068 00000000 		.4byte	.LFB14
 3118 006c 1C000000 		.4byte	.LFE14
 3119 0070 00000000 		.4byte	.LFB15
 3120 0074 18000000 		.4byte	.LFE15
 3121 0078 00000000 		.4byte	.LFB16
 3122 007c 48000000 		.4byte	.LFE16
 3123 0080 00000000 		.4byte	.LFB17
 3124 0084 1C000000 		.4byte	.LFE17
 3125 0088 00000000 		.4byte	.LFB18
 3126 008c 18000000 		.4byte	.LFE18
 3127 0090 00000000 		.4byte	.LFB19
 3128 0094 48000000 		.4byte	.LFE19
 3129 0098 00000000 		.4byte	.LFB20
 3130 009c 1C000000 		.4byte	.LFE20
 3131 00a0 00000000 		.4byte	.LFB21
 3132 00a4 18000000 		.4byte	.LFE21
 3133 00a8 00000000 		.4byte	.LFB22
 3134 00ac 48000000 		.4byte	.LFE22
 3135 00b0 00000000 		.4byte	.LFB23
 3136 00b4 1C000000 		.4byte	.LFE23
 3137 00b8 00000000 		.4byte	.LFB24
 3138 00bc 18000000 		.4byte	.LFE24
 3139 00c0 00000000 		.4byte	.LFB25
 3140 00c4 1C000000 		.4byte	.LFE25
 3141 00c8 00000000 		.4byte	.LFB26
 3142 00cc 18000000 		.4byte	.LFE26
 3143 00d0 00000000 		.4byte	.LFB27
 3144 00d4 18000000 		.4byte	.LFE27
 3145 00d8 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 81


 3146 00dc 18000000 		.4byte	.LFE28
 3147 00e0 00000000 		.4byte	.LFB29
 3148 00e4 44000000 		.4byte	.LFE29
 3149 00e8 00000000 		.4byte	.LFB30
 3150 00ec 44000000 		.4byte	.LFE30
 3151 00f0 00000000 		.4byte	.LFB31
 3152 00f4 48000000 		.4byte	.LFE31
 3153 00f8 00000000 		.4byte	.LFB32
 3154 00fc 44000000 		.4byte	.LFE32
 3155 0100 00000000 		.4byte	.LFB33
 3156 0104 44000000 		.4byte	.LFE33
 3157 0108 00000000 		.4byte	.LFB34
 3158 010c 38000000 		.4byte	.LFE34
 3159 0110 00000000 		.4byte	.LFB35
 3160 0114 20000000 		.4byte	.LFE35
 3161 0118 00000000 		.4byte	.LFB36
 3162 011c 18000000 		.4byte	.LFE36
 3163 0120 00000000 		.4byte	.LFB37
 3164 0124 14000000 		.4byte	.LFE37
 3165 0128 00000000 		.4byte	.LFB38
 3166 012c 14000000 		.4byte	.LFE38
 3167 0130 00000000 		.4byte	.LFB39
 3168 0134 18000000 		.4byte	.LFE39
 3169 0138 00000000 		.4byte	.LFB40
 3170 013c 18000000 		.4byte	.LFE40
 3171 0140 00000000 		.4byte	0
 3172 0144 00000000 		.4byte	0
 3173              		.section	.debug_line,"",%progbits
 3174              	.Ldebug_line0:
 3175 0000 74030000 		.section	.debug_str,"MS",%progbits,1
 3175      02004700 
 3175      00000201 
 3175      FB0E0D00 
 3175      01010101 
 3176              	.LASF40:
 3177 0000 636F756E 		.ascii	"count\000"
 3177      7400
 3178              	.LASF45:
 3179 0006 50574D5F 		.ascii	"PWM_CHARGE_ReadCounter\000"
 3179      43484152 
 3179      47455F52 
 3179      65616443 
 3179      6F756E74 
 3180              	.LASF33:
 3181 001d 50574D5F 		.ascii	"PWM_CHARGE_SetPWMStopOnKill\000"
 3181      43484152 
 3181      47455F53 
 3181      65745057 
 3181      4D53746F 
 3182              	.LASF78:
 3183 0039 433A5C70 		.ascii	"C:\\psoc\\chamonix\\camera\\Workspace01\\camera.cyd"
 3183      736F635C 
 3183      6368616D 
 3183      6F6E6978 
 3183      5C63616D 
 3184 0067 736E00   		.ascii	"sn\000"
 3185              	.LASF73:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 82


 3186 006a 50574D5F 		.ascii	"PWM_CHARGE_GetInterruptSource\000"
 3186      43484152 
 3186      47455F47 
 3186      6574496E 
 3186      74657272 
 3187              	.LASF31:
 3188 0088 50574D5F 		.ascii	"PWM_CHARGE_SetPWMSyncKill\000"
 3188      43484152 
 3188      47455F53 
 3188      65745057 
 3188      4D53796E 
 3189              	.LASF44:
 3190 00a2 70657269 		.ascii	"period\000"
 3190      6F6400
 3191              	.LASF7:
 3192 00a9 6C6F6E67 		.ascii	"long long unsigned int\000"
 3192      206C6F6E 
 3192      6720756E 
 3192      7369676E 
 3192      65642069 
 3193              	.LASF24:
 3194 00c0 71644D6F 		.ascii	"qdMode\000"
 3194      646500
 3195              	.LASF72:
 3196 00c7 50574D5F 		.ascii	"PWM_CHARGE_GetInterruptSourceMasked\000"
 3196      43484152 
 3196      47455F47 
 3196      6574496E 
 3196      74657272 
 3197              	.LASF6:
 3198 00eb 6C6F6E67 		.ascii	"long long int\000"
 3198      206C6F6E 
 3198      6720696E 
 3198      7400
 3199              	.LASF0:
 3200 00f9 7369676E 		.ascii	"signed char\000"
 3200      65642063 
 3200      68617200 
 3201              	.LASF53:
 3202 0105 50574D5F 		.ascii	"PWM_CHARGE_WriteCompare\000"
 3202      43484152 
 3202      47455F57 
 3202      72697465 
 3202      436F6D70 
 3203              	.LASF67:
 3204 011d 50574D5F 		.ascii	"PWM_CHARGE_TriggerCommand\000"
 3204      43484152 
 3204      47455F54 
 3204      72696767 
 3204      6572436F 
 3205              	.LASF4:
 3206 0137 6C6F6E67 		.ascii	"long int\000"
 3206      20696E74 
 3206      00
 3207              	.LASF74:
 3208 0140 50574D5F 		.ascii	"PWM_CHARGE_ClearInterrupt\000"
 3208      43484152 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 83


 3208      47455F43 
 3208      6C656172 
 3208      496E7465 
 3209              	.LASF65:
 3210 015a 50574D5F 		.ascii	"PWM_CHARGE_SetStopMode\000"
 3210      43484152 
 3210      47455F53 
 3210      65745374 
 3210      6F704D6F 
 3211              	.LASF9:
 3212 0171 75696E74 		.ascii	"uint8\000"
 3212      3800
 3213              	.LASF12:
 3214 0177 646F7562 		.ascii	"double\000"
 3214      6C6500
 3215              	.LASF39:
 3216 017e 50574D5F 		.ascii	"PWM_CHARGE_WriteCounter\000"
 3216      43484152 
 3216      47455F57 
 3216      72697465 
 3216      436F756E 
 3217              	.LASF10:
 3218 0196 75696E74 		.ascii	"uint32\000"
 3218      333200
 3219              	.LASF62:
 3220 019d 74726967 		.ascii	"triggerMode\000"
 3220      6765724D 
 3220      6F646500 
 3221              	.LASF38:
 3222 01a9 6D61736B 		.ascii	"mask\000"
 3222      00
 3223              	.LASF36:
 3224 01ae 64656164 		.ascii	"deadTime\000"
 3224      54696D65 
 3224      00
 3225              	.LASF16:
 3226 01b7 50574D5F 		.ascii	"PWM_CHARGE_Init\000"
 3226      43484152 
 3226      47455F49 
 3226      6E697400 
 3227              	.LASF46:
 3228 01c7 50574D5F 		.ascii	"PWM_CHARGE_ReadPeriod\000"
 3228      43484152 
 3228      47455F52 
 3228      65616450 
 3228      6572696F 
 3229              	.LASF8:
 3230 01dd 756E7369 		.ascii	"unsigned int\000"
 3230      676E6564 
 3230      20696E74 
 3230      00
 3231              	.LASF51:
 3232 01ea 50574D5F 		.ascii	"PWM_CHARGE_ReadPeriodBuf\000"
 3232      43484152 
 3232      47455F52 
 3232      65616450 
 3232      6572696F 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 84


 3233              	.LASF68:
 3234 0203 636F6D6D 		.ascii	"command\000"
 3234      616E6400 
 3235              	.LASF27:
 3236 020b 50574D5F 		.ascii	"PWM_CHARGE_SetOneShot\000"
 3236      43484152 
 3236      47455F53 
 3236      65744F6E 
 3236      6553686F 
 3237              	.LASF43:
 3238 0221 50574D5F 		.ascii	"PWM_CHARGE_WritePeriod\000"
 3238      43484152 
 3238      47455F57 
 3238      72697465 
 3238      50657269 
 3239              	.LASF5:
 3240 0238 6C6F6E67 		.ascii	"long unsigned int\000"
 3240      20756E73 
 3240      69676E65 
 3240      6420696E 
 3240      7400
 3241              	.LASF30:
 3242 024a 6D6F6465 		.ascii	"modeMask\000"
 3242      4D61736B 
 3242      00
 3243              	.LASF35:
 3244 0253 50574D5F 		.ascii	"PWM_CHARGE_SetPWMDeadTime\000"
 3244      43484152 
 3244      47455F53 
 3244      65745057 
 3244      4D446561 
 3245              	.LASF37:
 3246 026d 50574D5F 		.ascii	"PWM_CHARGE_SetPWMInvert\000"
 3246      43484152 
 3246      47455F53 
 3246      65745057 
 3246      4D496E76 
 3247              	.LASF66:
 3248 0285 50574D5F 		.ascii	"PWM_CHARGE_SetCountMode\000"
 3248      43484152 
 3248      47455F53 
 3248      6574436F 
 3248      756E744D 
 3249              	.LASF3:
 3250 029d 73686F72 		.ascii	"short unsigned int\000"
 3250      7420756E 
 3250      7369676E 
 3250      65642069 
 3250      6E7400
 3251              	.LASF64:
 3252 02b0 50574D5F 		.ascii	"PWM_CHARGE_SetStartMode\000"
 3252      43484152 
 3252      47455F53 
 3252      65745374 
 3252      6172744D 
 3253              	.LASF69:
 3254 02c8 50574D5F 		.ascii	"PWM_CHARGE_ReadStatus\000"
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 85


 3254      43484152 
 3254      47455F52 
 3254      65616453 
 3254      74617475 
 3255              	.LASF52:
 3256 02de 50574D5F 		.ascii	"PWM_CHARGE_SetPeriodSwap\000"
 3256      43484152 
 3256      47455F53 
 3256      65745065 
 3256      72696F64 
 3257              	.LASF28:
 3258 02f7 6F6E6553 		.ascii	"oneShotEnable\000"
 3258      686F7445 
 3258      6E61626C 
 3258      6500
 3259              	.LASF14:
 3260 0305 72656733 		.ascii	"reg32\000"
 3260      3200
 3261              	.LASF18:
 3262 030b 50574D5F 		.ascii	"PWM_CHARGE_Enable\000"
 3262      43484152 
 3262      47455F45 
 3262      6E61626C 
 3262      6500
 3263              	.LASF49:
 3264 031d 50574D5F 		.ascii	"PWM_CHARGE_WritePeriodBuf\000"
 3264      43484152 
 3264      47455F57 
 3264      72697465 
 3264      50657269 
 3265              	.LASF59:
 3266 0337 50574D5F 		.ascii	"PWM_CHARGE_ReadCapture\000"
 3266      43484152 
 3266      47455F52 
 3266      65616443 
 3266      61707475 
 3267              	.LASF15:
 3268 034e 73697A65 		.ascii	"sizetype\000"
 3268      74797065 
 3268      00
 3269              	.LASF32:
 3270 0357 73796E63 		.ascii	"syncKillEnable\000"
 3270      4B696C6C 
 3270      456E6162 
 3270      6C6500
 3271              	.LASF79:
 3272 0366 50574D5F 		.ascii	"PWM_CHARGE_initVar\000"
 3272      43484152 
 3272      47455F69 
 3272      6E697456 
 3272      617200
 3273              	.LASF54:
 3274 0379 636F6D70 		.ascii	"compare\000"
 3274      61726500 
 3275              	.LASF25:
 3276 0381 50574D5F 		.ascii	"PWM_CHARGE_SetPrescaler\000"
 3276      43484152 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 86


 3276      47455F53 
 3276      65745072 
 3276      65736361 
 3277              	.LASF70:
 3278 0399 50574D5F 		.ascii	"PWM_CHARGE_SetInterruptMode\000"
 3278      43484152 
 3278      47455F53 
 3278      6574496E 
 3278      74657272 
 3279              	.LASF56:
 3280 03b5 50574D5F 		.ascii	"PWM_CHARGE_WriteCompareBuf\000"
 3280      43484152 
 3280      47455F57 
 3280      72697465 
 3280      436F6D70 
 3281              	.LASF60:
 3282 03d0 50574D5F 		.ascii	"PWM_CHARGE_ReadCaptureBuf\000"
 3282      43484152 
 3282      47455F52 
 3282      65616443 
 3282      61707475 
 3283              	.LASF63:
 3284 03ea 50574D5F 		.ascii	"PWM_CHARGE_SetReloadMode\000"
 3284      43484152 
 3284      47455F53 
 3284      65745265 
 3284      6C6F6164 
 3285              	.LASF11:
 3286 0403 666C6F61 		.ascii	"float\000"
 3286      7400
 3287              	.LASF26:
 3288 0409 70726573 		.ascii	"prescaler\000"
 3288      63616C65 
 3288      7200
 3289              	.LASF1:
 3290 0413 756E7369 		.ascii	"unsigned char\000"
 3290      676E6564 
 3290      20636861 
 3290      7200
 3291              	.LASF34:
 3292 0421 73746F70 		.ascii	"stopOnKillEnable\000"
 3292      4F6E4B69 
 3292      6C6C456E 
 3292      61626C65 
 3292      00
 3293              	.LASF2:
 3294 0432 73686F72 		.ascii	"short int\000"
 3294      7420696E 
 3294      7400
 3295              	.LASF71:
 3296 043c 696E7465 		.ascii	"interruptMask\000"
 3296      72727570 
 3296      744D6173 
 3296      6B00
 3297              	.LASF41:
 3298 044a 50574D5F 		.ascii	"PWM_CHARGE_SetCounterMode\000"
 3298      43484152 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 87


 3298      47455F53 
 3298      6574436F 
 3298      756E7465 
 3299              	.LASF13:
 3300 0464 63686172 		.ascii	"char\000"
 3300      00
 3301              	.LASF23:
 3302 0469 6D6F6465 		.ascii	"mode\000"
 3302      00
 3303              	.LASF29:
 3304 046e 50574D5F 		.ascii	"PWM_CHARGE_SetPWMMode\000"
 3304      43484152 
 3304      47455F53 
 3304      65745057 
 3304      4D4D6F64 
 3305              	.LASF22:
 3306 0484 50574D5F 		.ascii	"PWM_CHARGE_SetQDMode\000"
 3306      43484152 
 3306      47455F53 
 3306      65745144 
 3306      4D6F6465 
 3307              	.LASF17:
 3308 0499 50574D5F 		.ascii	"PWM_CHARGE_Start\000"
 3308      43484152 
 3308      47455F53 
 3308      74617274 
 3308      00
 3309              	.LASF42:
 3310 04aa 636F756E 		.ascii	"counterMode\000"
 3310      7465724D 
 3310      6F646500 
 3311              	.LASF48:
 3312 04b6 73776170 		.ascii	"swapEnable\000"
 3312      456E6162 
 3312      6C6500
 3313              	.LASF57:
 3314 04c1 636F6D70 		.ascii	"compareBuf\000"
 3314      61726542 
 3314      756600
 3315              	.LASF61:
 3316 04cc 50574D5F 		.ascii	"PWM_CHARGE_SetCaptureMode\000"
 3316      43484152 
 3316      47455F53 
 3316      65744361 
 3316      70747572 
 3317              	.LASF20:
 3318 04e6 656E6162 		.ascii	"enableInterrupts\000"
 3318      6C65496E 
 3318      74657272 
 3318      75707473 
 3318      00
 3319              	.LASF77:
 3320 04f7 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_CHARGE.c\000"
 3320      72617465 
 3320      645F536F 
 3320      75726365 
 3320      5C50536F 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc4uj89D.s 			page 88


 3321              	.LASF55:
 3322 051b 50574D5F 		.ascii	"PWM_CHARGE_ReadCompare\000"
 3322      43484152 
 3322      47455F52 
 3322      65616443 
 3322      6F6D7061 
 3323              	.LASF75:
 3324 0532 50574D5F 		.ascii	"PWM_CHARGE_SetInterrupt\000"
 3324      43484152 
 3324      47455F53 
 3324      6574496E 
 3324      74657272 
 3325              	.LASF19:
 3326 054a 50574D5F 		.ascii	"PWM_CHARGE_Stop\000"
 3326      43484152 
 3326      47455F53 
 3326      746F7000 
 3327              	.LASF76:
 3328 055a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3328      4320342E 
 3328      392E3320 
 3328      32303135 
 3328      30333033 
 3329 058d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3329      20726576 
 3329      6973696F 
 3329      6E203232 
 3329      31323230 
 3330 05c0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3330      66756E63 
 3330      74696F6E 
 3330      2D736563 
 3330      74696F6E 
 3331              	.LASF21:
 3332 05e8 50574D5F 		.ascii	"PWM_CHARGE_SetMode\000"
 3332      43484152 
 3332      47455F53 
 3332      65744D6F 
 3332      646500
 3333              	.LASF58:
 3334 05fb 50574D5F 		.ascii	"PWM_CHARGE_ReadCompareBuf\000"
 3334      43484152 
 3334      47455F52 
 3334      65616443 
 3334      6F6D7061 
 3335              	.LASF47:
 3336 0615 50574D5F 		.ascii	"PWM_CHARGE_SetCompareSwap\000"
 3336      43484152 
 3336      47455F53 
 3336      6574436F 
 3336      6D706172 
 3337              	.LASF50:
 3338 062f 70657269 		.ascii	"periodBuf\000"
 3338      6F644275 
 3338      6600
 3339              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
