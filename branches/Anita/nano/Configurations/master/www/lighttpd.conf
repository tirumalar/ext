
server.document-root = "/home/www/"

$SERVER["socket"] == ":80" {
  $HTTP["host"] =~ "(.*)" {
      index-file.names = ("redirect.php")
   }
}

$SERVER["socket"] == ":443" {

        ssl.engine = "enable" 
#ssl.use-sslv2 = "disable"
#ssl.use-sslv3 = "disable"
    #ssl.use-compression = "disable" 
    ssl.disable-client-renegotiation = "enable" 

        ssl.honor-cipher-order = "enable" 

        # PCI DSS compliant cipher list July/2016 (TLS 1.0 disabled) *please remember to remove "\" char when copying 
#ssl.cipher-list = "TLSv1.2:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS"

 
    #ssl.ec-curve = "secp384r1" 

   
    ssl.pemfile = "/home/root/eyelock.pem" 

        setenv.add-response-header = (
        "Strict-Transport-Security" => "max-age=63072000; includeSubdomains; preload",
        "X-Frame-Options" => "DENY",
        "X-Content-Type-Options" => "nosniff" 
        )

}


# www group should be created on a device or the following 2 string should be commented out
server.username = "www"
server.groupname = "www"









setenv.add-response-header = ( "Access-Control-Allow-Origin" => "*" )
server.max-request-size = 67108864

index-file.names   = ( "index.php")

mimetype.assign = (
        ".html" => "text/html",
        ".txt" => "text/plain",
        ".jpg" => "image/jpeg",
        ".png" => "image/png",
        ".php" => "application/x-httpd-php",
        ".css" => "text/css"
        )

server.modules = (
"mod_setenv",
"mod_fastcgi",
"mod_cgi",
"mod_access",
"mod_accesslog",
"mod_rewrite",
"mod_auth",
"mod_redirect",
)

# for devices with read-only file-system there is no enough space in /var for FW
# moving upload directory for both read-only and not read-only devices to /home/tmp and emptying it in startup.sh
server.upload-dirs = ( "/home/tmp" )

$HTTP["scheme"] == "https" {
    setenv.add-response-header  = ( "X-Frame-Options" => "SAMEORIGIN",
									"X-XSS-Protection" =>"1; mode=block"
	)
	
}

fastcgi.server = ( ".php" => ((
		  "bin-path" => "/home/www/php_binary/php -c /home/www/php.ini",
		  "socket" => "/tmp/php.socket"
		  )))
