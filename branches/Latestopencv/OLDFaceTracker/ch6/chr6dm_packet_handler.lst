
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\chr6dm_packet_handler.o:     file format elf32-littlearm
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\chr6dm_packet_handler.o

Disassembly of section .text.PackageMatrixForTransmit:

00000000 <PackageMatrixForTransmit>:
PackageMatrixForTransmit():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1194
* Return         : None
* Description    : Takes the matrix pointed to by 'matrix' and copies the data
into the packet data section for transmission.
*******************************************************************************/
void PackageMatrixForTransmit( USARTPacket* packet, fmat3x3* matrix )
{
   0:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
   4:	2400      	movs	r4, #0
   6:	4680      	mov	r8, r0
   8:	460f      	mov	r7, r1
   a:	4626      	mov	r6, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1198
	 fConvert fToInt;
	 int i, j;
	 
	 for (i=0; i < 3; i++)
   c:	00a3      	lsls	r3, r4, #2
   e:	0122      	lsls	r2, r4, #4
  10:	1ad2      	subs	r2, r2, r3
  12:	eb08 0306 	add.w	r3, r8, r6
  16:	18bd      	adds	r5, r7, r2
  18:	1d18      	adds	r0, r3, #4
  1a:	f04f 0c00 	mov.w	ip, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1202
	 {
		  for (j=0; j < 3; j++)
		  {
				fToInt.float_val = matrix->data[i][j];
  1e:	f855 1b04 	ldr.w	r1, [r5], #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1200
	 fConvert fToInt;
	 int i, j;
	 
	 for (i=0; i < 3; i++)
	 {
		  for (j=0; j < 3; j++)
  22:	f10c 0c01 	add.w	ip, ip, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1203
		  {
				fToInt.float_val = matrix->data[i][j];
				packet->packet_data[4*(3*i+j)] = (fToInt.uint32_val >> 24) & 0x0FF;
  26:	0e0b      	lsrs	r3, r1, #24
  28:	7003      	strb	r3, [r0, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1204
				packet->packet_data[4*(3*i+j)+1] = (fToInt.uint32_val >> 16) & 0x0FF;
  2a:	0c0a      	lsrs	r2, r1, #16
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1205
				packet->packet_data[4*(3*i+j)+2] = (fToInt.uint32_val >> 8) & 0x0FF;
  2c:	0a0b      	lsrs	r3, r1, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1204
	 {
		  for (j=0; j < 3; j++)
		  {
				fToInt.float_val = matrix->data[i][j];
				packet->packet_data[4*(3*i+j)] = (fToInt.uint32_val >> 24) & 0x0FF;
				packet->packet_data[4*(3*i+j)+1] = (fToInt.uint32_val >> 16) & 0x0FF;
  2e:	7042      	strb	r2, [r0, #1]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1205
				packet->packet_data[4*(3*i+j)+2] = (fToInt.uint32_val >> 8) & 0x0FF;
  30:	7083      	strb	r3, [r0, #2]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1206
				packet->packet_data[4*(3*i+j)+3] = fToInt.uint32_val & 0x0FF;
  32:	70c1      	strb	r1, [r0, #3]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1200
	 fConvert fToInt;
	 int i, j;
	 
	 for (i=0; i < 3; i++)
	 {
		  for (j=0; j < 3; j++)
  34:	3004      	adds	r0, #4
  36:	f1bc 0f03 	cmp.w	ip, #3	; 0x3
  3a:	d1f0      	bne.n	1e <PackageMatrixForTransmit+0x1e>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1198
void PackageMatrixForTransmit( USARTPacket* packet, fmat3x3* matrix )
{
	 fConvert fToInt;
	 int i, j;
	 
	 for (i=0; i < 3; i++)
  3c:	3401      	adds	r4, #1
  3e:	360c      	adds	r6, #12
  40:	2c03      	cmp	r4, #3
  42:	d1e3      	bne.n	c <PackageMatrixForTransmit+0xc>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1209
				packet->packet_data[4*(3*i+j)+1] = (fToInt.uint32_val >> 16) & 0x0FF;
				packet->packet_data[4*(3*i+j)+2] = (fToInt.uint32_val >> 8) & 0x0FF;
				packet->packet_data[4*(3*i+j)+3] = fToInt.uint32_val & 0x0FF;
		  }
	 }	 
}
  44:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
  48:	4770      	bx	lr
  4a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.SendGyroScalePacket:

00000000 <SendGyroScalePacket>:
SendGyroScalePacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1154
* Output         : None
* Return         : None
* Description    : Sends a GYRO_SCALE_REPORT packet.
*******************************************************************************/
void SendGyroScalePacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1162
	 NewPacket.PT = GYRO_SCALE_REPORT;
	 NewPacket.length = 12;
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.z_gyro_scale;
   2:	f240 0100 	movw	r1, #0	; 0x0
   6:	f2c0 0100 	movt	r1, #0	; 0x0
   a:	6908      	ldr	r0, [r1, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1154
* Output         : None
* Return         : None
* Description    : Sends a GYRO_SCALE_REPORT packet.
*******************************************************************************/
void SendGyroScalePacket( )
{
   c:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1157
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = GYRO_SCALE_REPORT;
   e:	f06f 0346 	mvn.w	r3, #70	; 0x46
  12:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1158
	 NewPacket.length = 12;
  16:	220c      	movs	r2, #12
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1163
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.z_gyro_scale;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
  18:	0e03      	lsrs	r3, r0, #24
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1158
void SendGyroScalePacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = GYRO_SCALE_REPORT;
	 NewPacket.length = 12;
  1a:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1163
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.z_gyro_scale;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
  1e:	f88d 3008 	strb.w	r3, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1164
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
  22:	0c02      	lsrs	r2, r0, #16
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1165
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
  24:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1166
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
  26:	f88d 000b 	strb.w	r0, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1168
	 
	 fToInt.float_val = gConfig.y_gyro_scale;
  2a:	68c8      	ldr	r0, [r1, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1165
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.z_gyro_scale;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
  2c:	f88d 300a 	strb.w	r3, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1169
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 fToInt.float_val = gConfig.y_gyro_scale;
	 NewPacket.packet_data[4] = (fToInt.uint32_val >> 24) & 0x0FF;
  30:	0e03      	lsrs	r3, r0, #24
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1164
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.z_gyro_scale;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
  32:	f88d 2009 	strb.w	r2, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1169
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 fToInt.float_val = gConfig.y_gyro_scale;
	 NewPacket.packet_data[4] = (fToInt.uint32_val >> 24) & 0x0FF;
  36:	f88d 300c 	strb.w	r3, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1170
	 NewPacket.packet_data[5] = (fToInt.uint32_val >> 16) & 0x0FF;
  3a:	0c02      	lsrs	r2, r0, #16
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1171
	 NewPacket.packet_data[6] = (fToInt.uint32_val >> 8) & 0x0FF;
  3c:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1172
	 NewPacket.packet_data[7] = (fToInt.uint32_val) & 0x0FF;	
  3e:	f88d 000f 	strb.w	r0, [sp, #15]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1174
	 
	 fToInt.float_val = gConfig.x_gyro_scale;
  42:	6888      	ldr	r0, [r1, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1171
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 fToInt.float_val = gConfig.y_gyro_scale;
	 NewPacket.packet_data[4] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[5] = (fToInt.uint32_val >> 16) & 0x0FF;
	 NewPacket.packet_data[6] = (fToInt.uint32_val >> 8) & 0x0FF;
  44:	f88d 300e 	strb.w	r3, [sp, #14]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1180
	 NewPacket.packet_data[8] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[9] = (fToInt.uint32_val >> 16) & 0x0FF;
	 NewPacket.packet_data[10] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[11] = (fToInt.uint32_val) & 0x0FF;
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  48:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1175
	 NewPacket.packet_data[5] = (fToInt.uint32_val >> 16) & 0x0FF;
	 NewPacket.packet_data[6] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[7] = (fToInt.uint32_val) & 0x0FF;	
	 
	 fToInt.float_val = gConfig.x_gyro_scale;
	 NewPacket.packet_data[8] = (fToInt.uint32_val >> 24) & 0x0FF;
  4a:	0e03      	lsrs	r3, r0, #24
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1170
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 fToInt.float_val = gConfig.y_gyro_scale;
	 NewPacket.packet_data[4] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[5] = (fToInt.uint32_val >> 16) & 0x0FF;
  4c:	f88d 200d 	strb.w	r2, [sp, #13]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1175
	 NewPacket.packet_data[6] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[7] = (fToInt.uint32_val) & 0x0FF;	
	 
	 fToInt.float_val = gConfig.x_gyro_scale;
	 NewPacket.packet_data[8] = (fToInt.uint32_val >> 24) & 0x0FF;
  50:	f88d 3010 	strb.w	r3, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1176
	 NewPacket.packet_data[9] = (fToInt.uint32_val >> 16) & 0x0FF;
  54:	0c02      	lsrs	r2, r0, #16
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1177
	 NewPacket.packet_data[10] = (fToInt.uint32_val >> 8) & 0x0FF;
  56:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1178
	 NewPacket.packet_data[11] = (fToInt.uint32_val) & 0x0FF;
  58:	f88d 0013 	strb.w	r0, [sp, #19]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1180
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  5c:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1176
	 NewPacket.packet_data[6] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[7] = (fToInt.uint32_val) & 0x0FF;	
	 
	 fToInt.float_val = gConfig.x_gyro_scale;
	 NewPacket.packet_data[8] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[9] = (fToInt.uint32_val >> 16) & 0x0FF;
  5e:	f88d 2011 	strb.w	r2, [sp, #17]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1177
	 NewPacket.packet_data[10] = (fToInt.uint32_val >> 8) & 0x0FF;
  62:	f88d 3012 	strb.w	r3, [sp, #18]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1180
	 NewPacket.packet_data[11] = (fToInt.uint32_val) & 0x0FF;
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  66:	f7ff fffe 	bl	0 <ComputeChecksum>
  6a:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1182
	 
	 SendTXPacketSafe( &NewPacket );
  6e:	4620      	mov	r0, r4
  70:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1183
}
  74:	b00c      	add	sp, #48
  76:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendStartCalPacket:

00000000 <SendStartCalPacket>:
SendStartCalPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1133
* Output         : None
* Return         : None
* Description    : Sends a START_CAL_REPORT packet.
*******************************************************************************/
void SendStartCalPacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1136
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = START_CAL_REPORT;
   2:	f06f 0345 	mvn.w	r3, #69	; 0x45
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1133
* Output         : None
* Return         : None
* Description    : Sends a START_CAL_REPORT packet.
*******************************************************************************/
void SendStartCalPacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1136
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = START_CAL_REPORT;
   8:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1139
	 NewPacket.length = 1;
	 
	 NewPacket.packet_data[0] = gConfig.gyro_startup_calibration;
   c:	f240 0300 	movw	r3, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1137
void SendStartCalPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = START_CAL_REPORT;
	 NewPacket.length = 1;
  10:	2201      	movs	r2, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1139
	 
	 NewPacket.packet_data[0] = gConfig.gyro_startup_calibration;
  12:	f2c0 0300 	movt	r3, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1137
void SendStartCalPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = START_CAL_REPORT;
	 NewPacket.length = 1;
  16:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1141
	 
	 NewPacket.packet_data[0] = gConfig.gyro_startup_calibration;
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1a:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1139
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = START_CAL_REPORT;
	 NewPacket.length = 1;
	 
	 NewPacket.packet_data[0] = gConfig.gyro_startup_calibration;
  1c:	f893 20b7 	ldrb.w	r2, [r3, #183]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1141
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  20:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1139
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = START_CAL_REPORT;
	 NewPacket.length = 1;
	 
	 NewPacket.packet_data[0] = gConfig.gyro_startup_calibration;
  22:	f88d 2008 	strb.w	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1141
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  26:	f7ff fffe 	bl	0 <ComputeChecksum>
  2a:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1143
	 
	 SendTXPacketSafe( &NewPacket );
  2e:	4620      	mov	r0, r4
  30:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1144
}
  34:	b00c      	add	sp, #48
  36:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendEKFConfigPacket:

00000000 <SendEKFConfigPacket>:
SendEKFConfigPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1112
* Output         : None
* Return         : None
* Description    : Sends a EKF_CONFIG_REPORT packet.
*******************************************************************************/
void SendEKFConfigPacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1115
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = EKF_CONFIG_REPORT;
   2:	f06f 033d 	mvn.w	r3, #61	; 0x3d
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1112
* Output         : None
* Return         : None
* Description    : Sends a EKF_CONFIG_REPORT packet.
*******************************************************************************/
void SendEKFConfigPacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1115
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = EKF_CONFIG_REPORT;
   8:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1118
	 NewPacket.length = 1;
	 
	 NewPacket.packet_data[0] = gConfig.EKF_config;
   c:	f240 0300 	movw	r3, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1116
void SendEKFConfigPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = EKF_CONFIG_REPORT;
	 NewPacket.length = 1;
  10:	2201      	movs	r2, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1118
	 
	 NewPacket.packet_data[0] = gConfig.EKF_config;
  12:	f2c0 0300 	movt	r3, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1116
void SendEKFConfigPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = EKF_CONFIG_REPORT;
	 NewPacket.length = 1;
  16:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1120
	 
	 NewPacket.packet_data[0] = gConfig.EKF_config;
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1a:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1118
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = EKF_CONFIG_REPORT;
	 NewPacket.length = 1;
	 
	 NewPacket.packet_data[0] = gConfig.EKF_config;
  1c:	f893 2020 	ldrb.w	r2, [r3, #32]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1120
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  20:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1118
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = EKF_CONFIG_REPORT;
	 NewPacket.length = 1;
	 
	 NewPacket.packet_data[0] = gConfig.EKF_config;
  22:	f88d 2008 	strb.w	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1120
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  26:	f7ff fffe 	bl	0 <ComputeChecksum>
  2a:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1122
	 
	 SendTXPacketSafe( &NewPacket );
  2e:	4620      	mov	r0, r4
  30:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1123
}
  34:	b00c      	add	sp, #48
  36:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendAccelCovariancePacket:

00000000 <SendAccelCovariancePacket>:
SendAccelCovariancePacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1085
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_COVARIANCE_REPORT packet.
*******************************************************************************/
void SendAccelCovariancePacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1088
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_COVARIANCE_REPORT;
   2:	f06f 0341 	mvn.w	r3, #65	; 0x41
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1085
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_COVARIANCE_REPORT packet.
*******************************************************************************/
void SendAccelCovariancePacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1088
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_COVARIANCE_REPORT;
   8:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1093
	 NewPacket.length = 4;
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.accel_covariance;
   c:	f240 0300 	movw	r3, #0	; 0x0
  10:	f2c0 0300 	movt	r3, #0	; 0x0
  14:	6a99      	ldr	r1, [r3, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1089
void SendAccelCovariancePacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_COVARIANCE_REPORT;
	 NewPacket.length = 4;
  16:	2204      	movs	r2, #4
  18:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1099
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1c:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1094
	 NewPacket.length = 4;
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.accel_covariance;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
  1e:	0e0a      	lsrs	r2, r1, #24
  20:	f88d 2008 	strb.w	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1095
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
  24:	0c0b      	lsrs	r3, r1, #16
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1096
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
  26:	0a0a      	lsrs	r2, r1, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1099
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  28:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1095
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.accel_covariance;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
  2a:	f88d 3009 	strb.w	r3, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1096
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
  2e:	f88d 200a 	strb.w	r2, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1097
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
  32:	f88d 100b 	strb.w	r1, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1099
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  36:	f7ff fffe 	bl	0 <ComputeChecksum>
  3a:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1101
	 
	 SendTXPacketSafe( &NewPacket );
  3e:	4620      	mov	r0, r4
  40:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1102
}
  44:	b00c      	add	sp, #48
  46:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendMAGCovariancePacket:

00000000 <SendMAGCovariancePacket>:
SendMAGCovariancePacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1058
* Output         : None
* Return         : None
* Description    : Sends a MAG_COVARIANCE_REPORT packet.
*******************************************************************************/
void SendMAGCovariancePacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1061
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_COVARIANCE_REPORT;
   2:	f06f 0340 	mvn.w	r3, #64	; 0x40
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1058
* Output         : None
* Return         : None
* Description    : Sends a MAG_COVARIANCE_REPORT packet.
*******************************************************************************/
void SendMAGCovariancePacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1061
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_COVARIANCE_REPORT;
   8:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1066
	 NewPacket.length = 4;
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.mag_covariance;
   c:	f240 0300 	movw	r3, #0	; 0x0
  10:	f2c0 0300 	movt	r3, #0	; 0x0
  14:	6ad9      	ldr	r1, [r3, #44]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1062
void SendMAGCovariancePacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_COVARIANCE_REPORT;
	 NewPacket.length = 4;
  16:	2204      	movs	r2, #4
  18:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1072
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1c:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1067
	 NewPacket.length = 4;
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.mag_covariance;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
  1e:	0e0a      	lsrs	r2, r1, #24
  20:	f88d 2008 	strb.w	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1068
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
  24:	0c0b      	lsrs	r3, r1, #16
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1069
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
  26:	0a0a      	lsrs	r2, r1, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1072
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  28:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1068
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.mag_covariance;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
  2a:	f88d 3009 	strb.w	r3, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1069
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
  2e:	f88d 200a 	strb.w	r2, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1070
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
  32:	f88d 100b 	strb.w	r1, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1072
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  36:	f7ff fffe 	bl	0 <ComputeChecksum>
  3a:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1074
	 
	 SendTXPacketSafe( &NewPacket );
  3e:	4620      	mov	r0, r4
  40:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1075
}
  44:	b00c      	add	sp, #48
  46:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendProcessCovariancePacket:

00000000 <SendProcessCovariancePacket>:
SendProcessCovariancePacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1031
* Output         : None
* Return         : None
* Description    : Sends a PROCESS_COVARIANCE_REPORT packet.
*******************************************************************************/
void SendProcessCovariancePacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1034
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = PROCESS_COVARIANCE_REPORT;
   2:	f06f 033f 	mvn.w	r3, #63	; 0x3f
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1031
* Output         : None
* Return         : None
* Description    : Sends a PROCESS_COVARIANCE_REPORT packet.
*******************************************************************************/
void SendProcessCovariancePacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1034
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = PROCESS_COVARIANCE_REPORT;
   8:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1039
	 NewPacket.length = 4;
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.process_covariance;
   c:	f240 0300 	movw	r3, #0	; 0x0
  10:	f2c0 0300 	movt	r3, #0	; 0x0
  14:	6a59      	ldr	r1, [r3, #36]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1035
void SendProcessCovariancePacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = PROCESS_COVARIANCE_REPORT;
	 NewPacket.length = 4;
  16:	2204      	movs	r2, #4
  18:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1045
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1c:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1040
	 NewPacket.length = 4;
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.process_covariance;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
  1e:	0e0a      	lsrs	r2, r1, #24
  20:	f88d 2008 	strb.w	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1041
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
  24:	0c0b      	lsrs	r3, r1, #16
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1042
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
  26:	0a0a      	lsrs	r2, r1, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1045
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  28:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1041
	 
	 fConvert fToInt;
	 
	 fToInt.float_val = gConfig.process_covariance;
	 NewPacket.packet_data[0] = (fToInt.uint32_val >> 24) & 0x0FF;
	 NewPacket.packet_data[1] = (fToInt.uint32_val >> 16) & 0x0FF;
  2a:	f88d 3009 	strb.w	r3, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1042
	 NewPacket.packet_data[2] = (fToInt.uint32_val >> 8) & 0x0FF;
  2e:	f88d 200a 	strb.w	r2, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1043
	 NewPacket.packet_data[3] = (fToInt.uint32_val) & 0x0FF;	 
  32:	f88d 100b 	strb.w	r1, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1045
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  36:	f7ff fffe 	bl	0 <ComputeChecksum>
  3a:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1047
	 
	 SendTXPacketSafe( &NewPacket );
  3e:	4620      	mov	r0, r4
  40:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1048
}
  44:	b00c      	add	sp, #48
  46:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendStateCovariancePacket:

00000000 <SendStateCovariancePacket>:
SendStateCovariancePacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1008
* Output         : None
* Return         : None
* Description    : Sends a STATE_COVARIANCE_REPORT packet.
*******************************************************************************/
void SendStateCovariancePacket( )
{
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1014
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = STATE_COVARIANCE_REPORT;
	 NewPacket.length = 36;
	 
	 PackageMatrixForTransmit( &NewPacket, &gEstimatedStates.P );
   4:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1011
*******************************************************************************/
void SendStateCovariancePacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = STATE_COVARIANCE_REPORT;
   6:	f06f 033e 	mvn.w	r3, #62	; 0x3e
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1012
	 NewPacket.length = 36;
   a:	2224      	movs	r2, #36
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1014
	 
	 PackageMatrixForTransmit( &NewPacket, &gEstimatedStates.P );
   c:	4620      	mov	r0, r4
   e:	4908      	ldr	r1, [pc, #32]	(30 <SendStateCovariancePacket+0x30>)
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1011
*******************************************************************************/
void SendStateCovariancePacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = STATE_COVARIANCE_REPORT;
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1012
	 NewPacket.length = 36;
  14:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1014
	 
	 PackageMatrixForTransmit( &NewPacket, &gEstimatedStates.P );
  18:	f7ff fffe 	bl	0 <SendStateCovariancePacket>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1018
	 // Temporary - send out a different matrix for analysis
//	 PackageMatrixForTransmit( &NewPacket, &gTempData.P );
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1c:	4620      	mov	r0, r4
  1e:	f7ff fffe 	bl	0 <ComputeChecksum>
  22:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1020
	 
	 SendTXPacketSafe( &NewPacket );
  26:	4620      	mov	r0, r4
  28:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:1021
}
  2c:	b00c      	add	sp, #48
  2e:	bd10      	pop	{r4, pc}
  30:	00000084 	.word	0x00000084
Disassembly of section .text.SendGyroAlignmentPacket:

00000000 <SendGyroAlignmentPacket>:
SendGyroAlignmentPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:987
* Output         : None
* Return         : None
* Description    : Sends a GYRO_ALIGNMENT_REPORT packet.
*******************************************************************************/
void SendGyroAlignmentPacket( )
{
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:993
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = GYRO_ALIGNMENT_REPORT;
	 NewPacket.length = 36;
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.gyro_alignment );
   4:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:990
*******************************************************************************/
void SendGyroAlignmentPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = GYRO_ALIGNMENT_REPORT;
   6:	f06f 033c 	mvn.w	r3, #60	; 0x3c
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:991
	 NewPacket.length = 36;
   a:	2224      	movs	r2, #36
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:993
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.gyro_alignment );
   c:	4620      	mov	r0, r4
   e:	4908      	ldr	r1, [pc, #32]	(30 <SendGyroAlignmentPacket+0x30>)
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:990
*******************************************************************************/
void SendGyroAlignmentPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = GYRO_ALIGNMENT_REPORT;
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:991
	 NewPacket.length = 36;
  14:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:993
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.gyro_alignment );
  18:	f7ff fffe 	bl	0 <SendGyroAlignmentPacket>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:995
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1c:	4620      	mov	r0, r4
  1e:	f7ff fffe 	bl	0 <ComputeChecksum>
  22:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:997
	 
	 SendTXPacketSafe( &NewPacket );
  26:	4620      	mov	r0, r4
  28:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:998
}
  2c:	b00c      	add	sp, #48
  2e:	bd10      	pop	{r4, pc}
  30:	00000030 	.word	0x00000030
Disassembly of section .text.SendAccelAlignmentPacket:

00000000 <SendAccelAlignmentPacket>:
SendAccelAlignmentPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:966
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_ALIGNMENT_REPORT packet
*******************************************************************************/
void SendAccelAlignmentPacket( )
{
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:972
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_ALIGNMENT_REPORT;
	 NewPacket.length = 36;
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.accel_alignment );
   4:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:969
*******************************************************************************/
void SendAccelAlignmentPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_ALIGNMENT_REPORT;
   6:	f06f 033b 	mvn.w	r3, #59	; 0x3b
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:970
	 NewPacket.length = 36;
   a:	2224      	movs	r2, #36
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:972
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.accel_alignment );
   c:	4620      	mov	r0, r4
   e:	4908      	ldr	r1, [pc, #32]	(30 <SendAccelAlignmentPacket+0x30>)
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:969
*******************************************************************************/
void SendAccelAlignmentPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_ALIGNMENT_REPORT;
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:970
	 NewPacket.length = 36;
  14:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:972
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.accel_alignment );
  18:	f7ff fffe 	bl	0 <SendAccelAlignmentPacket>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:974
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1c:	4620      	mov	r0, r4
  1e:	f7ff fffe 	bl	0 <ComputeChecksum>
  22:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:976
	 
	 SendTXPacketSafe( &NewPacket );
  26:	4620      	mov	r0, r4
  28:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:977
}
  2c:	b00c      	add	sp, #48
  2e:	bd10      	pop	{r4, pc}
  30:	00000054 	.word	0x00000054
Disassembly of section .text.SendAccelRefVectorPacket:

00000000 <SendAccelRefVectorPacket>:
SendAccelRefVectorPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:938
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_REF_VECTOR_REPORT packet
*******************************************************************************/
void SendAccelRefVectorPacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:944
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.accel_ref_vector[2] >> 8) & 0x0FF;
   2:	f240 0100 	movw	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:938
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_REF_VECTOR_REPORT packet
*******************************************************************************/
void SendAccelRefVectorPacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:944
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.accel_ref_vector[2] >> 8) & 0x0FF;
   8:	f2c0 0100 	movt	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:942
void SendAccelRefVectorPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
   c:	2206      	movs	r2, #6
   e:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:944
	 
	 NewPacket.packet_data[0] = (gConfig.accel_ref_vector[2] >> 8) & 0x0FF;
  12:	f8b1 20a6 	ldrh.w	r2, [r1, #166]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:947
	 NewPacket.packet_data[1] = gConfig.accel_ref_vector[2] & 0x0FF;
	 
	 NewPacket.packet_data[2] = (gConfig.accel_ref_vector[1] >> 8) & 0x0FF;
  16:	f8b1 00a4 	ldrh.w	r0, [r1, #164]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:941
*******************************************************************************/
void SendAccelRefVectorPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_REF_VECTOR_REPORT;
  1a:	f06f 0343 	mvn.w	r3, #67	; 0x43
  1e:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:945
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.accel_ref_vector[2] >> 8) & 0x0FF;
	 NewPacket.packet_data[1] = gConfig.accel_ref_vector[2] & 0x0FF;
  22:	f88d 2009 	strb.w	r2, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:944
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.accel_ref_vector[2] >> 8) & 0x0FF;
  26:	0a13      	lsrs	r3, r2, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:950
	 NewPacket.packet_data[1] = gConfig.accel_ref_vector[2] & 0x0FF;
	 
	 NewPacket.packet_data[2] = (gConfig.accel_ref_vector[1] >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = gConfig.accel_ref_vector[1] & 0x0FF;
	 
	 NewPacket.packet_data[4] = (gConfig.accel_ref_vector[0] >> 8) & 0x0FF;
  28:	f8b1 20a2 	ldrh.w	r2, [r1, #162]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:944
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.accel_ref_vector[2] >> 8) & 0x0FF;
  2c:	f88d 3008 	strb.w	r3, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:953
	 NewPacket.packet_data[3] = gConfig.accel_ref_vector[1] & 0x0FF;
	 
	 NewPacket.packet_data[4] = (gConfig.accel_ref_vector[0] >> 8) & 0x0FF;
	 NewPacket.packet_data[5] = gConfig.accel_ref_vector[0] & 0x0FF;
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  30:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:947
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.accel_ref_vector[2] >> 8) & 0x0FF;
	 NewPacket.packet_data[1] = gConfig.accel_ref_vector[2] & 0x0FF;
	 
	 NewPacket.packet_data[2] = (gConfig.accel_ref_vector[1] >> 8) & 0x0FF;
  32:	0a03      	lsrs	r3, r0, #8
  34:	f88d 300a 	strb.w	r3, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:948
	 NewPacket.packet_data[3] = gConfig.accel_ref_vector[1] & 0x0FF;
  38:	f88d 000b 	strb.w	r0, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:950
	 
	 NewPacket.packet_data[4] = (gConfig.accel_ref_vector[0] >> 8) & 0x0FF;
  3c:	0a13      	lsrs	r3, r2, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:953
	 NewPacket.packet_data[5] = gConfig.accel_ref_vector[0] & 0x0FF;
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  3e:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:950
	 NewPacket.packet_data[1] = gConfig.accel_ref_vector[2] & 0x0FF;
	 
	 NewPacket.packet_data[2] = (gConfig.accel_ref_vector[1] >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = gConfig.accel_ref_vector[1] & 0x0FF;
	 
	 NewPacket.packet_data[4] = (gConfig.accel_ref_vector[0] >> 8) & 0x0FF;
  40:	f88d 300c 	strb.w	r3, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:951
	 NewPacket.packet_data[5] = gConfig.accel_ref_vector[0] & 0x0FF;
  44:	f88d 200d 	strb.w	r2, [sp, #13]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:953
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  48:	f7ff fffe 	bl	0 <ComputeChecksum>
  4c:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:955
	 
	 SendTXPacketSafe( &NewPacket );
  50:	4620      	mov	r0, r4
  52:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:956
}
  56:	b00c      	add	sp, #48
  58:	bd10      	pop	{r4, pc}
  5a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.SendMagRefVectorPacket:

00000000 <SendMagRefVectorPacket>:
SendMagRefVectorPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:910
* Output         : None
* Return         : None
* Description    : Sends a MAG_REF_VECTOR_REPORT packet
*******************************************************************************/
void SendMagRefVectorPacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:916
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.mag_ref_vector[2] >> 8) & 0x0FF;
   2:	f240 0100 	movw	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:910
* Output         : None
* Return         : None
* Description    : Sends a MAG_REF_VECTOR_REPORT packet
*******************************************************************************/
void SendMagRefVectorPacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:916
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.mag_ref_vector[2] >> 8) & 0x0FF;
   8:	f2c0 0100 	movt	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:914
void SendMagRefVectorPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
   c:	2206      	movs	r2, #6
   e:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:916
	 
	 NewPacket.packet_data[0] = (gConfig.mag_ref_vector[2] >> 8) & 0x0FF;
  12:	f8b1 20a0 	ldrh.w	r2, [r1, #160]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:919
	 NewPacket.packet_data[1] = gConfig.mag_ref_vector[2] & 0x0FF;
	 
	 NewPacket.packet_data[2] = (gConfig.mag_ref_vector[1] >> 8) & 0x0FF;
  16:	f8b1 009e 	ldrh.w	r0, [r1, #158]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:913
*******************************************************************************/
void SendMagRefVectorPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_REF_VECTOR_REPORT;
  1a:	f06f 033a 	mvn.w	r3, #58	; 0x3a
  1e:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:917
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.mag_ref_vector[2] >> 8) & 0x0FF;
	 NewPacket.packet_data[1] = gConfig.mag_ref_vector[2] & 0x0FF;
  22:	f88d 2009 	strb.w	r2, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:916
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.mag_ref_vector[2] >> 8) & 0x0FF;
  26:	0a13      	lsrs	r3, r2, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:922
	 NewPacket.packet_data[1] = gConfig.mag_ref_vector[2] & 0x0FF;
	 
	 NewPacket.packet_data[2] = (gConfig.mag_ref_vector[1] >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = gConfig.mag_ref_vector[1] & 0x0FF;
	 
	 NewPacket.packet_data[4] = (gConfig.mag_ref_vector[0] >> 8) & 0x0FF;
  28:	f8b1 209c 	ldrh.w	r2, [r1, #156]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:916
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_REF_VECTOR_REPORT;
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.mag_ref_vector[2] >> 8) & 0x0FF;
  2c:	f88d 3008 	strb.w	r3, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:925
	 NewPacket.packet_data[3] = gConfig.mag_ref_vector[1] & 0x0FF;
	 
	 NewPacket.packet_data[4] = (gConfig.mag_ref_vector[0] >> 8) & 0x0FF;
	 NewPacket.packet_data[5] = gConfig.mag_ref_vector[0] & 0x0FF;
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  30:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:919
	 NewPacket.length = 6;
	 
	 NewPacket.packet_data[0] = (gConfig.mag_ref_vector[2] >> 8) & 0x0FF;
	 NewPacket.packet_data[1] = gConfig.mag_ref_vector[2] & 0x0FF;
	 
	 NewPacket.packet_data[2] = (gConfig.mag_ref_vector[1] >> 8) & 0x0FF;
  32:	0a03      	lsrs	r3, r0, #8
  34:	f88d 300a 	strb.w	r3, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:920
	 NewPacket.packet_data[3] = gConfig.mag_ref_vector[1] & 0x0FF;
  38:	f88d 000b 	strb.w	r0, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:922
	 
	 NewPacket.packet_data[4] = (gConfig.mag_ref_vector[0] >> 8) & 0x0FF;
  3c:	0a13      	lsrs	r3, r2, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:925
	 NewPacket.packet_data[5] = gConfig.mag_ref_vector[0] & 0x0FF;
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  3e:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:922
	 NewPacket.packet_data[1] = gConfig.mag_ref_vector[2] & 0x0FF;
	 
	 NewPacket.packet_data[2] = (gConfig.mag_ref_vector[1] >> 8) & 0x0FF;
	 NewPacket.packet_data[3] = gConfig.mag_ref_vector[1] & 0x0FF;
	 
	 NewPacket.packet_data[4] = (gConfig.mag_ref_vector[0] >> 8) & 0x0FF;
  40:	f88d 300c 	strb.w	r3, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:923
	 NewPacket.packet_data[5] = gConfig.mag_ref_vector[0] & 0x0FF;
  44:	f88d 200d 	strb.w	r2, [sp, #13]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:925
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  48:	f7ff fffe 	bl	0 <ComputeChecksum>
  4c:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:927
	 
	 SendTXPacketSafe( &NewPacket );
  50:	4620      	mov	r0, r4
  52:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:928
}
  56:	b00c      	add	sp, #48
  58:	bd10      	pop	{r4, pc}
  5a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.SendMagCalPacket:

00000000 <SendMagCalPacket>:
SendMagCalPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:889
* Output         : None
* Return         : None
* Description    : Sends a MAG_CAL_REPORT packet.
*******************************************************************************/
void SendMagCalPacket( )
{
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:895
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_CAL_REPORT;
	 NewPacket.length = 36;
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.mag_cal );
   4:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:892
*******************************************************************************/
void SendMagCalPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_CAL_REPORT;
   6:	f06f 0339 	mvn.w	r3, #57	; 0x39
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:893
	 NewPacket.length = 36;
   a:	2224      	movs	r2, #36
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:895
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.mag_cal );
   c:	4620      	mov	r0, r4
   e:	4908      	ldr	r1, [pc, #32]	(30 <SendMagCalPacket+0x30>)
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:892
*******************************************************************************/
void SendMagCalPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_CAL_REPORT;
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:893
	 NewPacket.length = 36;
  14:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:895
	 
	 PackageMatrixForTransmit( &NewPacket, &gConfig.mag_cal );
  18:	f7ff fffe 	bl	0 <SendMagCalPacket>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:897
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1c:	4620      	mov	r0, r4
  1e:	f7ff fffe 	bl	0 <ComputeChecksum>
  22:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:899
	 
	 SendTXPacketSafe( &NewPacket );
  26:	4620      	mov	r0, r4
  28:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:900
}
  2c:	b00c      	add	sp, #48
  2e:	bd10      	pop	{r4, pc}
  30:	00000078 	.word	0x00000078
Disassembly of section .text.SendStatusReportPacket:

00000000 <SendStatusReportPacket>:
SendStatusReportPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:868
* Output         : None
* Return         : None
* Description    : Sends a STATUS_REPORT packet.  Sent after self-test has been run.
*******************************************************************************/
void SendStatusReportPacket( uint16_t result )
{
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:876
	 NewPacket.PT = STATUS_REPORT;
	 NewPacket.length = 1;
	 
	 NewPacket.packet_data[0] = (result & 0x0FF);
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
   4:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:871
*******************************************************************************/
void SendStatusReportPacket( uint16_t result )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = STATUS_REPORT;
   6:	f06f 0349 	mvn.w	r3, #73	; 0x49
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:872
	 NewPacket.length = 1;
   a:	2201      	movs	r2, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:874
	 
	 NewPacket.packet_data[0] = (result & 0x0FF);
   c:	f88d 0008 	strb.w	r0, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:876
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  10:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:871
*******************************************************************************/
void SendStatusReportPacket( uint16_t result )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = STATUS_REPORT;
  12:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:872
	 NewPacket.length = 1;
  16:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:876
	 
	 NewPacket.packet_data[0] = (result & 0x0FF);
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1a:	f7ff fffe 	bl	0 <ComputeChecksum>
  1e:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:878
	 
	 SendTXPacketSafe( &NewPacket );
  22:	4620      	mov	r0, r4
  24:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:879
}
  28:	b00c      	add	sp, #48
  2a:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendTransmitModePacket:

00000000 <SendTransmitModePacket>:
SendTransmitModePacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:846
* Output         : None
* Return         : None
* Description    : Sends a TRANSMIT_MODE_REPORT packet
*******************************************************************************/
void SendTransmitModePacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:852
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = BROADCAST_MODE_REPORT;
	 NewPacket.length = 2;
	 
	 NewPacket.packet_data[0] = (gConfig.broadcast_rate & 0x0FF);
   2:	f240 0200 	movw	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:846
* Output         : None
* Return         : None
* Description    : Sends a TRANSMIT_MODE_REPORT packet
*******************************************************************************/
void SendTransmitModePacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:852
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = BROADCAST_MODE_REPORT;
	 NewPacket.length = 2;
	 
	 NewPacket.packet_data[0] = (gConfig.broadcast_rate & 0x0FF);
   8:	f2c0 0200 	movt	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:849
*******************************************************************************/
void SendTransmitModePacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = BROADCAST_MODE_REPORT;
   c:	f06f 0337 	mvn.w	r3, #55	; 0x37
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:850
	 NewPacket.length = 2;
  14:	2102      	movs	r1, #2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:853
	 
	 NewPacket.packet_data[0] = (gConfig.broadcast_rate & 0x0FF);
	 NewPacket.packet_data[1] = (gConfig.broadcast_enabled & 0x01);
  16:	f892 30b8 	ldrb.w	r3, [r2, #184]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:850
void SendTransmitModePacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = BROADCAST_MODE_REPORT;
	 NewPacket.length = 2;
  1a:	f88d 1005 	strb.w	r1, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:855
	 
	 NewPacket.packet_data[0] = (gConfig.broadcast_rate & 0x0FF);
	 NewPacket.packet_data[1] = (gConfig.broadcast_enabled & 0x01);
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1e:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:852
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = BROADCAST_MODE_REPORT;
	 NewPacket.length = 2;
	 
	 NewPacket.packet_data[0] = (gConfig.broadcast_rate & 0x0FF);
  20:	f892 10b9 	ldrb.w	r1, [r2, #185]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:853
	 NewPacket.packet_data[1] = (gConfig.broadcast_enabled & 0x01);
  24:	f003 0301 	and.w	r3, r3, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:855
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  28:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:852
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = BROADCAST_MODE_REPORT;
	 NewPacket.length = 2;
	 
	 NewPacket.packet_data[0] = (gConfig.broadcast_rate & 0x0FF);
  2a:	f88d 1008 	strb.w	r1, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:853
	 NewPacket.packet_data[1] = (gConfig.broadcast_enabled & 0x01);
  2e:	f88d 3009 	strb.w	r3, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:855
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  32:	f7ff fffe 	bl	0 <ComputeChecksum>
  36:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:857
	 
	 SendTXPacketSafe( &NewPacket );
  3a:	4620      	mov	r0, r4
  3c:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:858
}
  40:	b00c      	add	sp, #48
  42:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendActiveChannelPacket:

00000000 <SendActiveChannelPacket>:
SendActiveChannelPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:820
* Output         : None
* Return         : None
* Description    : Sends a ACTIVE_CHANNEL_REPORT packet
*******************************************************************************/
void SendActiveChannelPacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:826
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACTIVE_CHANNEL_REPORT;
	 NewPacket.length = 2;
	 
	 NewPacket.packet_data[0] = (gConfig.psi_enabled << 7) | (gConfig.theta_enabled << 6) | (gConfig.phi_enabled << 5)
   2:	f240 0200 	movw	r2, #0	; 0x0
   6:	f2c0 0200 	movt	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:820
* Output         : None
* Return         : None
* Description    : Sends a ACTIVE_CHANNEL_REPORT packet
*******************************************************************************/
void SendActiveChannelPacket( )
{
   a:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:823
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACTIVE_CHANNEL_REPORT;
   c:	f06f 0342 	mvn.w	r3, #66	; 0x42
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:826
	 NewPacket.length = 2;
	 
	 NewPacket.packet_data[0] = (gConfig.psi_enabled << 7) | (gConfig.theta_enabled << 6) | (gConfig.phi_enabled << 5)
  14:	f892 30b2 	ldrb.w	r3, [r2, #178]
  18:	f892 00b3 	ldrb.w	r0, [r2, #179]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:824
void SendActiveChannelPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACTIVE_CHANNEL_REPORT;
	 NewPacket.length = 2;
  1c:	2102      	movs	r1, #2
  1e:	f88d 1005 	strb.w	r1, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:826
	 
	 NewPacket.packet_data[0] = (gConfig.psi_enabled << 7) | (gConfig.theta_enabled << 6) | (gConfig.phi_enabled << 5)
  22:	019b      	lsls	r3, r3, #6
  24:	f892 10af 	ldrb.w	r1, [r2, #175]
  28:	ea43 13c0 	orr.w	r3, r3, r0, lsl #7
  2c:	f892 00b1 	ldrb.w	r0, [r2, #177]
  30:	430b      	orrs	r3, r1
  32:	f892 10b6 	ldrb.w	r1, [r2, #182]
  36:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
  3a:	f892 00b5 	ldrb.w	r0, [r2, #181]
  3e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  42:	f892 10b4 	ldrb.w	r1, [r2, #180]
  46:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
  4a:	f892 00ae 	ldrb.w	r0, [r2, #174]
  4e:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
  52:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
  56:	f88d 3008 	strb.w	r3, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:829
										  | (gConfig.psi_dot_enabled << 4) | (gConfig.theta_dot_enabled << 3) | (gConfig.phi_dot_enabled << 2)
										  | (gConfig.x_mag_enabled << 1) | (gConfig.y_mag_enabled);
	 NewPacket.packet_data[1] = (gConfig.z_mag_enabled << 7) | (gConfig.x_gyro_enabled << 6) | (gConfig.y_gyro_enabled << 5) | (gConfig.z_gyro_enabled << 4)
  5a:	f892 30b0 	ldrb.w	r3, [r2, #176]
  5e:	f892 00ab 	ldrb.w	r0, [r2, #171]
  62:	f892 10ac 	ldrb.w	r1, [r2, #172]
  66:	01db      	lsls	r3, r3, #7
  68:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
  6c:	f892 00ad 	ldrb.w	r0, [r2, #173]
  70:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
  74:	f892 10a8 	ldrb.w	r1, [r2, #168]
  78:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  7c:	f892 00a9 	ldrb.w	r0, [r2, #169]
  80:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
  84:	f892 10aa 	ldrb.w	r1, [r2, #170]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:832
										  | (gConfig.x_accel_enabled  << 3) | (gConfig.y_accel_enabled << 2) | (gConfig.z_accel_enabled << 1);
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  88:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:829
	 NewPacket.length = 2;
	 
	 NewPacket.packet_data[0] = (gConfig.psi_enabled << 7) | (gConfig.theta_enabled << 6) | (gConfig.phi_enabled << 5)
										  | (gConfig.psi_dot_enabled << 4) | (gConfig.theta_dot_enabled << 3) | (gConfig.phi_dot_enabled << 2)
										  | (gConfig.x_mag_enabled << 1) | (gConfig.y_mag_enabled);
	 NewPacket.packet_data[1] = (gConfig.z_mag_enabled << 7) | (gConfig.x_gyro_enabled << 6) | (gConfig.y_gyro_enabled << 5) | (gConfig.z_gyro_enabled << 4)
  8a:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
  8e:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:832
										  | (gConfig.x_accel_enabled  << 3) | (gConfig.y_accel_enabled << 2) | (gConfig.z_accel_enabled << 1);
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  92:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:829
	 NewPacket.length = 2;
	 
	 NewPacket.packet_data[0] = (gConfig.psi_enabled << 7) | (gConfig.theta_enabled << 6) | (gConfig.phi_enabled << 5)
										  | (gConfig.psi_dot_enabled << 4) | (gConfig.theta_dot_enabled << 3) | (gConfig.phi_dot_enabled << 2)
										  | (gConfig.x_mag_enabled << 1) | (gConfig.y_mag_enabled);
	 NewPacket.packet_data[1] = (gConfig.z_mag_enabled << 7) | (gConfig.x_gyro_enabled << 6) | (gConfig.y_gyro_enabled << 5) | (gConfig.z_gyro_enabled << 4)
  94:	f88d 3009 	strb.w	r3, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:832
										  | (gConfig.x_accel_enabled  << 3) | (gConfig.y_accel_enabled << 2) | (gConfig.z_accel_enabled << 1);
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  98:	f7ff fffe 	bl	0 <ComputeChecksum>
  9c:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:834
	 
	 SendTXPacketSafe( &NewPacket );
  a0:	4620      	mov	r0, r4
  a2:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:835
}
  a6:	b00c      	add	sp, #48
  a8:	bd10      	pop	{r4, pc}
  aa:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.SendMagBiasPacket:

00000000 <SendMagBiasPacket>:
SendMagBiasPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:788
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_SCALE_REPORT packet
*******************************************************************************/
void SendMagBiasPacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:795
	 
	 NewPacket.PT = MAG_BIAS_REPORT;
	 NewPacket.length = 6;
	 
	 // X mag bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_mag_bias & 0x0FF);
   2:	f240 0100 	movw	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:788
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_SCALE_REPORT packet
*******************************************************************************/
void SendMagBiasPacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:795
	 
	 NewPacket.PT = MAG_BIAS_REPORT;
	 NewPacket.length = 6;
	 
	 // X mag bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_mag_bias & 0x0FF);
   8:	f2c0 0100 	movt	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:791
*******************************************************************************/
void SendMagBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_BIAS_REPORT;
   c:	f06f 0338 	mvn.w	r3, #56	; 0x38
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:795
	 NewPacket.length = 6;
	 
	 // X mag bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_mag_bias & 0x0FF);
  14:	8b4b      	ldrh	r3, [r1, #26]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:792
void SendMagBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_BIAS_REPORT;
	 NewPacket.length = 6;
  16:	2206      	movs	r2, #6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:795
	 
	 // X mag bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_mag_bias & 0x0FF);
  18:	f88d 300d 	strb.w	r3, [sp, #13]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:796
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_mag_bias >> 8) & 0x0FF);
  1c:	0a1b      	lsrs	r3, r3, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:792
void SendMagBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = MAG_BIAS_REPORT;
	 NewPacket.length = 6;
  1e:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:796
	 
	 // X mag bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_mag_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_mag_bias >> 8) & 0x0FF);
  22:	f88d 300c 	strb.w	r3, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:799
	 
	 // Y mag bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_mag_bias & 0x0FF);
  26:	8b8a      	ldrh	r2, [r1, #28]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:803
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_mag_bias >> 8) & 0x0FF);
	 
	 // Z mag bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_mag_bias & 0x0FF);
  28:	8bcb      	ldrh	r3, [r1, #30]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:807
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_mag_bias >> 8) & 0x0FF);
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  2a:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:799
	 // X mag bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_mag_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_mag_bias >> 8) & 0x0FF);
	 
	 // Y mag bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_mag_bias & 0x0FF);
  2c:	f88d 200b 	strb.w	r2, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:803
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_mag_bias >> 8) & 0x0FF);
	 
	 // Z mag bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_mag_bias & 0x0FF);
  30:	f88d 3009 	strb.w	r3, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:800
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_mag_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_mag_bias >> 8) & 0x0FF);
	 
	 // Y mag bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_mag_bias & 0x0FF);
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_mag_bias >> 8) & 0x0FF);
  34:	0a12      	lsrs	r2, r2, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:804
	 
	 // Z mag bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_mag_bias & 0x0FF);
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_mag_bias >> 8) & 0x0FF);
  36:	0a1b      	lsrs	r3, r3, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:807
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  38:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:800
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_mag_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_mag_bias >> 8) & 0x0FF);
	 
	 // Y mag bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_mag_bias & 0x0FF);
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_mag_bias >> 8) & 0x0FF);
  3a:	f88d 200a 	strb.w	r2, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:804
	 
	 // Z mag bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_mag_bias & 0x0FF);
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_mag_bias >> 8) & 0x0FF);
  3e:	f88d 3008 	strb.w	r3, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:807
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  42:	f7ff fffe 	bl	0 <ComputeChecksum>
  46:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:809
	 
	 SendTXPacketSafe( &NewPacket );
  4a:	4620      	mov	r0, r4
  4c:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:810
}
  50:	b00c      	add	sp, #48
  52:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendAccelBiasPacket:

00000000 <SendAccelBiasPacket>:
SendAccelBiasPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:756
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_BIAS_REPORT packet
*******************************************************************************/
void SendAccelBiasPacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:763
	 
	 NewPacket.PT = ACCEL_BIAS_REPORT;
	 NewPacket.length = 6;
	 
	 // X accel bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_accel_bias & 0x0FF);
   2:	f240 0100 	movw	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:756
* Output         : None
* Return         : None
* Description    : Sends a ACCEL_BIAS_REPORT packet
*******************************************************************************/
void SendAccelBiasPacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:763
	 
	 NewPacket.PT = ACCEL_BIAS_REPORT;
	 NewPacket.length = 6;
	 
	 // X accel bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_accel_bias & 0x0FF);
   8:	f2c0 0100 	movt	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:759
*******************************************************************************/
void SendAccelBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_BIAS_REPORT;
   c:	f06f 0344 	mvn.w	r3, #68	; 0x44
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:763
	 NewPacket.length = 6;
	 
	 // X accel bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_accel_bias & 0x0FF);
  14:	880b      	ldrh	r3, [r1, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:760
void SendAccelBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_BIAS_REPORT;
	 NewPacket.length = 6;
  16:	2206      	movs	r2, #6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:763
	 
	 // X accel bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_accel_bias & 0x0FF);
  18:	f88d 300d 	strb.w	r3, [sp, #13]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:764
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_accel_bias >> 8) & 0x0FF);
  1c:	0a1b      	lsrs	r3, r3, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:760
void SendAccelBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = ACCEL_BIAS_REPORT;
	 NewPacket.length = 6;
  1e:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:764
	 
	 // X accel bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_accel_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_accel_bias >> 8) & 0x0FF);
  22:	f88d 300c 	strb.w	r3, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:767
	 
	 // Y accel bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_accel_bias & 0x0FF);
  26:	884a      	ldrh	r2, [r1, #2]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:771
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_accel_bias >> 8) & 0x0FF);
	 
	 // Z accel bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_accel_bias & 0x0FF);
  28:	888b      	ldrh	r3, [r1, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:775
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_accel_bias >> 8) & 0x0FF);
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  2a:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:767
	 // X accel bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_accel_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_accel_bias >> 8) & 0x0FF);
	 
	 // Y accel bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_accel_bias & 0x0FF);
  2c:	f88d 200b 	strb.w	r2, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:771
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_accel_bias >> 8) & 0x0FF);
	 
	 // Z accel bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_accel_bias & 0x0FF);
  30:	f88d 3009 	strb.w	r3, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:768
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_accel_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_accel_bias >> 8) & 0x0FF);
	 
	 // Y accel bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_accel_bias & 0x0FF);
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_accel_bias >> 8) & 0x0FF);
  34:	0a12      	lsrs	r2, r2, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:772
	 
	 // Z accel bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_accel_bias & 0x0FF);
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_accel_bias >> 8) & 0x0FF);
  36:	0a1b      	lsrs	r3, r3, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:775
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  38:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:768
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_accel_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_accel_bias >> 8) & 0x0FF);
	 
	 // Y accel bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_accel_bias & 0x0FF);
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_accel_bias >> 8) & 0x0FF);
  3a:	f88d 200a 	strb.w	r2, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:772
	 
	 // Z accel bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_accel_bias & 0x0FF);
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_accel_bias >> 8) & 0x0FF);
  3e:	f88d 3008 	strb.w	r3, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:775
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  42:	f7ff fffe 	bl	0 <ComputeChecksum>
  46:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:777
	 
	 SendTXPacketSafe( &NewPacket );
  4a:	4620      	mov	r0, r4
  4c:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:778
}
  50:	b00c      	add	sp, #48
  52:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendGyroBiasPacket:

00000000 <SendGyroBiasPacket>:
SendGyroBiasPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:723
* Output         : None
* Return         : None
* Description    : Sends a GYRO_BIAS_REPORT packet
*******************************************************************************/
void SendGyroBiasPacket( )
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:730
	 
	 NewPacket.PT = GYRO_BIAS_REPORT;
	 NewPacket.length = 6;
	 
	 // X gyro bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_gyro_bias & 0x0FF);
   2:	f240 0100 	movw	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:723
* Output         : None
* Return         : None
* Description    : Sends a GYRO_BIAS_REPORT packet
*******************************************************************************/
void SendGyroBiasPacket( )
{
   6:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:730
	 
	 NewPacket.PT = GYRO_BIAS_REPORT;
	 NewPacket.length = 6;
	 
	 // X gyro bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_gyro_bias & 0x0FF);
   8:	f2c0 0100 	movt	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:726
*******************************************************************************/
void SendGyroBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = GYRO_BIAS_REPORT;
   c:	f06f 0347 	mvn.w	r3, #71	; 0x47
  10:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:730
	 NewPacket.length = 6;
	 
	 // X gyro bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_gyro_bias & 0x0FF);
  14:	8a8b      	ldrh	r3, [r1, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:727
void SendGyroBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = GYRO_BIAS_REPORT;
	 NewPacket.length = 6;
  16:	2206      	movs	r2, #6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:730
	 
	 // X gyro bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_gyro_bias & 0x0FF);
  18:	f88d 300d 	strb.w	r3, [sp, #13]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:731
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_gyro_bias >> 8) & 0x0FF);
  1c:	0a1b      	lsrs	r3, r3, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:727
void SendGyroBiasPacket( )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = GYRO_BIAS_REPORT;
	 NewPacket.length = 6;
  1e:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:731
	 
	 // X gyro bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_gyro_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_gyro_bias >> 8) & 0x0FF);
  22:	f88d 300c 	strb.w	r3, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:734
	 
	 // Y gyro bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_gyro_bias & 0x0FF);
  26:	8aca      	ldrh	r2, [r1, #22]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:738
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_gyro_bias >> 8) & 0x0FF);
	 
	 // Z gyro bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_gyro_bias & 0x0FF);
  28:	8b0b      	ldrh	r3, [r1, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:742
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_gyro_bias >> 8) & 0x0FF);
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  2a:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:734
	 // X gyro bias
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_gyro_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_gyro_bias >> 8) & 0x0FF);
	 
	 // Y gyro bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_gyro_bias & 0x0FF);
  2c:	f88d 200b 	strb.w	r2, [sp, #11]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:738
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_gyro_bias >> 8) & 0x0FF);
	 
	 // Z gyro bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_gyro_bias & 0x0FF);
  30:	f88d 3009 	strb.w	r3, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:735
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_gyro_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_gyro_bias >> 8) & 0x0FF);
	 
	 // Y gyro bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_gyro_bias & 0x0FF);
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_gyro_bias >> 8) & 0x0FF);
  34:	0a12      	lsrs	r2, r2, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:739
	 
	 // Z gyro bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_gyro_bias & 0x0FF);
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_gyro_bias >> 8) & 0x0FF);
  36:	0a1b      	lsrs	r3, r3, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:742
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  38:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:735
	 NewPacket.packet_data[5] = (uint8_t)(gConfig.x_gyro_bias & 0x0FF);
	 NewPacket.packet_data[4] = (uint8_t)((gConfig.x_gyro_bias >> 8) & 0x0FF);
	 
	 // Y gyro bias
	 NewPacket.packet_data[3] = (uint8_t)(gConfig.y_gyro_bias & 0x0FF);
	 NewPacket.packet_data[2] = (uint8_t)((gConfig.y_gyro_bias >> 8) & 0x0FF);
  3a:	f88d 200a 	strb.w	r2, [sp, #10]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:739
	 
	 // Z gyro bias
	 NewPacket.packet_data[1] = (uint8_t)(gConfig.z_gyro_bias & 0x0FF);
	 NewPacket.packet_data[0] = (uint8_t)((gConfig.z_gyro_bias >> 8) & 0x0FF);
  3e:	f88d 3008 	strb.w	r3, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:742
	 
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  42:	f7ff fffe 	bl	0 <ComputeChecksum>
  46:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:744
	 
	 SendTXPacketSafe( &NewPacket );
  4a:	4620      	mov	r0, r4
  4c:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:745
}
  50:	b00c      	add	sp, #48
  52:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendCommandFailedPacket:

00000000 <SendCommandFailedPacket>:
SendCommandFailedPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:536
* Output         : None
* Return         : None
* Description    : Sens a COMMAND_FAILED packet over the UART transmitter
*******************************************************************************/
void SendCommandFailedPacket( int32_t command, int32_t flag  )
{
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:543
	 
	 NewPacket.PT = COMMAND_FAILED;
	 NewPacket.length = 2;
	 NewPacket.packet_data[0] = (char)command;
	 NewPacket.packet_data[1] = (char)flag;
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
   4:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:539
*******************************************************************************/
void SendCommandFailedPacket( int32_t command, int32_t flag  )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = COMMAND_FAILED;
   6:	f06f 034e 	mvn.w	r3, #78	; 0x4e
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:540
	 NewPacket.length = 2;
   a:	2202      	movs	r2, #2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:541
	 NewPacket.packet_data[0] = (char)command;
   c:	f88d 0008 	strb.w	r0, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:543
	 NewPacket.packet_data[1] = (char)flag;
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  10:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:539
*******************************************************************************/
void SendCommandFailedPacket( int32_t command, int32_t flag  )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = COMMAND_FAILED;
  12:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:540
	 NewPacket.length = 2;
  16:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:542
	 NewPacket.packet_data[0] = (char)command;
	 NewPacket.packet_data[1] = (char)flag;
  1a:	f88d 1009 	strb.w	r1, [sp, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:543
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1e:	f7ff fffe 	bl	0 <ComputeChecksum>
  22:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:545
	 
	 SendTXPacketSafe( &NewPacket );
  26:	4620      	mov	r0, r4
  28:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:546
}
  2c:	b00c      	add	sp, #48
  2e:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendCommandSuccessPacket:

00000000 <SendCommandSuccessPacket>:
SendCommandSuccessPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:516
* Output         : None
* Return         : None
* Description    : Sends a COMMAND_COMPLETE packet over the UART transmitter.
*******************************************************************************/
void SendCommandSuccessPacket( int32_t command )
{
   0:	b510      	push	{r4, lr}
   2:	b08c      	sub	sp, #48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:522
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = COMMAND_COMPLETE;
	 NewPacket.length = 1;
	 NewPacket.packet_data[0] = command;
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
   4:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:519
*******************************************************************************/
void SendCommandSuccessPacket( int32_t command )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = COMMAND_COMPLETE;
   6:	f06f 034f 	mvn.w	r3, #79	; 0x4f
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:520
	 NewPacket.length = 1;
   a:	2201      	movs	r2, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:521
	 NewPacket.packet_data[0] = command;
   c:	f88d 0008 	strb.w	r0, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:522
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  10:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:519
*******************************************************************************/
void SendCommandSuccessPacket( int32_t command )
{
	 USARTPacket NewPacket;
	 
	 NewPacket.PT = COMMAND_COMPLETE;
  12:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:520
	 NewPacket.length = 1;
  16:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:522
	 NewPacket.packet_data[0] = command;
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
  1a:	f7ff fffe 	bl	0 <ComputeChecksum>
  1e:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:524
	 
	 SendTXPacketSafe( &NewPacket );
  22:	4620      	mov	r0, r4
  24:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:525
}
  28:	b00c      	add	sp, #48
  2a:	bd10      	pop	{r4, pc}
Disassembly of section .text.SendDataPacket:

00000000 <SendDataPacket>:
SendDataPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:559
* Return         : None
* Description    : Sends a packet containing the most recent data from all the 
						  active IMU channels
*******************************************************************************/
void SendDataPacket( )
{
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:573
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
	 int16_t pitch = (int16_t)(91.0194*gEstimatedStates.pitch);
	 int16_t roll = (int16_t)(91.0194*gEstimatedStates.roll);
	 
	 if( gConfig.psi_enabled )
   4:	f240 0800 	movw	r8, #0	; 0x0
   8:	f2c0 0800 	movt	r8, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:569

	 // Convert angle estimates from floats to int16_ts for transmission.
	 // There are 2^15 - 1 possible positive values in a 16-bit integer.  We would
	 // like to split the possible range of possitive angles from 0 to 360 degrees
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
   c:	f240 0400 	movw	r4, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:573
	 int16_t pitch = (int16_t)(91.0194*gEstimatedStates.pitch);
	 int16_t roll = (int16_t)(91.0194*gEstimatedStates.roll);
	 
	 if( gConfig.psi_enabled )
  10:	f898 20b3 	ldrb.w	r2, [r8, #179]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:569

	 // Convert angle estimates from floats to int16_ts for transmission.
	 // There are 2^15 - 1 possible positive values in a 16-bit integer.  We would
	 // like to split the possible range of possitive angles from 0 to 360 degrees
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
  14:	f2c0 0400 	movt	r4, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:559
* Return         : None
* Description    : Sends a packet containing the most recent data from all the 
						  active IMU channels
*******************************************************************************/
void SendDataPacket( )
{
  18:	b097      	sub	sp, #92
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:569

	 // Convert angle estimates from floats to int16_ts for transmission.
	 // There are 2^15 - 1 possible positive values in a 16-bit integer.  We would
	 // like to split the possible range of possitive angles from 0 to 360 degrees
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
  1a:	6820      	ldr	r0, [r4, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:570
	 int16_t pitch = (int16_t)(91.0194*gEstimatedStates.pitch);
  1c:	6866      	ldr	r6, [r4, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:571
	 int16_t roll = (int16_t)(91.0194*gEstimatedStates.roll);
  1e:	f8d4 9008 	ldr.w	r9, [r4, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:573
	 
	 if( gConfig.psi_enabled )
  22:	9201      	str	r2, [sp, #4]
  24:	2a00      	cmp	r2, #0
  26:	f040 81c5 	bne.w	3b4 <SendDataPacket+0x3b4>
  2a:	4617      	mov	r7, r2
  2c:	f04f 0a01 	mov.w	sl, #1	; 0x1
  30:	2502      	movs	r5, #2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:580
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((yaw >> 8) & 0x0FF);
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((yaw) & 0x0FF);
		  
		  active_channels++;
	 }
	 if( gConfig.theta_enabled )
  32:	f898 30b2 	ldrb.w	r3, [r8, #178]
  36:	9302      	str	r3, [sp, #8]
  38:	2b00      	cmp	r3, #0
  3a:	f040 81a3 	bne.w	384 <SendDataPacket+0x384>
  3e:	4656      	mov	r6, sl
  40:	46ba      	mov	sl, r7
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:587
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((pitch >> 8) & 0x0FF);
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((pitch) & 0x0FF);
		  
		  active_channels++;
	 }
	 if( gConfig.phi_enabled )
  42:	f898 30b1 	ldrb.w	r3, [r8, #177]
  46:	9303      	str	r3, [sp, #12]
  48:	2b00      	cmp	r3, #0
  4a:	f040 8182 	bne.w	352 <SendDataPacket+0x352>
  4e:	46b1      	mov	r9, r6
  50:	4656      	mov	r6, sl
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:603
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
	 int16_t roll_rate = (int16_t)(72.8178*gEstimatedStates.roll_rate);
	 
	 if( gConfig.psi_dot_enabled )
  52:	f898 30b6 	ldrb.w	r3, [r8, #182]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:599
	 
	 // Convert angle rate estimates from floats to int16_ts for transmission.
	 // There are 2^16 possible possible values in a 16-bit integer.  We would
	 // like to split the possible range of rates from -450 to 450 degrees
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
  56:	68e0      	ldr	r0, [r4, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:600
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
  58:	f8d4 a010 	ldr.w	sl, [r4, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:603
	 int16_t roll_rate = (int16_t)(72.8178*gEstimatedStates.roll_rate);
	 
	 if( gConfig.psi_dot_enabled )
  5c:	9304      	str	r3, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:601
	 // There are 2^16 possible possible values in a 16-bit integer.  We would
	 // like to split the possible range of rates from -450 to 450 degrees
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
	 int16_t roll_rate = (int16_t)(72.8178*gEstimatedStates.roll_rate);
  5e:	6964      	ldr	r4, [r4, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:603
	 
	 if( gConfig.psi_dot_enabled )
  60:	2b00      	cmp	r3, #0
  62:	f040 815f 	bne.w	324 <SendDataPacket+0x324>
  66:	464f      	mov	r7, r9
  68:	46b1      	mov	r9, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:610
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((yaw_rate >> 8) & 0x0FF);
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((yaw_rate) & 0x0FF);
		  
		  active_channels++;
	 }
	 if( gConfig.theta_dot_enabled )
  6a:	f898 30b5 	ldrb.w	r3, [r8, #181]
  6e:	9305      	str	r3, [sp, #20]
  70:	2b00      	cmp	r3, #0
  72:	f040 8140 	bne.w	2f6 <SendDataPacket+0x2f6>
  76:	463e      	mov	r6, r7
  78:	464f      	mov	r7, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:617
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((pitch_rate >> 8) & 0x0FF);
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((pitch_rate) & 0x0FF);
		  
		  active_channels++;
	 }
	 if( gConfig.phi_dot_enabled )
  7a:	f898 30b4 	ldrb.w	r3, [r8, #180]
  7e:	9306      	str	r3, [sp, #24]
  80:	2b00      	cmp	r3, #0
  82:	f040 8121 	bne.w	2c8 <SendDataPacket+0x2c8>
  86:	4634      	mov	r4, r6
  88:	463e      	mov	r6, r7
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:626
		  
		  active_channels++;
	 }
	 
	 // Magnetic Sensors
	 if( gConfig.x_mag_enabled )
  8a:	f898 30ae 	ldrb.w	r3, [r8, #174]
  8e:	9307      	str	r3, [sp, #28]
  90:	2b00      	cmp	r3, #0
  92:	f040 8106 	bne.w	2a2 <SendDataPacket+0x2a2>
  96:	46a4      	mov	ip, r4
  98:	4634      	mov	r4, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:634
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.mag_x) & 0x0FF);
		  
		  active_channels++;
	 }
	 
	 if( gConfig.y_mag_enabled )
  9a:	f898 30af 	ldrb.w	r3, [r8, #175]
  9e:	9308      	str	r3, [sp, #32]
  a0:	2b00      	cmp	r3, #0
  a2:	f040 80eb 	bne.w	27c <SendDataPacket+0x27c>
  a6:	46e6      	mov	lr, ip
  a8:	46a4      	mov	ip, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:642
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.mag_y) & 0x0FF);
		  
		  active_channels++;
	 }
	 
	 if( gConfig.z_mag_enabled )
  aa:	f898 30b0 	ldrb.w	r3, [r8, #176]
  ae:	9309      	str	r3, [sp, #36]
  b0:	2b00      	cmp	r3, #0
  b2:	f040 80d1 	bne.w	258 <SendDataPacket+0x258>
  b6:	4674      	mov	r4, lr
  b8:	46e6      	mov	lr, ip
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:652
		  active_channels++;
	 }
	 	 
	 
	 // Rate gyros
	 if( gConfig.x_gyro_enabled )
  ba:	f898 b0ab 	ldrb.w	fp, [r8, #171]
  be:	f1bb 0f00 	cmp.w	fp, #0	; 0x0
  c2:	f040 80b5 	bne.w	230 <SendDataPacket+0x230>
  c6:	46a4      	mov	ip, r4
  c8:	4674      	mov	r4, lr
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:660
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.gyro_x) & 0x0FF);
		  
		  active_channels++;
	 }
	 
	 if( gConfig.y_gyro_enabled )
  ca:	f898 a0ac 	ldrb.w	sl, [r8, #172]
  ce:	f1ba 0f00 	cmp.w	sl, #0	; 0x0
  d2:	f040 809a 	bne.w	20a <SendDataPacket+0x20a>
  d6:	46e6      	mov	lr, ip
  d8:	46a4      	mov	ip, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:668
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.gyro_y) & 0x0FF);
		  
		  active_channels++;		  
	 }
	 
	 if( gConfig.z_gyro_enabled )
  da:	f898 90ad 	ldrb.w	r9, [r8, #173]
  de:	f1b9 0f00 	cmp.w	r9, #0	; 0x0
  e2:	d17f      	bne.n	1e4 <SendDataPacket+0x1e4>
  e4:	4674      	mov	r4, lr
  e6:	46e6      	mov	lr, ip
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:677
		  
		  active_channels++;
	 }
	 
	 // Accelerometers
	 if( gConfig.x_accel_enabled )
  e8:	f898 c0a8 	ldrb.w	ip, [r8, #168]
  ec:	f1bc 0f00 	cmp.w	ip, #0	; 0x0
  f0:	d167      	bne.n	1c2 <SendDataPacket+0x1c2>
  f2:	4627      	mov	r7, r4
  f4:	4674      	mov	r4, lr
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:685
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.accel_x) & 0x0FF);
		  
		  active_channels++;
	 }
	 
	 if( gConfig.y_accel_enabled )
  f6:	f898 e0a9 	ldrb.w	lr, [r8, #169]
  fa:	f1be 0f00 	cmp.w	lr, #0	; 0x0
  fe:	d14e      	bne.n	19e <SendDataPacket+0x19e>
 100:	463e      	mov	r6, r7
 102:	4627      	mov	r7, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:693
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.accel_y) & 0x0FF);
		  
		  active_channels++;
	 }
	 
	 if( gConfig.z_accel_enabled )
 104:	f898 40aa 	ldrb.w	r4, [r8, #170]
 108:	b17c      	cbz	r4, 22 <gSensorData+0x22>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:695
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.accel_z >> 8) & 0x0FF);
 10a:	f240 0300 	movw	r3, #0	; 0x0
 10e:	f2c0 0300 	movt	r3, #0	; 0x0
 112:	8958      	ldrh	r0, [r3, #10]
 114:	aa16      	add	r2, sp, #88
 116:	1951      	adds	r1, r2, r5
 118:	0a03      	lsrs	r3, r0, #8
 11a:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:696
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.accel_z) & 0x0FF);
 11e:	eb02 0247 	add.w	r2, r2, r7, lsl #1
 122:	1c73      	adds	r3, r6, #1
 124:	f802 0c25 	strb.w	r0, [r2, #-37]
 128:	005d      	lsls	r5, r3, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:703
		  active_channels++;
	 }
	 
	 NewPacket.length = 2*active_channels + 2;
	 
	 NewPacket.packet_data[0] = (gConfig.psi_enabled << 7) | (gConfig.theta_enabled << 6) | (gConfig.phi_enabled << 5)
 12a:	9a02      	ldr	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:701
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.accel_z) & 0x0FF);
		  
		  active_channels++;
	 }
	 
	 NewPacket.length = 2*active_channels + 2;
 12c:	f88d 502d 	strb.w	r5, [sp, #45]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:703
	 
	 NewPacket.packet_data[0] = (gConfig.psi_enabled << 7) | (gConfig.theta_enabled << 6) | (gConfig.phi_enabled << 5)
 130:	0193      	lsls	r3, r2, #6
 132:	9a01      	ldr	r2, [sp, #4]
 134:	ea43 13c2 	orr.w	r3, r3, r2, lsl #7
 138:	9a08      	ldr	r2, [sp, #32]
 13a:	4313      	orrs	r3, r2
 13c:	9a03      	ldr	r2, [sp, #12]
 13e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 142:	9a04      	ldr	r2, [sp, #16]
 144:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 148:	9a05      	ldr	r2, [sp, #20]
 14a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 14e:	9a06      	ldr	r2, [sp, #24]
 150:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 154:	9a07      	ldr	r2, [sp, #28]
 156:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 15a:	f88d 3030 	strb.w	r3, [sp, #48]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:706
										  | (gConfig.psi_dot_enabled << 4) | (gConfig.theta_dot_enabled << 3) | (gConfig.phi_dot_enabled << 2)
										  | (gConfig.x_mag_enabled << 1) | (gConfig.y_mag_enabled);
	 NewPacket.packet_data[1] = (gConfig.z_mag_enabled << 7) | (gConfig.x_gyro_enabled << 6) | (gConfig.y_gyro_enabled << 5) | (gConfig.z_gyro_enabled << 4)
 15e:	9b09      	ldr	r3, [sp, #36]
 160:	01da      	lsls	r2, r3, #7
 162:	ea42 128b 	orr.w	r2, r2, fp, lsl #6
 166:	ea42 124a 	orr.w	r2, r2, sl, lsl #5
 16a:	ea42 1209 	orr.w	r2, r2, r9, lsl #4
 16e:	ea42 02cc 	orr.w	r2, r2, ip, lsl #3
 172:	ea42 028e 	orr.w	r2, r2, lr, lsl #2
 176:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:563
void SendDataPacket( )
{
	 USARTPacket NewPacket;
	 int32_t active_channels = 0;
	  
	 NewPacket.PT = SENSOR_DATA;
 17a:	f06f 0348 	mvn.w	r3, #72	; 0x48
 17e:	ac16      	add	r4, sp, #88
 180:	f804 3d2c 	strb.w	r3, [r4, #-44]!
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:709
										  | (gConfig.psi_dot_enabled << 4) | (gConfig.theta_dot_enabled << 3) | (gConfig.phi_dot_enabled << 2)
										  | (gConfig.x_mag_enabled << 1) | (gConfig.y_mag_enabled);
	 NewPacket.packet_data[1] = (gConfig.z_mag_enabled << 7) | (gConfig.x_gyro_enabled << 6) | (gConfig.y_gyro_enabled << 5) | (gConfig.z_gyro_enabled << 4)
										  | (gConfig.x_accel_enabled  << 3) | (gConfig.y_accel_enabled << 2) | (gConfig.z_accel_enabled << 1);
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
 184:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:706
	 NewPacket.length = 2*active_channels + 2;
	 
	 NewPacket.packet_data[0] = (gConfig.psi_enabled << 7) | (gConfig.theta_enabled << 6) | (gConfig.phi_enabled << 5)
										  | (gConfig.psi_dot_enabled << 4) | (gConfig.theta_dot_enabled << 3) | (gConfig.phi_dot_enabled << 2)
										  | (gConfig.x_mag_enabled << 1) | (gConfig.y_mag_enabled);
	 NewPacket.packet_data[1] = (gConfig.z_mag_enabled << 7) | (gConfig.x_gyro_enabled << 6) | (gConfig.y_gyro_enabled << 5) | (gConfig.z_gyro_enabled << 4)
 186:	f88d 2031 	strb.w	r2, [sp, #49]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:709
										  | (gConfig.x_accel_enabled  << 3) | (gConfig.y_accel_enabled << 2) | (gConfig.z_accel_enabled << 1);
	 
	 NewPacket.checksum = ComputeChecksum( &NewPacket );
 18a:	f7ff fffe 	bl	0 <ComputeChecksum>
 18e:	f8ad 002e 	strh.w	r0, [sp, #46]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:712
	 
	 // This is the ONLY packet that is not required to send packets using the SendTXPacketSafe() function call.
	 SendTXPacket( &NewPacket );
 192:	4620      	mov	r0, r4
 194:	f7ff fffe 	bl	0 <SendTXPacket>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:713
}
 198:	b017      	add	sp, #92
 19a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:687
		  active_channels++;
	 }
	 
	 if( gConfig.y_accel_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.accel_y >> 8) & 0x0FF);
 19e:	f240 0300 	movw	r3, #0	; 0x0
 1a2:	f2c0 0300 	movt	r3, #0	; 0x0
 1a6:	8918      	ldrh	r0, [r3, #8]
 1a8:	ab16      	add	r3, sp, #88
 1aa:	1959      	adds	r1, r3, r5
 1ac:	0a03      	lsrs	r3, r0, #8
 1ae:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:688
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.accel_y) & 0x0FF);
 1b2:	ab16      	add	r3, sp, #88
 1b4:	eb03 0244 	add.w	r2, r3, r4, lsl #1
 1b8:	1c7e      	adds	r6, r7, #1
 1ba:	f802 0c25 	strb.w	r0, [r2, #-37]
 1be:	0075      	lsls	r5, r6, #1
 1c0:	e7a0      	b.n	104 <SendDataPacket+0x104>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:679
	 }
	 
	 // Accelerometers
	 if( gConfig.x_accel_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.accel_x >> 8) & 0x0FF);
 1c2:	f240 0300 	movw	r3, #0	; 0x0
 1c6:	f2c0 0300 	movt	r3, #0	; 0x0
 1ca:	88d8      	ldrh	r0, [r3, #6]
 1cc:	aa16      	add	r2, sp, #88
 1ce:	1951      	adds	r1, r2, r5
 1d0:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:680
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.accel_x) & 0x0FF);
 1d2:	eb02 024e 	add.w	r2, r2, lr, lsl #1
 1d6:	1c67      	adds	r7, r4, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:679
	 }
	 
	 // Accelerometers
	 if( gConfig.x_accel_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.accel_x >> 8) & 0x0FF);
 1d8:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:680
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.accel_x) & 0x0FF);
 1dc:	007d      	lsls	r5, r7, #1
 1de:	f802 0c25 	strb.w	r0, [r2, #-37]
 1e2:	e788      	b.n	ffffff14 <gSensorData+0xffffff14>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:670
		  active_channels++;		  
	 }
	 
	 if( gConfig.z_gyro_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.gyro_z >> 8) & 0x0FF);
 1e4:	f240 0300 	movw	r3, #0	; 0x0
 1e8:	f2c0 0300 	movt	r3, #0	; 0x0
 1ec:	8898      	ldrh	r0, [r3, #4]
 1ee:	ab16      	add	r3, sp, #88
 1f0:	1959      	adds	r1, r3, r5
 1f2:	0a03      	lsrs	r3, r0, #8
 1f4:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:671
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.gyro_z) & 0x0FF);
 1f8:	ab16      	add	r3, sp, #88
 1fa:	eb03 024c 	add.w	r2, r3, ip, lsl #1
 1fe:	f10e 0401 	add.w	r4, lr, #1	; 0x1
 202:	f802 0c25 	strb.w	r0, [r2, #-37]
 206:	0065      	lsls	r5, r4, #1
 208:	e76e      	b.n	e8 <SendDataPacket+0xe8>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:662
		  active_channels++;
	 }
	 
	 if( gConfig.y_gyro_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.gyro_y >> 8) & 0x0FF);
 20a:	f240 0300 	movw	r3, #0	; 0x0
 20e:	f2c0 0300 	movt	r3, #0	; 0x0
 212:	8858      	ldrh	r0, [r3, #2]
 214:	aa16      	add	r2, sp, #88
 216:	1951      	adds	r1, r2, r5
 218:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:663
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.gyro_y) & 0x0FF);
 21a:	eb02 0244 	add.w	r2, r2, r4, lsl #1
 21e:	f10c 0e01 	add.w	lr, ip, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:662
		  active_channels++;
	 }
	 
	 if( gConfig.y_gyro_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.gyro_y >> 8) & 0x0FF);
 222:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:663
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.gyro_y) & 0x0FF);
 226:	ea4f 054e 	mov.w	r5, lr, lsl #1
 22a:	f802 0c25 	strb.w	r0, [r2, #-37]
 22e:	e754      	b.n	fffffeac <gSensorData+0xfffffeac>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:654
	 	 
	 
	 // Rate gyros
	 if( gConfig.x_gyro_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.gyro_x >> 8) & 0x0FF);
 230:	f240 0300 	movw	r3, #0	; 0x0
 234:	f2c0 0300 	movt	r3, #0	; 0x0
 238:	8818      	ldrh	r0, [r3, #0]
 23a:	ab16      	add	r3, sp, #88
 23c:	1959      	adds	r1, r3, r5
 23e:	0a03      	lsrs	r3, r0, #8
 240:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:655
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.gyro_x) & 0x0FF);
 244:	ab16      	add	r3, sp, #88
 246:	eb03 024e 	add.w	r2, r3, lr, lsl #1
 24a:	f104 0c01 	add.w	ip, r4, #1	; 0x1
 24e:	f802 0c25 	strb.w	r0, [r2, #-37]
 252:	ea4f 054c 	mov.w	r5, ip, lsl #1
 256:	e738      	b.n	fffffe74 <gSensorData+0xfffffe74>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:644
		  active_channels++;
	 }
	 
	 if( gConfig.z_mag_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.mag_z >> 8) & 0x0FF);
 258:	f240 0300 	movw	r3, #0	; 0x0
 25c:	f2c0 0300 	movt	r3, #0	; 0x0
 260:	8a58      	ldrh	r0, [r3, #18]
 262:	aa16      	add	r2, sp, #88
 264:	1951      	adds	r1, r2, r5
 266:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:645
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.mag_z) & 0x0FF);
 268:	eb02 024c 	add.w	r2, r2, ip, lsl #1
 26c:	f10e 0401 	add.w	r4, lr, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:644
		  active_channels++;
	 }
	 
	 if( gConfig.z_mag_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.mag_z >> 8) & 0x0FF);
 270:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:645
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.mag_z) & 0x0FF);
 274:	0065      	lsls	r5, r4, #1
 276:	f802 0c25 	strb.w	r0, [r2, #-37]
 27a:	e71e      	b.n	fffffe40 <gSensorData+0xfffffe40>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:636
		  active_channels++;
	 }
	 
	 if( gConfig.y_mag_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.mag_y >> 8) & 0x0FF);
 27c:	f240 0300 	movw	r3, #0	; 0x0
 280:	f2c0 0300 	movt	r3, #0	; 0x0
 284:	8a18      	ldrh	r0, [r3, #16]
 286:	aa16      	add	r2, sp, #88
 288:	1951      	adds	r1, r2, r5
 28a:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:637
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.mag_y) & 0x0FF);
 28c:	eb02 0244 	add.w	r2, r2, r4, lsl #1
 290:	f10c 0e01 	add.w	lr, ip, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:636
		  active_channels++;
	 }
	 
	 if( gConfig.y_mag_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.mag_y >> 8) & 0x0FF);
 294:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:637
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.mag_y) & 0x0FF);
 298:	ea4f 054e 	mov.w	r5, lr, lsl #1
 29c:	f802 0c25 	strb.w	r0, [r2, #-37]
 2a0:	e703      	b.n	fffffe0a <gSensorData+0xfffffe0a>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:628
	 }
	 
	 // Magnetic Sensors
	 if( gConfig.x_mag_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.mag_x >> 8) & 0x0FF);
 2a2:	f240 0300 	movw	r3, #0	; 0x0
 2a6:	f2c0 0300 	movt	r3, #0	; 0x0
 2aa:	89d8      	ldrh	r0, [r3, #14]
 2ac:	aa16      	add	r2, sp, #88
 2ae:	1951      	adds	r1, r2, r5
 2b0:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:629
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.mag_x) & 0x0FF);
 2b2:	eb02 0246 	add.w	r2, r2, r6, lsl #1
 2b6:	f104 0c01 	add.w	ip, r4, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:628
	 }
	 
	 // Magnetic Sensors
	 if( gConfig.x_mag_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((gSensorData.mag_x >> 8) & 0x0FF);
 2ba:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:629
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((gSensorData.mag_x) & 0x0FF);
 2be:	ea4f 054c 	mov.w	r5, ip, lsl #1
 2c2:	f802 0c25 	strb.w	r0, [r2, #-37]
 2c6:	e6e8      	b.n	9a <SendDataPacket+0x9a>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:601
	 // There are 2^16 possible possible values in a 16-bit integer.  We would
	 // like to split the possible range of rates from -450 to 450 degrees
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
	 int16_t roll_rate = (int16_t)(72.8178*gEstimatedStates.roll_rate);
 2c8:	4620      	mov	r0, r4
 2ca:	f7ff fffe 	bl	0 <__aeabi_f2d>
 2ce:	a344      	add	r3, pc, #272	(adr r3, 3e0 <SendDataPacket+0x3e0>)
 2d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 2d4:	f7ff fffe 	bl	0 <__aeabi_dmul>
 2d8:	f7ff fffe 	bl	0 <__aeabi_d2iz>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:619
		  
		  active_channels++;
	 }
	 if( gConfig.phi_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((roll_rate >> 8) & 0x0FF);
 2dc:	aa16      	add	r2, sp, #88
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:601
	 // There are 2^16 possible possible values in a 16-bit integer.  We would
	 // like to split the possible range of rates from -450 to 450 degrees
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
	 int16_t roll_rate = (int16_t)(72.8178*gEstimatedStates.roll_rate);
 2de:	b280      	uxth	r0, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:619
		  
		  active_channels++;
	 }
	 if( gConfig.phi_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((roll_rate >> 8) & 0x0FF);
 2e0:	1951      	adds	r1, r2, r5
 2e2:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:620
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((roll_rate) & 0x0FF);
 2e4:	eb02 0247 	add.w	r2, r2, r7, lsl #1
 2e8:	1c74      	adds	r4, r6, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:619
		  
		  active_channels++;
	 }
	 if( gConfig.phi_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((roll_rate >> 8) & 0x0FF);
 2ea:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:620
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((roll_rate) & 0x0FF);
 2ee:	0065      	lsls	r5, r4, #1
 2f0:	f802 0c25 	strb.w	r0, [r2, #-37]
 2f4:	e6c9      	b.n	8a <SendDataPacket+0x8a>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:600
	 // Convert angle rate estimates from floats to int16_ts for transmission.
	 // There are 2^16 possible possible values in a 16-bit integer.  We would
	 // like to split the possible range of rates from -450 to 450 degrees
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
 2f6:	4650      	mov	r0, sl
 2f8:	f7ff fffe 	bl	0 <__aeabi_f2d>
 2fc:	a338      	add	r3, pc, #224	(adr r3, 3e0 <SendDataPacket+0x3e0>)
 2fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 302:	f7ff fffe 	bl	0 <__aeabi_dmul>
 306:	f7ff fffe 	bl	0 <__aeabi_d2iz>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:612
		  
		  active_channels++;
	 }
	 if( gConfig.theta_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((pitch_rate >> 8) & 0x0FF);
 30a:	aa16      	add	r2, sp, #88
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:600
	 // Convert angle rate estimates from floats to int16_ts for transmission.
	 // There are 2^16 possible possible values in a 16-bit integer.  We would
	 // like to split the possible range of rates from -450 to 450 degrees
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
 30c:	b280      	uxth	r0, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:612
		  
		  active_channels++;
	 }
	 if( gConfig.theta_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((pitch_rate >> 8) & 0x0FF);
 30e:	1951      	adds	r1, r2, r5
 310:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:613
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((pitch_rate) & 0x0FF);
 312:	eb02 0249 	add.w	r2, r2, r9, lsl #1
 316:	1c7e      	adds	r6, r7, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:612
		  
		  active_channels++;
	 }
	 if( gConfig.theta_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((pitch_rate >> 8) & 0x0FF);
 318:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:613
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((pitch_rate) & 0x0FF);
 31c:	0075      	lsls	r5, r6, #1
 31e:	f802 0c25 	strb.w	r0, [r2, #-37]
 322:	e6aa      	b.n	fffffd58 <__aeabi_f2d+0xfffffd58>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:599
	 
	 // Convert angle rate estimates from floats to int16_ts for transmission.
	 // There are 2^16 possible possible values in a 16-bit integer.  We would
	 // like to split the possible range of rates from -450 to 450 degrees
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
 324:	f7ff fffe 	bl	0 <__aeabi_f2d>
 328:	a32d      	add	r3, pc, #180	(adr r3, 3e0 <SendDataPacket+0x3e0>)
 32a:	e9d3 2300 	ldrd	r2, r3, [r3]
 32e:	f7ff fffe 	bl	0 <__aeabi_dmul>
 332:	f7ff fffe 	bl	0 <__aeabi_d2iz>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:605
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
	 int16_t roll_rate = (int16_t)(72.8178*gEstimatedStates.roll_rate);
	 
	 if( gConfig.psi_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((yaw_rate >> 8) & 0x0FF);
 336:	aa16      	add	r2, sp, #88
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:599
	 
	 // Convert angle rate estimates from floats to int16_ts for transmission.
	 // There are 2^16 possible possible values in a 16-bit integer.  We would
	 // like to split the possible range of rates from -450 to 450 degrees
	 // into 2^16 angles.  (2^16)/900 = 72.8178 ticks/degree.  
	 int16_t yaw_rate = (int16_t)(72.8178*gEstimatedStates.yaw_rate);
 338:	b280      	uxth	r0, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:605
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
	 int16_t roll_rate = (int16_t)(72.8178*gEstimatedStates.roll_rate);
	 
	 if( gConfig.psi_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((yaw_rate >> 8) & 0x0FF);
 33a:	1951      	adds	r1, r2, r5
 33c:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:606
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((yaw_rate) & 0x0FF);
 33e:	eb02 0246 	add.w	r2, r2, r6, lsl #1
 342:	f109 0701 	add.w	r7, r9, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:605
	 int16_t pitch_rate = (int16_t)(72.8178*gEstimatedStates.pitch_rate);
	 int16_t roll_rate = (int16_t)(72.8178*gEstimatedStates.roll_rate);
	 
	 if( gConfig.psi_dot_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((yaw_rate >> 8) & 0x0FF);
 346:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:606
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((yaw_rate) & 0x0FF);
 34a:	007d      	lsls	r5, r7, #1
 34c:	f802 0c25 	strb.w	r0, [r2, #-37]
 350:	e68b      	b.n	6a <SendDataPacket+0x6a>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:571
	 // There are 2^15 - 1 possible positive values in a 16-bit integer.  We would
	 // like to split the possible range of possitive angles from 0 to 360 degrees
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
	 int16_t pitch = (int16_t)(91.0194*gEstimatedStates.pitch);
	 int16_t roll = (int16_t)(91.0194*gEstimatedStates.roll);
 352:	4648      	mov	r0, r9
 354:	f7ff fffe 	bl	0 <__aeabi_f2d>
 358:	a323      	add	r3, pc, #140	(adr r3, 3e8 <SendDataPacket+0x3e8>)
 35a:	e9d3 2300 	ldrd	r2, r3, [r3]
 35e:	f7ff fffe 	bl	0 <__aeabi_dmul>
 362:	f7ff fffe 	bl	0 <__aeabi_d2iz>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:589
		  
		  active_channels++;
	 }
	 if( gConfig.phi_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((roll >> 8) & 0x0FF);
 366:	aa16      	add	r2, sp, #88
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:571
	 // There are 2^15 - 1 possible positive values in a 16-bit integer.  We would
	 // like to split the possible range of possitive angles from 0 to 360 degrees
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
	 int16_t pitch = (int16_t)(91.0194*gEstimatedStates.pitch);
	 int16_t roll = (int16_t)(91.0194*gEstimatedStates.roll);
 368:	b280      	uxth	r0, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:589
		  
		  active_channels++;
	 }
	 if( gConfig.phi_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((roll >> 8) & 0x0FF);
 36a:	1951      	adds	r1, r2, r5
 36c:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:590
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((roll) & 0x0FF);
 36e:	eb02 024a 	add.w	r2, r2, sl, lsl #1
 372:	f106 0901 	add.w	r9, r6, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:589
		  
		  active_channels++;
	 }
	 if( gConfig.phi_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((roll >> 8) & 0x0FF);
 376:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:590
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((roll) & 0x0FF);
 37a:	ea4f 0549 	mov.w	r5, r9, lsl #1
 37e:	f802 0c25 	strb.w	r0, [r2, #-37]
 382:	e666      	b.n	52 <SendDataPacket+0x52>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:570
	 // Convert angle estimates from floats to int16_ts for transmission.
	 // There are 2^15 - 1 possible positive values in a 16-bit integer.  We would
	 // like to split the possible range of possitive angles from 0 to 360 degrees
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
	 int16_t pitch = (int16_t)(91.0194*gEstimatedStates.pitch);
 384:	4630      	mov	r0, r6
 386:	f7ff fffe 	bl	0 <__aeabi_f2d>
 38a:	a317      	add	r3, pc, #92	(adr r3, 3e8 <SendDataPacket+0x3e8>)
 38c:	e9d3 2300 	ldrd	r2, r3, [r3]
 390:	f7ff fffe 	bl	0 <__aeabi_dmul>
 394:	f7ff fffe 	bl	0 <__aeabi_d2iz>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:582
		  
		  active_channels++;
	 }
	 if( gConfig.theta_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((pitch >> 8) & 0x0FF);
 398:	aa16      	add	r2, sp, #88
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:570
	 // Convert angle estimates from floats to int16_ts for transmission.
	 // There are 2^15 - 1 possible positive values in a 16-bit integer.  We would
	 // like to split the possible range of possitive angles from 0 to 360 degrees
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
	 int16_t pitch = (int16_t)(91.0194*gEstimatedStates.pitch);
 39a:	b280      	uxth	r0, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:582
		  
		  active_channels++;
	 }
	 if( gConfig.theta_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((pitch >> 8) & 0x0FF);
 39c:	1951      	adds	r1, r2, r5
 39e:	0a03      	lsrs	r3, r0, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:583
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((pitch) & 0x0FF);
 3a0:	eb02 0247 	add.w	r2, r2, r7, lsl #1
 3a4:	f10a 0601 	add.w	r6, sl, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:582
		  
		  active_channels++;
	 }
	 if( gConfig.theta_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((pitch >> 8) & 0x0FF);
 3a8:	f801 3c28 	strb.w	r3, [r1, #-40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:583
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((pitch) & 0x0FF);
 3ac:	0075      	lsls	r5, r6, #1
 3ae:	f802 0c25 	strb.w	r0, [r2, #-37]
 3b2:	e646      	b.n	fffffc90 <__aeabi_f2d+0xfffffc90>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:569

	 // Convert angle estimates from floats to int16_ts for transmission.
	 // There are 2^15 - 1 possible positive values in a 16-bit integer.  We would
	 // like to split the possible range of possitive angles from 0 to 360 degrees
	 // into 2^15 - 1 angles.  (2^15 - 1)/360 = 91.0194 ticks/degree.  
	 int16_t yaw = (int16_t)(91.0194*gEstimatedStates.yaw);
 3b4:	f7ff fffe 	bl	0 <__aeabi_f2d>
 3b8:	a30b      	add	r3, pc, #44	(adr r3, 3e8 <SendDataPacket+0x3e8>)
 3ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 3be:	f7ff fffe 	bl	0 <__aeabi_dmul>
 3c2:	f7ff fffe 	bl	0 <__aeabi_d2iz>
 3c6:	b280      	uxth	r0, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:575
	 int16_t pitch = (int16_t)(91.0194*gEstimatedStates.pitch);
	 int16_t roll = (int16_t)(91.0194*gEstimatedStates.roll);
	 
	 if( gConfig.psi_enabled )
	 {
		  NewPacket.packet_data[2*active_channels+2] = (uint8_t)((yaw >> 8) & 0x0FF);
 3c8:	0a03      	lsrs	r3, r0, #8
 3ca:	f88d 3032 	strb.w	r3, [sp, #50]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:576
		  NewPacket.packet_data[2*active_channels+3] = (uint8_t)((yaw) & 0x0FF);
 3ce:	f88d 0033 	strb.w	r0, [sp, #51]
 3d2:	2701      	movs	r7, #1
 3d4:	f04f 0a02 	mov.w	sl, #2	; 0x2
 3d8:	2504      	movs	r5, #4
 3da:	e62a      	b.n	32 <__aeabi_d2iz+0x32>
 3dc:	46c0      	nop			(mov r8, r8)
 3de:	46c0      	nop			(mov r8, r8)
 3e0:	d5cfaace 	.word	0xd5cfaace
 3e4:	40523456 	.word	0x40523456
 3e8:	d97f62b7 	.word	0xd97f62b7
 3ec:	4056c13d 	.word	0x4056c13d
Disassembly of section .text.ProcessPacket:

00000000 <ProcessPacket>:
ProcessPacket():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:24
* Return         : None
* Description    : Takes a packet received over the UART and processes it, calling
*						the appropriate functions to act on the new data.
*******************************************************************************/
void ProcessPacket( USARTPacket* new_packet )
{
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:31
	 int32_t result;
	 fConvert iTof;
	 int i, j;
	 
	 // Determine the packet type
	 switch( new_packet->PT )
   2:	7801      	ldrb	r1, [r0, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:24
* Return         : None
* Description    : Takes a packet received over the UART and processes it, calling
*						the appropriate functions to act on the new data.
*******************************************************************************/
void ProcessPacket( USARTPacket* new_packet )
{
   4:	b08d      	sub	sp, #52
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:31
	 int32_t result;
	 fConvert iTof;
	 int i, j;
	 
	 // Determine the packet type
	 switch( new_packet->PT )
   6:	1e4b      	subs	r3, r1, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:24
* Return         : None
* Description    : Takes a packet received over the UART and processes it, calling
*						the appropriate functions to act on the new data.
*******************************************************************************/
void ProcessPacket( USARTPacket* new_packet )
{
   8:	4605      	mov	r5, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:31
	 int32_t result;
	 fConvert iTof;
	 int i, j;
	 
	 // Determine the packet type
	 switch( new_packet->PT )
   a:	2b9f      	cmp	r3, #159
   c:	f200 80a2 	bhi.w	154 <ProcessPacket+0x154>
  10:	e8df f013 	tbh	[pc, r3, lsl #1]
  14:	033f0342 	.word	0x033f0342
  18:	0339033c 	.word	0x0339033c
  1c:	03330336 	.word	0x03330336
  20:	032d0330 	.word	0x032d0330
  24:	0327032a 	.word	0x0327032a
  28:	03210324 	.word	0x03210324
  2c:	031b031e 	.word	0x031b031e
  30:	03150318 	.word	0x03150318
  34:	030f0312 	.word	0x030f0312
  38:	00a000a0 	.word	0x00a000a0
  3c:	00a000a0 	.word	0x00a000a0
  40:	00a000a0 	.word	0x00a000a0
  44:	00a000a0 	.word	0x00a000a0
  48:	00a000a0 	.word	0x00a000a0
  4c:	00a000a0 	.word	0x00a000a0
  50:	00a000a0 	.word	0x00a000a0
  54:	00a000a0 	.word	0x00a000a0
  58:	00a000a0 	.word	0x00a000a0
  5c:	00a000a0 	.word	0x00a000a0
  60:	00a000a0 	.word	0x00a000a0
  64:	00a000a0 	.word	0x00a000a0
  68:	00a000a0 	.word	0x00a000a0
  6c:	00a000a0 	.word	0x00a000a0
  70:	00a000a0 	.word	0x00a000a0
  74:	00a000a0 	.word	0x00a000a0
  78:	00a000a0 	.word	0x00a000a0
  7c:	00a000a0 	.word	0x00a000a0
  80:	00a000a0 	.word	0x00a000a0
  84:	00a000a0 	.word	0x00a000a0
  88:	00a000a0 	.word	0x00a000a0
  8c:	00a000a0 	.word	0x00a000a0
  90:	00a000a0 	.word	0x00a000a0
  94:	00a000a0 	.word	0x00a000a0
  98:	00a000a0 	.word	0x00a000a0
  9c:	00a000a0 	.word	0x00a000a0
  a0:	00a000a0 	.word	0x00a000a0
  a4:	00a000a0 	.word	0x00a000a0
  a8:	00a000a0 	.word	0x00a000a0
  ac:	00a000a0 	.word	0x00a000a0
  b0:	00a000a0 	.word	0x00a000a0
  b4:	00a000a0 	.word	0x00a000a0
  b8:	00a000a0 	.word	0x00a000a0
  bc:	00a000a0 	.word	0x00a000a0
  c0:	00a000a0 	.word	0x00a000a0
  c4:	00a000a0 	.word	0x00a000a0
  c8:	00a000a0 	.word	0x00a000a0
  cc:	00a000a0 	.word	0x00a000a0
  d0:	00a000a0 	.word	0x00a000a0
  d4:	00a000a0 	.word	0x00a000a0
  d8:	00a000a0 	.word	0x00a000a0
  dc:	00a000a0 	.word	0x00a000a0
  e0:	00a000a0 	.word	0x00a000a0
  e4:	00a000a0 	.word	0x00a000a0
  e8:	00a000a0 	.word	0x00a000a0
  ec:	00a000a0 	.word	0x00a000a0
  f0:	00a000a0 	.word	0x00a000a0
  f4:	00a000a0 	.word	0x00a000a0
  f8:	00a000a0 	.word	0x00a000a0
  fc:	00a000a0 	.word	0x00a000a0
 100:	00a000a0 	.word	0x00a000a0
 104:	00a000a0 	.word	0x00a000a0
 108:	00a000a0 	.word	0x00a000a0
 10c:	00a000a0 	.word	0x00a000a0
 110:	02b200a0 	.word	0x02b200a0
 114:	02a502ac 	.word	0x02a502ac
 118:	0277028e 	.word	0x0277028e
 11c:	0249025d 	.word	0x0249025d
 120:	02430246 	.word	0x02430246
 124:	021c0236 	.word	0x021c0236
 128:	01e70201 	.word	0x01e70201
 12c:	01af01dc 	.word	0x01af01dc
 130:	01670181 	.word	0x01670181
 134:	01260153 	.word	0x01260153
 138:	00e6010f 	.word	0x00e6010f
 13c:	00d600dc 	.word	0x00d600dc
 140:	00a000a0 	.word	0x00a000a0
 144:	00a000a0 	.word	0x00a000a0
 148:	00a000a0 	.word	0x00a000a0
 14c:	00a000a0 	.word	0x00a000a0
 150:	00b400a0 	.word	0x00b400a0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:498
		  default:
				// The packet was not recognized.  Send an UNRECOGNIZED_PACKET packet
				response_packet.PT = UNRECOGNIZED_PACKET;
				response_packet.length = 1;
				response_packet.packet_data[0] = new_packet->PT;
				response_packet.checksum = ComputeChecksum( &response_packet );
 154:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:495
				SendTransmitModePacket();
		  break;
		  
		  default:
				// The packet was not recognized.  Send an UNRECOGNIZED_PACKET packet
				response_packet.PT = UNRECOGNIZED_PACKET;
 156:	f06f 034b 	mvn.w	r3, #75	; 0x4b
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:496
				response_packet.length = 1;
 15a:	2201      	movs	r2, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:498
				response_packet.packet_data[0] = new_packet->PT;
				response_packet.checksum = ComputeChecksum( &response_packet );
 15c:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:495
				SendTransmitModePacket();
		  break;
		  
		  default:
				// The packet was not recognized.  Send an UNRECOGNIZED_PACKET packet
				response_packet.PT = UNRECOGNIZED_PACKET;
 15e:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:496
				response_packet.length = 1;
 162:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:497
				response_packet.packet_data[0] = new_packet->PT;
 166:	f88d 1008 	strb.w	r1, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:498
				response_packet.checksum = ComputeChecksum( &response_packet );
 16a:	f7ff fffe 	bl	0 <ComputeChecksum>
 16e:	f8ad 0006 	strh.w	r0, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:500
				
				SendTXPacketSafe( &response_packet );
 172:	4620      	mov	r0, r4
 174:	f7ff fffe 	bl	0 <SendTXPacketSafe>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:505
		  
		  break;
	 }
	 
}
 178:	b00d      	add	sp, #52
 17a:	bdf0      	pop	{r4, r5, r6, r7, pc}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:330
		  // -----------------------------------------------------------------------------
		  case WRITE_TO_FLASH:
				
				// Disable the ADC temporarily - the WRITE_TO_FLASH command takes longer to complete
				// than it takes to fill an input buffer with data.
				ADC_SoftwareStartConvCmd(ADC1, DISABLE);
 17c:	f242 4000 	movw	r0, #9216	; 0x2400
 180:	2100      	movs	r1, #0
 182:	f2c4 0001 	movt	r0, #16385	; 0x4001
 186:	f7ff fffe 	bl	0 <ADC_SoftwareStartConvCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:333
				
				// If BROADCAST_MODE is enabled, turn it off while writing configuration to flash
				if( gConfig.broadcast_enabled == MODE_BROADCAST )
 18a:	f240 0300 	movw	r3, #0	; 0x0
 18e:	f2c0 0300 	movt	r3, #0	; 0x0
 192:	f893 50b8 	ldrb.w	r5, [r3, #184]
 196:	2d01      	cmp	r5, #1
 198:	f000 828e 	beq.w	6b8 <ProcessPacket+0x6b8>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:345
					 // Enable Timer 2
					 TIM_Cmd( TIM2, ENABLE );	
				}
				else
				{
					 result = WriteConfigurationToFlash( );
 19c:	f7ff fffe 	bl	0 <WriteConfigurationToFlash>
 1a0:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:348
				}
		  
				ADC_SoftwareStartConvCmd(ADC1, ENABLE);
 1a2:	f242 4000 	movw	r0, #9216	; 0x2400
 1a6:	2101      	movs	r1, #1
 1a8:	f2c4 0001 	movt	r0, #16385	; 0x4001
 1ac:	f7ff fffe 	bl	0 <ADC_SoftwareStartConvCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:350
								
				if( result == FLASH_COMPLETE )
 1b0:	2c04      	cmp	r4, #4
 1b2:	f000 827d 	beq.w	6b0 <ProcessPacket+0x6b0>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:356
				{
					 SendCommandSuccessPacket( WRITE_TO_FLASH );
				}
				else
				{
					 SendCommandFailedPacket( WRITE_TO_FLASH, result );
 1b6:	20a0      	movs	r0, #160
 1b8:	4621      	mov	r1, r4
 1ba:	f7ff fffe 	bl	0 <ProcessPacket>
 1be:	e7db      	b.n	ffffffba <ResetToFactory+0xffffffba>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:318
		  // -----------------------------------------------------------------------------
		  // RESET_TO_FACTORY packet
		  // -----------------------------------------------------------------------------
		  case RESET_TO_FACTORY:
				
				ResetToFactory();
 1c0:	f7ff fffe 	bl	0 <ResetToFactory>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:320
		  
				SendCommandSuccessPacket( RESET_TO_FACTORY );
 1c4:	2096      	movs	r0, #150
 1c6:	f7ff fffe 	bl	0 <ProcessPacket>
 1ca:	e7d5      	b.n	ffffffae <gEstimatedStates+0xffffffae>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:308
		  // -----------------------------------------------------------------------------
		  // EKF_RESET packet
		  // -----------------------------------------------------------------------------
		  case EKF_RESET:
				
				EKF_Init( &gEstimatedStates );
 1cc:	f240 0000 	movw	r0, #0	; 0x0
 1d0:	f2c0 0000 	movt	r0, #0	; 0x0
 1d4:	f7ff fffe 	bl	0 <EKF_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:310
		  
				SendCommandSuccessPacket( EKF_RESET );
 1d8:	2095      	movs	r0, #149
 1da:	f7ff fffe 	bl	0 <ProcessPacket>
 1de:	e7cb      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:291
				
		  // -----------------------------------------------------------------------------
		  // SET_GYRO_SCALE packet
		  // -----------------------------------------------------------------------------
		  case SET_GYRO_SCALE:
				iTof.uint32_val = (new_packet->packet_data[0] << 24) | (new_packet->packet_data[1] << 16) | (new_packet->packet_data[2] << 8) | (new_packet->packet_data[3]);
 1e0:	7943      	ldrb	r3, [r0, #5]
 1e2:	7901      	ldrb	r1, [r0, #4]
 1e4:	79c2      	ldrb	r2, [r0, #7]
 1e6:	041b      	lsls	r3, r3, #16
 1e8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 1ec:	7981      	ldrb	r1, [r0, #6]
 1ee:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:292
				gConfig.z_gyro_scale = iTof.float_val;
 1f0:	f240 0000 	movw	r0, #0	; 0x0
 1f4:	f2c0 0000 	movt	r0, #0	; 0x0
 1f8:	ea43 2201 	orr.w	r2, r3, r1, lsl #8
 1fc:	6102      	str	r2, [r0, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:294
				
				iTof.uint32_val = (new_packet->packet_data[4] << 24) | (new_packet->packet_data[5] << 16) | (new_packet->packet_data[6] << 8) | (new_packet->packet_data[7]);
 1fe:	7a6b      	ldrb	r3, [r5, #9]
 200:	7a29      	ldrb	r1, [r5, #8]
 202:	7aea      	ldrb	r2, [r5, #11]
 204:	041b      	lsls	r3, r3, #16
 206:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 20a:	7aa9      	ldrb	r1, [r5, #10]
 20c:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:295
				gConfig.y_gyro_scale = iTof.float_val;
 20e:	ea43 2201 	orr.w	r2, r3, r1, lsl #8
 212:	60c2      	str	r2, [r0, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:297
		  
				iTof.uint32_val = (new_packet->packet_data[8] << 24) | (new_packet->packet_data[9] << 16) | (new_packet->packet_data[10] << 8) | (new_packet->packet_data[11]);
 214:	7b6b      	ldrb	r3, [r5, #13]
 216:	7b29      	ldrb	r1, [r5, #12]
 218:	7bea      	ldrb	r2, [r5, #15]
 21a:	041b      	lsls	r3, r3, #16
 21c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 220:	7ba9      	ldrb	r1, [r5, #14]
 222:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:298
				gConfig.x_gyro_scale = iTof.float_val;
 224:	ea43 2201 	orr.w	r2, r3, r1, lsl #8
 228:	6082      	str	r2, [r0, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:300
		  
				SendCommandSuccessPacket( SET_GYRO_SCALE );
 22a:	2094      	movs	r0, #148
 22c:	f7ff fffe 	bl	0 <ProcessPacket>
 230:	e7a2      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:104
		  
		  // -----------------------------------------------------------------------------
		  // SET_MAG_BIAS packet - Sets bias term for magnetometer
		  // -----------------------------------------------------------------------------
		  case SET_MAG_BIAS:
				gConfig.z_mag_bias = ((int16_t)new_packet->packet_data[0] << 8) | ((uint16_t)new_packet->packet_data[1] & 0x0FF);
 232:	7902      	ldrb	r2, [r0, #4]
 234:	7943      	ldrb	r3, [r0, #5]
 236:	f240 0100 	movw	r1, #0	; 0x0
 23a:	f2c0 0100 	movt	r1, #0	; 0x0
 23e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 242:	83cb      	strh	r3, [r1, #30]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:105
				gConfig.y_mag_bias = ((int16_t)new_packet->packet_data[2] << 8) | ((uint16_t)new_packet->packet_data[3] & 0x0FF);
 244:	7982      	ldrb	r2, [r0, #6]
 246:	79c3      	ldrb	r3, [r0, #7]
 248:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 24c:	838b      	strh	r3, [r1, #28]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:106
				gConfig.x_mag_bias = ((int16_t)new_packet->packet_data[4] << 8) | ((uint16_t)new_packet->packet_data[5] & 0x0FF);
 24e:	7a02      	ldrb	r2, [r0, #8]
 250:	7a43      	ldrb	r3, [r0, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:108
		  
				SendCommandSuccessPacket( SET_MAG_BIAS );
 252:	2093      	movs	r0, #147
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:106
		  // SET_MAG_BIAS packet - Sets bias term for magnetometer
		  // -----------------------------------------------------------------------------
		  case SET_MAG_BIAS:
				gConfig.z_mag_bias = ((int16_t)new_packet->packet_data[0] << 8) | ((uint16_t)new_packet->packet_data[1] & 0x0FF);
				gConfig.y_mag_bias = ((int16_t)new_packet->packet_data[2] << 8) | ((uint16_t)new_packet->packet_data[3] & 0x0FF);
				gConfig.x_mag_bias = ((int16_t)new_packet->packet_data[4] << 8) | ((uint16_t)new_packet->packet_data[5] & 0x0FF);
 254:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 258:	834b      	strh	r3, [r1, #26]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:108
		  
				SendCommandSuccessPacket( SET_MAG_BIAS );
 25a:	f7ff fffe 	bl	0 <ProcessPacket>
 25e:	e78b      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:31
	 int32_t result;
	 fConvert iTof;
	 int i, j;
	 
	 // Determine the packet type
	 switch( new_packet->PT )
 260:	f04f 0e00 	mov.w	lr, #0	; 0x0
 264:	f240 0700 	movw	r7, #0	; 0x0
 268:	46f4      	mov	ip, lr
 26a:	f2c0 0700 	movt	r7, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:230
				
		  // -----------------------------------------------------------------------------
		  // SET_MAG_CAL packet
		  // -----------------------------------------------------------------------------
		  case SET_MAG_CAL:
				for (i = 0; i < 3; i++ )
 26e:	eb05 030c 	add.w	r3, r5, ip
 272:	1d18      	adds	r0, r3, #4
 274:	ea4f 028e 	mov.w	r2, lr, lsl #2
 278:	ea4f 130e 	mov.w	r3, lr, lsl #4
 27c:	1a9b      	subs	r3, r3, r2
 27e:	3378      	adds	r3, #120
 280:	18fe      	adds	r6, r7, r3
 282:	2400      	movs	r4, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:234
				{
					 for (j = 0; j <3; j++ )
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
 284:	7843      	ldrb	r3, [r0, #1]
 286:	7801      	ldrb	r1, [r0, #0]
 288:	78c2      	ldrb	r2, [r0, #3]
 28a:	041b      	lsls	r3, r3, #16
 28c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 290:	7881      	ldrb	r1, [r0, #2]
 292:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:232
		  // SET_MAG_CAL packet
		  // -----------------------------------------------------------------------------
		  case SET_MAG_CAL:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 294:	3401      	adds	r4, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:236
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
						  
						  gConfig.mag_cal.data[i][j] = iTof.float_val;
 296:	ea43 2201 	orr.w	r2, r3, r1, lsl #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:232
		  // SET_MAG_CAL packet
		  // -----------------------------------------------------------------------------
		  case SET_MAG_CAL:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 29a:	3004      	adds	r0, #4
 29c:	2c03      	cmp	r4, #3
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:236
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
						  
						  gConfig.mag_cal.data[i][j] = iTof.float_val;
 29e:	f846 2b04 	str.w	r2, [r6], #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:232
		  // SET_MAG_CAL packet
		  // -----------------------------------------------------------------------------
		  case SET_MAG_CAL:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 2a2:	d1ef      	bne.n	284 <ProcessPacket+0x284>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:230
				
		  // -----------------------------------------------------------------------------
		  // SET_MAG_CAL packet
		  // -----------------------------------------------------------------------------
		  case SET_MAG_CAL:
				for (i = 0; i < 3; i++ )
 2a4:	f10e 0e01 	add.w	lr, lr, #1	; 0x1
 2a8:	f1be 0f03 	cmp.w	lr, #3	; 0x3
 2ac:	f10c 0c0c 	add.w	ip, ip, #12	; 0xc
 2b0:	d1dd      	bne.n	26e <ProcessPacket+0x26e>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:240
						  
						  gConfig.mag_cal.data[i][j] = iTof.float_val;
					 }
				}
		  
				SendCommandSuccessPacket( SET_MAG_CAL );
 2b2:	2092      	movs	r0, #146
 2b4:	f7ff fffe 	bl	0 <ProcessPacket>
 2b8:	e75e      	b.n	fffffec0 <gSensorData+0xfffffec0>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:269
		  
		  // -----------------------------------------------------------------------------
		  // AUTO_SET_MAG_REF packet
		  // -----------------------------------------------------------------------------
		  case AUTO_SET_MAG_REF:
				gConfig.mag_ref_vector[2] = gSensorData.mag_z;
 2ba:	f240 0300 	movw	r3, #0	; 0x0
 2be:	f2c0 0300 	movt	r3, #0	; 0x0
 2c2:	8a59      	ldrh	r1, [r3, #18]
 2c4:	f240 0200 	movw	r2, #0	; 0x0
 2c8:	f2c0 0200 	movt	r2, #0	; 0x0
 2cc:	f8a2 10a0 	strh.w	r1, [r2, #160]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:270
				gConfig.mag_ref_vector[1] = gSensorData.mag_y;
 2d0:	8a19      	ldrh	r1, [r3, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:271
				gConfig.mag_ref_vector[0] = gSensorData.mag_x;
 2d2:	89db      	ldrh	r3, [r3, #14]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:270
		  // -----------------------------------------------------------------------------
		  // AUTO_SET_MAG_REF packet
		  // -----------------------------------------------------------------------------
		  case AUTO_SET_MAG_REF:
				gConfig.mag_ref_vector[2] = gSensorData.mag_z;
				gConfig.mag_ref_vector[1] = gSensorData.mag_y;
 2d4:	f8a2 109e 	strh.w	r1, [r2, #158]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:271
				gConfig.mag_ref_vector[0] = gSensorData.mag_x;
 2d8:	f8a2 309c 	strh.w	r3, [r2, #156]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:273
		  
				SendMagRefVectorPacket();
 2dc:	f7ff fffe 	bl	0 <ProcessPacket>
 2e0:	e74a      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:247
				
		  // -----------------------------------------------------------------------------
		  // SET_MAG_REF_VECTOR packet
		  // -----------------------------------------------------------------------------
		  case SET_MAG_REF_VECTOR:
				gConfig.mag_ref_vector[2] = (new_packet->packet_data[0] << 8) | new_packet->packet_data[1];
 2e2:	7902      	ldrb	r2, [r0, #4]
 2e4:	7943      	ldrb	r3, [r0, #5]
 2e6:	f240 0100 	movw	r1, #0	; 0x0
 2ea:	f2c0 0100 	movt	r1, #0	; 0x0
 2ee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 2f2:	f8a1 30a0 	strh.w	r3, [r1, #160]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:248
				gConfig.mag_ref_vector[1] = (new_packet->packet_data[2] << 8) | new_packet->packet_data[3];
 2f6:	7982      	ldrb	r2, [r0, #6]
 2f8:	79c3      	ldrb	r3, [r0, #7]
 2fa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 2fe:	f8a1 309e 	strh.w	r3, [r1, #158]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:249
				gConfig.mag_ref_vector[0] = (new_packet->packet_data[4] << 8) | new_packet->packet_data[5];				
 302:	7a02      	ldrb	r2, [r0, #8]
 304:	7a43      	ldrb	r3, [r0, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:251
		  
				SendCommandSuccessPacket( SET_MAG_REF_VECTOR );
 306:	2090      	movs	r0, #144
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:249
		  // SET_MAG_REF_VECTOR packet
		  // -----------------------------------------------------------------------------
		  case SET_MAG_REF_VECTOR:
				gConfig.mag_ref_vector[2] = (new_packet->packet_data[0] << 8) | new_packet->packet_data[1];
				gConfig.mag_ref_vector[1] = (new_packet->packet_data[2] << 8) | new_packet->packet_data[3];
				gConfig.mag_ref_vector[0] = (new_packet->packet_data[4] << 8) | new_packet->packet_data[5];				
 308:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 30c:	f8a1 309c 	strh.w	r3, [r1, #156]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:251
		  
				SendCommandSuccessPacket( SET_MAG_REF_VECTOR );
 310:	f7ff fffe 	bl	0 <ProcessPacket>
 314:	e730      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:31
	 int32_t result;
	 fConvert iTof;
	 int i, j;
	 
	 // Determine the packet type
	 switch( new_packet->PT )
 316:	f04f 0e00 	mov.w	lr, #0	; 0x0
 31a:	f240 0700 	movw	r7, #0	; 0x0
 31e:	46f4      	mov	ip, lr
 320:	f2c0 0700 	movt	r7, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:213
				
		  // -----------------------------------------------------------------------------
		  // SET_ACCEL_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_ALIGNMENT:
				for (i = 0; i < 3; i++ )
 324:	eb05 030c 	add.w	r3, r5, ip
 328:	1d18      	adds	r0, r3, #4
 32a:	ea4f 028e 	mov.w	r2, lr, lsl #2
 32e:	ea4f 130e 	mov.w	r3, lr, lsl #4
 332:	1a9b      	subs	r3, r3, r2
 334:	18fb      	adds	r3, r7, r3
 336:	f103 0654 	add.w	r6, r3, #84	; 0x54
 33a:	2400      	movs	r4, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:217
				{
					 for (j = 0; j <3; j++ )
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
 33c:	7843      	ldrb	r3, [r0, #1]
 33e:	7801      	ldrb	r1, [r0, #0]
 340:	78c2      	ldrb	r2, [r0, #3]
 342:	041b      	lsls	r3, r3, #16
 344:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 348:	7881      	ldrb	r1, [r0, #2]
 34a:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:215
		  // SET_ACCEL_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_ALIGNMENT:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 34c:	3401      	adds	r4, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:219
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
						  
						  gConfig.accel_alignment.data[i][j] = iTof.float_val;
 34e:	ea43 2201 	orr.w	r2, r3, r1, lsl #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:215
		  // SET_ACCEL_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_ALIGNMENT:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 352:	3004      	adds	r0, #4
 354:	2c03      	cmp	r4, #3
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:219
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
						  
						  gConfig.accel_alignment.data[i][j] = iTof.float_val;
 356:	f846 2b04 	str.w	r2, [r6], #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:215
		  // SET_ACCEL_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_ALIGNMENT:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 35a:	d1ef      	bne.n	33c <ProcessPacket+0x33c>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:213
				
		  // -----------------------------------------------------------------------------
		  // SET_ACCEL_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_ALIGNMENT:
				for (i = 0; i < 3; i++ )
 35c:	f10e 0e01 	add.w	lr, lr, #1	; 0x1
 360:	f1be 0f03 	cmp.w	lr, #3	; 0x3
 364:	f10c 0c0c 	add.w	ip, ip, #12	; 0xc
 368:	d1dc      	bne.n	324 <ProcessPacket+0x324>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:223
						  
						  gConfig.accel_alignment.data[i][j] = iTof.float_val;
					 }
				}
		  
				SendCommandSuccessPacket( SET_ACCEL_ALIGNMENT );
 36a:	208f      	movs	r0, #143
 36c:	f7ff fffe 	bl	0 <ProcessPacket>
 370:	e702      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:31
	 int32_t result;
	 fConvert iTof;
	 int i, j;
	 
	 // Determine the packet type
	 switch( new_packet->PT )
 372:	f04f 0e00 	mov.w	lr, #0	; 0x0
 376:	f240 0700 	movw	r7, #0	; 0x0
 37a:	46f4      	mov	ip, lr
 37c:	f2c0 0700 	movt	r7, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:196
		  
		  // -----------------------------------------------------------------------------
		  // SET_GYRO_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_GYRO_ALIGNMENT:
				for (i = 0; i < 3; i++ )
 380:	eb05 030c 	add.w	r3, r5, ip
 384:	1d18      	adds	r0, r3, #4
 386:	ea4f 028e 	mov.w	r2, lr, lsl #2
 38a:	ea4f 130e 	mov.w	r3, lr, lsl #4
 38e:	1a9b      	subs	r3, r3, r2
 390:	3330      	adds	r3, #48
 392:	18fe      	adds	r6, r7, r3
 394:	2400      	movs	r4, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:200
				{
					 for (j = 0; j <3; j++ )
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
 396:	7843      	ldrb	r3, [r0, #1]
 398:	7801      	ldrb	r1, [r0, #0]
 39a:	78c2      	ldrb	r2, [r0, #3]
 39c:	041b      	lsls	r3, r3, #16
 39e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 3a2:	7881      	ldrb	r1, [r0, #2]
 3a4:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:198
		  // SET_GYRO_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_GYRO_ALIGNMENT:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 3a6:	3401      	adds	r4, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:202
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
						  
						  gConfig.gyro_alignment.data[i][j] = iTof.float_val;
 3a8:	ea43 2201 	orr.w	r2, r3, r1, lsl #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:198
		  // SET_GYRO_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_GYRO_ALIGNMENT:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 3ac:	3004      	adds	r0, #4
 3ae:	2c03      	cmp	r4, #3
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:202
					 {
						  iTof.uint32_val = (new_packet->packet_data[4*(3*i+j)] << 24) | (new_packet->packet_data[4*(3*i+j)+1] << 16) | (new_packet->packet_data[4*(3*i+j)+2] << 8) | (new_packet->packet_data[4*(3*i+j)+3]);
						  
						  gConfig.gyro_alignment.data[i][j] = iTof.float_val;
 3b0:	f846 2b04 	str.w	r2, [r6], #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:198
		  // SET_GYRO_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_GYRO_ALIGNMENT:
				for (i = 0; i < 3; i++ )
				{
					 for (j = 0; j <3; j++ )
 3b4:	d1ef      	bne.n	396 <ProcessPacket+0x396>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:196
		  
		  // -----------------------------------------------------------------------------
		  // SET_GYRO_ALIGNMENT packet
		  // -----------------------------------------------------------------------------
		  case SET_GYRO_ALIGNMENT:
				for (i = 0; i < 3; i++ )
 3b6:	f10e 0e01 	add.w	lr, lr, #1	; 0x1
 3ba:	f1be 0f03 	cmp.w	lr, #3	; 0x3
 3be:	f10c 0c0c 	add.w	ip, ip, #12	; 0xc
 3c2:	d1dd      	bne.n	380 <ProcessPacket+0x380>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:206
						  
						  gConfig.gyro_alignment.data[i][j] = iTof.float_val;
					 }
				}
		  
				SendCommandSuccessPacket( SET_GYRO_ALIGNMENT );
 3c4:	208e      	movs	r0, #142
 3c6:	f7ff fffe 	bl	0 <ProcessPacket>
 3ca:	e6d5      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:187
		  
		  // -----------------------------------------------------------------------------
		  // SET_EKF_CONFIG packet.
		  // -----------------------------------------------------------------------------
		  case SET_EKF_CONFIG:
				gConfig.EKF_config = new_packet->packet_data[0];
 3cc:	7902      	ldrb	r2, [r0, #4]
 3ce:	f240 0300 	movw	r3, #0	; 0x0
 3d2:	f2c0 0300 	movt	r3, #0	; 0x0
 3d6:	f883 2020 	strb.w	r2, [r3, #32]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:189
		  
				SendCommandSuccessPacket( SET_EKF_CONFIG );
 3da:	208d      	movs	r0, #141
 3dc:	f7ff fffe 	bl	0 <ProcessPacket>
 3e0:	e6ca      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:173
		  // -----------------------------------------------------------------------------
		  // SET_ACCEL_COVARIANCE packet - sets the value of the diagonal elements of
		  // the accel covariance matrix.
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_COVARIANCE:
				iTof.uint32_val = (new_packet->packet_data[0] << 24) | (new_packet->packet_data[1] << 16) | (new_packet->packet_data[2] << 8) | (new_packet->packet_data[3]);
 3e2:	7943      	ldrb	r3, [r0, #5]
 3e4:	7901      	ldrb	r1, [r0, #4]
 3e6:	79c2      	ldrb	r2, [r0, #7]
 3e8:	041b      	lsls	r3, r3, #16
 3ea:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 3ee:	7981      	ldrb	r1, [r0, #6]
 3f0:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:174
				gConfig.accel_covariance = iTof.float_val;
 3f2:	ea43 2001 	orr.w	r0, r3, r1, lsl #8
 3f6:	f240 0200 	movw	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:176
		  
				gEstimatedStates.Racc.data[0][0] = gConfig.accel_covariance;
 3fa:	f240 0300 	movw	r3, #0	; 0x0
 3fe:	f2c0 0300 	movt	r3, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:174
		  // SET_ACCEL_COVARIANCE packet - sets the value of the diagonal elements of
		  // the accel covariance matrix.
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_COVARIANCE:
				iTof.uint32_val = (new_packet->packet_data[0] << 24) | (new_packet->packet_data[1] << 16) | (new_packet->packet_data[2] << 8) | (new_packet->packet_data[3]);
				gConfig.accel_covariance = iTof.float_val;
 402:	f2c0 0200 	movt	r2, #0	; 0x0
 406:	6290      	str	r0, [r2, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:176
		  
				gEstimatedStates.Racc.data[0][0] = gConfig.accel_covariance;
 408:	63d8      	str	r0, [r3, #60]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:177
				gEstimatedStates.Racc.data[1][1] = gConfig.accel_covariance;
 40a:	64d8      	str	r0, [r3, #76]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:178
				gEstimatedStates.Racc.data[2][2] = gConfig.accel_covariance;
 40c:	65d8      	str	r0, [r3, #92]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:180
		  
				SendCommandSuccessPacket( SET_ACCEL_COVARIANCE );
 40e:	208c      	movs	r0, #140
 410:	f7ff fffe 	bl	0 <ProcessPacket>
 414:	e6b0      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:158
		  // -----------------------------------------------------------------------------
		  // SET_MAG_COVARIANCE packet - sets the value of the diagonal elements of
		  // the magnetometer covariance matrix.
		  // -----------------------------------------------------------------------------
		  case SET_MAG_COVARIANCE:
				iTof.uint32_val = (new_packet->packet_data[0] << 24) | (new_packet->packet_data[1] << 16) | (new_packet->packet_data[2] << 8) | (new_packet->packet_data[3]);
 416:	7943      	ldrb	r3, [r0, #5]
 418:	7901      	ldrb	r1, [r0, #4]
 41a:	79c2      	ldrb	r2, [r0, #7]
 41c:	041b      	lsls	r3, r3, #16
 41e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 422:	7981      	ldrb	r1, [r0, #6]
 424:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:159
				gConfig.mag_covariance = iTof.float_val;
 426:	ea43 2001 	orr.w	r0, r3, r1, lsl #8
 42a:	f240 0200 	movw	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:161
		  
				gEstimatedStates.Rmag.data[0][0] = gConfig.mag_covariance;
 42e:	f240 0300 	movw	r3, #0	; 0x0
 432:	f2c0 0300 	movt	r3, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:159
		  // SET_MAG_COVARIANCE packet - sets the value of the diagonal elements of
		  // the magnetometer covariance matrix.
		  // -----------------------------------------------------------------------------
		  case SET_MAG_COVARIANCE:
				iTof.uint32_val = (new_packet->packet_data[0] << 24) | (new_packet->packet_data[1] << 16) | (new_packet->packet_data[2] << 8) | (new_packet->packet_data[3]);
				gConfig.mag_covariance = iTof.float_val;
 436:	f2c0 0200 	movt	r2, #0	; 0x0
 43a:	62d0      	str	r0, [r2, #44]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:161
		  
				gEstimatedStates.Rmag.data[0][0] = gConfig.mag_covariance;
 43c:	6618      	str	r0, [r3, #96]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:162
				gEstimatedStates.Rmag.data[1][1] = gConfig.mag_covariance;
 43e:	6718      	str	r0, [r3, #112]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:163
				gEstimatedStates.Rmag.data[2][2] = gConfig.mag_covariance;
 440:	f8c3 0080 	str.w	r0, [r3, #128]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:165
		  
				SendCommandSuccessPacket( SET_MAG_COVARIANCE );
 444:	208b      	movs	r0, #139
 446:	f7ff fffe 	bl	0 <ProcessPacket>
 44a:	e695      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:143
		  // -----------------------------------------------------------------------------
		  // SET_PROCESS_COVARIANCE packet - sets the value of the diagonal elements of
		  // the process covariance matrix.
		  // -----------------------------------------------------------------------------
		  case SET_PROCESS_COVARIANCE:
				iTof.uint32_val = (new_packet->packet_data[0] << 24) | (new_packet->packet_data[1] << 16) | (new_packet->packet_data[2] << 8) | (new_packet->packet_data[3]);
 44c:	7943      	ldrb	r3, [r0, #5]
 44e:	7901      	ldrb	r1, [r0, #4]
 450:	79c2      	ldrb	r2, [r0, #7]
 452:	041b      	lsls	r3, r3, #16
 454:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 458:	7981      	ldrb	r1, [r0, #6]
 45a:	4313      	orrs	r3, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:144
				gConfig.process_covariance = iTof.float_val;
 45c:	ea43 2001 	orr.w	r0, r3, r1, lsl #8
 460:	f240 0200 	movw	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:146
		  
				gEstimatedStates.Q.data[0][0] = gConfig.process_covariance;
 464:	f240 0300 	movw	r3, #0	; 0x0
 468:	f2c0 0300 	movt	r3, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:144
		  // SET_PROCESS_COVARIANCE packet - sets the value of the diagonal elements of
		  // the process covariance matrix.
		  // -----------------------------------------------------------------------------
		  case SET_PROCESS_COVARIANCE:
				iTof.uint32_val = (new_packet->packet_data[0] << 24) | (new_packet->packet_data[1] << 16) | (new_packet->packet_data[2] << 8) | (new_packet->packet_data[3]);
				gConfig.process_covariance = iTof.float_val;
 46c:	f2c0 0200 	movt	r2, #0	; 0x0
 470:	6250      	str	r0, [r2, #36]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:146
		  
				gEstimatedStates.Q.data[0][0] = gConfig.process_covariance;
 472:	6198      	str	r0, [r3, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:147
				gEstimatedStates.Q.data[1][1] = gConfig.process_covariance;
 474:	6298      	str	r0, [r3, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:148
				gEstimatedStates.Q.data[2][2] = gConfig.process_covariance;
 476:	6398      	str	r0, [r3, #56]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:150
		  
				SendCommandSuccessPacket( SET_PROCESS_COVARIANCE );
 478:	208a      	movs	r0, #138
 47a:	f7ff fffe 	bl	0 <ProcessPacket>
 47e:	e67b      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:133
		  // -----------------------------------------------------------------------------
		  // SET_START_CAL packet - Specifies whether AHRS should calibrate rate gyros
		  // on startup.
		  // -----------------------------------------------------------------------------
		  case SET_START_CAL:
				gConfig.gyro_startup_calibration = new_packet->packet_data[0] & 0x01;
 480:	7903      	ldrb	r3, [r0, #4]
 482:	f240 0200 	movw	r2, #0	; 0x0
 486:	f2c0 0200 	movt	r2, #0	; 0x0
 48a:	f003 0301 	and.w	r3, r3, #1	; 0x1
 48e:	f882 30b7 	strb.w	r3, [r2, #183]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:135
		  
				SendCommandSuccessPacket( SET_START_CAL );
 492:	2089      	movs	r0, #137
 494:	f7ff fffe 	bl	0 <ProcessPacket>
 498:	e66e      	b.n	fffffce0 <StartSelfTest+0xfffffce0>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:125
		  
		  // -----------------------------------------------------------------------------
		  // SELF_TEST packet - starts automatic self-test command
		  // -----------------------------------------------------------------------------
		  case SELF_TEST:
				StartSelfTest();
 49a:	f7ff fffe 	bl	0 <StartSelfTest>
 49e:	e66b      	b.n	fffffcda <StartGyroCalibration+0xfffffcda>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:115
		  
		  // -----------------------------------------------------------------------------
		  // ZERO_RATE_GYROS packet - starts gyro zero command
		  // -----------------------------------------------------------------------------
		  case ZERO_RATE_GYROS:
				StartGyroCalibration();
 4a0:	f7ff fffe 	bl	0 <StartGyroCalibration>
 4a4:	e668      	b.n	fffffcd4 <gSensorData+0xfffffcd4>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:280
		  
		  // -----------------------------------------------------------------------------
		  // AUTO_SET_ACCEL_REF packet
		  // -----------------------------------------------------------------------------
		  case AUTO_SET_ACCEL_REF:
				gConfig.accel_ref_vector[2] = gSensorData.accel_z;
 4a6:	f240 0300 	movw	r3, #0	; 0x0
 4aa:	f2c0 0300 	movt	r3, #0	; 0x0
 4ae:	8959      	ldrh	r1, [r3, #10]
 4b0:	f240 0200 	movw	r2, #0	; 0x0
 4b4:	f2c0 0200 	movt	r2, #0	; 0x0
 4b8:	f8a2 10a6 	strh.w	r1, [r2, #166]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:281
				gConfig.accel_ref_vector[1] = gSensorData.accel_y;
 4bc:	8919      	ldrh	r1, [r3, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:282
				gConfig.accel_ref_vector[0] = gSensorData.accel_x;
 4be:	88db      	ldrh	r3, [r3, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:281
		  // -----------------------------------------------------------------------------
		  // AUTO_SET_ACCEL_REF packet
		  // -----------------------------------------------------------------------------
		  case AUTO_SET_ACCEL_REF:
				gConfig.accel_ref_vector[2] = gSensorData.accel_z;
				gConfig.accel_ref_vector[1] = gSensorData.accel_y;
 4c0:	f8a2 10a4 	strh.w	r1, [r2, #164]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:282
				gConfig.accel_ref_vector[0] = gSensorData.accel_x;
 4c4:	f8a2 30a2 	strh.w	r3, [r2, #162]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:284
		  
				SendAccelRefVectorPacket();
 4c8:	f7ff fffe 	bl	0 <ProcessPacket>
 4cc:	e654      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:258
		  
		  // -----------------------------------------------------------------------------
		  // SET_ACCEL_REF_VECTOR packet
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_REF_VECTOR:
				gConfig.accel_ref_vector[2] = (new_packet->packet_data[0] << 8) | new_packet->packet_data[1];
 4ce:	7902      	ldrb	r2, [r0, #4]
 4d0:	7943      	ldrb	r3, [r0, #5]
 4d2:	f240 0100 	movw	r1, #0	; 0x0
 4d6:	f2c0 0100 	movt	r1, #0	; 0x0
 4da:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 4de:	f8a1 30a6 	strh.w	r3, [r1, #166]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:259
				gConfig.accel_ref_vector[1] = (new_packet->packet_data[2] << 8) | new_packet->packet_data[3];
 4e2:	7982      	ldrb	r2, [r0, #6]
 4e4:	79c3      	ldrb	r3, [r0, #7]
 4e6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 4ea:	f8a1 30a4 	strh.w	r3, [r1, #164]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:260
				gConfig.accel_ref_vector[0] = (new_packet->packet_data[4] << 8) | new_packet->packet_data[5];				
 4ee:	7a02      	ldrb	r2, [r0, #8]
 4f0:	7a43      	ldrb	r3, [r0, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:262
		  
				SendCommandSuccessPacket( SET_ACCEL_REF_VECTOR );
 4f2:	2085      	movs	r0, #133
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:260
		  // SET_ACCEL_REF_VECTOR packet
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_REF_VECTOR:
				gConfig.accel_ref_vector[2] = (new_packet->packet_data[0] << 8) | new_packet->packet_data[1];
				gConfig.accel_ref_vector[1] = (new_packet->packet_data[2] << 8) | new_packet->packet_data[3];
				gConfig.accel_ref_vector[0] = (new_packet->packet_data[4] << 8) | new_packet->packet_data[5];				
 4f4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 4f8:	f8a1 30a2 	strh.w	r3, [r1, #162]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:262
		  
				SendCommandSuccessPacket( SET_ACCEL_REF_VECTOR );
 4fc:	f7ff fffe 	bl	0 <ProcessPacket>
 500:	e63a      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:93
		  
		  // -----------------------------------------------------------------------------
		  // SET_ACCEL_BIAS packet - Sets bias term for accels
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_BIAS:
				gConfig.z_accel_bias = ((int16_t)new_packet->packet_data[0] << 8) | ((uint16_t)new_packet->packet_data[1] & 0x0FF);
 502:	7902      	ldrb	r2, [r0, #4]
 504:	7943      	ldrb	r3, [r0, #5]
 506:	f240 0100 	movw	r1, #0	; 0x0
 50a:	f2c0 0100 	movt	r1, #0	; 0x0
 50e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 512:	808b      	strh	r3, [r1, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:94
				gConfig.y_accel_bias = ((int16_t)new_packet->packet_data[2] << 8) | ((uint16_t)new_packet->packet_data[3] & 0x0FF);
 514:	7982      	ldrb	r2, [r0, #6]
 516:	79c3      	ldrb	r3, [r0, #7]
 518:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 51c:	804b      	strh	r3, [r1, #2]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:95
				gConfig.x_accel_bias = ((int16_t)new_packet->packet_data[4] << 8) | ((uint16_t)new_packet->packet_data[5] & 0x0FF);
 51e:	7a02      	ldrb	r2, [r0, #8]
 520:	7a43      	ldrb	r3, [r0, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:97
		  
				SendCommandSuccessPacket( SET_ACCEL_BIAS );
 522:	2084      	movs	r0, #132
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:95
		  // SET_ACCEL_BIAS packet - Sets bias term for accels
		  // -----------------------------------------------------------------------------
		  case SET_ACCEL_BIAS:
				gConfig.z_accel_bias = ((int16_t)new_packet->packet_data[0] << 8) | ((uint16_t)new_packet->packet_data[1] & 0x0FF);
				gConfig.y_accel_bias = ((int16_t)new_packet->packet_data[2] << 8) | ((uint16_t)new_packet->packet_data[3] & 0x0FF);
				gConfig.x_accel_bias = ((int16_t)new_packet->packet_data[4] << 8) | ((uint16_t)new_packet->packet_data[5] & 0x0FF);
 524:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 528:	800b      	strh	r3, [r1, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:97
		  
				SendCommandSuccessPacket( SET_ACCEL_BIAS );
 52a:	f7ff fffe 	bl	0 <ProcessPacket>
 52e:	e623      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:82
		  
		  // -----------------------------------------------------------------------------
		  // SET_GYRO_BIAS packet - Sets bias term for rate gyros.
		  // -----------------------------------------------------------------------------
		  case SET_GYRO_BIAS:
				gConfig.z_gyro_bias = ((uint16_t)new_packet->packet_data[0] << 8) | ((uint16_t)new_packet->packet_data[1] & 0x0FF);
 530:	7902      	ldrb	r2, [r0, #4]
 532:	7943      	ldrb	r3, [r0, #5]
 534:	f240 0100 	movw	r1, #0	; 0x0
 538:	f2c0 0100 	movt	r1, #0	; 0x0
 53c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 540:	830b      	strh	r3, [r1, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:83
				gConfig.y_gyro_bias = ((uint16_t)new_packet->packet_data[2] << 8) | ((uint16_t)new_packet->packet_data[3] & 0x0FF);
 542:	7982      	ldrb	r2, [r0, #6]
 544:	79c3      	ldrb	r3, [r0, #7]
 546:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 54a:	82cb      	strh	r3, [r1, #22]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:84
				gConfig.x_gyro_bias = ((uint16_t)new_packet->packet_data[4] << 8) | ((uint16_t)new_packet->packet_data[5] & 0x0FF);
 54c:	7a02      	ldrb	r2, [r0, #8]
 54e:	7a43      	ldrb	r3, [r0, #9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:86
		  
				SendCommandSuccessPacket( SET_GYRO_BIAS );
 550:	2083      	movs	r0, #131
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:84
		  // SET_GYRO_BIAS packet - Sets bias term for rate gyros.
		  // -----------------------------------------------------------------------------
		  case SET_GYRO_BIAS:
				gConfig.z_gyro_bias = ((uint16_t)new_packet->packet_data[0] << 8) | ((uint16_t)new_packet->packet_data[1] & 0x0FF);
				gConfig.y_gyro_bias = ((uint16_t)new_packet->packet_data[2] << 8) | ((uint16_t)new_packet->packet_data[3] & 0x0FF);
				gConfig.x_gyro_bias = ((uint16_t)new_packet->packet_data[4] << 8) | ((uint16_t)new_packet->packet_data[5] & 0x0FF);
 552:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 556:	828b      	strh	r3, [r1, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:86
		  
				SendCommandSuccessPacket( SET_GYRO_BIAS );
 558:	f7ff fffe 	bl	0 <ProcessPacket>
 55c:	e60c      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:73
		  // -----------------------------------------------------------------------------
		  // SET_BROADCAST_MODE packet - turns on broadcast mode with the frequency
		  // specified in packet_data[0].
		  // -----------------------------------------------------------------------------
		  case SET_BROADCAST_MODE:
				EnableBroadcastMode( new_packet->packet_data[0] );
 55e:	7900      	ldrb	r0, [r0, #4]
 560:	f7ff fffe 	bl	0 <EnableBroadcastMode>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:75
		  
				SendCommandSuccessPacket( SET_BROADCAST_MODE );
 564:	2082      	movs	r0, #130
 566:	f7ff fffe 	bl	0 <ProcessPacket>
 56a:	e605      	b.n	fffffc0e <DisableBroadcastMode+0xfffffc0e>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:63
		  
		  // -----------------------------------------------------------------------------
		  // SET_SILENT_MODE packet - Turns off broadcast mode.
		  // -----------------------------------------------------------------------------
		  case SET_SILENT_MODE:
				DisableBroadcastMode( );
 56c:	f7ff fffe 	bl	0 <DisableBroadcastMode>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:65
		  
				SendCommandSuccessPacket( SET_SILENT_MODE );
 570:	2081      	movs	r0, #129
 572:	f7ff fffe 	bl	0 <ProcessPacket>
 576:	e5ff      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:38
		  // -----------------------------------------------------------------------------
		  // SET_ACTIVE_CHANNELS packet - Sets channels whose data will be transmitted
		  // when a GET_DATA packet is sent, or when Broadcast Mode is enabled
		  // -----------------------------------------------------------------------------
		  case SET_ACTIVE_CHANNELS:
				gConfig.psi_enabled = (uint8_t)( (new_packet->packet_data[0] >> 7) & 0x01);
 578:	7903      	ldrb	r3, [r0, #4]
 57a:	f240 0100 	movw	r1, #0	; 0x0
 57e:	f2c0 0100 	movt	r1, #0	; 0x0
 582:	09db      	lsrs	r3, r3, #7
 584:	f881 30b3 	strb.w	r3, [r1, #179]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:39
				gConfig.theta_enabled = (uint8_t)( (new_packet->packet_data[0] >> 6) & 0x01);
 588:	7902      	ldrb	r2, [r0, #4]
 58a:	0992      	lsrs	r2, r2, #6
 58c:	f002 0201 	and.w	r2, r2, #1	; 0x1
 590:	f881 20b2 	strb.w	r2, [r1, #178]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:40
				gConfig.phi_enabled = (uint8_t)( (new_packet->packet_data[0] >> 5) & 0x01);
 594:	7903      	ldrb	r3, [r0, #4]
 596:	095b      	lsrs	r3, r3, #5
 598:	f003 0301 	and.w	r3, r3, #1	; 0x1
 59c:	f881 30b1 	strb.w	r3, [r1, #177]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:41
				gConfig.psi_dot_enabled = (uint8_t)( (new_packet->packet_data[0] >> 4) & 0x01);
 5a0:	7902      	ldrb	r2, [r0, #4]
 5a2:	0912      	lsrs	r2, r2, #4
 5a4:	f002 0201 	and.w	r2, r2, #1	; 0x1
 5a8:	f881 20b6 	strb.w	r2, [r1, #182]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:42
				gConfig.theta_dot_enabled = (uint8_t)( (new_packet->packet_data[0] >> 3) & 0x01);
 5ac:	7903      	ldrb	r3, [r0, #4]
 5ae:	08db      	lsrs	r3, r3, #3
 5b0:	f003 0301 	and.w	r3, r3, #1	; 0x1
 5b4:	f881 30b5 	strb.w	r3, [r1, #181]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:43
				gConfig.phi_dot_enabled = (uint8_t)( (new_packet->packet_data[0] >> 2) & 0x01);
 5b8:	7902      	ldrb	r2, [r0, #4]
 5ba:	0892      	lsrs	r2, r2, #2
 5bc:	f002 0201 	and.w	r2, r2, #1	; 0x1
 5c0:	f881 20b4 	strb.w	r2, [r1, #180]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:44
				gConfig.x_mag_enabled = (uint8_t)( (new_packet->packet_data[0] >> 1) & 0x01);
 5c4:	7903      	ldrb	r3, [r0, #4]
 5c6:	085b      	lsrs	r3, r3, #1
 5c8:	f003 0301 	and.w	r3, r3, #1	; 0x1
 5cc:	f881 30ae 	strb.w	r3, [r1, #174]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:45
				gConfig.y_mag_enabled = (uint8_t)( (new_packet->packet_data[0]) & 0x01);
 5d0:	7902      	ldrb	r2, [r0, #4]
 5d2:	f002 0201 	and.w	r2, r2, #1	; 0x1
 5d6:	f881 20af 	strb.w	r2, [r1, #175]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:47
				
				gConfig.z_mag_enabled = (uint8_t)( (new_packet->packet_data[1] >> 7) & 0x01);
 5da:	7943      	ldrb	r3, [r0, #5]
 5dc:	09db      	lsrs	r3, r3, #7
 5de:	f881 30b0 	strb.w	r3, [r1, #176]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:48
				gConfig.x_gyro_enabled = (uint8_t)( (new_packet->packet_data[1] >> 6) & 0x01);
 5e2:	7942      	ldrb	r2, [r0, #5]
 5e4:	0992      	lsrs	r2, r2, #6
 5e6:	f002 0201 	and.w	r2, r2, #1	; 0x1
 5ea:	f881 20ab 	strb.w	r2, [r1, #171]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:49
				gConfig.y_gyro_enabled = (uint8_t)( (new_packet->packet_data[1] >> 5) & 0x01);
 5ee:	7943      	ldrb	r3, [r0, #5]
 5f0:	095b      	lsrs	r3, r3, #5
 5f2:	f003 0301 	and.w	r3, r3, #1	; 0x1
 5f6:	f881 30ac 	strb.w	r3, [r1, #172]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:50
				gConfig.z_gyro_enabled = (uint8_t)( (new_packet->packet_data[1] >> 4) & 0x01);
 5fa:	7942      	ldrb	r2, [r0, #5]
 5fc:	0912      	lsrs	r2, r2, #4
 5fe:	f002 0201 	and.w	r2, r2, #1	; 0x1
 602:	f881 20ad 	strb.w	r2, [r1, #173]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:51
				gConfig.x_accel_enabled = (uint8_t)( (new_packet->packet_data[1] >> 3) & 0x01);
 606:	7943      	ldrb	r3, [r0, #5]
 608:	08db      	lsrs	r3, r3, #3
 60a:	f003 0301 	and.w	r3, r3, #1	; 0x1
 60e:	f881 30a8 	strb.w	r3, [r1, #168]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:52
				gConfig.y_accel_enabled = (uint8_t)( (new_packet->packet_data[1] >> 2) & 0x01);
 612:	7942      	ldrb	r2, [r0, #5]
 614:	0892      	lsrs	r2, r2, #2
 616:	f002 0201 	and.w	r2, r2, #1	; 0x1
 61a:	f881 20a9 	strb.w	r2, [r1, #169]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:53
				gConfig.z_accel_enabled = (uint8_t)( (new_packet->packet_data[1] >> 1) & 0x01);
 61e:	7943      	ldrb	r3, [r0, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:55
						  
				SendCommandSuccessPacket( SET_ACTIVE_CHANNELS );
 620:	2080      	movs	r0, #128
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:53
				gConfig.x_gyro_enabled = (uint8_t)( (new_packet->packet_data[1] >> 6) & 0x01);
				gConfig.y_gyro_enabled = (uint8_t)( (new_packet->packet_data[1] >> 5) & 0x01);
				gConfig.z_gyro_enabled = (uint8_t)( (new_packet->packet_data[1] >> 4) & 0x01);
				gConfig.x_accel_enabled = (uint8_t)( (new_packet->packet_data[1] >> 3) & 0x01);
				gConfig.y_accel_enabled = (uint8_t)( (new_packet->packet_data[1] >> 2) & 0x01);
				gConfig.z_accel_enabled = (uint8_t)( (new_packet->packet_data[1] >> 1) & 0x01);
 622:	085b      	lsrs	r3, r3, #1
 624:	f003 0301 	and.w	r3, r3, #1	; 0x1
 628:	f881 30aa 	strb.w	r3, [r1, #170]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:55
						  
				SendCommandSuccessPacket( SET_ACTIVE_CHANNELS );
 62c:	f7ff fffe 	bl	0 <ProcessPacket>
 630:	e5a2      	b.n	fffffb48 <PackageMatrixForTransmit+0xfffffb48>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:393
		  // ------------------------------------------------------------------------------
		  // GET_MAG_BIAS packet - Sends a packet containing the bias values
		  // for each mag channel.
		  // ------------------------------------------------------------------------------
		  case GET_MAG_BIAS:
				SendMagBiasPacket();
 632:	f7ff fffe 	bl	0 <ProcessPacket>
 636:	e59f      	b.n	fffffb42 <PackageMatrixForTransmit+0xfffffb42>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:463
		  
		  // ------------------------------------------------------------------------------
		  // GET_MAG_CAL packet
		  // ------------------------------------------------------------------------------
		  case GET_MAG_CAL:
				SendMagCalPacket();
 638:	f7ff fffe 	bl	0 <ProcessPacket>
 63c:	e59c      	b.n	fffffb3c <PackageMatrixForTransmit+0xfffffb3c>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:470

		  // ------------------------------------------------------------------------------
		  // GET_MAG_REF_VECTOR packet
		  // ------------------------------------------------------------------------------
		  case GET_MAG_REF_VECTOR:
				SendMagRefVectorPacket();
 63e:	f7ff fffe 	bl	0 <ProcessPacket>
 642:	e599      	b.n	fffffb36 <PackageMatrixForTransmit+0xfffffb36>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:456
		  
		  // ------------------------------------------------------------------------------
		  // GET_ACCEL_ALIGNMENT packet
		  // ------------------------------------------------------------------------------
		  case GET_ACCEL_ALIGNMENT:
				SendAccelAlignmentPacket();
 644:	f7ff fffe 	bl	0 <ProcessPacket>
 648:	e596      	b.n	fffffb30 <PackageMatrixForTransmit+0xfffffb30>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:449
		  
		  // ------------------------------------------------------------------------------
		  // GET_GYRO_ALIGNMENT packet
		  // ------------------------------------------------------------------------------
		  case GET_GYRO_ALIGNMENT:
				SendGyroAlignmentPacket();
 64a:	f7ff fffe 	bl	0 <ProcessPacket>
 64e:	e593      	b.n	fffffb2a <PackageMatrixForTransmit+0xfffffb2a>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:442
		  
		  // ------------------------------------------------------------------------------
		  // GET_STATE_COVARIANCE packet
		  // ------------------------------------------------------------------------------
		  case GET_STATE_COVARIANCE:
				SendStateCovariancePacket();
 650:	f7ff fffe 	bl	0 <ProcessPacket>
 654:	e590      	b.n	fffffb24 <PackageMatrixForTransmit+0xfffffb24>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:435
		  
		  // ------------------------------------------------------------------------------
		  // GET_PROCESS_COVARIANCE packet
		  // ------------------------------------------------------------------------------
		  case GET_PROCESS_COVARIANCE:
				SendProcessCovariancePacket();
 656:	f7ff fffe 	bl	0 <ProcessPacket>
 65a:	e58d      	b.n	fffffb1e <PackageMatrixForTransmit+0xfffffb1e>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:428
		  
		  // ------------------------------------------------------------------------------
		  // GET_MAG_COVARIANCE packet
		  // ------------------------------------------------------------------------------
		  case GET_MAG_COVARIANCE:
				SendMAGCovariancePacket();
 65c:	f7ff fffe 	bl	0 <ProcessPacket>
 660:	e58a      	b.n	fffffb18 <PackageMatrixForTransmit+0xfffffb18>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:421
		  
		  // ------------------------------------------------------------------------------
		  // GET_ACCEL_COVARIANCE packet
		  // ------------------------------------------------------------------------------
		  case GET_ACCEL_COVARIANCE:
				SendAccelCovariancePacket();
 662:	f7ff fffe 	bl	0 <ProcessPacket>
 666:	e587      	b.n	fffffb12 <PackageMatrixForTransmit+0xfffffb12>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:414
		  
		  // ------------------------------------------------------------------------------
		  // GET_EKF_CONFIG packet
		  // ------------------------------------------------------------------------------
		  case GET_EKF_CONFIG:
				SendEKFConfigPacket();
 668:	f7ff fffe 	bl	0 <ProcessPacket>
 66c:	e584      	b.n	fffffb0c <PackageMatrixForTransmit+0xfffffb0c>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:407
		  
		  // ------------------------------------------------------------------------------
		  // GET_START_CAL packet
		  // ------------------------------------------------------------------------------
		  case GET_START_CAL:
				SendStartCalPacket();
 66e:	f7ff fffe 	bl	0 <ProcessPacket>
 672:	e581      	b.n	fffffb06 <PackageMatrixForTransmit+0xfffffb06>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:400
		  
		  // ------------------------------------------------------------------------------
		  // GET_GYRO_SCALE packet
		  // ------------------------------------------------------------------------------
		  case GET_GYRO_SCALE:
				SendGyroScalePacket();
 674:	f7ff fffe 	bl	0 <ProcessPacket>
 678:	e57e      	b.n	fffffb00 <PackageMatrixForTransmit+0xfffffb00>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:377
		  // ------------------------------------------------------------------------------
		  // GET_GYRO_BIAS packet - Sends a packet containing the bias values
		  // for each gyro channel.
		  // ------------------------------------------------------------------------------
		  case GET_GYRO_BIAS:
				SendGyroBiasPacket();
 67a:	f7ff fffe 	bl	0 <ProcessPacket>
 67e:	e57b      	b.n	fffffafa <PackageMatrixForTransmit+0xfffffafa>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:477
		  
		  // ------------------------------------------------------------------------------
		  // GET_ACCEL_REF_VECTOR packet
		  // ------------------------------------------------------------------------------
		  case GET_ACCEL_REF_VECTOR:
				SendAccelRefVectorPacket();
 680:	f7ff fffe 	bl	0 <ProcessPacket>
 684:	e578      	b.n	fffffaf4 <PackageMatrixForTransmit+0xfffffaf4>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:385
		  // ------------------------------------------------------------------------------
		  // GET_ACCEL_BIAS packet - Sends a packet containing the bias values
		  // for each accel channel.
		  // ------------------------------------------------------------------------------
		  case GET_ACCEL_BIAS:
				SendAccelBiasPacket();
 686:	f7ff fffe 	bl	0 <ProcessPacket>
 68a:	e575      	b.n	fffffaee <PackageMatrixForTransmit+0xfffffaee>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:490
		  case GET_ACTIVE_CHANNELS:
				SendActiveChannelPacket();
		  break;
		  
		  case GET_BROADCAST_MODE:
				SendTransmitModePacket();
 68c:	f7ff fffe 	bl	0 <ProcessPacket>
 690:	e572      	b.n	fffffae8 <PackageMatrixForTransmit+0xfffffae8>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:486
		  // ------------------------------------------------------------------------------
		  // GET_ACTIVE_CHANNELS packet - Returns a packet specifying whether each sensor
		  // channel is active or inactive.
		  // ------------------------------------------------------------------------------
		  case GET_ACTIVE_CHANNELS:
				SendActiveChannelPacket();
 692:	f7ff fffe 	bl	0 <ProcessPacket>
 696:	e56f      	b.n	fffffae2 <gConfig+0xfffffae2>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:366
		  // ------------------------------------------------------------------------------
		  // GET_DATA packet - ignored if IMU is in broadcast mode.  If in listen mode,
		  // return data from all active channels.
		  // ------------------------------------------------------------------------------
		  case GET_DATA:
				if( !gConfig.broadcast_enabled )
 698:	f240 0300 	movw	r3, #0	; 0x0
 69c:	f2c0 0300 	movt	r3, #0	; 0x0
 6a0:	f893 20b8 	ldrb.w	r2, [r3, #184]
 6a4:	2a00      	cmp	r2, #0
 6a6:	f47f ad67 	bne.w	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:368
				{
					 SendDataPacket();
 6aa:	f7ff fffe 	bl	0 <ProcessPacket>
 6ae:	e563      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:352
		  
				ADC_SoftwareStartConvCmd(ADC1, ENABLE);
								
				if( result == FLASH_COMPLETE )
				{
					 SendCommandSuccessPacket( WRITE_TO_FLASH );
 6b0:	20a0      	movs	r0, #160
 6b2:	f7ff fffe 	bl	0 <ProcessPacket>
 6b6:	e55f      	b.n	178 <ProcessPacket+0x178>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:336
				
				// If BROADCAST_MODE is enabled, turn it off while writing configuration to flash
				if( gConfig.broadcast_enabled == MODE_BROADCAST )
				{
					 // Disable Timer 2
					 TIM_Cmd( TIM2, DISABLE );	
 6b8:	2100      	movs	r1, #0
 6ba:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 6be:	f7ff fffe 	bl	0 <TIM_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:338
		  
					 result = WriteConfigurationToFlash( );
 6c2:	f7ff fffe 	bl	0 <WriteConfigurationToFlash>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:341
					 
					 // Enable Timer 2
					 TIM_Cmd( TIM2, ENABLE );	
 6c6:	4629      	mov	r1, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:338
				if( gConfig.broadcast_enabled == MODE_BROADCAST )
				{
					 // Disable Timer 2
					 TIM_Cmd( TIM2, DISABLE );	
		  
					 result = WriteConfigurationToFlash( );
 6c8:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_packet_handler.c:341
					 
					 // Enable Timer 2
					 TIM_Cmd( TIM2, ENABLE );	
 6ca:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 6ce:	f7ff fffe 	bl	0 <TIM_Cmd>
 6d2:	e566      	b.n	1a2 <TIM_Cmd+0x1a2>
