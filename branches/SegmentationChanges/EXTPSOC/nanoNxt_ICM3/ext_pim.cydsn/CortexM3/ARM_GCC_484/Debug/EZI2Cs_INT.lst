ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"EZI2Cs_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.EZI2Cs_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	EZI2Cs_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	EZI2Cs_ISR, %function
  24              	EZI2Cs_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\EZI2Cs_INT.c"
   1:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * File Name: EZI2CsINT.c
   3:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * Version 2.0
   4:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
   5:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  This file contains the code that operates during the interrupt service
   7:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  routine.  For this component, most of the runtime code is located in
   8:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  the ISR.
   9:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  10:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *******************************************************************************
  11:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
  17:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** #include "EZI2Cs_PVT.h"
  18:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
  19:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
  20:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** /*******************************************************************************
  21:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * Function Name: EZI2Cs_ISR
  22:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** ********************************************************************************
  23:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  24:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * Summary:
  25:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  Handle Interrupt Service Routine.
  26:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  27:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * Parameters:
  28:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_dataPtrS1 - The global variable which stores the pointer to the
  29:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  data exposed to an I2C master for the first slave address.
  30:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  31:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwOffsetS1 - The global variable which stores an offset for read
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 2


  32:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  and write operations, is set at each write sequence of the first slave
  33:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  address.
  34:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  35:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwIndexS1: global variable, which stores pointer to the next
  36:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  value to be read or written for the first slave address.
  37:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  38:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * EZI2Cs_wrProtectS1 - The global variable which stores an offset where data
  39:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  is read only for the first slave address.
  40:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  41:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * EZI2Cs_bufSizeS1 - The global variable which stores the size of a data array
  42:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  exposed to the I2C master for the first slave address.
  43:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  44:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_dataPtrS2 - The global variable which stores a pointer to the
  45:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  data exposed to the I2C master for the second slave address.
  46:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  47:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwOffsetS2 - The global variable which stores an offset for read
  48:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  and write operations, is set at each write sequence of the second slave
  49:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  device.
  50:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  51:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwIndexS2 - The global variable which stores a pointer to the next
  52:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  value to be read or written for the second slave address.
  53:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  54:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * EZI2Cs_wrProtectS2 - The global variable which stores an offset where data
  55:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  is "Read only" for the second slave address.  ??
  56:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  57:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * EZI2Cs_bufSizeS2 - The global variable which stores the size of a data array
  58:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  exposed to the I2C master for the second slave address.
  59:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  60:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * EZI2Cs_curState - The global variable which stores a current state of an
  61:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  I2C state machine.
  62:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  63:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_curStatus - The global variable which stores the current status of
  64:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  the component.
  65:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  66:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** * Return:
  67:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwOffsetS1 - The global variable which stores an offset for read
  68:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  and write operations, is set at each write sequence of the first slave
  69:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  address and is reset if a received slave address matches the first slave address
  70:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  and a next operation will be read.
  71:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  72:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwIndexS1 - The global variable which stores a pointer to the next
  73:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  value to be read or written for the first slave address. Is set to
  74:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwOffsetS1 and than incremented if a received slave address
  75:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  matches the first slave address and a next operation will be read.
  76:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  77:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwOffsetS2 - The global variable which stores an offset for read
  78:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  and write operations, is set at each write sequence of the second slave
  79:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  address. This variable changes if a new sub-address is passed to the slave.
  80:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  81:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  EZI2Cs_rwIndexS2 - The global variable which stores a pointer to the next
  82:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  value to be read or written for the second slave address. This variable
  83:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *  changes if a new sub-address is passed to the slave.
  84:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *
  85:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** *******************************************************************************/
  86:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** CY_ISR(EZI2Cs_ISR)
  87:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** {
  27              		.loc 1 87 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 3


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  88:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     static uint8  tmp8;
  89:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     static uint8  tmpCsr;
  90:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
  91:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** #if (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_16BIT)
  92:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     static uint16 tmp16;
  93:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** #endif /* (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_16BIT) */
  94:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
  95:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     /* Entry from interrupt
  96:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     *  In the hardware address compare mode, we can assume we only get interrupted
  97:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     *  when a valid address is recognized. In the software address compare mode,
  98:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     *  we have to check every address after a start condition.
  99:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     */
 100:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 101:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     /* Make copy to check Stop condition after bus has been released */
 102:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     tmpCsr = EZI2Cs_CSR_REG;
  37              		.loc 1 102 0
  38 0004 864B     		ldr	r3, .L21
  39 0006 1B78     		ldrb	r3, [r3]
  40 0008 DAB2     		uxtb	r2, r3
  41 000a 864B     		ldr	r3, .L21+4
  42 000c 1A70     		strb	r2, [r3]
 103:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 104:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     /* Check for address phase of the transaction */
 105:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     if (EZI2Cs_IS_BIT_SET(tmpCsr, EZI2Cs_CSR_ADDRESS))
  43              		.loc 1 105 0
  44 000e 854B     		ldr	r3, .L21+4
  45 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0012 03F00803 		and	r3, r3, #8
  47 0016 002B     		cmp	r3, #0
  48 0018 42D0     		beq	.L2
 106:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     {
 107:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         #if (EZI2Cs_ADDRESSES == EZI2Cs_TWO_ADDRESSES)
 108:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 109:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             /* Get slave address from data register */
 110:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             tmp8 = ((EZI2Cs_DATA_REG >> EZI2Cs_ADDRESS_SHIFT) & EZI2Cs_SADDR_MASK);
 111:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 112:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             if (tmp8 == EZI2Cs_addrS1)   /* Check for address 1  */
 113:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             {
 114:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 if (EZI2Cs_IS_BIT_SET(EZI2Cs_DATA_REG, EZI2Cs_READ_FLAG))
 115:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 {  /* Prepare next read op, get data and place in register */
 116:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 117:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Load first data byte  */
 118:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_DATA_REG = EZI2Cs_dataPtrS1[EZI2Cs_rwOffsetS1];
 119:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 120:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* ACK and transmit */
 121:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = (EZI2Cs_CSR_ACK | EZI2Cs_CSR_TRANSMIT);
 122:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 123:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Set index to offset */
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 4


 124:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_rwIndexS1 = EZI2Cs_rwOffsetS1;
 125:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 126:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Advance to data location */
 127:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     ++EZI2Cs_rwIndexS1;
 128:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 129:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Set Read busy status */
 130:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curStatus |= EZI2Cs_STATUS_RD1BUSY;
 131:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 132:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Prepare for read transaction */
 133:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curState = EZI2Cs_SM_DEV1_RD_DATA;
 134:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 }
 135:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 else  /* Start of a Write transaction, reset pointers, first byte is address */
 136:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 {  /* Prepare next operation to write offset */
 137:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 138:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* ACK and ready to receive sub address */
 139:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 140:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 141:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Set Write busy status */
 142:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curStatus |= EZI2Cs_STATUS_WR1BUSY;
 143:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 144:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Prepare for read transaction */
 145:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curState = EZI2Cs_SM_DEV1_WR_ADDR;
 146:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 147:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Stop Interrupt Enable */
 148:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CFG_REG  |= EZI2Cs_CFG_STOP_IE;
 149:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 150:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 }  /* Prepared for next Write transaction */
 151:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             }   /* Slave address #1 is processed */
 152:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             else if (tmp8 == EZI2Cs_addrS2)   /* Check for address 2  */
 153:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             {
 154:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 if (EZI2Cs_IS_BIT_SET(EZI2Cs_DATA_REG, EZI2Cs_READ_FLAG))
 155:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 {  /* Prepare next read op, get data and place in register */
 156:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 157:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Load first data byte  */
 158:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_DATA_REG = EZI2Cs_dataPtrS2[EZI2Cs_rwOffsetS2];
 159:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 160:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* ACK and transmit */
 161:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = (EZI2Cs_CSR_ACK | EZI2Cs_CSR_TRANSMIT);
 162:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 163:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Reset pointer to previous offset */
 164:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_rwIndexS2 = EZI2Cs_rwOffsetS2;
 165:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 166:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Advance to data location */
 167:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     ++EZI2Cs_rwIndexS2;
 168:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 169:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Set read busy status */
 170:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curStatus |= EZI2Cs_STATUS_RD2BUSY;
 171:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 172:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Prepare for read transaction */
 173:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curState = EZI2Cs_SM_DEV2_RD_DATA;
 174:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 175:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 }  /* Prepared for next Read transaction */
 176:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 else  /* Start of write transfer, reset ptrs, 1st byte is address */
 177:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 {  /* Prepare next operation to write offset */
 178:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 179:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* ACK and ready to receive address */
 180:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 5


 181:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 182:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Set Write busy status */
 183:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curStatus |= EZI2Cs_STATUS_WR2BUSY;
 184:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 185:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Prepare for read transaction */
 186:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curState = EZI2Cs_SM_DEV2_WR_ADDR;
 187:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 188:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Enable interrupt on Stop */
 189:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CFG_REG  |= EZI2Cs_CFG_STOP_IE;
 190:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 } /* Prepared for the next Write transaction */
 191:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             }
 192:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             else   /* No address match */
 193:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             {   /* NAK address Match  */
 194:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 195:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             }
 196:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         #else /* One slave address - hardware address matching */
 197:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 198:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             if (EZI2Cs_IS_BIT_SET(EZI2Cs_DATA_REG, EZI2Cs_READ_FLAG))
  49              		.loc 1 198 0
  50 001a 834B     		ldr	r3, .L21+8
  51 001c 1B78     		ldrb	r3, [r3]
  52 001e DBB2     		uxtb	r3, r3
  53 0020 03F00103 		and	r3, r3, #1
  54 0024 002B     		cmp	r3, #0
  55 0026 24D0     		beq	.L3
 199:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             {   /* Prepare next read op, get data and place in register */
 200:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 201:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Load first data byte  */
 202:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_DATA_REG = EZI2Cs_dataPtrS1[EZI2Cs_rwOffsetS1];
  56              		.loc 1 202 0
  57 0028 7F4B     		ldr	r3, .L21+8
  58 002a 804A     		ldr	r2, .L21+12
  59 002c 1168     		ldr	r1, [r2]
  60 002e 804A     		ldr	r2, .L21+16
  61 0030 1278     		ldrb	r2, [r2]
  62 0032 D2B2     		uxtb	r2, r2
  63 0034 0A44     		add	r2, r2, r1
  64 0036 1278     		ldrb	r2, [r2]
  65 0038 D2B2     		uxtb	r2, r2
  66 003a 1A70     		strb	r2, [r3]
 203:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 204:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* ACK and transmit */
 205:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_CSR_REG = (EZI2Cs_CSR_ACK | EZI2Cs_CSR_TRANSMIT);
  67              		.loc 1 205 0
  68 003c 784B     		ldr	r3, .L21
  69 003e 1422     		movs	r2, #20
  70 0040 1A70     		strb	r2, [r3]
 206:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 207:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Reset pointer to previous offset */
 208:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_rwIndexS1 = EZI2Cs_rwOffsetS1;
  71              		.loc 1 208 0
  72 0042 7B4B     		ldr	r3, .L21+16
  73 0044 1B78     		ldrb	r3, [r3]
  74 0046 DAB2     		uxtb	r2, r3
  75 0048 7A4B     		ldr	r3, .L21+20
  76 004a 1A70     		strb	r2, [r3]
 209:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 6


 210:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Advance to data location */
 211:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 ++EZI2Cs_rwIndexS1;
  77              		.loc 1 211 0
  78 004c 794B     		ldr	r3, .L21+20
  79 004e 1B78     		ldrb	r3, [r3]
  80 0050 DBB2     		uxtb	r3, r3
  81 0052 0133     		adds	r3, r3, #1
  82 0054 DAB2     		uxtb	r2, r3
  83 0056 774B     		ldr	r3, .L21+20
  84 0058 1A70     		strb	r2, [r3]
 212:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 213:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Set read busy status */
 214:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_curStatus |= EZI2Cs_STATUS_RD1BUSY;
  85              		.loc 1 214 0
  86 005a 774B     		ldr	r3, .L21+24
  87 005c 1B78     		ldrb	r3, [r3]
  88 005e DBB2     		uxtb	r3, r3
  89 0060 43F01103 		orr	r3, r3, #17
  90 0064 DAB2     		uxtb	r2, r3
  91 0066 744B     		ldr	r3, .L21+24
  92 0068 1A70     		strb	r2, [r3]
 215:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 216:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Prepare for read transaction */
 217:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_curState = EZI2Cs_SM_DEV1_RD_DATA;
  93              		.loc 1 217 0
  94 006a 744B     		ldr	r3, .L21+28
  95 006c 0822     		movs	r2, #8
  96 006e 1A70     		strb	r2, [r3]
  97 0070 B7E0     		b	.L5
  98              	.L3:
 218:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             }
 219:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             else  /* Start of write transfer, reset ptrs, 1st byte is address */
 220:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             {   /* Prepare next operation to write offset */
 221:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 222:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* ACK and ready to receive address */
 223:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
  99              		.loc 1 223 0
 100 0072 6B4B     		ldr	r3, .L21
 101 0074 1022     		movs	r2, #16
 102 0076 1A70     		strb	r2, [r3]
 224:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 225:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Set Write activity */
 226:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_curStatus |= EZI2Cs_STATUS_WR1BUSY;
 103              		.loc 1 226 0
 104 0078 6F4B     		ldr	r3, .L21+24
 105 007a 1B78     		ldrb	r3, [r3]
 106 007c DBB2     		uxtb	r3, r3
 107 007e 43F01203 		orr	r3, r3, #18
 108 0082 DAB2     		uxtb	r2, r3
 109 0084 6C4B     		ldr	r3, .L21+24
 110 0086 1A70     		strb	r2, [r3]
 227:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 228:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Prepare for read transaction */
 229:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_curState = EZI2Cs_SM_DEV1_WR_ADDR;
 111              		.loc 1 229 0
 112 0088 6C4B     		ldr	r3, .L21+28
 113 008a 0122     		movs	r2, #1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 7


 114 008c 1A70     		strb	r2, [r3]
 230:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 231:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Enable interrupt on stop */
 232:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_CFG_REG |= EZI2Cs_CFG_STOP_IE;
 115              		.loc 1 232 0
 116 008e 6C4B     		ldr	r3, .L21+32
 117 0090 6B4A     		ldr	r2, .L21+32
 118 0092 1278     		ldrb	r2, [r2]
 119 0094 D2B2     		uxtb	r2, r2
 120 0096 42F01002 		orr	r2, r2, #16
 121 009a D2B2     		uxtb	r2, r2
 122 009c 1A70     		strb	r2, [r3]
 123 009e A0E0     		b	.L5
 124              	.L2:
 233:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             }
 234:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         #endif  /* (EZI2Cs_ADDRESSES == EZI2Cs_TWO_ADDRESSES) */
 235:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     }
 236:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     else if (EZI2Cs_IS_BIT_SET(tmpCsr, EZI2Cs_CSR_BYTE_COMPLETE))
 125              		.loc 1 236 0
 126 00a0 604B     		ldr	r3, .L21+4
 127 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 128 00a4 03F00103 		and	r3, r3, #1
 129 00a8 002B     		cmp	r3, #0
 130 00aa 00F09A80 		beq	.L5
 237:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     {   /* Check for data transfer */
 238:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 239:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         /* Data transfer state machine */
 240:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         switch (EZI2Cs_curState)
 131              		.loc 1 240 0
 132 00ae 634B     		ldr	r3, .L21+28
 133 00b0 1B78     		ldrb	r3, [r3]
 134 00b2 DBB2     		uxtb	r3, r3
 135 00b4 042B     		cmp	r3, #4
 136 00b6 24D0     		beq	.L7
 137 00b8 082B     		cmp	r3, #8
 138 00ba 48D0     		beq	.L8
 139 00bc 012B     		cmp	r3, #1
 140 00be 40F08380 		bne	.L20
 241:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         {
 242:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             /* Address written from Master to Slave. */
 243:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             case EZI2Cs_SM_DEV1_WR_ADDR:
 244:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 245:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* If 8-bit interface, Advance to WR_Data, else to ADDR2 */
 246:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 #if (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_8BIT)
 247:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     tmp8 = EZI2Cs_DATA_REG;
 141              		.loc 1 247 0
 142 00c2 594B     		ldr	r3, .L21+8
 143 00c4 1B78     		ldrb	r3, [r3]
 144 00c6 DAB2     		uxtb	r2, r3
 145 00c8 5E4B     		ldr	r3, .L21+36
 146 00ca 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     if (tmp8 < EZI2Cs_bufSizeS1)
 147              		.loc 1 248 0
 148 00cc 5D4B     		ldr	r3, .L21+36
 149 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 150 00d0 1A46     		mov	r2, r3
 151 00d2 5D4B     		ldr	r3, .L21+40
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 8


 152 00d4 1B88     		ldrh	r3, [r3]	@ movhi
 153 00d6 9BB2     		uxth	r3, r3
 154 00d8 9A42     		cmp	r2, r3
 155 00da 0ED2     		bcs	.L10
 249:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     {
 250:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* ACK and ready to receive data */
 251:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 156              		.loc 1 251 0
 157 00dc 504B     		ldr	r3, .L21
 158 00de 1022     		movs	r2, #16
 159 00e0 1A70     		strb	r2, [r3]
 252:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 253:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Set offset to new value */
 254:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_rwOffsetS1 = tmp8;
 160              		.loc 1 254 0
 161 00e2 584B     		ldr	r3, .L21+36
 162 00e4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 163 00e6 524B     		ldr	r3, .L21+16
 164 00e8 1A70     		strb	r2, [r3]
 255:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 256:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Reset index to offset value */
 257:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_rwIndexS1 = tmp8;
 165              		.loc 1 257 0
 166 00ea 564B     		ldr	r3, .L21+36
 167 00ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 168 00ee 514B     		ldr	r3, .L21+20
 169 00f0 1A70     		strb	r2, [r3]
 258:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 259:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Prepare for write transaction */
 260:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_curState = EZI2Cs_SM_DEV1_WR_DATA;
 170              		.loc 1 260 0
 171 00f2 524B     		ldr	r3, .L21+28
 172 00f4 0422     		movs	r2, #4
 173 00f6 1A70     		strb	r2, [r3]
 261:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     }
 262:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     else    /* Out of range, NAK data and don't set offset */
 263:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     {
 264:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* NAK master */
 265:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 266:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     }
 267:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 268:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 #else   /* 16-bit */
 269:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Save MSB of address */
 270:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     tmp16 = EZI2Cs_DATA_REG;
 271:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 272:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* ACK and ready to receive address */
 273:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 274:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 275:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Prepare to get LSB of address */
 276:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curState = EZI2Cs_SM_DEV1_WR_ADDR_LSB;
 277:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 278:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 #endif  /* (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_8BIT) */
 279:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 280:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             break;  /* case EZI2Cs_SM_DEV1_WR_ADDR */
 174              		.loc 1 280 0
 175 00f8 73E0     		b	.L12
 176              	.L10:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 9


 265:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 177              		.loc 1 265 0
 178 00fa 494B     		ldr	r3, .L21
 179 00fc 0022     		movs	r2, #0
 180 00fe 1A70     		strb	r2, [r3]
 181              		.loc 1 280 0
 182 0100 6FE0     		b	.L12
 183              	.L7:
 281:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 282:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             #if (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_16BIT)
 283:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 284:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Only used with 16-bit interface */
 285:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 case EZI2Cs_SM_DEV1_WR_ADDR_LSB:
 286:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 287:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Create offset */
 288:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     tmp16 = (uint16) (tmp16 << EZI2Cs_ADDRESS_LSB_SHIFT) | EZI2Cs_DATA_REG;
 289:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 290:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Check range */
 291:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     if(tmp16 < EZI2Cs_bufSizeS1)
 292:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     {
 293:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* ACK and ready to receive address */
 294:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 295:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 296:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Set offset to new value */
 297:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_rwOffsetS1 = tmp16;
 298:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 299:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Reset index to offset value */
 300:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_rwIndexS1 = tmp16;
 301:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 302:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Prepare for write transaction */
 303:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_curState = EZI2Cs_SM_DEV1_WR_DATA;
 304:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     }
 305:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     else    /* Out of range, NAK data and don't set offset */
 306:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     {
 307:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* NAK master */
 308:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 309:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     }
 310:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 break; /* case EZI2Cs_SM_DEV1_WR_ADDR_LSB */
 311:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 312:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             #endif  /* (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_16BIT) */
 313:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 314:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 315:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             /* Data written from master to slave. */
 316:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             case EZI2Cs_SM_DEV1_WR_DATA:
 317:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 318:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Check for valid range */
 319:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 if (EZI2Cs_rwIndexS1 < EZI2Cs_wrProtectS1)
 184              		.loc 1 319 0
 185 0102 4C4B     		ldr	r3, .L21+20
 186 0104 1B78     		ldrb	r3, [r3]
 187 0106 DBB2     		uxtb	r3, r3
 188 0108 1A46     		mov	r2, r3
 189 010a 504B     		ldr	r3, .L21+44
 190 010c 1B88     		ldrh	r3, [r3]	@ movhi
 191 010e 9BB2     		uxth	r3, r3
 192 0110 9A42     		cmp	r2, r3
 193 0112 18D2     		bcs	.L13
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 10


 320:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 {
 321:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Get data, to ACK quickly */
 322:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     tmp8 = EZI2Cs_DATA_REG;
 194              		.loc 1 322 0
 195 0114 444B     		ldr	r3, .L21+8
 196 0116 1B78     		ldrb	r3, [r3]
 197 0118 DAB2     		uxtb	r2, r3
 198 011a 4A4B     		ldr	r3, .L21+36
 199 011c 1A70     		strb	r2, [r3]
 323:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 324:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* ACK and ready to receive sub address */
 325:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 200              		.loc 1 325 0
 201 011e 404B     		ldr	r3, .L21
 202 0120 1022     		movs	r2, #16
 203 0122 1A70     		strb	r2, [r3]
 326:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 327:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Write data to array */
 328:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_dataPtrS1[EZI2Cs_rwIndexS1] = tmp8;
 204              		.loc 1 328 0
 205 0124 414B     		ldr	r3, .L21+12
 206 0126 1A68     		ldr	r2, [r3]
 207 0128 424B     		ldr	r3, .L21+20
 208 012a 1B78     		ldrb	r3, [r3]
 209 012c DBB2     		uxtb	r3, r3
 210 012e 1344     		add	r3, r3, r2
 211 0130 444A     		ldr	r2, .L21+36
 212 0132 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 213 0134 1A70     		strb	r2, [r3]
 329:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 330:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Increment pointer */
 331:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_rwIndexS1++;
 214              		.loc 1 331 0
 215 0136 3F4B     		ldr	r3, .L21+20
 216 0138 1B78     		ldrb	r3, [r3]
 217 013a DBB2     		uxtb	r3, r3
 218 013c 0133     		adds	r3, r3, #1
 219 013e DAB2     		uxtb	r2, r3
 220 0140 3C4B     		ldr	r3, .L21+20
 221 0142 1A70     		strb	r2, [r3]
 332:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 }
 333:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 else
 334:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 {
 335:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* NAK cause beyond write area */
 336:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 337:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 }
 338:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             break;  /* EZI2Cs_SM_DEV1_WR_DATA */
 222              		.loc 1 338 0
 223 0144 4DE0     		b	.L12
 224              	.L13:
 336:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 225              		.loc 1 336 0
 226 0146 364B     		ldr	r3, .L21
 227 0148 0022     		movs	r2, #0
 228 014a 1A70     		strb	r2, [r3]
 229              		.loc 1 338 0
 230 014c 49E0     		b	.L12
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 11


 231              	.L8:
 339:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 340:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 341:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             /* Data read by master from slave */
 342:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             case EZI2Cs_SM_DEV1_RD_DATA:
 343:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 344:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Check ACK/NAK */
 345:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 if ((tmpCsr & EZI2Cs_CSR_LRB) == EZI2Cs_CSR_LRB_ACK)
 232              		.loc 1 345 0
 233 014e 354B     		ldr	r3, .L21+4
 234 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 235 0152 03F00203 		and	r3, r3, #2
 236 0156 002B     		cmp	r3, #0
 237 0158 24D1     		bne	.L15
 346:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 {
 347:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Check for valid range */
 348:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     if (EZI2Cs_rwIndexS1 < EZI2Cs_bufSizeS1)
 238              		.loc 1 348 0
 239 015a 364B     		ldr	r3, .L21+20
 240 015c 1B78     		ldrb	r3, [r3]
 241 015e DBB2     		uxtb	r3, r3
 242 0160 1A46     		mov	r2, r3
 243 0162 394B     		ldr	r3, .L21+40
 244 0164 1B88     		ldrh	r3, [r3]	@ movhi
 245 0166 9BB2     		uxth	r3, r3
 246 0168 9A42     		cmp	r2, r3
 247 016a 14D2     		bcs	.L16
 349:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     {
 350:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Get data from array */
 351:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_DATA_REG = EZI2Cs_dataPtrS1[EZI2Cs_rwIndexS1];
 248              		.loc 1 351 0
 249 016c 2E4B     		ldr	r3, .L21+8
 250 016e 2F4A     		ldr	r2, .L21+12
 251 0170 1168     		ldr	r1, [r2]
 252 0172 304A     		ldr	r2, .L21+20
 253 0174 1278     		ldrb	r2, [r2]
 254 0176 D2B2     		uxtb	r2, r2
 255 0178 0A44     		add	r2, r2, r1
 256 017a 1278     		ldrb	r2, [r2]
 257 017c D2B2     		uxtb	r2, r2
 258 017e 1A70     		strb	r2, [r3]
 352:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 353:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Send Data */
 354:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_TRANSMIT;
 259              		.loc 1 354 0
 260 0180 274B     		ldr	r3, .L21
 261 0182 0422     		movs	r2, #4
 262 0184 1A70     		strb	r2, [r3]
 355:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 356:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Increment pointer */
 357:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         ++EZI2Cs_rwIndexS1;
 263              		.loc 1 357 0
 264 0186 2B4B     		ldr	r3, .L21+20
 265 0188 1B78     		ldrb	r3, [r3]
 266 018a DBB2     		uxtb	r3, r3
 267 018c 0133     		adds	r3, r3, #1
 268 018e DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 12


 269 0190 284B     		ldr	r3, .L21+20
 270 0192 1A70     		strb	r2, [r3]
 358:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     }
 359:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     else    /* No valid range */
 360:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     {
 361:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Out of range send FFs */
 362:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_DATA_REG = EZI2Cs_DUMMY_DATA;
 363:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 364:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Send Data */
 365:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_TRANSMIT;
 366:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     }
 367:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 }
 368:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 else    /* Data was NAKed */
 369:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 {
 370:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Send dummy data at the end of read transaction */
 371:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_DATA_REG = EZI2Cs_DUMMY_DATA;
 372:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 373:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Clear transmit bit at the end of read transaction */
 374:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 375:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 376:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Clear Busy Flag */
 377:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curStatus &= ((uint8) ~EZI2Cs_STATUS_BUSY);
 378:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 379:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Error or Stop, reset state */
 380:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curState = EZI2Cs_SM_IDLE;
 381:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 382:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 }
 383:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             break;  /* EZI2Cs_SM_DEV1_RD_DATA */
 271              		.loc 1 383 0
 272 0194 25E0     		b	.L12
 273              	.L16:
 362:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_DATA_REG = EZI2Cs_DUMMY_DATA;
 274              		.loc 1 362 0
 275 0196 244B     		ldr	r3, .L21+8
 276 0198 FF22     		movs	r2, #255
 277 019a 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_TRANSMIT;
 278              		.loc 1 365 0
 279 019c 204B     		ldr	r3, .L21
 280 019e 0422     		movs	r2, #4
 281 01a0 1A70     		strb	r2, [r3]
 282              		.loc 1 383 0
 283 01a2 1EE0     		b	.L12
 284              	.L15:
 371:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_DATA_REG = EZI2Cs_DUMMY_DATA;
 285              		.loc 1 371 0
 286 01a4 204B     		ldr	r3, .L21+8
 287 01a6 FF22     		movs	r2, #255
 288 01a8 1A70     		strb	r2, [r3]
 374:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 289              		.loc 1 374 0
 290 01aa 1D4B     		ldr	r3, .L21
 291 01ac 0022     		movs	r2, #0
 292 01ae 1A70     		strb	r2, [r3]
 377:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curStatus &= ((uint8) ~EZI2Cs_STATUS_BUSY);
 293              		.loc 1 377 0
 294 01b0 214B     		ldr	r3, .L21+24
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 13


 295 01b2 1B78     		ldrb	r3, [r3]
 296 01b4 DBB2     		uxtb	r3, r3
 297 01b6 23F01003 		bic	r3, r3, #16
 298 01ba DAB2     		uxtb	r2, r3
 299 01bc 1E4B     		ldr	r3, .L21+24
 300 01be 1A70     		strb	r2, [r3]
 380:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     EZI2Cs_curState = EZI2Cs_SM_IDLE;
 301              		.loc 1 380 0
 302 01c0 1E4B     		ldr	r3, .L21+28
 303 01c2 0022     		movs	r2, #0
 304 01c4 1A70     		strb	r2, [r3]
 305              		.loc 1 383 0
 306 01c6 0CE0     		b	.L12
 307              	.L20:
 384:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 385:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             /* Second Device Address */
 386:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             #if (EZI2Cs_ADDRESSES == EZI2Cs_TWO_ADDRESSES)
 387:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 388:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 case EZI2Cs_SM_DEV2_WR_ADDR:
 389:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 390:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* If 8-bit interface, Advance to WR_Data, else to ADDR2 */
 391:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     #if (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_8BIT)
 392:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 393:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         tmp8 = EZI2Cs_DATA_REG;
 394:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         if (tmp8 < EZI2Cs_bufSizeS2)
 395:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         {
 396:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* ACK and ready to receive address */
 397:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 398:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 399:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Set offset to new value */
 400:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_rwOffsetS2 = tmp8;
 401:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 402:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Reset index to offset value */
 403:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_rwIndexS2 = tmp8;
 404:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 405:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Prepare for write transaction */
 406:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_curState = EZI2Cs_SM_DEV2_WR_DATA;
 407:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         }
 408:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         else    /* Out of range, NAK data and don't set offset */
 409:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         {
 410:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* NAK master */
 411:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 412:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         }
 413:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     #else
 414:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Save LSB of address */
 415:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         tmp16 = EZI2Cs_DATA_REG;
 416:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 417:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* ACK and ready to receive address */
 418:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 419:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 420:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Prepare to get LSB of address */
 421:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_curState = EZI2Cs_SM_DEV2_WR_ADDR_LSB;
 422:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     #endif  /* (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_8BIT) */
 423:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 424:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 break;  /* EZI2Cs_SM_DEV2_WR_ADDR */
 425:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 426:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 #if (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_16BIT)
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 14


 427:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 428:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Only used with 16-bit interface */
 429:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     case EZI2Cs_SM_DEV2_WR_ADDR_LSB:
 430:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Create offset */
 431:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         tmp16 = (uint16) (tmp16 << 8u) | EZI2Cs_DATA_REG;
 432:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         if (tmp16 < EZI2Cs_bufSizeS2)
 433:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         {
 434:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* ACK and ready to receive address */
 435:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 436:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 437:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Set offset to new value */
 438:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_rwOffsetS2 = tmp16;
 439:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 440:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Reset index to offset value */
 441:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_rwIndexS2 = tmp16;
 442:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 443:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Prepare for write transaction */
 444:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_curState = EZI2Cs_SM_DEV2_WR_DATA;
 445:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         }
 446:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         else    /* Out of range, NAK data and don't set offset */
 447:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         {
 448:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* NAK master */
 449:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 450:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         }
 451:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         break; /* EZI2Cs_SM_DEV2_WR_ADDR_LSB */
 452:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 453:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 #endif   /* (EZI2Cs_SUBADDR_WIDTH == EZI2Cs_SUBADDR_16BIT) */
 454:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 455:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 456:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Data written from master to slave. */
 457:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 case EZI2Cs_SM_DEV2_WR_DATA:
 458:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 459:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Check for valid range */
 460:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     if (EZI2Cs_rwIndexS2 < EZI2Cs_wrProtectS2)
 461:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     {
 462:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Get data, to ACK quickly */
 463:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         tmp8 = EZI2Cs_DATA_REG;
 464:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 465:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* ACK and ready to receive sub address */
 466:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_ACK;
 467:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 468:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Write data to array */
 469:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_dataPtrS2[EZI2Cs_rwIndexS2] = tmp8;
 470:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 471:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* Inc pointer */
 472:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         ++EZI2Cs_rwIndexS2;
 473:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     }
 474:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     else
 475:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     {
 476:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         /* NAK cause beyond write area */
 477:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 478:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     }
 479:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     break;  /* EZI2Cs_SM_DEV2_WR_DATA */
 480:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 481:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     /* Data read by master from slave */
 482:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                     case EZI2Cs_SM_DEV2_RD_DATA:
 483:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 15


 484:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         if ((tmpCsr & EZI2Cs_CSR_LRB) == EZI2Cs_CSR_LRB_ACK)
 485:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         {   /* ACKed */
 486:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Check for valid range */
 487:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             if (EZI2Cs_rwIndexS2 < EZI2Cs_bufSizeS2)
 488:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             {   /* Check ACK/NAK */
 489:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 /* Get data from array */
 490:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 EZI2Cs_DATA_REG = EZI2Cs_dataPtrS2[EZI2Cs_rwIndexS2];
 491:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 492:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 /* Send Data */
 493:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 EZI2Cs_CSR_REG = EZI2Cs_CSR_TRANSMIT;
 494:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 495:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 /* Increment pointer */
 496:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 EZI2Cs_rwIndexS2++;
 497:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             }
 498:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             else    /* Not valid range */
 499:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             {
 500:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 /* Out of range send FFs */
 501:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 EZI2Cs_DATA_REG = EZI2Cs_DUMMY_DATA;
 502:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 503:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 /* Send Data */
 504:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                                 EZI2Cs_CSR_REG = EZI2Cs_CSR_TRANSMIT;
 505:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             }
 506:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         }
 507:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         else    /* NAKed */
 508:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         {
 509:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Out of range send FFs */
 510:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_DATA_REG = EZI2Cs_DUMMY_DATA;
 511:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 512:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Send Data */
 513:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_CSR_REG = EZI2Cs_CSR_TRANSMIT;
 514:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 515:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Clear busy status */
 516:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_curStatus &= ((uint8) ~EZI2Cs_STATUS_BUSY);
 517:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 518:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             /* Error or Stop, reset state */
 519:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                             EZI2Cs_curState = EZI2Cs_SM_IDLE;
 520:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         }   /* End if ACK/NAK */
 521:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 522:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                         break;  /* EZI2Cs_SM_DEV2_RD_DATA */
 523:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 524:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             #endif  /* (EZI2Cs_ADDRESSES == EZI2Cs_TWO_ADDRESSES) */
 525:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 526:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****             default:
 527:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Invalid state, reset state to idle */
 528:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_curState = EZI2Cs_SM_IDLE;
 308              		.loc 1 528 0
 309 01c8 1C4B     		ldr	r3, .L21+28
 310 01ca 0022     		movs	r2, #0
 311 01cc 1A70     		strb	r2, [r3]
 529:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 530:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Reset offsets and index */
 531:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_rwOffsetS1 = 0u;
 312              		.loc 1 531 0
 313 01ce 184B     		ldr	r3, .L21+16
 314 01d0 0022     		movs	r2, #0
 315 01d2 1A70     		strb	r2, [r3]
 532:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_rwIndexS1  = 0u;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 16


 316              		.loc 1 532 0
 317 01d4 174B     		ldr	r3, .L21+20
 318 01d6 0022     		movs	r2, #0
 319 01d8 1A70     		strb	r2, [r3]
 533:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 534:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 /* Dummy NAK to release bus */
 535:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 EZI2Cs_CSR_REG = EZI2Cs_CSR_NAK;
 320              		.loc 1 535 0
 321 01da 114B     		ldr	r3, .L21
 322 01dc 0022     		movs	r2, #0
 323 01de 1A70     		strb	r2, [r3]
 536:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****                 break;
 324              		.loc 1 536 0
 325 01e0 00BF     		nop
 326              	.L12:
 327              	.L5:
 537:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 538:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         }  /* End switch/case EZI2Cs_curState */
 539:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     }
 540:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     else
 541:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     {
 542:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         /* Intentional blank line */
 543:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     }
 544:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 545:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     /* Check if Stop was detected */
 546:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     if (EZI2Cs_IS_BIT_SET(EZI2Cs_CSR_REG, EZI2Cs_CSR_STOP_STATUS))
 328              		.loc 1 546 0
 329 01e2 0F4B     		ldr	r3, .L21
 330 01e4 1B78     		ldrb	r3, [r3]
 331 01e6 DBB2     		uxtb	r3, r3
 332 01e8 03F02003 		and	r3, r3, #32
 333 01ec 002B     		cmp	r3, #0
 334 01ee 12D0     		beq	.L1
 547:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     {
 548:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         /* Clear Busy flag */
 549:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         EZI2Cs_curStatus &= ((uint8) ~EZI2Cs_STATUS_BUSY);
 335              		.loc 1 549 0
 336 01f0 114B     		ldr	r3, .L21+24
 337 01f2 1B78     		ldrb	r3, [r3]
 338 01f4 DBB2     		uxtb	r3, r3
 339 01f6 23F01003 		bic	r3, r3, #16
 340 01fa DAB2     		uxtb	r2, r3
 341 01fc 0E4B     		ldr	r3, .L21+24
 342 01fe 1A70     		strb	r2, [r3]
 550:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 551:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         /* error or stop - reset state */
 552:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         EZI2Cs_curState = EZI2Cs_SM_IDLE;
 343              		.loc 1 552 0
 344 0200 0E4B     		ldr	r3, .L21+28
 345 0202 0022     		movs	r2, #0
 346 0204 1A70     		strb	r2, [r3]
 553:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** 
 554:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         /* Disable interrupt on Stop */
 555:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****         EZI2Cs_CFG_REG &= ((uint8) ~EZI2Cs_CFG_STOP_IE);
 347              		.loc 1 555 0
 348 0206 0E4B     		ldr	r3, .L21+32
 349 0208 0D4A     		ldr	r2, .L21+32
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 17


 350 020a 1278     		ldrb	r2, [r2]
 351 020c D2B2     		uxtb	r2, r2
 352 020e 22F01002 		bic	r2, r2, #16
 353 0212 D2B2     		uxtb	r2, r2
 354 0214 1A70     		strb	r2, [r3]
 355              	.L1:
 556:.\Generated_Source\PSoC5/EZI2Cs_INT.c ****     }
 557:.\Generated_Source\PSoC5/EZI2Cs_INT.c **** }
 356              		.loc 1 557 0
 357 0216 BD46     		mov	sp, r7
 358              		@ sp needed
 359 0218 5DF8047B 		ldr	r7, [sp], #4
 360 021c 7047     		bx	lr
 361              	.L22:
 362 021e 00BF     		.align	2
 363              	.L21:
 364 0220 D7490040 		.word	1073760727
 365 0224 00000000 		.word	tmpCsr.4853
 366 0228 D8490040 		.word	1073760728
 367 022c 00000000 		.word	EZI2Cs_dataPtrS1
 368 0230 00000000 		.word	EZI2Cs_rwOffsetS1
 369 0234 00000000 		.word	EZI2Cs_rwIndexS1
 370 0238 00000000 		.word	EZI2Cs_curStatus
 371 023c 00000000 		.word	EZI2Cs_curState
 372 0240 D6490040 		.word	1073760726
 373 0244 01000000 		.word	tmp8.4852
 374 0248 00000000 		.word	EZI2Cs_bufSizeS1
 375 024c 00000000 		.word	EZI2Cs_wrProtectS1
 376              		.cfi_endproc
 377              	.LFE0:
 378              		.size	EZI2Cs_ISR, .-EZI2Cs_ISR
 379              		.bss
 380              	tmpCsr.4853:
 381 0000 00       		.space	1
 382              	tmp8.4852:
 383 0001 00       		.space	1
 384              		.text
 385              	.Letext0:
 386              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 387              		.file 3 ".\\Generated_Source\\PSoC5\\EZI2Cs_PVT.h"
 388              		.section	.debug_info,"",%progbits
 389              	.Ldebug_info0:
 390 0000 3B010000 		.4byte	0x13b
 391 0004 0400     		.2byte	0x4
 392 0006 00000000 		.4byte	.Ldebug_abbrev0
 393 000a 04       		.byte	0x4
 394 000b 01       		.uleb128 0x1
 395 000c 83010000 		.4byte	.LASF25
 396 0010 01       		.byte	0x1
 397 0011 3E010000 		.4byte	.LASF26
 398 0015 4F000000 		.4byte	.LASF27
 399 0019 00000000 		.4byte	.Ldebug_ranges0+0
 400 001d 00000000 		.4byte	0
 401 0021 00000000 		.4byte	.Ldebug_line0
 402 0025 02       		.uleb128 0x2
 403 0026 01       		.byte	0x1
 404 0027 06       		.byte	0x6
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 18


 405 0028 77010000 		.4byte	.LASF0
 406 002c 02       		.uleb128 0x2
 407 002d 01       		.byte	0x1
 408 002e 08       		.byte	0x8
 409 002f 05010000 		.4byte	.LASF1
 410 0033 02       		.uleb128 0x2
 411 0034 02       		.byte	0x2
 412 0035 05       		.byte	0x5
 413 0036 10020000 		.4byte	.LASF2
 414 003a 02       		.uleb128 0x2
 415 003b 02       		.byte	0x2
 416 003c 07       		.byte	0x7
 417 003d 64010000 		.4byte	.LASF3
 418 0041 02       		.uleb128 0x2
 419 0042 04       		.byte	0x4
 420 0043 05       		.byte	0x5
 421 0044 29010000 		.4byte	.LASF4
 422 0048 02       		.uleb128 0x2
 423 0049 04       		.byte	0x4
 424 004a 07       		.byte	0x7
 425 004b C4000000 		.4byte	.LASF5
 426 004f 02       		.uleb128 0x2
 427 0050 08       		.byte	0x8
 428 0051 05       		.byte	0x5
 429 0052 00000000 		.4byte	.LASF6
 430 0056 02       		.uleb128 0x2
 431 0057 08       		.byte	0x8
 432 0058 07       		.byte	0x7
 433 0059 D6000000 		.4byte	.LASF7
 434 005d 03       		.uleb128 0x3
 435 005e 04       		.byte	0x4
 436 005f 05       		.byte	0x5
 437 0060 696E7400 		.ascii	"int\000"
 438 0064 02       		.uleb128 0x2
 439 0065 04       		.byte	0x4
 440 0066 07       		.byte	0x7
 441 0067 1E000000 		.4byte	.LASF8
 442 006b 04       		.uleb128 0x4
 443 006c BE000000 		.4byte	.LASF9
 444 0070 02       		.byte	0x2
 445 0071 B3       		.byte	0xb3
 446 0072 2C000000 		.4byte	0x2c
 447 0076 04       		.uleb128 0x4
 448 0077 1A020000 		.4byte	.LASF10
 449 007b 02       		.byte	0x2
 450 007c B4       		.byte	0xb4
 451 007d 3A000000 		.4byte	0x3a
 452 0081 02       		.uleb128 0x2
 453 0082 04       		.byte	0x4
 454 0083 04       		.byte	0x4
 455 0084 ED000000 		.4byte	.LASF11
 456 0088 02       		.uleb128 0x2
 457 0089 08       		.byte	0x8
 458 008a 04       		.byte	0x4
 459 008b 37010000 		.4byte	.LASF12
 460 008f 02       		.uleb128 0x2
 461 0090 01       		.byte	0x1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 19


 462 0091 08       		.byte	0x8
 463 0092 13010000 		.4byte	.LASF13
 464 0096 05       		.uleb128 0x5
 465 0097 32010000 		.4byte	.LASF14
 466 009b 02       		.byte	0x2
 467 009c 5D01     		.2byte	0x15d
 468 009e A2000000 		.4byte	0xa2
 469 00a2 06       		.uleb128 0x6
 470 00a3 6B000000 		.4byte	0x6b
 471 00a7 06       		.uleb128 0x6
 472 00a8 76000000 		.4byte	0x76
 473 00ac 02       		.uleb128 0x2
 474 00ad 04       		.byte	0x4
 475 00ae 07       		.byte	0x7
 476 00af 2C020000 		.4byte	.LASF15
 477 00b3 07       		.uleb128 0x7
 478 00b4 21020000 		.4byte	.LASF28
 479 00b8 01       		.byte	0x1
 480 00b9 56       		.byte	0x56
 481 00ba 00000000 		.4byte	.LFB0
 482 00be 50020000 		.4byte	.LFE0-.LFB0
 483 00c2 01       		.uleb128 0x1
 484 00c3 9C       		.byte	0x9c
 485 00c4 EB000000 		.4byte	0xeb
 486 00c8 08       		.uleb128 0x8
 487 00c9 B9000000 		.4byte	.LASF16
 488 00cd 01       		.byte	0x1
 489 00ce 58       		.byte	0x58
 490 00cf 6B000000 		.4byte	0x6b
 491 00d3 05       		.uleb128 0x5
 492 00d4 03       		.byte	0x3
 493 00d5 01000000 		.4byte	tmp8.4852
 494 00d9 08       		.uleb128 0x8
 495 00da 35020000 		.4byte	.LASF17
 496 00de 01       		.byte	0x1
 497 00df 59       		.byte	0x59
 498 00e0 6B000000 		.4byte	0x6b
 499 00e4 05       		.uleb128 0x5
 500 00e5 03       		.byte	0x3
 501 00e6 00000000 		.4byte	tmpCsr.4853
 502 00ea 00       		.byte	0
 503 00eb 09       		.uleb128 0x9
 504 00ec A8000000 		.4byte	.LASF18
 505 00f0 03       		.byte	0x3
 506 00f1 1D       		.byte	0x1d
 507 00f2 A2000000 		.4byte	0xa2
 508 00f6 09       		.uleb128 0x9
 509 00f7 0E000000 		.4byte	.LASF19
 510 00fb 03       		.byte	0x3
 511 00fc 1E       		.byte	0x1e
 512 00fd A2000000 		.4byte	0xa2
 513 0101 09       		.uleb128 0x9
 514 0102 FF010000 		.4byte	.LASF20
 515 0106 03       		.byte	0x3
 516 0107 21       		.byte	0x21
 517 0108 0C010000 		.4byte	0x10c
 518 010c 0A       		.uleb128 0xa
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 20


 519 010d 04       		.byte	0x4
 520 010e A2000000 		.4byte	0xa2
 521 0112 09       		.uleb128 0x9
 522 0113 18010000 		.4byte	.LASF21
 523 0117 03       		.byte	0x3
 524 0118 22       		.byte	0x22
 525 0119 A7000000 		.4byte	0xa7
 526 011d 09       		.uleb128 0x9
 527 011e 3C000000 		.4byte	.LASF22
 528 0122 03       		.byte	0x3
 529 0123 23       		.byte	0x23
 530 0124 A7000000 		.4byte	0xa7
 531 0128 09       		.uleb128 0x9
 532 0129 F3000000 		.4byte	.LASF23
 533 012d 03       		.byte	0x3
 534 012e 24       		.byte	0x24
 535 012f A2000000 		.4byte	0xa2
 536 0133 09       		.uleb128 0x9
 537 0134 2B000000 		.4byte	.LASF24
 538 0138 03       		.byte	0x3
 539 0139 25       		.byte	0x25
 540 013a A2000000 		.4byte	0xa2
 541 013e 00       		.byte	0
 542              		.section	.debug_abbrev,"",%progbits
 543              	.Ldebug_abbrev0:
 544 0000 01       		.uleb128 0x1
 545 0001 11       		.uleb128 0x11
 546 0002 01       		.byte	0x1
 547 0003 25       		.uleb128 0x25
 548 0004 0E       		.uleb128 0xe
 549 0005 13       		.uleb128 0x13
 550 0006 0B       		.uleb128 0xb
 551 0007 03       		.uleb128 0x3
 552 0008 0E       		.uleb128 0xe
 553 0009 1B       		.uleb128 0x1b
 554 000a 0E       		.uleb128 0xe
 555 000b 55       		.uleb128 0x55
 556 000c 17       		.uleb128 0x17
 557 000d 11       		.uleb128 0x11
 558 000e 01       		.uleb128 0x1
 559 000f 10       		.uleb128 0x10
 560 0010 17       		.uleb128 0x17
 561 0011 00       		.byte	0
 562 0012 00       		.byte	0
 563 0013 02       		.uleb128 0x2
 564 0014 24       		.uleb128 0x24
 565 0015 00       		.byte	0
 566 0016 0B       		.uleb128 0xb
 567 0017 0B       		.uleb128 0xb
 568 0018 3E       		.uleb128 0x3e
 569 0019 0B       		.uleb128 0xb
 570 001a 03       		.uleb128 0x3
 571 001b 0E       		.uleb128 0xe
 572 001c 00       		.byte	0
 573 001d 00       		.byte	0
 574 001e 03       		.uleb128 0x3
 575 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 21


 576 0020 00       		.byte	0
 577 0021 0B       		.uleb128 0xb
 578 0022 0B       		.uleb128 0xb
 579 0023 3E       		.uleb128 0x3e
 580 0024 0B       		.uleb128 0xb
 581 0025 03       		.uleb128 0x3
 582 0026 08       		.uleb128 0x8
 583 0027 00       		.byte	0
 584 0028 00       		.byte	0
 585 0029 04       		.uleb128 0x4
 586 002a 16       		.uleb128 0x16
 587 002b 00       		.byte	0
 588 002c 03       		.uleb128 0x3
 589 002d 0E       		.uleb128 0xe
 590 002e 3A       		.uleb128 0x3a
 591 002f 0B       		.uleb128 0xb
 592 0030 3B       		.uleb128 0x3b
 593 0031 0B       		.uleb128 0xb
 594 0032 49       		.uleb128 0x49
 595 0033 13       		.uleb128 0x13
 596 0034 00       		.byte	0
 597 0035 00       		.byte	0
 598 0036 05       		.uleb128 0x5
 599 0037 16       		.uleb128 0x16
 600 0038 00       		.byte	0
 601 0039 03       		.uleb128 0x3
 602 003a 0E       		.uleb128 0xe
 603 003b 3A       		.uleb128 0x3a
 604 003c 0B       		.uleb128 0xb
 605 003d 3B       		.uleb128 0x3b
 606 003e 05       		.uleb128 0x5
 607 003f 49       		.uleb128 0x49
 608 0040 13       		.uleb128 0x13
 609 0041 00       		.byte	0
 610 0042 00       		.byte	0
 611 0043 06       		.uleb128 0x6
 612 0044 35       		.uleb128 0x35
 613 0045 00       		.byte	0
 614 0046 49       		.uleb128 0x49
 615 0047 13       		.uleb128 0x13
 616 0048 00       		.byte	0
 617 0049 00       		.byte	0
 618 004a 07       		.uleb128 0x7
 619 004b 2E       		.uleb128 0x2e
 620 004c 01       		.byte	0x1
 621 004d 3F       		.uleb128 0x3f
 622 004e 19       		.uleb128 0x19
 623 004f 03       		.uleb128 0x3
 624 0050 0E       		.uleb128 0xe
 625 0051 3A       		.uleb128 0x3a
 626 0052 0B       		.uleb128 0xb
 627 0053 3B       		.uleb128 0x3b
 628 0054 0B       		.uleb128 0xb
 629 0055 27       		.uleb128 0x27
 630 0056 19       		.uleb128 0x19
 631 0057 11       		.uleb128 0x11
 632 0058 01       		.uleb128 0x1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 22


 633 0059 12       		.uleb128 0x12
 634 005a 06       		.uleb128 0x6
 635 005b 40       		.uleb128 0x40
 636 005c 18       		.uleb128 0x18
 637 005d 9742     		.uleb128 0x2117
 638 005f 19       		.uleb128 0x19
 639 0060 01       		.uleb128 0x1
 640 0061 13       		.uleb128 0x13
 641 0062 00       		.byte	0
 642 0063 00       		.byte	0
 643 0064 08       		.uleb128 0x8
 644 0065 34       		.uleb128 0x34
 645 0066 00       		.byte	0
 646 0067 03       		.uleb128 0x3
 647 0068 0E       		.uleb128 0xe
 648 0069 3A       		.uleb128 0x3a
 649 006a 0B       		.uleb128 0xb
 650 006b 3B       		.uleb128 0x3b
 651 006c 0B       		.uleb128 0xb
 652 006d 49       		.uleb128 0x49
 653 006e 13       		.uleb128 0x13
 654 006f 02       		.uleb128 0x2
 655 0070 18       		.uleb128 0x18
 656 0071 00       		.byte	0
 657 0072 00       		.byte	0
 658 0073 09       		.uleb128 0x9
 659 0074 34       		.uleb128 0x34
 660 0075 00       		.byte	0
 661 0076 03       		.uleb128 0x3
 662 0077 0E       		.uleb128 0xe
 663 0078 3A       		.uleb128 0x3a
 664 0079 0B       		.uleb128 0xb
 665 007a 3B       		.uleb128 0x3b
 666 007b 0B       		.uleb128 0xb
 667 007c 49       		.uleb128 0x49
 668 007d 13       		.uleb128 0x13
 669 007e 3F       		.uleb128 0x3f
 670 007f 19       		.uleb128 0x19
 671 0080 3C       		.uleb128 0x3c
 672 0081 19       		.uleb128 0x19
 673 0082 00       		.byte	0
 674 0083 00       		.byte	0
 675 0084 0A       		.uleb128 0xa
 676 0085 0F       		.uleb128 0xf
 677 0086 00       		.byte	0
 678 0087 0B       		.uleb128 0xb
 679 0088 0B       		.uleb128 0xb
 680 0089 49       		.uleb128 0x49
 681 008a 13       		.uleb128 0x13
 682 008b 00       		.byte	0
 683 008c 00       		.byte	0
 684 008d 00       		.byte	0
 685              		.section	.debug_aranges,"",%progbits
 686 0000 1C000000 		.4byte	0x1c
 687 0004 0200     		.2byte	0x2
 688 0006 00000000 		.4byte	.Ldebug_info0
 689 000a 04       		.byte	0x4
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 23


 690 000b 00       		.byte	0
 691 000c 0000     		.2byte	0
 692 000e 0000     		.2byte	0
 693 0010 00000000 		.4byte	.LFB0
 694 0014 50020000 		.4byte	.LFE0-.LFB0
 695 0018 00000000 		.4byte	0
 696 001c 00000000 		.4byte	0
 697              		.section	.debug_ranges,"",%progbits
 698              	.Ldebug_ranges0:
 699 0000 00000000 		.4byte	.LFB0
 700 0004 50020000 		.4byte	.LFE0
 701 0008 00000000 		.4byte	0
 702 000c 00000000 		.4byte	0
 703              		.section	.debug_line,"",%progbits
 704              	.Ldebug_line0:
 705 0000 C1000000 		.section	.debug_str,"MS",%progbits,1
 705      02005900 
 705      00000201 
 705      FB0E0D00 
 705      01010101 
 706              	.LASF6:
 707 0000 6C6F6E67 		.ascii	"long long int\000"
 707      206C6F6E 
 707      6720696E 
 707      7400
 708              	.LASF19:
 709 000e 455A4932 		.ascii	"EZI2Cs_curState\000"
 709      43735F63 
 709      75725374 
 709      61746500 
 710              	.LASF8:
 711 001e 756E7369 		.ascii	"unsigned int\000"
 711      676E6564 
 711      20696E74 
 711      00
 712              	.LASF24:
 713 002b 455A4932 		.ascii	"EZI2Cs_rwIndexS1\000"
 713      43735F72 
 713      77496E64 
 713      65785331 
 713      00
 714              	.LASF22:
 715 003c 455A4932 		.ascii	"EZI2Cs_wrProtectS1\000"
 715      43735F77 
 715      7250726F 
 715      74656374 
 715      533100
 716              	.LASF27:
 717 004f 433A5C55 		.ascii	"C:\\Users\\Yiquing\\Documents\\works\\NanoNXT\\osdp"
 717      73657273 
 717      5C596971 
 717      75696E67 
 717      5C446F63 
 718 007c 20746573 		.ascii	" testing\\YQ\\nanoNxt_ICM3\\nanoNxt_ICM3.cydsn\000"
 718      74696E67 
 718      5C59515C 
 718      6E616E6F 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 24


 718      4E78745F 
 719              	.LASF18:
 720 00a8 455A4932 		.ascii	"EZI2Cs_curStatus\000"
 720      43735F63 
 720      75725374 
 720      61747573 
 720      00
 721              	.LASF16:
 722 00b9 746D7038 		.ascii	"tmp8\000"
 722      00
 723              	.LASF9:
 724 00be 75696E74 		.ascii	"uint8\000"
 724      3800
 725              	.LASF5:
 726 00c4 6C6F6E67 		.ascii	"long unsigned int\000"
 726      20756E73 
 726      69676E65 
 726      6420696E 
 726      7400
 727              	.LASF7:
 728 00d6 6C6F6E67 		.ascii	"long long unsigned int\000"
 728      206C6F6E 
 728      6720756E 
 728      7369676E 
 728      65642069 
 729              	.LASF11:
 730 00ed 666C6F61 		.ascii	"float\000"
 730      7400
 731              	.LASF23:
 732 00f3 455A4932 		.ascii	"EZI2Cs_rwOffsetS1\000"
 732      43735F72 
 732      774F6666 
 732      73657453 
 732      3100
 733              	.LASF1:
 734 0105 756E7369 		.ascii	"unsigned char\000"
 734      676E6564 
 734      20636861 
 734      7200
 735              	.LASF13:
 736 0113 63686172 		.ascii	"char\000"
 736      00
 737              	.LASF21:
 738 0118 455A4932 		.ascii	"EZI2Cs_bufSizeS1\000"
 738      43735F62 
 738      75665369 
 738      7A655331 
 738      00
 739              	.LASF4:
 740 0129 6C6F6E67 		.ascii	"long int\000"
 740      20696E74 
 740      00
 741              	.LASF14:
 742 0132 72656738 		.ascii	"reg8\000"
 742      00
 743              	.LASF12:
 744 0137 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 25


 744      6C6500
 745              	.LASF26:
 746 013e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\EZI2Cs_INT.c\000"
 746      6E657261 
 746      7465645F 
 746      536F7572 
 746      63655C50 
 747              	.LASF3:
 748 0164 73686F72 		.ascii	"short unsigned int\000"
 748      7420756E 
 748      7369676E 
 748      65642069 
 748      6E7400
 749              	.LASF0:
 750 0177 7369676E 		.ascii	"signed char\000"
 750      65642063 
 750      68617200 
 751              	.LASF25:
 752 0183 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 752      4320342E 
 752      382E3420 
 752      32303134 
 752      30353236 
 753 01b6 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 753      20726576 
 753      6973696F 
 753      6E203231 
 753      31333538 
 754 01e9 30202D66 		.ascii	"0 -ffunction-sections\000"
 754      66756E63 
 754      74696F6E 
 754      2D736563 
 754      74696F6E 
 755              	.LASF20:
 756 01ff 455A4932 		.ascii	"EZI2Cs_dataPtrS1\000"
 756      43735F64 
 756      61746150 
 756      74725331 
 756      00
 757              	.LASF2:
 758 0210 73686F72 		.ascii	"short int\000"
 758      7420696E 
 758      7400
 759              	.LASF10:
 760 021a 75696E74 		.ascii	"uint16\000"
 760      313600
 761              	.LASF28:
 762 0221 455A4932 		.ascii	"EZI2Cs_ISR\000"
 762      43735F49 
 762      535200
 763              	.LASF15:
 764 022c 73697A65 		.ascii	"sizetype\000"
 764      74797065 
 764      00
 765              	.LASF17:
 766 0235 746D7043 		.ascii	"tmpCsr\000"
 766      737200
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccSaON63.s 			page 26


 767              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
