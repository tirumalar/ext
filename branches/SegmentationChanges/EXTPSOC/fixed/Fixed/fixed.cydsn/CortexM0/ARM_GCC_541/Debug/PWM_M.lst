ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_M.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_M_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_M_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWM_M_Enable, %function
  25              	PWM_M_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\PWM_M.c"
   1:Generated_Source\PSoC4/PWM_M.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_M.c **** * File Name: PWM_M.c
   3:Generated_Source\PSoC4/PWM_M.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM_M.c **** *
   5:Generated_Source\PSoC4/PWM_M.c **** * Description:
   6:Generated_Source\PSoC4/PWM_M.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM_M.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM_M.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM_M.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM_M.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM_M.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM_M.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM_M.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM_M.c **** *
  15:Generated_Source\PSoC4/PWM_M.c **** * Note:
  16:Generated_Source\PSoC4/PWM_M.c **** *
  17:Generated_Source\PSoC4/PWM_M.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM_M.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM_M.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM_M.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM_M.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM_M.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM_M.c **** 
  24:Generated_Source\PSoC4/PWM_M.c **** #include "PWM_M.h"
  25:Generated_Source\PSoC4/PWM_M.c **** 
  26:Generated_Source\PSoC4/PWM_M.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM_M.c **** #ifdef PWM_M_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM_M.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM_M.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM_M.c **** #endif /* PWM_M_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 2


  31:Generated_Source\PSoC4/PWM_M.c **** 
  32:Generated_Source\PSoC4/PWM_M.c **** uint8 PWM_M_initVar = 0u;
  33:Generated_Source\PSoC4/PWM_M.c **** 
  34:Generated_Source\PSoC4/PWM_M.c **** 
  35:Generated_Source\PSoC4/PWM_M.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM_M.c **** * Function Name: PWM_M_Start
  37:Generated_Source\PSoC4/PWM_M.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM_M.c **** *
  39:Generated_Source\PSoC4/PWM_M.c **** * Summary:
  40:Generated_Source\PSoC4/PWM_M.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM_M.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM_M.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM_M.c **** *
  44:Generated_Source\PSoC4/PWM_M.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM_M.c **** *  None
  46:Generated_Source\PSoC4/PWM_M.c **** *
  47:Generated_Source\PSoC4/PWM_M.c **** * Return:
  48:Generated_Source\PSoC4/PWM_M.c **** *  None
  49:Generated_Source\PSoC4/PWM_M.c **** *
  50:Generated_Source\PSoC4/PWM_M.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM_M.c **** *  PWM_M_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM_M.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM_M.c **** *
  54:Generated_Source\PSoC4/PWM_M.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM_M.c **** void PWM_M_Start(void) 
  56:Generated_Source\PSoC4/PWM_M.c **** {
  57:Generated_Source\PSoC4/PWM_M.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM_M.c ****     if(PWM_M_initVar == 0u)
  59:Generated_Source\PSoC4/PWM_M.c ****     {
  60:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_Init();
  61:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_initVar = 1u;
  62:Generated_Source\PSoC4/PWM_M.c ****     }
  63:Generated_Source\PSoC4/PWM_M.c ****     PWM_M_Enable();
  64:Generated_Source\PSoC4/PWM_M.c **** 
  65:Generated_Source\PSoC4/PWM_M.c **** }
  66:Generated_Source\PSoC4/PWM_M.c **** 
  67:Generated_Source\PSoC4/PWM_M.c **** 
  68:Generated_Source\PSoC4/PWM_M.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM_M.c **** * Function Name: PWM_M_Init
  70:Generated_Source\PSoC4/PWM_M.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM_M.c **** *
  72:Generated_Source\PSoC4/PWM_M.c **** * Summary:
  73:Generated_Source\PSoC4/PWM_M.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM_M.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM_M.c **** *  PWM_M_Start().
  76:Generated_Source\PSoC4/PWM_M.c **** *
  77:Generated_Source\PSoC4/PWM_M.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM_M.c **** *  None
  79:Generated_Source\PSoC4/PWM_M.c **** *
  80:Generated_Source\PSoC4/PWM_M.c **** * Return:
  81:Generated_Source\PSoC4/PWM_M.c **** *  None
  82:Generated_Source\PSoC4/PWM_M.c **** *
  83:Generated_Source\PSoC4/PWM_M.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM_M.c **** void PWM_M_Init(void) 
  85:Generated_Source\PSoC4/PWM_M.c **** {
  86:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UsingFixedFunction || PWM_M_UseControl)
  87:Generated_Source\PSoC4/PWM_M.c ****         uint8 ctrl;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 3


  88:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UsingFixedFunction || PWM_M_UseControl) */
  89:Generated_Source\PSoC4/PWM_M.c **** 
  90:Generated_Source\PSoC4/PWM_M.c ****     #if(!PWM_M_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM_M.c ****         #if(PWM_M_UseStatus)
  92:Generated_Source\PSoC4/PWM_M.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM_M.c ****             uint8 PWM_M_interruptState;
  94:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UseStatus) */
  95:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (!PWM_M_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM_M.c **** 
  97:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM_M.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_CONTROL |= PWM_M_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM_M.c ****         #if (PWM_M_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_CONTROL |= PWM_M_CFG0_DB;
 102:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM_M.c **** 
 104:Generated_Source\PSoC4/PWM_M.c ****         ctrl = PWM_M_CONTROL3 & ((uint8 )(~PWM_M_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_CONTROL3 = ctrl | PWM_M_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM_M.c **** 
 107:Generated_Source\PSoC4/PWM_M.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_RT1 &= ((uint8)(~PWM_M_RT1_MASK));
 109:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_RT1 |= PWM_M_SYNC;
 110:Generated_Source\PSoC4/PWM_M.c **** 
 111:Generated_Source\PSoC4/PWM_M.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_RT1 &= ((uint8)(~PWM_M_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_RT1 |= PWM_M_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM_M.c **** 
 115:Generated_Source\PSoC4/PWM_M.c ****     #elif (PWM_M_UseControl)
 116:Generated_Source\PSoC4/PWM_M.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM_M.c ****         ctrl = PWM_M_CONTROL & ((uint8)(~PWM_M_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/PWM_M.c ****                 ((uint8)(~PWM_M_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_CONTROL = ctrl | PWM_M_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/PWM_M.c ****                                    PWM_M_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM_M.c **** 
 123:Generated_Source\PSoC4/PWM_M.c ****     #if (!PWM_M_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM_M.c ****         #if (PWM_M_Resolution == 8)
 125:Generated_Source\PSoC4/PWM_M.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_AUX_CONTROLDP0 |= (PWM_M_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/PWM_M.c ****         #else /* (PWM_M_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM_M.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_AUX_CONTROLDP0 |= (PWM_M_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_AUX_CONTROLDP1 |= (PWM_M_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM_M.c **** 
 133:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_WriteCounter(PWM_M_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (!PWM_M_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM_M.c **** 
 136:Generated_Source\PSoC4/PWM_M.c ****     PWM_M_WritePeriod(PWM_M_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/PWM_M.c **** 
 138:Generated_Source\PSoC4/PWM_M.c ****         #if (PWM_M_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_WriteCompare(PWM_M_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM_M.c ****         #else
 141:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_WriteCompare1(PWM_M_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_WriteCompare2(PWM_M_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM_M.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 4


 145:Generated_Source\PSoC4/PWM_M.c ****         #if (PWM_M_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_WriteKillTime(PWM_M_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM_M.c **** 
 149:Generated_Source\PSoC4/PWM_M.c ****         #if (PWM_M_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_WriteDeadTime(PWM_M_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM_M.c **** 
 153:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UseStatus || PWM_M_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_SetInterruptMode(PWM_M_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UseStatus || PWM_M_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM_M.c **** 
 157:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM_M.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_GLOBAL_ENABLE |= PWM_M_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM_M.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_CONTROL2 |= PWM_M_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM_M.c ****     #else
 163:Generated_Source\PSoC4/PWM_M.c ****         #if(PWM_M_UseStatus)
 164:Generated_Source\PSoC4/PWM_M.c **** 
 165:Generated_Source\PSoC4/PWM_M.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM_M.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/PWM_M.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_STATUS_AUX_CTRL |= PWM_M_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/PWM_M.c **** 
 171:Generated_Source\PSoC4/PWM_M.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM_M.c ****             CyExitCriticalSection(PWM_M_interruptState);
 173:Generated_Source\PSoC4/PWM_M.c **** 
 174:Generated_Source\PSoC4/PWM_M.c ****             /* Clear the FIFO to enable the PWM_M_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM_M.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_ClearFIFO();
 177:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UseStatus) */
 178:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM_M.c **** }
 180:Generated_Source\PSoC4/PWM_M.c **** 
 181:Generated_Source\PSoC4/PWM_M.c **** 
 182:Generated_Source\PSoC4/PWM_M.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM_M.c **** * Function Name: PWM_M_Enable
 184:Generated_Source\PSoC4/PWM_M.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM_M.c **** *
 186:Generated_Source\PSoC4/PWM_M.c **** * Summary:
 187:Generated_Source\PSoC4/PWM_M.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM_M.c **** *
 189:Generated_Source\PSoC4/PWM_M.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM_M.c **** *  None
 191:Generated_Source\PSoC4/PWM_M.c **** *
 192:Generated_Source\PSoC4/PWM_M.c **** * Return:
 193:Generated_Source\PSoC4/PWM_M.c **** *  None
 194:Generated_Source\PSoC4/PWM_M.c **** *
 195:Generated_Source\PSoC4/PWM_M.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM_M.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM_M.c **** *
 198:Generated_Source\PSoC4/PWM_M.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM_M.c **** void PWM_M_Enable(void) 
 200:Generated_Source\PSoC4/PWM_M.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC4/PWM_M.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_GLOBAL_ENABLE |= PWM_M_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_GLOBAL_STBY_ENABLE |= PWM_M_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM_M.c **** 
 207:Generated_Source\PSoC4/PWM_M.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UseControl || PWM_M_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_CONTROL |= PWM_M_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UseControl || PWM_M_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM_M.c **** }
  41              		.loc 1 211 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 72000F40 		.word	1074724978
  48              		.cfi_endproc
  49              	.LFE2:
  50              		.size	PWM_M_Enable, .-PWM_M_Enable
  51              		.section	.text.PWM_M_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	PWM_M_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	PWM_M_Stop, %function
  57              	PWM_M_Stop:
  58              	.LFB3:
 212:Generated_Source\PSoC4/PWM_M.c **** 
 213:Generated_Source\PSoC4/PWM_M.c **** 
 214:Generated_Source\PSoC4/PWM_M.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM_M.c **** * Function Name: PWM_M_Stop
 216:Generated_Source\PSoC4/PWM_M.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM_M.c **** *
 218:Generated_Source\PSoC4/PWM_M.c **** * Summary:
 219:Generated_Source\PSoC4/PWM_M.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM_M.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM_M.c **** *
 222:Generated_Source\PSoC4/PWM_M.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM_M.c **** *  None
 224:Generated_Source\PSoC4/PWM_M.c **** *
 225:Generated_Source\PSoC4/PWM_M.c **** * Return:
 226:Generated_Source\PSoC4/PWM_M.c **** *  None
 227:Generated_Source\PSoC4/PWM_M.c **** *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 6


 228:Generated_Source\PSoC4/PWM_M.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM_M.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM_M.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM_M.c **** *
 232:Generated_Source\PSoC4/PWM_M.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM_M.c **** void PWM_M_Stop(void) 
 234:Generated_Source\PSoC4/PWM_M.c **** {
  59              		.loc 1 234 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 235:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UseControl || PWM_M_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_CONTROL &= ((uint8)(~PWM_M_CTRL_ENABLE));
  64              		.loc 1 236 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UseControl || PWM_M_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM_M.c **** 
 239:Generated_Source\PSoC4/PWM_M.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_GLOBAL_ENABLE &= ((uint8)(~PWM_M_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_M_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM_M.c **** }
  70              		.loc 1 244 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 72000F40 		.word	1074724978
  77              		.cfi_endproc
  78              	.LFE3:
  79              		.size	PWM_M_Stop, .-PWM_M_Stop
  80              		.section	.text.PWM_M_WriteCounter,"ax",%progbits
  81              		.align	2
  82              		.global	PWM_M_WriteCounter
  83              		.code	16
  84              		.thumb_func
  85              		.type	PWM_M_WriteCounter, %function
  86              	PWM_M_WriteCounter:
  87              	.LFB4:
 245:Generated_Source\PSoC4/PWM_M.c **** 
 246:Generated_Source\PSoC4/PWM_M.c **** #if (PWM_M_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM_M.c **** 
 249:Generated_Source\PSoC4/PWM_M.c **** 
 250:Generated_Source\PSoC4/PWM_M.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM_M.c ****         * Function Name: PWM_M_SetCompareMode
 252:Generated_Source\PSoC4/PWM_M.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM_M.c ****         *
 254:Generated_Source\PSoC4/PWM_M.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM_M.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 7


 256:Generated_Source\PSoC4/PWM_M.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM_M.c ****         *
 258:Generated_Source\PSoC4/PWM_M.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM_M.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM_M.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM_M.c ****         *
 262:Generated_Source\PSoC4/PWM_M.c ****         * Return:
 263:Generated_Source\PSoC4/PWM_M.c ****         *  None
 264:Generated_Source\PSoC4/PWM_M.c ****         *
 265:Generated_Source\PSoC4/PWM_M.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM_M.c ****         void PWM_M_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM_M.c ****         {
 268:Generated_Source\PSoC4/PWM_M.c ****             #if(PWM_M_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM_M.c **** 
 270:Generated_Source\PSoC4/PWM_M.c ****                 #if(0 != PWM_M_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM_M.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_M_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC4/PWM_M.c ****                 #else
 273:Generated_Source\PSoC4/PWM_M.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM_M.c ****                 #endif /* (0 != PWM_M_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM_M.c **** 
 276:Generated_Source\PSoC4/PWM_M.c ****                 PWM_M_CONTROL3 &= ((uint8)(~PWM_M_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM_M.c ****                 PWM_M_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM_M.c **** 
 279:Generated_Source\PSoC4/PWM_M.c ****             #elif (PWM_M_UseControl)
 280:Generated_Source\PSoC4/PWM_M.c **** 
 281:Generated_Source\PSoC4/PWM_M.c ****                 #if(0 != PWM_M_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM_M.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_M_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC4/PWM_M.c ****                                                 PWM_M_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM_M.c ****                 #else
 285:Generated_Source\PSoC4/PWM_M.c ****                     uint8 comparemode1masked = comparemode & PWM_M_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM_M.c ****                 #endif /* (0 != PWM_M_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM_M.c **** 
 288:Generated_Source\PSoC4/PWM_M.c ****                 #if(0 != PWM_M_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM_M.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_M_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC4/PWM_M.c ****                                                PWM_M_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM_M.c ****                 #else
 292:Generated_Source\PSoC4/PWM_M.c ****                     uint8 comparemode2masked = comparemode & PWM_M_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM_M.c ****                 #endif /* (0 != PWM_M_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM_M.c **** 
 295:Generated_Source\PSoC4/PWM_M.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM_M.c ****                 PWM_M_CONTROL &= ((uint8)(~(PWM_M_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM_M.c ****                                             PWM_M_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM_M.c ****                 PWM_M_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM_M.c **** 
 300:Generated_Source\PSoC4/PWM_M.c ****             #else
 301:Generated_Source\PSoC4/PWM_M.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM_M.c ****             #endif /* (PWM_M_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM_M.c ****         }
 304:Generated_Source\PSoC4/PWM_M.c ****     #endif /* PWM_M_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM_M.c **** 
 306:Generated_Source\PSoC4/PWM_M.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM_M.c **** 
 308:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM_M.c **** 
 310:Generated_Source\PSoC4/PWM_M.c **** 
 311:Generated_Source\PSoC4/PWM_M.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM_M.c ****         * Function Name: PWM_M_SetCompareMode1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 8


 313:Generated_Source\PSoC4/PWM_M.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM_M.c ****         *
 315:Generated_Source\PSoC4/PWM_M.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM_M.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM_M.c ****         *
 318:Generated_Source\PSoC4/PWM_M.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM_M.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM_M.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM_M.c ****         *
 322:Generated_Source\PSoC4/PWM_M.c ****         * Return:
 323:Generated_Source\PSoC4/PWM_M.c ****         *  None
 324:Generated_Source\PSoC4/PWM_M.c ****         *
 325:Generated_Source\PSoC4/PWM_M.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_M.c ****         void PWM_M_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM_M.c ****         {
 328:Generated_Source\PSoC4/PWM_M.c ****             #if(0 != PWM_M_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM_M.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_M_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC4/PWM_M.c ****                                            PWM_M_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM_M.c ****             #else
 332:Generated_Source\PSoC4/PWM_M.c ****                 uint8 comparemodemasked = comparemode & PWM_M_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM_M.c ****             #endif /* (0 != PWM_M_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM_M.c **** 
 335:Generated_Source\PSoC4/PWM_M.c ****             #if (PWM_M_UseControl)
 336:Generated_Source\PSoC4/PWM_M.c ****                 PWM_M_CONTROL &= ((uint8)(~PWM_M_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM_M.c ****                 PWM_M_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM_M.c ****             #endif /* (PWM_M_UseControl) */
 339:Generated_Source\PSoC4/PWM_M.c ****         }
 340:Generated_Source\PSoC4/PWM_M.c ****     #endif /* PWM_M_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM_M.c **** 
 342:Generated_Source\PSoC4/PWM_M.c **** #if (PWM_M_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM_M.c **** 
 344:Generated_Source\PSoC4/PWM_M.c **** 
 345:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_SetCompareMode2
 347:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM_M.c ****     *
 349:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM_M.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM_M.c ****     *
 352:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM_M.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM_M.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM_M.c ****     *
 356:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 357:Generated_Source\PSoC4/PWM_M.c ****     *  None
 358:Generated_Source\PSoC4/PWM_M.c ****     *
 359:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM_M.c ****     void PWM_M_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM_M.c ****     {
 362:Generated_Source\PSoC4/PWM_M.c **** 
 363:Generated_Source\PSoC4/PWM_M.c ****         #if(0 != PWM_M_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM_M.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_M_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM_M.c ****                                                  PWM_M_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM_M.c ****         #else
 367:Generated_Source\PSoC4/PWM_M.c ****             uint8 comparemodemasked = comparemode & PWM_M_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (0 != PWM_M_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM_M.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 9


 370:Generated_Source\PSoC4/PWM_M.c ****         #if (PWM_M_UseControl)
 371:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_CONTROL &= ((uint8)(~PWM_M_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UseControl) */
 374:Generated_Source\PSoC4/PWM_M.c ****     }
 375:Generated_Source\PSoC4/PWM_M.c ****     #endif /*PWM_M_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM_M.c **** 
 377:Generated_Source\PSoC4/PWM_M.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM_M.c **** 
 379:Generated_Source\PSoC4/PWM_M.c **** 
 380:Generated_Source\PSoC4/PWM_M.c **** #if (!PWM_M_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM_M.c **** 
 382:Generated_Source\PSoC4/PWM_M.c **** 
 383:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_WriteCounter
 385:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM_M.c ****     *
 387:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM_M.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM_M.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM_M.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM_M.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM_M.c ****     *
 393:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM_M.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM_M.c ****     *
 396:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 397:Generated_Source\PSoC4/PWM_M.c ****     *  None
 398:Generated_Source\PSoC4/PWM_M.c ****     *
 399:Generated_Source\PSoC4/PWM_M.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM_M.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM_M.c ****     *
 402:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM_M.c ****     void PWM_M_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/PWM_M.c ****                                        
 405:Generated_Source\PSoC4/PWM_M.c ****     {
  88              		.loc 1 405 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
 406:Generated_Source\PSoC4/PWM_M.c ****         CY_SET_REG8(PWM_M_COUNTER_LSB_PTR, counter);
  94              		.loc 1 406 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 1870     		strb	r0, [r3]
 407:Generated_Source\PSoC4/PWM_M.c ****     }
  97              		.loc 1 407 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              	.L9:
 101 0006 C046     		.align	2
 102              	.L8:
 103 0008 02000F40 		.word	1074724866
 104              		.cfi_endproc
 105              	.LFE4:
 106              		.size	PWM_M_WriteCounter, .-PWM_M_WriteCounter
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 10


 107              		.section	.text.PWM_M_ReadCounter,"ax",%progbits
 108              		.align	2
 109              		.global	PWM_M_ReadCounter
 110              		.code	16
 111              		.thumb_func
 112              		.type	PWM_M_ReadCounter, %function
 113              	PWM_M_ReadCounter:
 114              	.LFB5:
 408:Generated_Source\PSoC4/PWM_M.c **** 
 409:Generated_Source\PSoC4/PWM_M.c **** 
 410:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_ReadCounter
 412:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM_M.c ****     *
 414:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM_M.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM_M.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM_M.c ****     *
 418:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM_M.c ****     *  None
 420:Generated_Source\PSoC4/PWM_M.c ****     *
 421:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 422:Generated_Source\PSoC4/PWM_M.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM_M.c ****     *
 424:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM_M.c ****     uint8 PWM_M_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM_M.c ****     {
 115              		.loc 1 426 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 427:Generated_Source\PSoC4/PWM_M.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM_M.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM_M.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM_M.c ****           (void)CY_GET_REG8(PWM_M_COUNTERCAP_LSB_PTR_8BIT);
 120              		.loc 1 430 0
 121 0000 024B     		ldr	r3, .L11
 122 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM_M.c **** 
 432:Generated_Source\PSoC4/PWM_M.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM_M.c ****         return (CY_GET_REG8(PWM_M_CAPTURE_LSB_PTR));
 123              		.loc 1 433 0
 124 0004 024B     		ldr	r3, .L11+4
 125 0006 1878     		ldrb	r0, [r3]
 126 0008 C0B2     		uxtb	r0, r0
 434:Generated_Source\PSoC4/PWM_M.c ****     }
 127              		.loc 1 434 0
 128              		@ sp needed
 129 000a 7047     		bx	lr
 130              	.L12:
 131              		.align	2
 132              	.L11:
 133 000c 12000F40 		.word	1074724882
 134 0010 52000F40 		.word	1074724946
 135              		.cfi_endproc
 136              	.LFE5:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 11


 137              		.size	PWM_M_ReadCounter, .-PWM_M_ReadCounter
 138              		.section	.text.PWM_M_WritePeriod,"ax",%progbits
 139              		.align	2
 140              		.global	PWM_M_WritePeriod
 141              		.code	16
 142              		.thumb_func
 143              		.type	PWM_M_WritePeriod, %function
 144              	PWM_M_WritePeriod:
 145              	.LFB7:
 435:Generated_Source\PSoC4/PWM_M.c **** 
 436:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UseStatus)
 437:Generated_Source\PSoC4/PWM_M.c **** 
 438:Generated_Source\PSoC4/PWM_M.c **** 
 439:Generated_Source\PSoC4/PWM_M.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM_M.c ****         * Function Name: PWM_M_ClearFIFO
 441:Generated_Source\PSoC4/PWM_M.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM_M.c ****         *
 443:Generated_Source\PSoC4/PWM_M.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM_M.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM_M.c ****         *
 446:Generated_Source\PSoC4/PWM_M.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM_M.c ****         *  None
 448:Generated_Source\PSoC4/PWM_M.c ****         *
 449:Generated_Source\PSoC4/PWM_M.c ****         * Return:
 450:Generated_Source\PSoC4/PWM_M.c ****         *  None
 451:Generated_Source\PSoC4/PWM_M.c ****         *
 452:Generated_Source\PSoC4/PWM_M.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM_M.c ****         void PWM_M_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM_M.c ****         {
 455:Generated_Source\PSoC4/PWM_M.c ****             while(0u != (PWM_M_ReadStatusRegister() & PWM_M_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/PWM_M.c ****             {
 457:Generated_Source\PSoC4/PWM_M.c ****                 (void)PWM_M_ReadCapture();
 458:Generated_Source\PSoC4/PWM_M.c ****             }
 459:Generated_Source\PSoC4/PWM_M.c ****         }
 460:Generated_Source\PSoC4/PWM_M.c **** 
 461:Generated_Source\PSoC4/PWM_M.c ****     #endif /* PWM_M_UseStatus */
 462:Generated_Source\PSoC4/PWM_M.c **** 
 463:Generated_Source\PSoC4/PWM_M.c **** #endif /* !PWM_M_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM_M.c **** 
 465:Generated_Source\PSoC4/PWM_M.c **** 
 466:Generated_Source\PSoC4/PWM_M.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM_M.c **** * Function Name: PWM_M_WritePeriod
 468:Generated_Source\PSoC4/PWM_M.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM_M.c **** *
 470:Generated_Source\PSoC4/PWM_M.c **** * Summary:
 471:Generated_Source\PSoC4/PWM_M.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM_M.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM_M.c **** *
 474:Generated_Source\PSoC4/PWM_M.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM_M.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM_M.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM_M.c **** *
 478:Generated_Source\PSoC4/PWM_M.c **** * Return:
 479:Generated_Source\PSoC4/PWM_M.c **** *  None
 480:Generated_Source\PSoC4/PWM_M.c **** *
 481:Generated_Source\PSoC4/PWM_M.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM_M.c **** void PWM_M_WritePeriod(uint8 period) 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 12


 483:Generated_Source\PSoC4/PWM_M.c **** {
 146              		.loc 1 483 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL1:
 484:Generated_Source\PSoC4/PWM_M.c ****     #if(PWM_M_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM_M.c ****         CY_SET_REG16(PWM_M_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM_M.c ****     #else
 487:Generated_Source\PSoC4/PWM_M.c ****         CY_SET_REG8(PWM_M_PERIOD_LSB_PTR, period);
 152              		.loc 1 487 0
 153 0000 014B     		ldr	r3, .L14
 154 0002 1870     		strb	r0, [r3]
 488:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM_M.c **** }
 155              		.loc 1 489 0
 156              		@ sp needed
 157 0004 7047     		bx	lr
 158              	.L15:
 159 0006 C046     		.align	2
 160              	.L14:
 161 0008 42000F40 		.word	1074724930
 162              		.cfi_endproc
 163              	.LFE7:
 164              		.size	PWM_M_WritePeriod, .-PWM_M_WritePeriod
 165              		.section	.text.PWM_M_WriteCompare1,"ax",%progbits
 166              		.align	2
 167              		.global	PWM_M_WriteCompare1
 168              		.code	16
 169              		.thumb_func
 170              		.type	PWM_M_WriteCompare1, %function
 171              	PWM_M_WriteCompare1:
 172              	.LFB8:
 490:Generated_Source\PSoC4/PWM_M.c **** 
 491:Generated_Source\PSoC4/PWM_M.c **** #if (PWM_M_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM_M.c **** 
 493:Generated_Source\PSoC4/PWM_M.c **** 
 494:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_WriteCompare
 496:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM_M.c ****     *
 498:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM_M.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM_M.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM_M.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM_M.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM_M.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM_M.c ****     *
 505:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM_M.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM_M.c ****     *
 508:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 509:Generated_Source\PSoC4/PWM_M.c ****     *  None
 510:Generated_Source\PSoC4/PWM_M.c ****     *
 511:Generated_Source\PSoC4/PWM_M.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM_M.c ****     *  This function is only available if the PWM mode parameter is set to
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 13


 513:Generated_Source\PSoC4/PWM_M.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM_M.c ****     *
 515:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM_M.c ****     void PWM_M_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/PWM_M.c ****                                        
 518:Generated_Source\PSoC4/PWM_M.c ****     {
 519:Generated_Source\PSoC4/PWM_M.c ****         #if(PWM_M_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM_M.c ****             CY_SET_REG16(PWM_M_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM_M.c ****         #else
 522:Generated_Source\PSoC4/PWM_M.c ****             CY_SET_REG8(PWM_M_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM_M.c **** 
 525:Generated_Source\PSoC4/PWM_M.c ****         #if (PWM_M_PWMMode == PWM_M__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM_M.c ****             #if(PWM_M_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM_M.c ****                 CY_SET_REG16(PWM_M_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM_M.c ****             #else
 529:Generated_Source\PSoC4/PWM_M.c ****                 CY_SET_REG8(PWM_M_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM_M.c ****             #endif /* (PWM_M_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_PWMMode == PWM_M__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM_M.c ****     }
 533:Generated_Source\PSoC4/PWM_M.c **** 
 534:Generated_Source\PSoC4/PWM_M.c **** 
 535:Generated_Source\PSoC4/PWM_M.c **** #else
 536:Generated_Source\PSoC4/PWM_M.c **** 
 537:Generated_Source\PSoC4/PWM_M.c **** 
 538:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_WriteCompare1
 540:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM_M.c ****     *
 542:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 543:Generated_Source\PSoC4/PWM_M.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM_M.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM_M.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM_M.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM_M.c ****     *
 548:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM_M.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM_M.c ****     *
 551:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 552:Generated_Source\PSoC4/PWM_M.c ****     *  None
 553:Generated_Source\PSoC4/PWM_M.c ****     *
 554:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM_M.c ****     void PWM_M_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/PWM_M.c ****                                         
 557:Generated_Source\PSoC4/PWM_M.c ****     {
 173              		.loc 1 557 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 558:Generated_Source\PSoC4/PWM_M.c ****         #if(PWM_M_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM_M.c ****             CY_SET_REG16(PWM_M_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM_M.c ****         #else
 561:Generated_Source\PSoC4/PWM_M.c ****             CY_SET_REG8(PWM_M_COMPARE1_LSB_PTR, compare);
 179              		.loc 1 561 0
 180 0000 014B     		ldr	r3, .L17
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 14


 181 0002 1870     		strb	r0, [r3]
 562:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM_M.c ****     }
 182              		.loc 1 563 0
 183              		@ sp needed
 184 0004 7047     		bx	lr
 185              	.L18:
 186 0006 C046     		.align	2
 187              	.L17:
 188 0008 22000F40 		.word	1074724898
 189              		.cfi_endproc
 190              	.LFE8:
 191              		.size	PWM_M_WriteCompare1, .-PWM_M_WriteCompare1
 192              		.section	.text.PWM_M_WriteCompare2,"ax",%progbits
 193              		.align	2
 194              		.global	PWM_M_WriteCompare2
 195              		.code	16
 196              		.thumb_func
 197              		.type	PWM_M_WriteCompare2, %function
 198              	PWM_M_WriteCompare2:
 199              	.LFB9:
 564:Generated_Source\PSoC4/PWM_M.c **** 
 565:Generated_Source\PSoC4/PWM_M.c **** 
 566:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_WriteCompare2
 568:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM_M.c ****     *
 570:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM_M.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM_M.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM_M.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM_M.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM_M.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM_M.c ****     *
 577:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM_M.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM_M.c ****     *
 580:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 581:Generated_Source\PSoC4/PWM_M.c ****     *  None
 582:Generated_Source\PSoC4/PWM_M.c ****     *
 583:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM_M.c ****     void PWM_M_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/PWM_M.c ****                                         
 586:Generated_Source\PSoC4/PWM_M.c ****     {
 200              		.loc 1 586 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL3:
 587:Generated_Source\PSoC4/PWM_M.c ****         #if(PWM_M_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM_M.c ****             CY_SET_REG16(PWM_M_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM_M.c ****         #else
 590:Generated_Source\PSoC4/PWM_M.c ****             CY_SET_REG8(PWM_M_COMPARE2_LSB_PTR, compare);
 206              		.loc 1 590 0
 207 0000 014B     		ldr	r3, .L20
 208 0002 1870     		strb	r0, [r3]
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 15


 591:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM_M.c ****     }
 209              		.loc 1 592 0
 210              		@ sp needed
 211 0004 7047     		bx	lr
 212              	.L21:
 213 0006 C046     		.align	2
 214              	.L20:
 215 0008 32000F40 		.word	1074724914
 216              		.cfi_endproc
 217              	.LFE9:
 218              		.size	PWM_M_WriteCompare2, .-PWM_M_WriteCompare2
 219              		.section	.text.PWM_M_SetInterruptMode,"ax",%progbits
 220              		.align	2
 221              		.global	PWM_M_SetInterruptMode
 222              		.code	16
 223              		.thumb_func
 224              		.type	PWM_M_SetInterruptMode, %function
 225              	PWM_M_SetInterruptMode:
 226              	.LFB10:
 593:Generated_Source\PSoC4/PWM_M.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM_M.c **** 
 595:Generated_Source\PSoC4/PWM_M.c **** #if (PWM_M_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM_M.c **** 
 597:Generated_Source\PSoC4/PWM_M.c **** 
 598:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_WriteDeadTime
 600:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM_M.c ****     *
 602:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM_M.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM_M.c ****     *
 605:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM_M.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM_M.c ****     *
 608:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 609:Generated_Source\PSoC4/PWM_M.c ****     *  None
 610:Generated_Source\PSoC4/PWM_M.c ****     *
 611:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM_M.c ****     void PWM_M_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM_M.c ****     {
 614:Generated_Source\PSoC4/PWM_M.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM_M.c ****         #if(!PWM_M_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM_M.c ****             CY_SET_REG8(PWM_M_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM_M.c ****         #else
 618:Generated_Source\PSoC4/PWM_M.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM_M.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_DEADBAND_COUNT &= ((uint8)(~PWM_M_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM_M.c **** 
 622:Generated_Source\PSoC4/PWM_M.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM_M.c ****             #if(PWM_M_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM_M.c ****                 PWM_M_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_M_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM_M.c ****                                                     PWM_M_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM_M.c ****             #else
 627:Generated_Source\PSoC4/PWM_M.c ****                 PWM_M_DEADBAND_COUNT |= deadtime & PWM_M_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM_M.c ****             #endif /* (PWM_M_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM_M.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 16


 630:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (!PWM_M_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM_M.c ****     }
 632:Generated_Source\PSoC4/PWM_M.c **** 
 633:Generated_Source\PSoC4/PWM_M.c **** 
 634:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_ReadDeadTime
 636:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM_M.c ****     *
 638:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM_M.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM_M.c ****     *
 641:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM_M.c ****     *  None
 643:Generated_Source\PSoC4/PWM_M.c ****     *
 644:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 645:Generated_Source\PSoC4/PWM_M.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM_M.c ****     *
 647:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM_M.c ****     uint8 PWM_M_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM_M.c ****     {
 650:Generated_Source\PSoC4/PWM_M.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM_M.c ****         #if(!PWM_M_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM_M.c ****             return (CY_GET_REG8(PWM_M_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM_M.c ****         #else
 654:Generated_Source\PSoC4/PWM_M.c **** 
 655:Generated_Source\PSoC4/PWM_M.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM_M.c ****             #if(PWM_M_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/PWM_M.c ****                 return ((uint8)(((uint8)(PWM_M_DEADBAND_COUNT & PWM_M_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM_M.c ****                                                                            PWM_M_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC4/PWM_M.c ****             #else
 660:Generated_Source\PSoC4/PWM_M.c ****                 return (PWM_M_DEADBAND_COUNT & PWM_M_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM_M.c ****             #endif /* (PWM_M_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (!PWM_M_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM_M.c ****     }
 664:Generated_Source\PSoC4/PWM_M.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM_M.c **** 
 666:Generated_Source\PSoC4/PWM_M.c **** #if (PWM_M_UseStatus || PWM_M_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM_M.c **** 
 668:Generated_Source\PSoC4/PWM_M.c **** 
 669:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_SetInterruptMode
 671:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM_M.c ****     *
 673:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM_M.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM_M.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM_M.c ****     *
 677:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM_M.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM_M.c ****     *
 680:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 681:Generated_Source\PSoC4/PWM_M.c ****     *  None
 682:Generated_Source\PSoC4/PWM_M.c ****     *
 683:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM_M.c ****     void PWM_M_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM_M.c ****     {
 227              		.loc 1 685 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 17


 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL4:
 686:Generated_Source\PSoC4/PWM_M.c ****         CY_SET_REG8(PWM_M_STATUS_MASK_PTR, interruptMode);
 233              		.loc 1 686 0
 234 0000 014B     		ldr	r3, .L23
 235 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/PWM_M.c ****     }
 236              		.loc 1 687 0
 237              		@ sp needed
 238 0004 7047     		bx	lr
 239              	.L24:
 240 0006 C046     		.align	2
 241              	.L23:
 242 0008 82000F40 		.word	1074724994
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	PWM_M_SetInterruptMode, .-PWM_M_SetInterruptMode
 246              		.section	.text.PWM_M_ReadStatusRegister,"ax",%progbits
 247              		.align	2
 248              		.global	PWM_M_ReadStatusRegister
 249              		.code	16
 250              		.thumb_func
 251              		.type	PWM_M_ReadStatusRegister, %function
 252              	PWM_M_ReadStatusRegister:
 253              	.LFB11:
 688:Generated_Source\PSoC4/PWM_M.c **** 
 689:Generated_Source\PSoC4/PWM_M.c **** 
 690:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM_M.c ****     *
 694:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM_M.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM_M.c ****     *
 697:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM_M.c ****     *  None
 699:Generated_Source\PSoC4/PWM_M.c ****     *
 700:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 701:Generated_Source\PSoC4/PWM_M.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM_M.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM_M.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM_M.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM_M.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM_M.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM_M.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM_M.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM_M.c ****     *
 710:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM_M.c ****     uint8 PWM_M_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM_M.c ****     {
 254              		.loc 1 712 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 18


 258              		@ link register save eliminated.
 713:Generated_Source\PSoC4/PWM_M.c ****         return (CY_GET_REG8(PWM_M_STATUS_PTR));
 259              		.loc 1 713 0
 260 0000 014B     		ldr	r3, .L26
 261 0002 1878     		ldrb	r0, [r3]
 262 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/PWM_M.c ****     }
 263              		.loc 1 714 0
 264              		@ sp needed
 265 0006 7047     		bx	lr
 266              	.L27:
 267              		.align	2
 268              	.L26:
 269 0008 62000F40 		.word	1074724962
 270              		.cfi_endproc
 271              	.LFE11:
 272              		.size	PWM_M_ReadStatusRegister, .-PWM_M_ReadStatusRegister
 273              		.section	.text.PWM_M_ReadControlRegister,"ax",%progbits
 274              		.align	2
 275              		.global	PWM_M_ReadControlRegister
 276              		.code	16
 277              		.thumb_func
 278              		.type	PWM_M_ReadControlRegister, %function
 279              	PWM_M_ReadControlRegister:
 280              	.LFB12:
 715:Generated_Source\PSoC4/PWM_M.c **** 
 716:Generated_Source\PSoC4/PWM_M.c **** #endif /* (PWM_M_UseStatus || PWM_M_UsingFixedFunction) */
 717:Generated_Source\PSoC4/PWM_M.c **** 
 718:Generated_Source\PSoC4/PWM_M.c **** 
 719:Generated_Source\PSoC4/PWM_M.c **** #if (PWM_M_UseControl)
 720:Generated_Source\PSoC4/PWM_M.c **** 
 721:Generated_Source\PSoC4/PWM_M.c **** 
 722:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_ReadControlRegister
 724:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM_M.c ****     *
 726:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM_M.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM_M.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM_M.c ****     *
 730:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM_M.c ****     *  None
 732:Generated_Source\PSoC4/PWM_M.c ****     *
 733:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 734:Generated_Source\PSoC4/PWM_M.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM_M.c ****     *
 736:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM_M.c ****     uint8 PWM_M_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM_M.c ****     {
 281              		.loc 1 738 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 739:Generated_Source\PSoC4/PWM_M.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM_M.c **** 
 741:Generated_Source\PSoC4/PWM_M.c ****         result = CY_GET_REG8(PWM_M_CONTROL_PTR);
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 19


 286              		.loc 1 741 0
 287 0000 014B     		ldr	r3, .L29
 288 0002 1878     		ldrb	r0, [r3]
 289 0004 C0B2     		uxtb	r0, r0
 290              	.LVL5:
 742:Generated_Source\PSoC4/PWM_M.c ****         return (result);
 743:Generated_Source\PSoC4/PWM_M.c ****     }
 291              		.loc 1 743 0
 292              		@ sp needed
 293 0006 7047     		bx	lr
 294              	.L30:
 295              		.align	2
 296              	.L29:
 297 0008 72000F40 		.word	1074724978
 298              		.cfi_endproc
 299              	.LFE12:
 300              		.size	PWM_M_ReadControlRegister, .-PWM_M_ReadControlRegister
 301              		.section	.text.PWM_M_WriteControlRegister,"ax",%progbits
 302              		.align	2
 303              		.global	PWM_M_WriteControlRegister
 304              		.code	16
 305              		.thumb_func
 306              		.type	PWM_M_WriteControlRegister, %function
 307              	PWM_M_WriteControlRegister:
 308              	.LFB13:
 744:Generated_Source\PSoC4/PWM_M.c **** 
 745:Generated_Source\PSoC4/PWM_M.c **** 
 746:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_WriteControlRegister
 748:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM_M.c ****     *
 750:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM_M.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM_M.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM_M.c ****     *
 754:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM_M.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM_M.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM_M.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM_M.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM_M.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM_M.c ****     *
 761:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 762:Generated_Source\PSoC4/PWM_M.c ****     *  None
 763:Generated_Source\PSoC4/PWM_M.c ****     *
 764:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM_M.c ****     void PWM_M_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM_M.c ****     {
 309              		.loc 1 766 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314              	.LVL6:
 767:Generated_Source\PSoC4/PWM_M.c ****         CY_SET_REG8(PWM_M_CONTROL_PTR, control);
 315              		.loc 1 767 0
 316 0000 014B     		ldr	r3, .L32
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 20


 317 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/PWM_M.c ****     }
 318              		.loc 1 768 0
 319              		@ sp needed
 320 0004 7047     		bx	lr
 321              	.L33:
 322 0006 C046     		.align	2
 323              	.L32:
 324 0008 72000F40 		.word	1074724978
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	PWM_M_WriteControlRegister, .-PWM_M_WriteControlRegister
 328              		.section	.text.PWM_M_ReadCapture,"ax",%progbits
 329              		.align	2
 330              		.global	PWM_M_ReadCapture
 331              		.code	16
 332              		.thumb_func
 333              		.type	PWM_M_ReadCapture, %function
 334              	PWM_M_ReadCapture:
 335              	.LFB14:
 769:Generated_Source\PSoC4/PWM_M.c **** 
 770:Generated_Source\PSoC4/PWM_M.c **** #endif /* (PWM_M_UseControl) */
 771:Generated_Source\PSoC4/PWM_M.c **** 
 772:Generated_Source\PSoC4/PWM_M.c **** 
 773:Generated_Source\PSoC4/PWM_M.c **** #if (!PWM_M_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM_M.c **** 
 775:Generated_Source\PSoC4/PWM_M.c **** 
 776:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_ReadCapture
 778:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM_M.c ****     *
 780:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM_M.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM_M.c ****     *
 783:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM_M.c ****     *  None
 785:Generated_Source\PSoC4/PWM_M.c ****     *
 786:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 787:Generated_Source\PSoC4/PWM_M.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM_M.c ****     *
 789:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM_M.c ****     uint8 PWM_M_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM_M.c ****     {
 336              		.loc 1 791 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 792:Generated_Source\PSoC4/PWM_M.c ****         return (CY_GET_REG8(PWM_M_CAPTURE_LSB_PTR));
 341              		.loc 1 792 0
 342 0000 014B     		ldr	r3, .L35
 343 0002 1878     		ldrb	r0, [r3]
 344 0004 C0B2     		uxtb	r0, r0
 793:Generated_Source\PSoC4/PWM_M.c ****     }
 345              		.loc 1 793 0
 346              		@ sp needed
 347 0006 7047     		bx	lr
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 21


 348              	.L36:
 349              		.align	2
 350              	.L35:
 351 0008 52000F40 		.word	1074724946
 352              		.cfi_endproc
 353              	.LFE14:
 354              		.size	PWM_M_ReadCapture, .-PWM_M_ReadCapture
 355              		.section	.text.PWM_M_ClearFIFO,"ax",%progbits
 356              		.align	2
 357              		.global	PWM_M_ClearFIFO
 358              		.code	16
 359              		.thumb_func
 360              		.type	PWM_M_ClearFIFO, %function
 361              	PWM_M_ClearFIFO:
 362              	.LFB6:
 454:Generated_Source\PSoC4/PWM_M.c ****             while(0u != (PWM_M_ReadStatusRegister() & PWM_M_STATUS_FIFONEMPTY))
 363              		.loc 1 454 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 10B5     		push	{r4, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 4, -8
 370              		.cfi_offset 14, -4
 455:Generated_Source\PSoC4/PWM_M.c ****             {
 371              		.loc 1 455 0
 372 0002 01E0     		b	.L38
 373              	.L39:
 457:Generated_Source\PSoC4/PWM_M.c ****             }
 374              		.loc 1 457 0
 375 0004 FFF7FEFF 		bl	PWM_M_ReadCapture
 376              	.LVL7:
 377              	.L38:
 455:Generated_Source\PSoC4/PWM_M.c ****             {
 378              		.loc 1 455 0
 379 0008 FFF7FEFF 		bl	PWM_M_ReadStatusRegister
 380              	.LVL8:
 381 000c C306     		lsls	r3, r0, #27
 382 000e F9D4     		bmi	.L39
 459:Generated_Source\PSoC4/PWM_M.c **** 
 383              		.loc 1 459 0
 384              		@ sp needed
 385 0010 10BD     		pop	{r4, pc}
 386              		.cfi_endproc
 387              	.LFE6:
 388              		.size	PWM_M_ClearFIFO, .-PWM_M_ClearFIFO
 389 0012 C046     		.section	.text.PWM_M_Init,"ax",%progbits
 390              		.align	2
 391              		.global	PWM_M_Init
 392              		.code	16
 393              		.thumb_func
 394              		.type	PWM_M_Init, %function
 395              	PWM_M_Init:
 396              	.LFB1:
  85:Generated_Source\PSoC4/PWM_M.c ****     #if (PWM_M_UsingFixedFunction || PWM_M_UseControl)
 397              		.loc 1 85 0
 398              		.cfi_startproc
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 22


 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401 0000 10B5     		push	{r4, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 4, -8
 404              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/PWM_M.c ****                 ((uint8)(~PWM_M_CTRL_CMPMODE1_MASK));
 405              		.loc 1 117 0
 406 0002 1449     		ldr	r1, .L41
 407 0004 0B78     		ldrb	r3, [r1]
 408 0006 3F22     		movs	r2, #63
 409 0008 9343     		bics	r3, r2
 410              	.LVL9:
 119:Generated_Source\PSoC4/PWM_M.c ****                                    PWM_M_DEFAULT_COMPARE1_MODE;
 411              		.loc 1 119 0
 412 000a 0B22     		movs	r2, #11
 413 000c 1343     		orrs	r3, r2
 414              	.LVL10:
 415 000e DBB2     		uxtb	r3, r3
 416 0010 0B70     		strb	r3, [r1]
 126:Generated_Source\PSoC4/PWM_M.c ****         #else /* (PWM_M_Resolution == 16)*/
 417              		.loc 1 126 0
 418 0012 114C     		ldr	r4, .L41+4
 419 0014 2278     		ldrb	r2, [r4]
 420 0016 0123     		movs	r3, #1
 421 0018 1343     		orrs	r3, r2
 422 001a DBB2     		uxtb	r3, r3
 423 001c 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (!PWM_M_UsingFixedFunction) */
 424              		.loc 1 133 0
 425 001e FF20     		movs	r0, #255
 426 0020 FFF7FEFF 		bl	PWM_M_WriteCounter
 427              	.LVL11:
 136:Generated_Source\PSoC4/PWM_M.c **** 
 428              		.loc 1 136 0
 429 0024 FF20     		movs	r0, #255
 430 0026 FFF7FEFF 		bl	PWM_M_WritePeriod
 431              	.LVL12:
 141:Generated_Source\PSoC4/PWM_M.c ****             PWM_M_WriteCompare2(PWM_M_INIT_COMPARE_VALUE2);
 432              		.loc 1 141 0
 433 002a 0020     		movs	r0, #0
 434 002c FFF7FEFF 		bl	PWM_M_WriteCompare1
 435              	.LVL13:
 142:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UseOneCompareMode) */
 436              		.loc 1 142 0
 437 0030 3F20     		movs	r0, #63
 438 0032 FFF7FEFF 		bl	PWM_M_WriteCompare2
 439              	.LVL14:
 154:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UseStatus || PWM_M_UsingFixedFunction) */
 440              		.loc 1 154 0
 441 0036 0020     		movs	r0, #0
 442 0038 FFF7FEFF 		bl	PWM_M_SetInterruptMode
 443              	.LVL15:
 167:Generated_Source\PSoC4/PWM_M.c ****             /* Use the interrupt output of the status register for IRQ output */
 444              		.loc 1 167 0
 445 003c FFF7FEFF 		bl	CyEnterCriticalSection
 446              	.LVL16:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 23


 169:Generated_Source\PSoC4/PWM_M.c **** 
 447              		.loc 1 169 0
 448 0040 2278     		ldrb	r2, [r4]
 449 0042 1023     		movs	r3, #16
 450 0044 1343     		orrs	r3, r2
 451 0046 DBB2     		uxtb	r3, r3
 452 0048 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC4/PWM_M.c **** 
 453              		.loc 1 172 0
 454 004a FFF7FEFF 		bl	CyExitCriticalSection
 455              	.LVL17:
 176:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UseStatus) */
 456              		.loc 1 176 0
 457 004e FFF7FEFF 		bl	PWM_M_ClearFIFO
 458              	.LVL18:
 179:Generated_Source\PSoC4/PWM_M.c **** 
 459              		.loc 1 179 0
 460              		@ sp needed
 461 0052 10BD     		pop	{r4, pc}
 462              	.L42:
 463              		.align	2
 464              	.L41:
 465 0054 72000F40 		.word	1074724978
 466 0058 92000F40 		.word	1074725010
 467              		.cfi_endproc
 468              	.LFE1:
 469              		.size	PWM_M_Init, .-PWM_M_Init
 470              		.section	.text.PWM_M_Start,"ax",%progbits
 471              		.align	2
 472              		.global	PWM_M_Start
 473              		.code	16
 474              		.thumb_func
 475              		.type	PWM_M_Start, %function
 476              	PWM_M_Start:
 477              	.LFB0:
  56:Generated_Source\PSoC4/PWM_M.c ****     /* If not Initialized then initialize all required hardware and software */
 478              		.loc 1 56 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482 0000 10B5     		push	{r4, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/PWM_M.c ****     {
 486              		.loc 1 58 0
 487 0002 064B     		ldr	r3, .L45
 488 0004 1B78     		ldrb	r3, [r3]
 489 0006 002B     		cmp	r3, #0
 490 0008 04D1     		bne	.L44
  60:Generated_Source\PSoC4/PWM_M.c ****         PWM_M_initVar = 1u;
 491              		.loc 1 60 0
 492 000a FFF7FEFF 		bl	PWM_M_Init
 493              	.LVL19:
  61:Generated_Source\PSoC4/PWM_M.c ****     }
 494              		.loc 1 61 0
 495 000e 0122     		movs	r2, #1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 24


 496 0010 024B     		ldr	r3, .L45
 497 0012 1A70     		strb	r2, [r3]
 498              	.L44:
  63:Generated_Source\PSoC4/PWM_M.c **** 
 499              		.loc 1 63 0
 500 0014 FFF7FEFF 		bl	PWM_M_Enable
 501              	.LVL20:
  65:Generated_Source\PSoC4/PWM_M.c **** 
 502              		.loc 1 65 0
 503              		@ sp needed
 504 0018 10BD     		pop	{r4, pc}
 505              	.L46:
 506 001a C046     		.align	2
 507              	.L45:
 508 001c 00000000 		.word	.LANCHOR0
 509              		.cfi_endproc
 510              	.LFE0:
 511              		.size	PWM_M_Start, .-PWM_M_Start
 512              		.section	.text.PWM_M_ReadCompare1,"ax",%progbits
 513              		.align	2
 514              		.global	PWM_M_ReadCompare1
 515              		.code	16
 516              		.thumb_func
 517              		.type	PWM_M_ReadCompare1, %function
 518              	PWM_M_ReadCompare1:
 519              	.LFB15:
 794:Generated_Source\PSoC4/PWM_M.c **** 
 795:Generated_Source\PSoC4/PWM_M.c **** #endif /* (!PWM_M_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM_M.c **** 
 797:Generated_Source\PSoC4/PWM_M.c **** 
 798:Generated_Source\PSoC4/PWM_M.c **** #if (PWM_M_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM_M.c **** 
 800:Generated_Source\PSoC4/PWM_M.c **** 
 801:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_ReadCompare
 803:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM_M.c ****     *
 805:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM_M.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM_M.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM_M.c ****     *
 809:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM_M.c ****     *  None
 811:Generated_Source\PSoC4/PWM_M.c ****     *
 812:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 813:Generated_Source\PSoC4/PWM_M.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM_M.c ****     *
 815:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM_M.c ****     uint8 PWM_M_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM_M.c ****     {
 818:Generated_Source\PSoC4/PWM_M.c ****         #if(PWM_M_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM_M.c ****             return ((uint8)CY_GET_REG16(PWM_M_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM_M.c ****         #else
 821:Generated_Source\PSoC4/PWM_M.c ****             return (CY_GET_REG8(PWM_M_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC4/PWM_M.c ****         #endif /* (PWM_M_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM_M.c ****     }
 824:Generated_Source\PSoC4/PWM_M.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 25


 825:Generated_Source\PSoC4/PWM_M.c **** #else
 826:Generated_Source\PSoC4/PWM_M.c **** 
 827:Generated_Source\PSoC4/PWM_M.c **** 
 828:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_ReadCompare1
 830:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM_M.c ****     *
 832:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM_M.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM_M.c ****     *
 835:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM_M.c ****     *  None
 837:Generated_Source\PSoC4/PWM_M.c ****     *
 838:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 839:Generated_Source\PSoC4/PWM_M.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM_M.c ****     *
 841:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM_M.c ****     uint8 PWM_M_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM_M.c ****     {
 520              		.loc 1 843 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 844:Generated_Source\PSoC4/PWM_M.c ****         return (CY_GET_REG8(PWM_M_COMPARE1_LSB_PTR));
 525              		.loc 1 844 0
 526 0000 014B     		ldr	r3, .L48
 527 0002 1878     		ldrb	r0, [r3]
 528 0004 C0B2     		uxtb	r0, r0
 845:Generated_Source\PSoC4/PWM_M.c ****     }
 529              		.loc 1 845 0
 530              		@ sp needed
 531 0006 7047     		bx	lr
 532              	.L49:
 533              		.align	2
 534              	.L48:
 535 0008 22000F40 		.word	1074724898
 536              		.cfi_endproc
 537              	.LFE15:
 538              		.size	PWM_M_ReadCompare1, .-PWM_M_ReadCompare1
 539              		.section	.text.PWM_M_ReadCompare2,"ax",%progbits
 540              		.align	2
 541              		.global	PWM_M_ReadCompare2
 542              		.code	16
 543              		.thumb_func
 544              		.type	PWM_M_ReadCompare2, %function
 545              	PWM_M_ReadCompare2:
 546              	.LFB16:
 846:Generated_Source\PSoC4/PWM_M.c **** 
 847:Generated_Source\PSoC4/PWM_M.c **** 
 848:Generated_Source\PSoC4/PWM_M.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM_M.c ****     * Function Name: PWM_M_ReadCompare2
 850:Generated_Source\PSoC4/PWM_M.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM_M.c ****     *
 852:Generated_Source\PSoC4/PWM_M.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM_M.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM_M.c ****     *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 26


 855:Generated_Source\PSoC4/PWM_M.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM_M.c ****     *  None
 857:Generated_Source\PSoC4/PWM_M.c ****     *
 858:Generated_Source\PSoC4/PWM_M.c ****     * Return:
 859:Generated_Source\PSoC4/PWM_M.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM_M.c ****     *
 861:Generated_Source\PSoC4/PWM_M.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM_M.c ****     uint8 PWM_M_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM_M.c ****     {
 547              		.loc 1 863 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 864:Generated_Source\PSoC4/PWM_M.c ****         return (CY_GET_REG8(PWM_M_COMPARE2_LSB_PTR));
 552              		.loc 1 864 0
 553 0000 014B     		ldr	r3, .L51
 554 0002 1878     		ldrb	r0, [r3]
 555 0004 C0B2     		uxtb	r0, r0
 865:Generated_Source\PSoC4/PWM_M.c ****     }
 556              		.loc 1 865 0
 557              		@ sp needed
 558 0006 7047     		bx	lr
 559              	.L52:
 560              		.align	2
 561              	.L51:
 562 0008 32000F40 		.word	1074724914
 563              		.cfi_endproc
 564              	.LFE16:
 565              		.size	PWM_M_ReadCompare2, .-PWM_M_ReadCompare2
 566              		.section	.text.PWM_M_ReadPeriod,"ax",%progbits
 567              		.align	2
 568              		.global	PWM_M_ReadPeriod
 569              		.code	16
 570              		.thumb_func
 571              		.type	PWM_M_ReadPeriod, %function
 572              	PWM_M_ReadPeriod:
 573              	.LFB17:
 866:Generated_Source\PSoC4/PWM_M.c **** 
 867:Generated_Source\PSoC4/PWM_M.c **** #endif /* (PWM_M_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM_M.c **** 
 869:Generated_Source\PSoC4/PWM_M.c **** 
 870:Generated_Source\PSoC4/PWM_M.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM_M.c **** * Function Name: PWM_M_ReadPeriod
 872:Generated_Source\PSoC4/PWM_M.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM_M.c **** *
 874:Generated_Source\PSoC4/PWM_M.c **** * Summary:
 875:Generated_Source\PSoC4/PWM_M.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM_M.c **** *
 877:Generated_Source\PSoC4/PWM_M.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM_M.c **** *  None
 879:Generated_Source\PSoC4/PWM_M.c **** *
 880:Generated_Source\PSoC4/PWM_M.c **** * Return:
 881:Generated_Source\PSoC4/PWM_M.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM_M.c **** *
 883:Generated_Source\PSoC4/PWM_M.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM_M.c **** uint8 PWM_M_ReadPeriod(void) 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 27


 885:Generated_Source\PSoC4/PWM_M.c **** {
 574              		.loc 1 885 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 886:Generated_Source\PSoC4/PWM_M.c ****     #if(PWM_M_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM_M.c ****         return ((uint8)CY_GET_REG16(PWM_M_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM_M.c ****     #else
 889:Generated_Source\PSoC4/PWM_M.c ****         return (CY_GET_REG8(PWM_M_PERIOD_LSB_PTR));
 579              		.loc 1 889 0
 580 0000 014B     		ldr	r3, .L54
 581 0002 1878     		ldrb	r0, [r3]
 582 0004 C0B2     		uxtb	r0, r0
 890:Generated_Source\PSoC4/PWM_M.c ****     #endif /* (PWM_M_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM_M.c **** }
 583              		.loc 1 891 0
 584              		@ sp needed
 585 0006 7047     		bx	lr
 586              	.L55:
 587              		.align	2
 588              	.L54:
 589 0008 42000F40 		.word	1074724930
 590              		.cfi_endproc
 591              	.LFE17:
 592              		.size	PWM_M_ReadPeriod, .-PWM_M_ReadPeriod
 593              		.global	PWM_M_initVar
 594              		.bss
 595              		.set	.LANCHOR0,. + 0
 596              		.type	PWM_M_initVar, %object
 597              		.size	PWM_M_initVar, 1
 598              	PWM_M_initVar:
 599 0000 00       		.space	1
 600              		.text
 601              	.Letext0:
 602              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 603              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 604              		.section	.debug_info,"",%progbits
 605              	.Ldebug_info0:
 606 0000 7E030000 		.4byte	0x37e
 607 0004 0400     		.2byte	0x4
 608 0006 00000000 		.4byte	.Ldebug_abbrev0
 609 000a 04       		.byte	0x4
 610 000b 01       		.uleb128 0x1
 611 000c D9010000 		.4byte	.LASF43
 612 0010 0C       		.byte	0xc
 613 0011 F3020000 		.4byte	.LASF44
 614 0015 23000000 		.4byte	.LASF45
 615 0019 00000000 		.4byte	.Ldebug_ranges0+0
 616 001d 00000000 		.4byte	0
 617 0021 00000000 		.4byte	.Ldebug_line0
 618 0025 02       		.uleb128 0x2
 619 0026 01       		.byte	0x1
 620 0027 06       		.byte	0x6
 621 0028 F1000000 		.4byte	.LASF0
 622 002c 02       		.uleb128 0x2
 623 002d 01       		.byte	0x1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 28


 624 002e 08       		.byte	0x8
 625 002f FD000000 		.4byte	.LASF1
 626 0033 02       		.uleb128 0x2
 627 0034 02       		.byte	0x2
 628 0035 05       		.byte	0x5
 629 0036 9E020000 		.4byte	.LASF2
 630 003a 02       		.uleb128 0x2
 631 003b 02       		.byte	0x2
 632 003c 07       		.byte	0x7
 633 003d 51000000 		.4byte	.LASF3
 634 0041 02       		.uleb128 0x2
 635 0042 04       		.byte	0x4
 636 0043 05       		.byte	0x5
 637 0044 CD020000 		.4byte	.LASF4
 638 0048 02       		.uleb128 0x2
 639 0049 04       		.byte	0x4
 640 004a 07       		.byte	0x7
 641 004b 1B010000 		.4byte	.LASF5
 642 004f 02       		.uleb128 0x2
 643 0050 08       		.byte	0x8
 644 0051 05       		.byte	0x5
 645 0052 75020000 		.4byte	.LASF6
 646 0056 02       		.uleb128 0x2
 647 0057 08       		.byte	0x8
 648 0058 07       		.byte	0x7
 649 0059 33030000 		.4byte	.LASF7
 650 005d 03       		.uleb128 0x3
 651 005e 04       		.byte	0x4
 652 005f 05       		.byte	0x5
 653 0060 696E7400 		.ascii	"int\000"
 654 0064 02       		.uleb128 0x2
 655 0065 04       		.byte	0x4
 656 0066 07       		.byte	0x7
 657 0067 A4010000 		.4byte	.LASF8
 658 006b 04       		.uleb128 0x4
 659 006c 2D010000 		.4byte	.LASF12
 660 0070 02       		.byte	0x2
 661 0071 B901     		.2byte	0x1b9
 662 0073 2C000000 		.4byte	0x2c
 663 0077 02       		.uleb128 0x2
 664 0078 04       		.byte	0x4
 665 0079 04       		.byte	0x4
 666 007a E3000000 		.4byte	.LASF9
 667 007e 02       		.uleb128 0x2
 668 007f 08       		.byte	0x8
 669 0080 04       		.byte	0x4
 670 0081 49010000 		.4byte	.LASF10
 671 0085 02       		.uleb128 0x2
 672 0086 01       		.byte	0x1
 673 0087 08       		.byte	0x8
 674 0088 D6020000 		.4byte	.LASF11
 675 008c 04       		.uleb128 0x4
 676 008d 16010000 		.4byte	.LASF13
 677 0091 02       		.byte	0x2
 678 0092 6302     		.2byte	0x263
 679 0094 98000000 		.4byte	0x98
 680 0098 05       		.uleb128 0x5
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 29


 681 0099 6B000000 		.4byte	0x6b
 682 009d 02       		.uleb128 0x2
 683 009e 08       		.byte	0x8
 684 009f 04       		.byte	0x4
 685 00a0 E7020000 		.4byte	.LASF14
 686 00a4 02       		.uleb128 0x2
 687 00a5 04       		.byte	0x4
 688 00a6 07       		.byte	0x7
 689 00a7 6C020000 		.4byte	.LASF15
 690 00ab 06       		.uleb128 0x6
 691 00ac 91020000 		.4byte	.LASF16
 692 00b0 01       		.byte	0x1
 693 00b1 C7       		.byte	0xc7
 694 00b2 00000000 		.4byte	.LFB2
 695 00b6 14000000 		.4byte	.LFE2-.LFB2
 696 00ba 01       		.uleb128 0x1
 697 00bb 9C       		.byte	0x9c
 698 00bc 06       		.uleb128 0x6
 699 00bd CE010000 		.4byte	.LASF17
 700 00c1 01       		.byte	0x1
 701 00c2 E9       		.byte	0xe9
 702 00c3 00000000 		.4byte	.LFB3
 703 00c7 10000000 		.4byte	.LFE3-.LFB3
 704 00cb 01       		.uleb128 0x1
 705 00cc 9C       		.byte	0x9c
 706 00cd 07       		.uleb128 0x7
 707 00ce BA020000 		.4byte	.LASF18
 708 00d2 01       		.byte	0x1
 709 00d3 9301     		.2byte	0x193
 710 00d5 00000000 		.4byte	.LFB4
 711 00d9 0C000000 		.4byte	.LFE4-.LFB4
 712 00dd 01       		.uleb128 0x1
 713 00de 9C       		.byte	0x9c
 714 00df F2000000 		.4byte	0xf2
 715 00e3 08       		.uleb128 0x8
 716 00e4 E9000000 		.4byte	.LASF20
 717 00e8 01       		.byte	0x1
 718 00e9 9301     		.2byte	0x193
 719 00eb 6B000000 		.4byte	0x6b
 720 00ef 01       		.uleb128 0x1
 721 00f0 50       		.byte	0x50
 722 00f1 00       		.byte	0
 723 00f2 09       		.uleb128 0x9
 724 00f3 A8020000 		.4byte	.LASF27
 725 00f7 01       		.byte	0x1
 726 00f8 A901     		.2byte	0x1a9
 727 00fa 6B000000 		.4byte	0x6b
 728 00fe 00000000 		.4byte	.LFB5
 729 0102 14000000 		.4byte	.LFE5-.LFB5
 730 0106 01       		.uleb128 0x1
 731 0107 9C       		.byte	0x9c
 732 0108 07       		.uleb128 0x7
 733 0109 11000000 		.4byte	.LASF19
 734 010d 01       		.byte	0x1
 735 010e E201     		.2byte	0x1e2
 736 0110 00000000 		.4byte	.LFB7
 737 0114 0C000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 30


 738 0118 01       		.uleb128 0x1
 739 0119 9C       		.byte	0x9c
 740 011a 2D010000 		.4byte	0x12d
 741 011e 08       		.uleb128 0x8
 742 011f 4A000000 		.4byte	.LASF21
 743 0123 01       		.byte	0x1
 744 0124 E201     		.2byte	0x1e2
 745 0126 6B000000 		.4byte	0x6b
 746 012a 01       		.uleb128 0x1
 747 012b 50       		.byte	0x50
 748 012c 00       		.byte	0
 749 012d 07       		.uleb128 0x7
 750 012e 64000000 		.4byte	.LASF22
 751 0132 01       		.byte	0x1
 752 0133 2B02     		.2byte	0x22b
 753 0135 00000000 		.4byte	.LFB8
 754 0139 0C000000 		.4byte	.LFE8-.LFB8
 755 013d 01       		.uleb128 0x1
 756 013e 9C       		.byte	0x9c
 757 013f 52010000 		.4byte	0x152
 758 0143 08       		.uleb128 0x8
 759 0144 12030000 		.4byte	.LASF23
 760 0148 01       		.byte	0x1
 761 0149 2B02     		.2byte	0x22b
 762 014b 6B000000 		.4byte	0x6b
 763 014f 01       		.uleb128 0x1
 764 0150 50       		.byte	0x50
 765 0151 00       		.byte	0
 766 0152 07       		.uleb128 0x7
 767 0153 78000000 		.4byte	.LASF24
 768 0157 01       		.byte	0x1
 769 0158 4802     		.2byte	0x248
 770 015a 00000000 		.4byte	.LFB9
 771 015e 0C000000 		.4byte	.LFE9-.LFB9
 772 0162 01       		.uleb128 0x1
 773 0163 9C       		.byte	0x9c
 774 0164 77010000 		.4byte	0x177
 775 0168 08       		.uleb128 0x8
 776 0169 12030000 		.4byte	.LASF23
 777 016d 01       		.byte	0x1
 778 016e 4802     		.2byte	0x248
 779 0170 6B000000 		.4byte	0x6b
 780 0174 01       		.uleb128 0x1
 781 0175 50       		.byte	0x50
 782 0176 00       		.byte	0
 783 0177 07       		.uleb128 0x7
 784 0178 B2000000 		.4byte	.LASF25
 785 017c 01       		.byte	0x1
 786 017d AC02     		.2byte	0x2ac
 787 017f 00000000 		.4byte	.LFB10
 788 0183 0C000000 		.4byte	.LFE10-.LFB10
 789 0187 01       		.uleb128 0x1
 790 0188 9C       		.byte	0x9c
 791 0189 9C010000 		.4byte	0x19c
 792 018d 08       		.uleb128 0x8
 793 018e 83020000 		.4byte	.LASF26
 794 0192 01       		.byte	0x1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 31


 795 0193 AC02     		.2byte	0x2ac
 796 0195 6B000000 		.4byte	0x6b
 797 0199 01       		.uleb128 0x1
 798 019a 50       		.byte	0x50
 799 019b 00       		.byte	0
 800 019c 09       		.uleb128 0x9
 801 019d 1A030000 		.4byte	.LASF28
 802 01a1 01       		.byte	0x1
 803 01a2 C702     		.2byte	0x2c7
 804 01a4 6B000000 		.4byte	0x6b
 805 01a8 00000000 		.4byte	.LFB11
 806 01ac 0C000000 		.4byte	.LFE11-.LFB11
 807 01b0 01       		.uleb128 0x1
 808 01b1 9C       		.byte	0x9c
 809 01b2 0A       		.uleb128 0xa
 810 01b3 C9000000 		.4byte	.LASF46
 811 01b7 01       		.byte	0x1
 812 01b8 E102     		.2byte	0x2e1
 813 01ba 6B000000 		.4byte	0x6b
 814 01be 00000000 		.4byte	.LFB12
 815 01c2 0C000000 		.4byte	.LFE12-.LFB12
 816 01c6 01       		.uleb128 0x1
 817 01c7 9C       		.byte	0x9c
 818 01c8 DB010000 		.4byte	0x1db
 819 01cc 0B       		.uleb128 0xb
 820 01cd C7010000 		.4byte	.LASF34
 821 01d1 01       		.byte	0x1
 822 01d2 E302     		.2byte	0x2e3
 823 01d4 6B000000 		.4byte	0x6b
 824 01d8 01       		.uleb128 0x1
 825 01d9 50       		.byte	0x50
 826 01da 00       		.byte	0
 827 01db 07       		.uleb128 0x7
 828 01dc 72010000 		.4byte	.LASF29
 829 01e0 01       		.byte	0x1
 830 01e1 FD02     		.2byte	0x2fd
 831 01e3 00000000 		.4byte	.LFB13
 832 01e7 0C000000 		.4byte	.LFE13-.LFB13
 833 01eb 01       		.uleb128 0x1
 834 01ec 9C       		.byte	0x9c
 835 01ed 00020000 		.4byte	0x200
 836 01f1 08       		.uleb128 0x8
 837 01f2 33010000 		.4byte	.LASF30
 838 01f6 01       		.byte	0x1
 839 01f7 FD02     		.2byte	0x2fd
 840 01f9 6B000000 		.4byte	0x6b
 841 01fd 01       		.uleb128 0x1
 842 01fe 50       		.byte	0x50
 843 01ff 00       		.byte	0
 844 0200 09       		.uleb128 0x9
 845 0201 60010000 		.4byte	.LASF31
 846 0205 01       		.byte	0x1
 847 0206 1603     		.2byte	0x316
 848 0208 6B000000 		.4byte	0x6b
 849 020c 00000000 		.4byte	.LFB14
 850 0210 0C000000 		.4byte	.LFE14-.LFB14
 851 0214 01       		.uleb128 0x1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 32


 852 0215 9C       		.byte	0x9c
 853 0216 07       		.uleb128 0x7
 854 0217 50010000 		.4byte	.LASF32
 855 021b 01       		.byte	0x1
 856 021c C501     		.2byte	0x1c5
 857 021e 00000000 		.4byte	.LFB6
 858 0222 12000000 		.4byte	.LFE6-.LFB6
 859 0226 01       		.uleb128 0x1
 860 0227 9C       		.byte	0x9c
 861 0228 3F020000 		.4byte	0x23f
 862 022c 0C       		.uleb128 0xc
 863 022d 08000000 		.4byte	.LVL7
 864 0231 00020000 		.4byte	0x200
 865 0235 0C       		.uleb128 0xc
 866 0236 0C000000 		.4byte	.LVL8
 867 023a 9C010000 		.4byte	0x19c
 868 023e 00       		.byte	0
 869 023f 0D       		.uleb128 0xd
 870 0240 0B010000 		.4byte	.LASF33
 871 0244 01       		.byte	0x1
 872 0245 54       		.byte	0x54
 873 0246 00000000 		.4byte	.LFB1
 874 024a 5C000000 		.4byte	.LFE1-.LFB1
 875 024e 01       		.uleb128 0x1
 876 024f 9C       		.byte	0x9c
 877 0250 F0020000 		.4byte	0x2f0
 878 0254 0E       		.uleb128 0xe
 879 0255 67020000 		.4byte	.LASF35
 880 0259 01       		.byte	0x1
 881 025a 57       		.byte	0x57
 882 025b 6B000000 		.4byte	0x6b
 883 025f 00000000 		.4byte	.LLST0
 884 0263 0E       		.uleb128 0xe
 885 0264 4A030000 		.4byte	.LASF36
 886 0268 01       		.byte	0x1
 887 0269 5D       		.byte	0x5d
 888 026a 6B000000 		.4byte	0x6b
 889 026e 13000000 		.4byte	.LLST1
 890 0272 0F       		.uleb128 0xf
 891 0273 24000000 		.4byte	.LVL11
 892 0277 CD000000 		.4byte	0xcd
 893 027b 86020000 		.4byte	0x286
 894 027f 10       		.uleb128 0x10
 895 0280 01       		.uleb128 0x1
 896 0281 50       		.byte	0x50
 897 0282 02       		.uleb128 0x2
 898 0283 09       		.byte	0x9
 899 0284 FF       		.byte	0xff
 900 0285 00       		.byte	0
 901 0286 0F       		.uleb128 0xf
 902 0287 2A000000 		.4byte	.LVL12
 903 028b 08010000 		.4byte	0x108
 904 028f 9A020000 		.4byte	0x29a
 905 0293 10       		.uleb128 0x10
 906 0294 01       		.uleb128 0x1
 907 0295 50       		.byte	0x50
 908 0296 02       		.uleb128 0x2
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 33


 909 0297 09       		.byte	0x9
 910 0298 FF       		.byte	0xff
 911 0299 00       		.byte	0
 912 029a 0F       		.uleb128 0xf
 913 029b 30000000 		.4byte	.LVL13
 914 029f 2D010000 		.4byte	0x12d
 915 02a3 AD020000 		.4byte	0x2ad
 916 02a7 10       		.uleb128 0x10
 917 02a8 01       		.uleb128 0x1
 918 02a9 50       		.byte	0x50
 919 02aa 01       		.uleb128 0x1
 920 02ab 30       		.byte	0x30
 921 02ac 00       		.byte	0
 922 02ad 0F       		.uleb128 0xf
 923 02ae 36000000 		.4byte	.LVL14
 924 02b2 52010000 		.4byte	0x152
 925 02b6 C1020000 		.4byte	0x2c1
 926 02ba 10       		.uleb128 0x10
 927 02bb 01       		.uleb128 0x1
 928 02bc 50       		.byte	0x50
 929 02bd 02       		.uleb128 0x2
 930 02be 08       		.byte	0x8
 931 02bf 3F       		.byte	0x3f
 932 02c0 00       		.byte	0
 933 02c1 0F       		.uleb128 0xf
 934 02c2 3C000000 		.4byte	.LVL15
 935 02c6 77010000 		.4byte	0x177
 936 02ca D4020000 		.4byte	0x2d4
 937 02ce 10       		.uleb128 0x10
 938 02cf 01       		.uleb128 0x1
 939 02d0 50       		.byte	0x50
 940 02d1 01       		.uleb128 0x1
 941 02d2 30       		.byte	0x30
 942 02d3 00       		.byte	0
 943 02d4 0C       		.uleb128 0xc
 944 02d5 40000000 		.4byte	.LVL16
 945 02d9 6B030000 		.4byte	0x36b
 946 02dd 0C       		.uleb128 0xc
 947 02de 4E000000 		.4byte	.LVL17
 948 02e2 76030000 		.4byte	0x376
 949 02e6 0C       		.uleb128 0xc
 950 02e7 52000000 		.4byte	.LVL18
 951 02eb 16020000 		.4byte	0x216
 952 02ef 00       		.byte	0
 953 02f0 0D       		.uleb128 0xd
 954 02f1 DB020000 		.4byte	.LASF37
 955 02f5 01       		.byte	0x1
 956 02f6 37       		.byte	0x37
 957 02f7 00000000 		.4byte	.LFB0
 958 02fb 20000000 		.4byte	.LFE0-.LFB0
 959 02ff 01       		.uleb128 0x1
 960 0300 9C       		.byte	0x9c
 961 0301 18030000 		.4byte	0x318
 962 0305 0C       		.uleb128 0xc
 963 0306 0E000000 		.4byte	.LVL19
 964 030a 3F020000 		.4byte	0x23f
 965 030e 0C       		.uleb128 0xc
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 34


 966 030f 18000000 		.4byte	.LVL20
 967 0313 AB000000 		.4byte	0xab
 968 0317 00       		.byte	0
 969 0318 09       		.uleb128 0x9
 970 0319 8C000000 		.4byte	.LASF38
 971 031d 01       		.byte	0x1
 972 031e 4A03     		.2byte	0x34a
 973 0320 6B000000 		.4byte	0x6b
 974 0324 00000000 		.4byte	.LFB15
 975 0328 0C000000 		.4byte	.LFE15-.LFB15
 976 032c 01       		.uleb128 0x1
 977 032d 9C       		.byte	0x9c
 978 032e 09       		.uleb128 0x9
 979 032f 9F000000 		.4byte	.LASF39
 980 0333 01       		.byte	0x1
 981 0334 5E03     		.2byte	0x35e
 982 0336 6B000000 		.4byte	0x6b
 983 033a 00000000 		.4byte	.LFB16
 984 033e 0C000000 		.4byte	.LFE16-.LFB16
 985 0342 01       		.uleb128 0x1
 986 0343 9C       		.byte	0x9c
 987 0344 09       		.uleb128 0x9
 988 0345 00000000 		.4byte	.LASF40
 989 0349 01       		.byte	0x1
 990 034a 7403     		.2byte	0x374
 991 034c 6B000000 		.4byte	0x6b
 992 0350 00000000 		.4byte	.LFB17
 993 0354 0C000000 		.4byte	.LFE17-.LFB17
 994 0358 01       		.uleb128 0x1
 995 0359 9C       		.byte	0x9c
 996 035a 11       		.uleb128 0x11
 997 035b 3B010000 		.4byte	.LASF47
 998 035f 01       		.byte	0x1
 999 0360 20       		.byte	0x20
 1000 0361 6B000000 		.4byte	0x6b
 1001 0365 05       		.uleb128 0x5
 1002 0366 03       		.byte	0x3
 1003 0367 00000000 		.4byte	PWM_M_initVar
 1004 036b 12       		.uleb128 0x12
 1005 036c 8D010000 		.4byte	.LASF41
 1006 0370 8D010000 		.4byte	.LASF41
 1007 0374 03       		.byte	0x3
 1008 0375 E5       		.byte	0xe5
 1009 0376 12       		.uleb128 0x12
 1010 0377 B1010000 		.4byte	.LASF42
 1011 037b B1010000 		.4byte	.LASF42
 1012 037f 03       		.byte	0x3
 1013 0380 E6       		.byte	0xe6
 1014 0381 00       		.byte	0
 1015              		.section	.debug_abbrev,"",%progbits
 1016              	.Ldebug_abbrev0:
 1017 0000 01       		.uleb128 0x1
 1018 0001 11       		.uleb128 0x11
 1019 0002 01       		.byte	0x1
 1020 0003 25       		.uleb128 0x25
 1021 0004 0E       		.uleb128 0xe
 1022 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 35


 1023 0006 0B       		.uleb128 0xb
 1024 0007 03       		.uleb128 0x3
 1025 0008 0E       		.uleb128 0xe
 1026 0009 1B       		.uleb128 0x1b
 1027 000a 0E       		.uleb128 0xe
 1028 000b 55       		.uleb128 0x55
 1029 000c 17       		.uleb128 0x17
 1030 000d 11       		.uleb128 0x11
 1031 000e 01       		.uleb128 0x1
 1032 000f 10       		.uleb128 0x10
 1033 0010 17       		.uleb128 0x17
 1034 0011 00       		.byte	0
 1035 0012 00       		.byte	0
 1036 0013 02       		.uleb128 0x2
 1037 0014 24       		.uleb128 0x24
 1038 0015 00       		.byte	0
 1039 0016 0B       		.uleb128 0xb
 1040 0017 0B       		.uleb128 0xb
 1041 0018 3E       		.uleb128 0x3e
 1042 0019 0B       		.uleb128 0xb
 1043 001a 03       		.uleb128 0x3
 1044 001b 0E       		.uleb128 0xe
 1045 001c 00       		.byte	0
 1046 001d 00       		.byte	0
 1047 001e 03       		.uleb128 0x3
 1048 001f 24       		.uleb128 0x24
 1049 0020 00       		.byte	0
 1050 0021 0B       		.uleb128 0xb
 1051 0022 0B       		.uleb128 0xb
 1052 0023 3E       		.uleb128 0x3e
 1053 0024 0B       		.uleb128 0xb
 1054 0025 03       		.uleb128 0x3
 1055 0026 08       		.uleb128 0x8
 1056 0027 00       		.byte	0
 1057 0028 00       		.byte	0
 1058 0029 04       		.uleb128 0x4
 1059 002a 16       		.uleb128 0x16
 1060 002b 00       		.byte	0
 1061 002c 03       		.uleb128 0x3
 1062 002d 0E       		.uleb128 0xe
 1063 002e 3A       		.uleb128 0x3a
 1064 002f 0B       		.uleb128 0xb
 1065 0030 3B       		.uleb128 0x3b
 1066 0031 05       		.uleb128 0x5
 1067 0032 49       		.uleb128 0x49
 1068 0033 13       		.uleb128 0x13
 1069 0034 00       		.byte	0
 1070 0035 00       		.byte	0
 1071 0036 05       		.uleb128 0x5
 1072 0037 35       		.uleb128 0x35
 1073 0038 00       		.byte	0
 1074 0039 49       		.uleb128 0x49
 1075 003a 13       		.uleb128 0x13
 1076 003b 00       		.byte	0
 1077 003c 00       		.byte	0
 1078 003d 06       		.uleb128 0x6
 1079 003e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 36


 1080 003f 00       		.byte	0
 1081 0040 3F       		.uleb128 0x3f
 1082 0041 19       		.uleb128 0x19
 1083 0042 03       		.uleb128 0x3
 1084 0043 0E       		.uleb128 0xe
 1085 0044 3A       		.uleb128 0x3a
 1086 0045 0B       		.uleb128 0xb
 1087 0046 3B       		.uleb128 0x3b
 1088 0047 0B       		.uleb128 0xb
 1089 0048 27       		.uleb128 0x27
 1090 0049 19       		.uleb128 0x19
 1091 004a 11       		.uleb128 0x11
 1092 004b 01       		.uleb128 0x1
 1093 004c 12       		.uleb128 0x12
 1094 004d 06       		.uleb128 0x6
 1095 004e 40       		.uleb128 0x40
 1096 004f 18       		.uleb128 0x18
 1097 0050 9742     		.uleb128 0x2117
 1098 0052 19       		.uleb128 0x19
 1099 0053 00       		.byte	0
 1100 0054 00       		.byte	0
 1101 0055 07       		.uleb128 0x7
 1102 0056 2E       		.uleb128 0x2e
 1103 0057 01       		.byte	0x1
 1104 0058 3F       		.uleb128 0x3f
 1105 0059 19       		.uleb128 0x19
 1106 005a 03       		.uleb128 0x3
 1107 005b 0E       		.uleb128 0xe
 1108 005c 3A       		.uleb128 0x3a
 1109 005d 0B       		.uleb128 0xb
 1110 005e 3B       		.uleb128 0x3b
 1111 005f 05       		.uleb128 0x5
 1112 0060 27       		.uleb128 0x27
 1113 0061 19       		.uleb128 0x19
 1114 0062 11       		.uleb128 0x11
 1115 0063 01       		.uleb128 0x1
 1116 0064 12       		.uleb128 0x12
 1117 0065 06       		.uleb128 0x6
 1118 0066 40       		.uleb128 0x40
 1119 0067 18       		.uleb128 0x18
 1120 0068 9742     		.uleb128 0x2117
 1121 006a 19       		.uleb128 0x19
 1122 006b 01       		.uleb128 0x1
 1123 006c 13       		.uleb128 0x13
 1124 006d 00       		.byte	0
 1125 006e 00       		.byte	0
 1126 006f 08       		.uleb128 0x8
 1127 0070 05       		.uleb128 0x5
 1128 0071 00       		.byte	0
 1129 0072 03       		.uleb128 0x3
 1130 0073 0E       		.uleb128 0xe
 1131 0074 3A       		.uleb128 0x3a
 1132 0075 0B       		.uleb128 0xb
 1133 0076 3B       		.uleb128 0x3b
 1134 0077 05       		.uleb128 0x5
 1135 0078 49       		.uleb128 0x49
 1136 0079 13       		.uleb128 0x13
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 37


 1137 007a 02       		.uleb128 0x2
 1138 007b 18       		.uleb128 0x18
 1139 007c 00       		.byte	0
 1140 007d 00       		.byte	0
 1141 007e 09       		.uleb128 0x9
 1142 007f 2E       		.uleb128 0x2e
 1143 0080 00       		.byte	0
 1144 0081 3F       		.uleb128 0x3f
 1145 0082 19       		.uleb128 0x19
 1146 0083 03       		.uleb128 0x3
 1147 0084 0E       		.uleb128 0xe
 1148 0085 3A       		.uleb128 0x3a
 1149 0086 0B       		.uleb128 0xb
 1150 0087 3B       		.uleb128 0x3b
 1151 0088 05       		.uleb128 0x5
 1152 0089 27       		.uleb128 0x27
 1153 008a 19       		.uleb128 0x19
 1154 008b 49       		.uleb128 0x49
 1155 008c 13       		.uleb128 0x13
 1156 008d 11       		.uleb128 0x11
 1157 008e 01       		.uleb128 0x1
 1158 008f 12       		.uleb128 0x12
 1159 0090 06       		.uleb128 0x6
 1160 0091 40       		.uleb128 0x40
 1161 0092 18       		.uleb128 0x18
 1162 0093 9742     		.uleb128 0x2117
 1163 0095 19       		.uleb128 0x19
 1164 0096 00       		.byte	0
 1165 0097 00       		.byte	0
 1166 0098 0A       		.uleb128 0xa
 1167 0099 2E       		.uleb128 0x2e
 1168 009a 01       		.byte	0x1
 1169 009b 3F       		.uleb128 0x3f
 1170 009c 19       		.uleb128 0x19
 1171 009d 03       		.uleb128 0x3
 1172 009e 0E       		.uleb128 0xe
 1173 009f 3A       		.uleb128 0x3a
 1174 00a0 0B       		.uleb128 0xb
 1175 00a1 3B       		.uleb128 0x3b
 1176 00a2 05       		.uleb128 0x5
 1177 00a3 27       		.uleb128 0x27
 1178 00a4 19       		.uleb128 0x19
 1179 00a5 49       		.uleb128 0x49
 1180 00a6 13       		.uleb128 0x13
 1181 00a7 11       		.uleb128 0x11
 1182 00a8 01       		.uleb128 0x1
 1183 00a9 12       		.uleb128 0x12
 1184 00aa 06       		.uleb128 0x6
 1185 00ab 40       		.uleb128 0x40
 1186 00ac 18       		.uleb128 0x18
 1187 00ad 9742     		.uleb128 0x2117
 1188 00af 19       		.uleb128 0x19
 1189 00b0 01       		.uleb128 0x1
 1190 00b1 13       		.uleb128 0x13
 1191 00b2 00       		.byte	0
 1192 00b3 00       		.byte	0
 1193 00b4 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 38


 1194 00b5 34       		.uleb128 0x34
 1195 00b6 00       		.byte	0
 1196 00b7 03       		.uleb128 0x3
 1197 00b8 0E       		.uleb128 0xe
 1198 00b9 3A       		.uleb128 0x3a
 1199 00ba 0B       		.uleb128 0xb
 1200 00bb 3B       		.uleb128 0x3b
 1201 00bc 05       		.uleb128 0x5
 1202 00bd 49       		.uleb128 0x49
 1203 00be 13       		.uleb128 0x13
 1204 00bf 02       		.uleb128 0x2
 1205 00c0 18       		.uleb128 0x18
 1206 00c1 00       		.byte	0
 1207 00c2 00       		.byte	0
 1208 00c3 0C       		.uleb128 0xc
 1209 00c4 898201   		.uleb128 0x4109
 1210 00c7 00       		.byte	0
 1211 00c8 11       		.uleb128 0x11
 1212 00c9 01       		.uleb128 0x1
 1213 00ca 31       		.uleb128 0x31
 1214 00cb 13       		.uleb128 0x13
 1215 00cc 00       		.byte	0
 1216 00cd 00       		.byte	0
 1217 00ce 0D       		.uleb128 0xd
 1218 00cf 2E       		.uleb128 0x2e
 1219 00d0 01       		.byte	0x1
 1220 00d1 3F       		.uleb128 0x3f
 1221 00d2 19       		.uleb128 0x19
 1222 00d3 03       		.uleb128 0x3
 1223 00d4 0E       		.uleb128 0xe
 1224 00d5 3A       		.uleb128 0x3a
 1225 00d6 0B       		.uleb128 0xb
 1226 00d7 3B       		.uleb128 0x3b
 1227 00d8 0B       		.uleb128 0xb
 1228 00d9 27       		.uleb128 0x27
 1229 00da 19       		.uleb128 0x19
 1230 00db 11       		.uleb128 0x11
 1231 00dc 01       		.uleb128 0x1
 1232 00dd 12       		.uleb128 0x12
 1233 00de 06       		.uleb128 0x6
 1234 00df 40       		.uleb128 0x40
 1235 00e0 18       		.uleb128 0x18
 1236 00e1 9742     		.uleb128 0x2117
 1237 00e3 19       		.uleb128 0x19
 1238 00e4 01       		.uleb128 0x1
 1239 00e5 13       		.uleb128 0x13
 1240 00e6 00       		.byte	0
 1241 00e7 00       		.byte	0
 1242 00e8 0E       		.uleb128 0xe
 1243 00e9 34       		.uleb128 0x34
 1244 00ea 00       		.byte	0
 1245 00eb 03       		.uleb128 0x3
 1246 00ec 0E       		.uleb128 0xe
 1247 00ed 3A       		.uleb128 0x3a
 1248 00ee 0B       		.uleb128 0xb
 1249 00ef 3B       		.uleb128 0x3b
 1250 00f0 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 39


 1251 00f1 49       		.uleb128 0x49
 1252 00f2 13       		.uleb128 0x13
 1253 00f3 02       		.uleb128 0x2
 1254 00f4 17       		.uleb128 0x17
 1255 00f5 00       		.byte	0
 1256 00f6 00       		.byte	0
 1257 00f7 0F       		.uleb128 0xf
 1258 00f8 898201   		.uleb128 0x4109
 1259 00fb 01       		.byte	0x1
 1260 00fc 11       		.uleb128 0x11
 1261 00fd 01       		.uleb128 0x1
 1262 00fe 31       		.uleb128 0x31
 1263 00ff 13       		.uleb128 0x13
 1264 0100 01       		.uleb128 0x1
 1265 0101 13       		.uleb128 0x13
 1266 0102 00       		.byte	0
 1267 0103 00       		.byte	0
 1268 0104 10       		.uleb128 0x10
 1269 0105 8A8201   		.uleb128 0x410a
 1270 0108 00       		.byte	0
 1271 0109 02       		.uleb128 0x2
 1272 010a 18       		.uleb128 0x18
 1273 010b 9142     		.uleb128 0x2111
 1274 010d 18       		.uleb128 0x18
 1275 010e 00       		.byte	0
 1276 010f 00       		.byte	0
 1277 0110 11       		.uleb128 0x11
 1278 0111 34       		.uleb128 0x34
 1279 0112 00       		.byte	0
 1280 0113 03       		.uleb128 0x3
 1281 0114 0E       		.uleb128 0xe
 1282 0115 3A       		.uleb128 0x3a
 1283 0116 0B       		.uleb128 0xb
 1284 0117 3B       		.uleb128 0x3b
 1285 0118 0B       		.uleb128 0xb
 1286 0119 49       		.uleb128 0x49
 1287 011a 13       		.uleb128 0x13
 1288 011b 3F       		.uleb128 0x3f
 1289 011c 19       		.uleb128 0x19
 1290 011d 02       		.uleb128 0x2
 1291 011e 18       		.uleb128 0x18
 1292 011f 00       		.byte	0
 1293 0120 00       		.byte	0
 1294 0121 12       		.uleb128 0x12
 1295 0122 2E       		.uleb128 0x2e
 1296 0123 00       		.byte	0
 1297 0124 3F       		.uleb128 0x3f
 1298 0125 19       		.uleb128 0x19
 1299 0126 3C       		.uleb128 0x3c
 1300 0127 19       		.uleb128 0x19
 1301 0128 6E       		.uleb128 0x6e
 1302 0129 0E       		.uleb128 0xe
 1303 012a 03       		.uleb128 0x3
 1304 012b 0E       		.uleb128 0xe
 1305 012c 3A       		.uleb128 0x3a
 1306 012d 0B       		.uleb128 0xb
 1307 012e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 40


 1308 012f 0B       		.uleb128 0xb
 1309 0130 00       		.byte	0
 1310 0131 00       		.byte	0
 1311 0132 00       		.byte	0
 1312              		.section	.debug_loc,"",%progbits
 1313              	.Ldebug_loc0:
 1314              	.LLST0:
 1315 0000 0A000000 		.4byte	.LVL9
 1316 0004 0E000000 		.4byte	.LVL10
 1317 0008 0100     		.2byte	0x1
 1318 000a 53       		.byte	0x53
 1319 000b 00000000 		.4byte	0
 1320 000f 00000000 		.4byte	0
 1321              	.LLST1:
 1322 0013 40000000 		.4byte	.LVL16
 1323 0017 4D000000 		.4byte	.LVL17-1
 1324 001b 0100     		.2byte	0x1
 1325 001d 50       		.byte	0x50
 1326 001e 00000000 		.4byte	0
 1327 0022 00000000 		.4byte	0
 1328              		.section	.debug_aranges,"",%progbits
 1329 0000 A4000000 		.4byte	0xa4
 1330 0004 0200     		.2byte	0x2
 1331 0006 00000000 		.4byte	.Ldebug_info0
 1332 000a 04       		.byte	0x4
 1333 000b 00       		.byte	0
 1334 000c 0000     		.2byte	0
 1335 000e 0000     		.2byte	0
 1336 0010 00000000 		.4byte	.LFB2
 1337 0014 14000000 		.4byte	.LFE2-.LFB2
 1338 0018 00000000 		.4byte	.LFB3
 1339 001c 10000000 		.4byte	.LFE3-.LFB3
 1340 0020 00000000 		.4byte	.LFB4
 1341 0024 0C000000 		.4byte	.LFE4-.LFB4
 1342 0028 00000000 		.4byte	.LFB5
 1343 002c 14000000 		.4byte	.LFE5-.LFB5
 1344 0030 00000000 		.4byte	.LFB7
 1345 0034 0C000000 		.4byte	.LFE7-.LFB7
 1346 0038 00000000 		.4byte	.LFB8
 1347 003c 0C000000 		.4byte	.LFE8-.LFB8
 1348 0040 00000000 		.4byte	.LFB9
 1349 0044 0C000000 		.4byte	.LFE9-.LFB9
 1350 0048 00000000 		.4byte	.LFB10
 1351 004c 0C000000 		.4byte	.LFE10-.LFB10
 1352 0050 00000000 		.4byte	.LFB11
 1353 0054 0C000000 		.4byte	.LFE11-.LFB11
 1354 0058 00000000 		.4byte	.LFB12
 1355 005c 0C000000 		.4byte	.LFE12-.LFB12
 1356 0060 00000000 		.4byte	.LFB13
 1357 0064 0C000000 		.4byte	.LFE13-.LFB13
 1358 0068 00000000 		.4byte	.LFB14
 1359 006c 0C000000 		.4byte	.LFE14-.LFB14
 1360 0070 00000000 		.4byte	.LFB6
 1361 0074 12000000 		.4byte	.LFE6-.LFB6
 1362 0078 00000000 		.4byte	.LFB1
 1363 007c 5C000000 		.4byte	.LFE1-.LFB1
 1364 0080 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 41


 1365 0084 20000000 		.4byte	.LFE0-.LFB0
 1366 0088 00000000 		.4byte	.LFB15
 1367 008c 0C000000 		.4byte	.LFE15-.LFB15
 1368 0090 00000000 		.4byte	.LFB16
 1369 0094 0C000000 		.4byte	.LFE16-.LFB16
 1370 0098 00000000 		.4byte	.LFB17
 1371 009c 0C000000 		.4byte	.LFE17-.LFB17
 1372 00a0 00000000 		.4byte	0
 1373 00a4 00000000 		.4byte	0
 1374              		.section	.debug_ranges,"",%progbits
 1375              	.Ldebug_ranges0:
 1376 0000 00000000 		.4byte	.LFB2
 1377 0004 14000000 		.4byte	.LFE2
 1378 0008 00000000 		.4byte	.LFB3
 1379 000c 10000000 		.4byte	.LFE3
 1380 0010 00000000 		.4byte	.LFB4
 1381 0014 0C000000 		.4byte	.LFE4
 1382 0018 00000000 		.4byte	.LFB5
 1383 001c 14000000 		.4byte	.LFE5
 1384 0020 00000000 		.4byte	.LFB7
 1385 0024 0C000000 		.4byte	.LFE7
 1386 0028 00000000 		.4byte	.LFB8
 1387 002c 0C000000 		.4byte	.LFE8
 1388 0030 00000000 		.4byte	.LFB9
 1389 0034 0C000000 		.4byte	.LFE9
 1390 0038 00000000 		.4byte	.LFB10
 1391 003c 0C000000 		.4byte	.LFE10
 1392 0040 00000000 		.4byte	.LFB11
 1393 0044 0C000000 		.4byte	.LFE11
 1394 0048 00000000 		.4byte	.LFB12
 1395 004c 0C000000 		.4byte	.LFE12
 1396 0050 00000000 		.4byte	.LFB13
 1397 0054 0C000000 		.4byte	.LFE13
 1398 0058 00000000 		.4byte	.LFB14
 1399 005c 0C000000 		.4byte	.LFE14
 1400 0060 00000000 		.4byte	.LFB6
 1401 0064 12000000 		.4byte	.LFE6
 1402 0068 00000000 		.4byte	.LFB1
 1403 006c 5C000000 		.4byte	.LFE1
 1404 0070 00000000 		.4byte	.LFB0
 1405 0074 20000000 		.4byte	.LFE0
 1406 0078 00000000 		.4byte	.LFB15
 1407 007c 0C000000 		.4byte	.LFE15
 1408 0080 00000000 		.4byte	.LFB16
 1409 0084 0C000000 		.4byte	.LFE16
 1410 0088 00000000 		.4byte	.LFB17
 1411 008c 0C000000 		.4byte	.LFE17
 1412 0090 00000000 		.4byte	0
 1413 0094 00000000 		.4byte	0
 1414              		.section	.debug_line,"",%progbits
 1415              	.Ldebug_line0:
 1416 0000 AF010000 		.section	.debug_str,"MS",%progbits,1
 1416      02004D00 
 1416      00000201 
 1416      FB0E0D00 
 1416      01010101 
 1417              	.LASF40:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 42


 1418 0000 50574D5F 		.ascii	"PWM_M_ReadPeriod\000"
 1418      4D5F5265 
 1418      61645065 
 1418      72696F64 
 1418      00
 1419              	.LASF19:
 1420 0011 50574D5F 		.ascii	"PWM_M_WritePeriod\000"
 1420      4D5F5772 
 1420      69746550 
 1420      6572696F 
 1420      6400
 1421              	.LASF45:
 1422 0023 443A5C65 		.ascii	"D:\\ext\\EXTPSOC\\fixed\\Fixed\\fixed.cydsn\000"
 1422      78745C45 
 1422      58545053 
 1422      4F435C66 
 1422      69786564 
 1423              	.LASF21:
 1424 004a 70657269 		.ascii	"period\000"
 1424      6F6400
 1425              	.LASF3:
 1426 0051 73686F72 		.ascii	"short unsigned int\000"
 1426      7420756E 
 1426      7369676E 
 1426      65642069 
 1426      6E7400
 1427              	.LASF22:
 1428 0064 50574D5F 		.ascii	"PWM_M_WriteCompare1\000"
 1428      4D5F5772 
 1428      69746543 
 1428      6F6D7061 
 1428      72653100 
 1429              	.LASF24:
 1430 0078 50574D5F 		.ascii	"PWM_M_WriteCompare2\000"
 1430      4D5F5772 
 1430      69746543 
 1430      6F6D7061 
 1430      72653200 
 1431              	.LASF38:
 1432 008c 50574D5F 		.ascii	"PWM_M_ReadCompare1\000"
 1432      4D5F5265 
 1432      6164436F 
 1432      6D706172 
 1432      653100
 1433              	.LASF39:
 1434 009f 50574D5F 		.ascii	"PWM_M_ReadCompare2\000"
 1434      4D5F5265 
 1434      6164436F 
 1434      6D706172 
 1434      653200
 1435              	.LASF25:
 1436 00b2 50574D5F 		.ascii	"PWM_M_SetInterruptMode\000"
 1436      4D5F5365 
 1436      74496E74 
 1436      65727275 
 1436      70744D6F 
 1437              	.LASF46:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 43


 1438 00c9 50574D5F 		.ascii	"PWM_M_ReadControlRegister\000"
 1438      4D5F5265 
 1438      6164436F 
 1438      6E74726F 
 1438      6C526567 
 1439              	.LASF9:
 1440 00e3 666C6F61 		.ascii	"float\000"
 1440      7400
 1441              	.LASF20:
 1442 00e9 636F756E 		.ascii	"counter\000"
 1442      74657200 
 1443              	.LASF0:
 1444 00f1 7369676E 		.ascii	"signed char\000"
 1444      65642063 
 1444      68617200 
 1445              	.LASF1:
 1446 00fd 756E7369 		.ascii	"unsigned char\000"
 1446      676E6564 
 1446      20636861 
 1446      7200
 1447              	.LASF33:
 1448 010b 50574D5F 		.ascii	"PWM_M_Init\000"
 1448      4D5F496E 
 1448      697400
 1449              	.LASF13:
 1450 0116 72656738 		.ascii	"reg8\000"
 1450      00
 1451              	.LASF5:
 1452 011b 6C6F6E67 		.ascii	"long unsigned int\000"
 1452      20756E73 
 1452      69676E65 
 1452      6420696E 
 1452      7400
 1453              	.LASF12:
 1454 012d 75696E74 		.ascii	"uint8\000"
 1454      3800
 1455              	.LASF30:
 1456 0133 636F6E74 		.ascii	"control\000"
 1456      726F6C00 
 1457              	.LASF47:
 1458 013b 50574D5F 		.ascii	"PWM_M_initVar\000"
 1458      4D5F696E 
 1458      69745661 
 1458      7200
 1459              	.LASF10:
 1460 0149 646F7562 		.ascii	"double\000"
 1460      6C6500
 1461              	.LASF32:
 1462 0150 50574D5F 		.ascii	"PWM_M_ClearFIFO\000"
 1462      4D5F436C 
 1462      65617246 
 1462      49464F00 
 1463              	.LASF31:
 1464 0160 50574D5F 		.ascii	"PWM_M_ReadCapture\000"
 1464      4D5F5265 
 1464      61644361 
 1464      70747572 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 44


 1464      6500
 1465              	.LASF29:
 1466 0172 50574D5F 		.ascii	"PWM_M_WriteControlRegister\000"
 1466      4D5F5772 
 1466      69746543 
 1466      6F6E7472 
 1466      6F6C5265 
 1467              	.LASF41:
 1468 018d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1468      74657243 
 1468      72697469 
 1468      63616C53 
 1468      65637469 
 1469              	.LASF8:
 1470 01a4 756E7369 		.ascii	"unsigned int\000"
 1470      676E6564 
 1470      20696E74 
 1470      00
 1471              	.LASF42:
 1472 01b1 43794578 		.ascii	"CyExitCriticalSection\000"
 1472      69744372 
 1472      69746963 
 1472      616C5365 
 1472      6374696F 
 1473              	.LASF34:
 1474 01c7 72657375 		.ascii	"result\000"
 1474      6C7400
 1475              	.LASF17:
 1476 01ce 50574D5F 		.ascii	"PWM_M_Stop\000"
 1476      4D5F5374 
 1476      6F7000
 1477              	.LASF43:
 1478 01d9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1478      43313120 
 1478      352E342E 
 1478      31203230 
 1478      31363036 
 1479 020c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1479      20726576 
 1479      6973696F 
 1479      6E203233 
 1479      37373135 
 1480 023f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1480      66756E63 
 1480      74696F6E 
 1480      2D736563 
 1480      74696F6E 
 1481              	.LASF35:
 1482 0267 6374726C 		.ascii	"ctrl\000"
 1482      00
 1483              	.LASF15:
 1484 026c 73697A65 		.ascii	"sizetype\000"
 1484      74797065 
 1484      00
 1485              	.LASF6:
 1486 0275 6C6F6E67 		.ascii	"long long int\000"
 1486      206C6F6E 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 45


 1486      6720696E 
 1486      7400
 1487              	.LASF26:
 1488 0283 696E7465 		.ascii	"interruptMode\000"
 1488      72727570 
 1488      744D6F64 
 1488      6500
 1489              	.LASF16:
 1490 0291 50574D5F 		.ascii	"PWM_M_Enable\000"
 1490      4D5F456E 
 1490      61626C65 
 1490      00
 1491              	.LASF2:
 1492 029e 73686F72 		.ascii	"short int\000"
 1492      7420696E 
 1492      7400
 1493              	.LASF27:
 1494 02a8 50574D5F 		.ascii	"PWM_M_ReadCounter\000"
 1494      4D5F5265 
 1494      6164436F 
 1494      756E7465 
 1494      7200
 1495              	.LASF18:
 1496 02ba 50574D5F 		.ascii	"PWM_M_WriteCounter\000"
 1496      4D5F5772 
 1496      69746543 
 1496      6F756E74 
 1496      657200
 1497              	.LASF4:
 1498 02cd 6C6F6E67 		.ascii	"long int\000"
 1498      20696E74 
 1498      00
 1499              	.LASF11:
 1500 02d6 63686172 		.ascii	"char\000"
 1500      00
 1501              	.LASF37:
 1502 02db 50574D5F 		.ascii	"PWM_M_Start\000"
 1502      4D5F5374 
 1502      61727400 
 1503              	.LASF14:
 1504 02e7 6C6F6E67 		.ascii	"long double\000"
 1504      20646F75 
 1504      626C6500 
 1505              	.LASF44:
 1506 02f3 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_M.c\000"
 1506      72617465 
 1506      645F536F 
 1506      75726365 
 1506      5C50536F 
 1507              	.LASF23:
 1508 0312 636F6D70 		.ascii	"compare\000"
 1508      61726500 
 1509              	.LASF28:
 1510 031a 50574D5F 		.ascii	"PWM_M_ReadStatusRegister\000"
 1510      4D5F5265 
 1510      61645374 
 1510      61747573 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccdnOIIy.s 			page 46


 1510      52656769 
 1511              	.LASF7:
 1512 0333 6C6F6E67 		.ascii	"long long unsigned int\000"
 1512      206C6F6E 
 1512      6720756E 
 1512      7369676E 
 1512      65642069 
 1513              	.LASF36:
 1514 034a 50574D5F 		.ascii	"PWM_M_interruptState\000"
 1514      4D5F696E 
 1514      74657272 
 1514      75707453 
 1514      74617465 
 1515              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
