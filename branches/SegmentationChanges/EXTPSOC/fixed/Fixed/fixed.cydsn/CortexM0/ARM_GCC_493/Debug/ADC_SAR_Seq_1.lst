ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_SAR_Seq_1_initVar
  18              		.bss
  19              		.type	ADC_SAR_Seq_1_initVar, %object
  20              		.size	ADC_SAR_Seq_1_initVar, 1
  21              	ADC_SAR_Seq_1_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_SAR_Seq_1_offset,2,4
  24              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_SAR_Seq_1_channelsConfig, %object
  28              		.size	ADC_SAR_Seq_1_channelsConfig, 4
  29              	ADC_SAR_Seq_1_channelsConfig:
  30 0000 00000000 		.space	4
  31              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_SAR_Seq_1_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_SAR_Seq_1_Start, %function
  37              	ADC_SAR_Seq_1_Start:
  38              	.LFB0:
  39              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 2


  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  48              		.loc 1 66 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 3


  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_SAR_Seq_1_initVar
  70              		.cfi_endproc
  71              	.LFE0:
  72              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
  73              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  74              		.align	2
  75              		.global	ADC_SAR_Seq_1_Init
  76              		.code	16
  77              		.thumb_func
  78              		.type	ADC_SAR_Seq_1_Init, %function
  79              	ADC_SAR_Seq_1_Init:
  80              	.LFB1:
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 4


  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  81              		.loc 1 95 0
  82              		.cfi_startproc
  83 0000 80B5     		push	{r7, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 84B0     		sub	sp, sp, #16
  88              		.cfi_def_cfa_offset 24
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 5


 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  91              		.loc 1 172 0
  92 0006 0E20     		mov	r0, #14
  93 0008 0321     		mov	r1, #3
  94 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  95              		.loc 1 173 0
  96 000e 534B     		ldr	r3, .L17
  97 0010 0E20     		mov	r0, #14
  98 0012 191C     		mov	r1, r3
  99 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
 100              		.loc 1 177 0
 101 0018 514B     		ldr	r3, .L17+4
 102 001a 0122     		mov	r2, #1
 103 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
 104              		.loc 1 180 0
 105 001e 514B     		ldr	r3, .L17+8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 6


 106 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 107              		.loc 1 178 0
 108 0022 002B     		cmp	r3, #0
 109 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 110              		.loc 1 178 0 is_stmt 0 discriminator 1
 111 0026 5049     		ldr	r1, .L17+12
 112 0028 00E0     		b	.L7
 113              	.L6:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 114              		.loc 1 178 0 discriminator 2
 115 002a 5049     		ldr	r1, .L17+16
 116              	.L7:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 178 0 discriminator 4
 118 002c 504B     		ldr	r3, .L17+20
 119 002e 504A     		ldr	r2, .L17+20
 120 0030 1268     		ldr	r2, [r2]
 121 0032 0A43     		orr	r2, r1
 122 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
 123              		.loc 1 182 0 is_stmt 1 discriminator 4
 124 0036 4F4B     		ldr	r3, .L17+24
 125 0038 4F4A     		ldr	r2, .L17+28
 126 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 127              		.loc 1 183 0 discriminator 4
 128 003c 4F4B     		ldr	r3, .L17+32
 129 003e 504A     		ldr	r2, .L17+36
 130 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
 131              		.loc 1 184 0 discriminator 4
 132 0042 504B     		ldr	r3, .L17+40
 133 0044 0022     		mov	r2, #0
 134 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 135              		.loc 1 185 0 discriminator 4
 136 0048 4F4B     		ldr	r3, .L17+44
 137 004a 504A     		ldr	r2, .L17+48
 138 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 139              		.loc 1 186 0 discriminator 4
 140 004e 504B     		ldr	r3, .L17+52
 141 0050 4E4A     		ldr	r2, .L17+48
 142 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 143              		.loc 1 190 0 discriminator 4
 144 0054 4F4B     		ldr	r3, .L17+56
 145 0056 4F4A     		ldr	r2, .L17+56
 146 0058 1268     		ldr	r2, [r2]
 147 005a 8021     		mov	r1, #128
 148 005c 4902     		lsl	r1, r1, #9
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 7


 149 005e 0A43     		orr	r2, r1
 150 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 151              		.loc 1 197 0 discriminator 4
 152 0062 4D4B     		ldr	r3, .L17+60
 153 0064 0022     		mov	r2, #0
 154 0066 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 155              		.loc 1 198 0 discriminator 4
 156 0068 4C4B     		ldr	r3, .L17+64
 157 006a 0022     		mov	r2, #0
 158 006c 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 159              		.loc 1 199 0 discriminator 4
 160 006e 4C4B     		ldr	r3, .L17+68
 161 0070 0122     		mov	r2, #1
 162 0072 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 163              		.loc 1 202 0 discriminator 4
 164 0074 4B4B     		ldr	r3, .L17+72
 165 0076 0222     		mov	r2, #2
 166 0078 1A60     		str	r2, [r3]
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 167              		.loc 1 206 0 discriminator 4
 168 007a 4B4B     		ldr	r3, .L17+76
 169 007c 1B68     		ldr	r3, [r3]
 170 007e 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 171              		.loc 1 207 0 discriminator 4
 172 0080 7B68     		ldr	r3, [r7, #4]
 173 0082 4A4A     		ldr	r2, .L17+80
 174 0084 1340     		and	r3, r2
 175 0086 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 176              		.loc 1 213 0 discriminator 4
 177 0088 7B68     		ldr	r3, [r7, #4]
 178 008a 0122     		mov	r2, #1
 179 008c 1343     		orr	r3, r2
 180 008e 7B60     		str	r3, [r7, #4]
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 8


 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 181              		.loc 1 226 0 discriminator 4
 182 0090 454B     		ldr	r3, .L17+76
 183 0092 7A68     		ldr	r2, [r7, #4]
 184 0094 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 185              		.loc 1 232 0 discriminator 4
 186 0096 0023     		mov	r3, #0
 187 0098 FB60     		str	r3, [r7, #12]
 188 009a 59E0     		b	.L8
 189              	.L16:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 190              		.loc 1 234 0
 191 009c 0022     		mov	r2, #0
 192 009e DC23     		mov	r3, #220
 193 00a0 9B01     		lsl	r3, r3, #6
 194 00a2 1340     		and	r3, r2
 195 00a4 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 196              		.loc 1 253 0
 197 00a6 FB68     		ldr	r3, [r7, #12]
 198 00a8 9B00     		lsl	r3, r3, #2
 199 00aa 414A     		ldr	r2, .L17+84
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 9


 200 00ac 9446     		mov	ip, r2
 201 00ae 6344     		add	r3, r3, ip
 202 00b0 7A68     		ldr	r2, [r7, #4]
 203 00b2 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 204              		.loc 1 255 0
 205 00b4 0022     		mov	r2, #0
 206 00b6 0123     		mov	r3, #1
 207 00b8 1340     		and	r3, r2
 208 00ba 09D0     		beq	.L9
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 209              		.loc 1 257 0
 210 00bc 364B     		ldr	r3, .L17+60
 211 00be 364A     		ldr	r2, .L17+60
 212 00c0 1268     		ldr	r2, [r2]
 213 00c2 F968     		ldr	r1, [r7, #12]
 214 00c4 0120     		mov	r0, #1
 215 00c6 8840     		lsl	r0, r0, r1
 216 00c8 011C     		mov	r1, r0
 217 00ca 89B2     		uxth	r1, r1
 218 00cc 0A43     		orr	r2, r1
 219 00ce 1A60     		str	r2, [r3]
 220              	.L9:
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 221              		.loc 1 260 0
 222 00d0 0022     		mov	r2, #0
 223 00d2 0223     		mov	r3, #2
 224 00d4 1340     		and	r3, r2
 225 00d6 09D0     		beq	.L10
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 226              		.loc 1 262 0
 227 00d8 304B     		ldr	r3, .L17+64
 228 00da 304A     		ldr	r2, .L17+64
 229 00dc 1268     		ldr	r2, [r2]
 230 00de F968     		ldr	r1, [r7, #12]
 231 00e0 0120     		mov	r0, #1
 232 00e2 8840     		lsl	r0, r0, r1
 233 00e4 011C     		mov	r1, r0
 234 00e6 89B2     		uxth	r1, r1
 235 00e8 0A43     		orr	r2, r1
 236 00ea 1A60     		str	r2, [r3]
 237              	.L10:
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 10


 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 238              		.loc 1 282 0
 239 00ec 0022     		mov	r2, #0
 240 00ee 8023     		mov	r3, #128
 241 00f0 9B00     		lsl	r3, r3, #2
 242 00f2 1340     		and	r3, r2
 243 00f4 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 244              		.loc 1 284 0
 245 00f6 8023     		mov	r3, #128
 246 00f8 5B00     		lsl	r3, r3, #1
 247 00fa BB60     		str	r3, [r7, #8]
 248 00fc 02E0     		b	.L12
 249              	.L11:
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 250              		.loc 1 288 0
 251 00fe 8023     		mov	r3, #128
 252 0100 5B01     		lsl	r3, r3, #5
 253 0102 BB60     		str	r3, [r7, #8]
 254              	.L12:
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 255              		.loc 1 291 0
 256 0104 0022     		mov	r2, #0
 257 0106 8023     		mov	r3, #128
 258 0108 5B00     		lsl	r3, r3, #1
 259 010a 1340     		and	r3, r2
 260 010c 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 261              		.loc 1 298 0
 262 010e 294B     		ldr	r3, .L17+88
 263 0110 FA68     		ldr	r2, [r7, #12]
 264 0112 5200     		lsl	r2, r2, #1
 265 0114 0021     		mov	r1, #0
 266 0116 D152     		strh	r1, [r2, r3]
 267 0118 04E0     		b	.L14
 268              	.L13:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 11


 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 269              		.loc 1 307 0
 270 011a 264B     		ldr	r3, .L17+88
 271 011c FA68     		ldr	r2, [r7, #12]
 272 011e 5200     		lsl	r2, r2, #1
 273 0120 0021     		mov	r1, #0
 274 0122 D152     		strh	r1, [r2, r3]
 275              	.L14:
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 276              		.loc 1 311 0 discriminator 2
 277 0124 BB68     		ldr	r3, [r7, #8]
 278 0126 244A     		ldr	r2, .L17+92
 279 0128 5343     		mul	r3, r2
 280 012a 8022     		mov	r2, #128
 281 012c D200     		lsl	r2, r2, #3
 282 012e 9446     		mov	ip, r2
 283 0130 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 284              		.loc 1 312 0 discriminator 2
 285 0132 002B     		cmp	r3, #0
 286 0134 02DA     		bge	.L15
 287 0136 214A     		ldr	r2, .L17+96
 288 0138 9446     		mov	ip, r2
 289 013a 6344     		add	r3, r3, ip
 290              	.L15:
 291 013c DB12     		asr	r3, r3, #11
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 292              		.loc 1 311 0 discriminator 2
 293 013e 9BB2     		uxth	r3, r3
 294 0140 19B2     		sxth	r1, r3
 295 0142 1F4B     		ldr	r3, .L17+100
 296 0144 FA68     		ldr	r2, [r7, #12]
 297 0146 9200     		lsl	r2, r2, #2
 298 0148 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 299              		.loc 1 232 0 discriminator 2
 300 014a FB68     		ldr	r3, [r7, #12]
 301 014c 0133     		add	r3, r3, #1
 302 014e FB60     		str	r3, [r7, #12]
 303              	.L8:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 304              		.loc 1 232 0 is_stmt 0 discriminator 1
 305 0150 FB68     		ldr	r3, [r7, #12]
 306 0152 002B     		cmp	r3, #0
 307 0154 A2D0     		beq	.L16
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 12


 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 308              		.loc 1 314 0 is_stmt 1
 309 0156 BD46     		mov	sp, r7
 310 0158 04B0     		add	sp, sp, #16
 311              		@ sp needed
 312 015a 80BD     		pop	{r7, pc}
 313              	.L18:
 314              		.align	2
 315              	.L17:
 316 015c 00000000 		.word	ADC_SAR_Seq_1_ISR
 317 0160 20001A40 		.word	1075445792
 318 0164 80031A40 		.word	1075446656
 319 0168 40021053 		.word	1393558080
 320 016c 40020053 		.word	1392509504
 321 0170 00001A40 		.word	1075445760
 322 0174 04001A40 		.word	1075445764
 323 0178 8C000080 		.word	-2147483508
 324 017c 18001A40 		.word	1075445784
 325 0180 0000FF07 		.word	134152192
 326 0184 1C001A40 		.word	1075445788
 327 0188 10001A40 		.word	1075445776
 328 018c 02000200 		.word	131074
 329 0190 14001A40 		.word	1075445780
 330 0194 00031A40 		.word	1075446528
 331 0198 28021A40 		.word	1075446312
 332 019c 38021A40 		.word	1075446328
 333 01a0 18021A40 		.word	1075446296
 334 01a4 000F1A40 		.word	1075449600
 335 01a8 30001A40 		.word	1075445808
 336 01ac FFFFFFDF 		.word	-536870913
 337 01b0 80001A40 		.word	1075445888
 338 01b4 00000000 		.word	ADC_SAR_Seq_1_offset
 339 01b8 10270000 		.word	10000
 340 01bc FF070000 		.word	2047
 341 01c0 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 342              		.cfi_endproc
 343              	.LFE1:
 344              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 345              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 346              		.align	2
 347              		.global	ADC_SAR_Seq_1_Enable
 348              		.code	16
 349              		.thumb_func
 350              		.type	ADC_SAR_Seq_1_Enable, %function
 351              	ADC_SAR_Seq_1_Enable:
 352              	.LFB2:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 13


 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 353              		.loc 1 331 0
 354              		.cfi_startproc
 355 0000 80B5     		push	{r7, lr}
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 14, -4
 359 0002 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 361              		.loc 1 332 0
 362 0004 074B     		ldr	r3, .L21
 363 0006 1B68     		ldr	r3, [r3]
 364 0008 002B     		cmp	r3, #0
 365 000a 09DB     		blt	.L19
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 366              		.loc 1 342 0
 367 000c 054B     		ldr	r3, .L21
 368 000e 054A     		ldr	r2, .L21
 369 0010 1268     		ldr	r2, [r2]
 370 0012 8021     		mov	r1, #128
 371 0014 0906     		lsl	r1, r1, #24
 372 0016 0A43     		orr	r2, r1
 373 0018 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 374              		.loc 1 345 0
 375 001a 0A20     		mov	r0, #10
 376 001c FFF7FEFF 		bl	CyDelayUs
 377              	.L19:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 378              		.loc 1 347 0
 379 0020 BD46     		mov	sp, r7
 380              		@ sp needed
 381 0022 80BD     		pop	{r7, pc}
 382              	.L22:
 383              		.align	2
 384              	.L21:
 385 0024 00001A40 		.word	1075445760
 386              		.cfi_endproc
 387              	.LFE2:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 14


 388              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 389              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 390              		.align	2
 391              		.global	ADC_SAR_Seq_1_Stop
 392              		.code	16
 393              		.thumb_func
 394              		.type	ADC_SAR_Seq_1_Stop, %function
 395              	ADC_SAR_Seq_1_Stop:
 396              	.LFB3:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 397              		.loc 1 366 0
 398              		.cfi_startproc
 399 0000 80B5     		push	{r7, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 405              		.loc 1 367 0
 406 0004 034B     		ldr	r3, .L24
 407 0006 034A     		ldr	r2, .L24
 408 0008 1268     		ldr	r2, [r2]
 409 000a 5200     		lsl	r2, r2, #1
 410 000c 5208     		lsr	r2, r2, #1
 411 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 412              		.loc 1 368 0
 413 0010 BD46     		mov	sp, r7
 414              		@ sp needed
 415 0012 80BD     		pop	{r7, pc}
 416              	.L25:
 417              		.align	2
 418              	.L24:
 419 0014 00001A40 		.word	1075445760
 420              		.cfi_endproc
 421              	.LFE3:
 422              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 423              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 15


 424              		.align	2
 425              		.global	ADC_SAR_Seq_1_StartConvert
 426              		.code	16
 427              		.thumb_func
 428              		.type	ADC_SAR_Seq_1_StartConvert, %function
 429              	ADC_SAR_Seq_1_StartConvert:
 430              	.LFB4:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 431              		.loc 1 392 0
 432              		.cfi_startproc
 433 0000 80B5     		push	{r7, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 439              		.loc 1 394 0
 440 0004 044B     		ldr	r3, .L27
 441 0006 044A     		ldr	r2, .L27
 442 0008 1268     		ldr	r2, [r2]
 443 000a 8021     		mov	r1, #128
 444 000c 4902     		lsl	r1, r1, #9
 445 000e 0A43     		orr	r2, r1
 446 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 447              		.loc 1 399 0
 448 0012 BD46     		mov	sp, r7
 449              		@ sp needed
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 16


 450 0014 80BD     		pop	{r7, pc}
 451              	.L28:
 452 0016 C046     		.align	2
 453              	.L27:
 454 0018 04001A40 		.word	1075445764
 455              		.cfi_endproc
 456              	.LFE4:
 457              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 458              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_SAR_Seq_1_StopConvert
 461              		.code	16
 462              		.thumb_func
 463              		.type	ADC_SAR_Seq_1_StopConvert, %function
 464              	ADC_SAR_Seq_1_StopConvert:
 465              	.LFB5:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 466              		.loc 1 417 0
 467              		.cfi_startproc
 468 0000 80B5     		push	{r7, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 7, -8
 471              		.cfi_offset 14, -4
 472 0002 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 474              		.loc 1 419 0
 475 0004 034B     		ldr	r3, .L30
 476 0006 034A     		ldr	r2, .L30
 477 0008 1268     		ldr	r2, [r2]
 478 000a 0349     		ldr	r1, .L30+4
 479 000c 0A40     		and	r2, r1
 480 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 481              		.loc 1 421 0
 482 0010 BD46     		mov	sp, r7
 483              		@ sp needed
 484 0012 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 17


 485              	.L31:
 486              		.align	2
 487              	.L30:
 488 0014 04001A40 		.word	1075445764
 489 0018 FFFFFEFF 		.word	-65537
 490              		.cfi_endproc
 491              	.LFE5:
 492              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 493              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 494              		.align	2
 495              		.global	ADC_SAR_Seq_1_IsEndConversion
 496              		.code	16
 497              		.thumb_func
 498              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 499              	ADC_SAR_Seq_1_IsEndConversion:
 500              	.LFB6:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 501              		.loc 1 451 0
 502              		.cfi_startproc
 503 0000 80B5     		push	{r7, lr}
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 84B0     		sub	sp, sp, #16
 508              		.cfi_def_cfa_offset 24
 509 0004 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 511 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 18


 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 512              		.loc 1 452 0
 513 0008 0023     		mov	r3, #0
 514 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 515              		.loc 1 454 0
 516 000c 7B68     		ldr	r3, [r7, #4]
 517 000e 0322     		mov	r2, #3
 518 0010 1340     		and	r3, r2
 519 0012 11D0     		beq	.L33
 520              	.L35:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 521              		.loc 1 458 0 discriminator 2
 522 0014 0B4B     		ldr	r3, .L37
 523 0016 1B68     		ldr	r3, [r3]
 524 0018 0122     		mov	r2, #1
 525 001a 1340     		and	r3, r2
 526 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 527              		.loc 1 459 0 discriminator 2
 528 001e FB68     		ldr	r3, [r7, #12]
 529 0020 002B     		cmp	r3, #0
 530 0022 03D1     		bne	.L34
 531              		.loc 1 459 0 is_stmt 0 discriminator 1
 532 0024 7B68     		ldr	r3, [r7, #4]
 533 0026 0222     		mov	r2, #2
 534 0028 1340     		and	r3, r2
 535 002a F3D1     		bne	.L35
 536              	.L34:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 537              		.loc 1 461 0 is_stmt 1
 538 002c FB68     		ldr	r3, [r7, #12]
 539 002e 002B     		cmp	r3, #0
 540 0030 02D0     		beq	.L33
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 541              		.loc 1 464 0
 542 0032 044B     		ldr	r3, .L37
 543 0034 0122     		mov	r2, #1
 544 0036 1A60     		str	r2, [r3]
 545              	.L33:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 19


 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 546              		.loc 1 485 0
 547 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 548              		.loc 1 486 0
 549 003a 181C     		mov	r0, r3
 550 003c BD46     		mov	sp, r7
 551 003e 04B0     		add	sp, sp, #16
 552              		@ sp needed
 553 0040 80BD     		pop	{r7, pc}
 554              	.L38:
 555 0042 C046     		.align	2
 556              	.L37:
 557 0044 10021A40 		.word	1075446288
 558              		.cfi_endproc
 559              	.LFE6:
 560              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 561              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 562              		.align	2
 563              		.global	ADC_SAR_Seq_1_GetResult16
 564              		.code	16
 565              		.thumb_func
 566              		.type	ADC_SAR_Seq_1_GetResult16, %function
 567              	ADC_SAR_Seq_1_GetResult16:
 568              	.LFB7:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 569              		.loc 1 505 0
 570              		.cfi_startproc
 571 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 20


 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 84B0     		sub	sp, sp, #16
 576              		.cfi_def_cfa_offset 24
 577 0004 00AF     		add	r7, sp, #0
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 580              		.loc 1 509 0
 581 0008 7B68     		ldr	r3, [r7, #4]
 582 000a 002B     		cmp	r3, #0
 583 000c 02D0     		beq	.L40
 584              		.loc 1 509 0 is_stmt 0 discriminator 1
 585 000e 0020     		mov	r0, #0
 586 0010 FFF7FEFF 		bl	CyHalt
 587              	.L40:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 588              		.loc 1 511 0 is_stmt 1
 589 0014 7B68     		ldr	r3, [r7, #4]
 590 0016 002B     		cmp	r3, #0
 591 0018 09D1     		bne	.L41
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 592              		.loc 1 513 0
 593 001a 7B68     		ldr	r3, [r7, #4]
 594 001c 9B00     		lsl	r3, r3, #2
 595 001e 084A     		ldr	r2, .L44
 596 0020 9446     		mov	ip, r2
 597 0022 6344     		add	r3, r3, ip
 598 0024 1B68     		ldr	r3, [r3]
 599 0026 1B04     		lsl	r3, r3, #16
 600 0028 1B0C     		lsr	r3, r3, #16
 601 002a FB60     		str	r3, [r7, #12]
 602 002c 01E0     		b	.L42
 603              	.L41:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 604              		.loc 1 521 0
 605 002e 0023     		mov	r3, #0
 606 0030 FB60     		str	r3, [r7, #12]
 607              	.L42:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 608              		.loc 1 525 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 21


 609 0032 FB68     		ldr	r3, [r7, #12]
 610 0034 9BB2     		uxth	r3, r3
 611 0036 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 612              		.loc 1 526 0
 613 0038 181C     		mov	r0, r3
 614 003a BD46     		mov	sp, r7
 615 003c 04B0     		add	sp, sp, #16
 616              		@ sp needed
 617 003e 80BD     		pop	{r7, pc}
 618              	.L45:
 619              		.align	2
 620              	.L44:
 621 0040 80011A40 		.word	1075446144
 622              		.cfi_endproc
 623              	.LFE7:
 624              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 625              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 626              		.align	2
 627              		.global	ADC_SAR_Seq_1_SetChanMask
 628              		.code	16
 629              		.thumb_func
 630              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 631              	ADC_SAR_Seq_1_SetChanMask:
 632              	.LFB8:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 633              		.loc 1 550 0
 634              		.cfi_startproc
 635 0000 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 22


 641 0004 00AF     		add	r7, sp, #0
 642              		.cfi_def_cfa_register 7
 643 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 644              		.loc 1 551 0
 645 0008 034B     		ldr	r3, .L47
 646 000a 7A68     		ldr	r2, [r7, #4]
 647 000c 0121     		mov	r1, #1
 648 000e 0A40     		and	r2, r1
 649 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 650              		.loc 1 552 0
 651 0012 BD46     		mov	sp, r7
 652 0014 02B0     		add	sp, sp, #8
 653              		@ sp needed
 654 0016 80BD     		pop	{r7, pc}
 655              	.L48:
 656              		.align	2
 657              	.L47:
 658 0018 20001A40 		.word	1075445792
 659              		.cfi_endproc
 660              	.LFE8:
 661              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 662              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 663              		.align	2
 664              		.global	ADC_SAR_Seq_1_SetLowLimit
 665              		.code	16
 666              		.thumb_func
 667              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 668              	ADC_SAR_Seq_1_SetLowLimit:
 669              	.LFB9:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 23


 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 670              		.loc 1 594 0
 671              		.cfi_startproc
 672 0000 80B5     		push	{r7, lr}
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 82B0     		sub	sp, sp, #8
 677              		.cfi_def_cfa_offset 16
 678 0004 00AF     		add	r7, sp, #0
 679              		.cfi_def_cfa_register 7
 680 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 681              		.loc 1 595 0
 682 0008 084B     		ldr	r3, .L50
 683 000a 084A     		ldr	r2, .L50
 684 000c 1268     		ldr	r2, [r2]
 685 000e 120C     		lsr	r2, r2, #16
 686 0010 1204     		lsl	r2, r2, #16
 687 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 688              		.loc 1 596 0
 689 0014 054B     		ldr	r3, .L50
 690 0016 054A     		ldr	r2, .L50
 691 0018 1168     		ldr	r1, [r2]
 692 001a 7A68     		ldr	r2, [r7, #4]
 693 001c 1204     		lsl	r2, r2, #16
 694 001e 120C     		lsr	r2, r2, #16
 695 0020 0A43     		orr	r2, r1
 696 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 697              		.loc 1 597 0
 698 0024 BD46     		mov	sp, r7
 699 0026 02B0     		add	sp, sp, #8
 700              		@ sp needed
 701 0028 80BD     		pop	{r7, pc}
 702              	.L51:
 703 002a C046     		.align	2
 704              	.L50:
 705 002c 18001A40 		.word	1075445784
 706              		.cfi_endproc
 707              	.LFE9:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 24


 708              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 709              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 710              		.align	2
 711              		.global	ADC_SAR_Seq_1_SetHighLimit
 712              		.code	16
 713              		.thumb_func
 714              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 715              	ADC_SAR_Seq_1_SetHighLimit:
 716              	.LFB10:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 717              		.loc 1 615 0
 718              		.cfi_startproc
 719 0000 80B5     		push	{r7, lr}
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 7, -8
 722              		.cfi_offset 14, -4
 723 0002 82B0     		sub	sp, sp, #8
 724              		.cfi_def_cfa_offset 16
 725 0004 00AF     		add	r7, sp, #0
 726              		.cfi_def_cfa_register 7
 727 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 728              		.loc 1 616 0
 729 0008 074B     		ldr	r3, .L53
 730 000a 074A     		ldr	r2, .L53
 731 000c 1268     		ldr	r2, [r2]
 732 000e 1204     		lsl	r2, r2, #16
 733 0010 120C     		lsr	r2, r2, #16
 734 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 735              		.loc 1 617 0
 736 0014 044B     		ldr	r3, .L53
 737 0016 044A     		ldr	r2, .L53
 738 0018 1168     		ldr	r1, [r2]
 739 001a 7A68     		ldr	r2, [r7, #4]
 740 001c 1204     		lsl	r2, r2, #16
 741 001e 0A43     		orr	r2, r1
 742 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 743              		.loc 1 618 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 25


 744 0022 BD46     		mov	sp, r7
 745 0024 02B0     		add	sp, sp, #8
 746              		@ sp needed
 747 0026 80BD     		pop	{r7, pc}
 748              	.L54:
 749              		.align	2
 750              	.L53:
 751 0028 18001A40 		.word	1075445784
 752              		.cfi_endproc
 753              	.LFE10:
 754              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 755              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 756              		.align	2
 757              		.global	ADC_SAR_Seq_1_SetLimitMask
 758              		.code	16
 759              		.thumb_func
 760              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 761              	ADC_SAR_Seq_1_SetLimitMask:
 762              	.LFB11:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 763              		.loc 1 639 0
 764              		.cfi_startproc
 765 0000 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 82B0     		sub	sp, sp, #8
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 773 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 774              		.loc 1 640 0
 775 0008 034B     		ldr	r3, .L56
 776 000a 7A68     		ldr	r2, [r7, #4]
 777 000c 0121     		mov	r1, #1
 778 000e 0A40     		and	r2, r1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 26


 779 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 780              		.loc 1 641 0
 781 0012 BD46     		mov	sp, r7
 782 0014 02B0     		add	sp, sp, #8
 783              		@ sp needed
 784 0016 80BD     		pop	{r7, pc}
 785              	.L57:
 786              		.align	2
 787              	.L56:
 788 0018 38021A40 		.word	1075446328
 789              		.cfi_endproc
 790              	.LFE11:
 791              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 792              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 793              		.align	2
 794              		.global	ADC_SAR_Seq_1_SetSatMask
 795              		.code	16
 796              		.thumb_func
 797              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 798              	ADC_SAR_Seq_1_SetSatMask:
 799              	.LFB12:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 800              		.loc 1 662 0
 801              		.cfi_startproc
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 82B0     		sub	sp, sp, #8
 807              		.cfi_def_cfa_offset 16
 808 0004 00AF     		add	r7, sp, #0
 809              		.cfi_def_cfa_register 7
 810 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 811              		.loc 1 663 0
 812 0008 034B     		ldr	r3, .L59
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 27


 813 000a 7A68     		ldr	r2, [r7, #4]
 814 000c 0121     		mov	r1, #1
 815 000e 0A40     		and	r2, r1
 816 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 817              		.loc 1 664 0
 818 0012 BD46     		mov	sp, r7
 819 0014 02B0     		add	sp, sp, #8
 820              		@ sp needed
 821 0016 80BD     		pop	{r7, pc}
 822              	.L60:
 823              		.align	2
 824              	.L59:
 825 0018 28021A40 		.word	1075446312
 826              		.cfi_endproc
 827              	.LFE12:
 828              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 829              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 830              		.align	2
 831              		.global	ADC_SAR_Seq_1_SetOffset
 832              		.code	16
 833              		.thumb_func
 834              		.type	ADC_SAR_Seq_1_SetOffset, %function
 835              	ADC_SAR_Seq_1_SetOffset:
 836              	.LFB13:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 837              		.loc 1 690 0
 838              		.cfi_startproc
 839 0000 80B5     		push	{r7, lr}
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 7, -8
 842              		.cfi_offset 14, -4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 28


 843 0002 82B0     		sub	sp, sp, #8
 844              		.cfi_def_cfa_offset 16
 845 0004 00AF     		add	r7, sp, #0
 846              		.cfi_def_cfa_register 7
 847 0006 7860     		str	r0, [r7, #4]
 848 0008 0A1C     		mov	r2, r1
 849 000a BB1C     		add	r3, r7, #2
 850 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 851              		.loc 1 692 0
 852 000e 7B68     		ldr	r3, [r7, #4]
 853 0010 002B     		cmp	r3, #0
 854 0012 02D0     		beq	.L62
 855              		.loc 1 692 0 is_stmt 0 discriminator 1
 856 0014 0020     		mov	r0, #0
 857 0016 FFF7FEFF 		bl	CyHalt
 858              	.L62:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 859              		.loc 1 694 0 is_stmt 1
 860 001a 044B     		ldr	r3, .L63
 861 001c 7A68     		ldr	r2, [r7, #4]
 862 001e 5200     		lsl	r2, r2, #1
 863 0020 B91C     		add	r1, r7, #2
 864 0022 0988     		ldrh	r1, [r1]
 865 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 866              		.loc 1 695 0
 867 0026 BD46     		mov	sp, r7
 868 0028 02B0     		add	sp, sp, #8
 869              		@ sp needed
 870 002a 80BD     		pop	{r7, pc}
 871              	.L64:
 872              		.align	2
 873              	.L63:
 874 002c 00000000 		.word	ADC_SAR_Seq_1_offset
 875              		.cfi_endproc
 876              	.LFE13:
 877              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 878              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 879              		.align	2
 880              		.global	ADC_SAR_Seq_1_SetGain
 881              		.code	16
 882              		.thumb_func
 883              		.type	ADC_SAR_Seq_1_SetGain, %function
 884              	ADC_SAR_Seq_1_SetGain:
 885              	.LFB14:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 29


 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 886              		.loc 1 724 0
 887              		.cfi_startproc
 888 0000 80B5     		push	{r7, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 7, -8
 891              		.cfi_offset 14, -4
 892 0002 82B0     		sub	sp, sp, #8
 893              		.cfi_def_cfa_offset 16
 894 0004 00AF     		add	r7, sp, #0
 895              		.cfi_def_cfa_register 7
 896 0006 7860     		str	r0, [r7, #4]
 897 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 898              		.loc 1 726 0
 899 000a 7B68     		ldr	r3, [r7, #4]
 900 000c 002B     		cmp	r3, #0
 901 000e 02D0     		beq	.L66
 902              		.loc 1 726 0 is_stmt 0 discriminator 1
 903 0010 0020     		mov	r0, #0
 904 0012 FFF7FEFF 		bl	CyHalt
 905              	.L66:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 906              		.loc 1 728 0 is_stmt 1
 907 0016 044B     		ldr	r3, .L67
 908 0018 7A68     		ldr	r2, [r7, #4]
 909 001a 9200     		lsl	r2, r2, #2
 910 001c 3968     		ldr	r1, [r7]
 911 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 912              		.loc 1 729 0
 913 0020 BD46     		mov	sp, r7
 914 0022 02B0     		add	sp, sp, #8
 915              		@ sp needed
 916 0024 80BD     		pop	{r7, pc}
 917              	.L68:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 30


 918 0026 C046     		.align	2
 919              	.L67:
 920 0028 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 921              		.cfi_endproc
 922              	.LFE14:
 923              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 924              		.global	__aeabi_idiv
 925              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 926              		.align	2
 927              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 928              		.code	16
 929              		.thumb_func
 930              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 931              	ADC_SAR_Seq_1_CountsTo_mVolts:
 932              	.LFB15:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 933              		.loc 1 757 0
 934              		.cfi_startproc
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 84B0     		sub	sp, sp, #16
 940              		.cfi_def_cfa_offset 24
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 943 0006 7860     		str	r0, [r7, #4]
 944 0008 0A1C     		mov	r2, r1
 945 000a BB1C     		add	r3, r7, #2
 946 000c 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 31


 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 947              		.loc 1 761 0
 948 000e 7B68     		ldr	r3, [r7, #4]
 949 0010 002B     		cmp	r3, #0
 950 0012 02D0     		beq	.L70
 951              		.loc 1 761 0 is_stmt 0 discriminator 1
 952 0014 0020     		mov	r0, #0
 953 0016 FFF7FEFF 		bl	CyHalt
 954              	.L70:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 955              		.loc 1 772 0 is_stmt 1
 956 001a 1F4B     		ldr	r3, .L76
 957 001c 7A68     		ldr	r2, [r7, #4]
 958 001e 5200     		lsl	r2, r2, #1
 959 0020 D35A     		ldrh	r3, [r2, r3]
 960 0022 99B2     		uxth	r1, r3
 961 0024 BB1C     		add	r3, r7, #2
 962 0026 1A88     		ldrh	r2, [r3]
 963 0028 8BB2     		uxth	r3, r1
 964 002a D31A     		sub	r3, r2, r3
 965 002c 9AB2     		uxth	r2, r3
 966 002e BB1C     		add	r3, r7, #2
 967 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 968              		.loc 1 774 0
 969 0032 BB1C     		add	r3, r7, #2
 970 0034 0022     		mov	r2, #0
 971 0036 9B5E     		ldrsh	r3, [r3, r2]
 972 0038 184A     		ldr	r2, .L76+4
 973 003a 5A43     		mul	r2, r3
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 974              		.loc 1 775 0
 975 003c BB1C     		add	r3, r7, #2
 976 003e 0021     		mov	r1, #0
 977 0040 5B5E     		ldrsh	r3, [r3, r1]
 978 0042 002B     		cmp	r3, #0
 979 0044 08DD     		ble	.L71
 980              		.loc 1 775 0 is_stmt 0 discriminator 1
 981 0046 164B     		ldr	r3, .L76+8
 982 0048 7968     		ldr	r1, [r7, #4]
 983 004a 8900     		lsl	r1, r1, #2
 984 004c CB58     		ldr	r3, [r1, r3]
 985 004e 002B     		cmp	r3, #0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 32


 986 0050 00DA     		bge	.L72
 987 0052 0133     		add	r3, r3, #1
 988              	.L72:
 989 0054 5B10     		asr	r3, r3, #1
 990 0056 08E0     		b	.L73
 991              	.L71:
 992              		.loc 1 775 0 discriminator 2
 993 0058 114B     		ldr	r3, .L76+8
 994 005a 7968     		ldr	r1, [r7, #4]
 995 005c 8900     		lsl	r1, r1, #2
 996 005e CB58     		ldr	r3, [r1, r3]
 997 0060 002B     		cmp	r3, #0
 998 0062 00DA     		bge	.L74
 999 0064 0133     		add	r3, r3, #1
 1000              	.L74:
 1001 0066 5B10     		asr	r3, r3, #1
 1002 0068 5B42     		neg	r3, r3
 1003              	.L73:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 1004              		.loc 1 774 0 is_stmt 1
 1005 006a D118     		add	r1, r2, r3
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 1006              		.loc 1 776 0
 1007 006c 0C4B     		ldr	r3, .L76+8
 1008 006e 7A68     		ldr	r2, [r7, #4]
 1009 0070 9200     		lsl	r2, r2, #2
 1010 0072 D358     		ldr	r3, [r2, r3]
 1011 0074 081C     		mov	r0, r1
 1012 0076 191C     		mov	r1, r3
 1013 0078 FFF7FEFF 		bl	__aeabi_idiv
 1014 007c 031C     		mov	r3, r0
 1015 007e 1A1C     		mov	r2, r3
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 1016              		.loc 1 774 0
 1017 0080 0E23     		mov	r3, #14
 1018 0082 FB18     		add	r3, r7, r3
 1019 0084 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 1020              		.loc 1 778 0
 1021 0086 0E23     		mov	r3, #14
 1022 0088 FB18     		add	r3, r7, r3
 1023 008a 1B88     		ldrh	r3, [r3]
 1024 008c 1BB2     		sxth	r3, r3
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1025              		.loc 1 779 0
 1026 008e 181C     		mov	r0, r3
 1027 0090 BD46     		mov	sp, r7
 1028 0092 04B0     		add	sp, sp, #16
 1029              		@ sp needed
 1030 0094 80BD     		pop	{r7, pc}
 1031              	.L77:
 1032 0096 C046     		.align	2
 1033              	.L76:
 1034 0098 00000000 		.word	ADC_SAR_Seq_1_offset
 1035 009c 10270000 		.word	10000
 1036 00a0 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 33


 1037              		.cfi_endproc
 1038              	.LFE15:
 1039              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 1040              		.global	__aeabi_lmul
 1041              		.global	__aeabi_ldivmod
 1042              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 1043              		.align	2
 1044              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 1045              		.code	16
 1046              		.thumb_func
 1047              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 1048              	ADC_SAR_Seq_1_CountsTo_uVolts:
 1049              	.LFB16:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 1050              		.loc 1 811 0
 1051              		.cfi_startproc
 1052 0000 B0B5     		push	{r4, r5, r7, lr}
 1053              		.cfi_def_cfa_offset 16
 1054              		.cfi_offset 4, -16
 1055              		.cfi_offset 5, -12
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 86B0     		sub	sp, sp, #24
 1059              		.cfi_def_cfa_offset 40
 1060 0004 00AF     		add	r7, sp, #0
 1061              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 34


 1062 0006 F860     		str	r0, [r7, #12]
 1063 0008 0A1C     		mov	r2, r1
 1064 000a 0A23     		mov	r3, #10
 1065 000c FB18     		add	r3, r7, r3
 1066 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1067              		.loc 1 815 0
 1068 0010 FB68     		ldr	r3, [r7, #12]
 1069 0012 002B     		cmp	r3, #0
 1070 0014 02D0     		beq	.L79
 1071              		.loc 1 815 0 is_stmt 0 discriminator 1
 1072 0016 0020     		mov	r0, #0
 1073 0018 FFF7FEFF 		bl	CyHalt
 1074              	.L79:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1075              		.loc 1 826 0 is_stmt 1
 1076 001c 194B     		ldr	r3, .L81
 1077 001e FA68     		ldr	r2, [r7, #12]
 1078 0020 5200     		lsl	r2, r2, #1
 1079 0022 D35A     		ldrh	r3, [r2, r3]
 1080 0024 99B2     		uxth	r1, r3
 1081 0026 0A23     		mov	r3, #10
 1082 0028 FB18     		add	r3, r7, r3
 1083 002a 1A88     		ldrh	r2, [r3]
 1084 002c 8BB2     		uxth	r3, r1
 1085 002e D31A     		sub	r3, r2, r3
 1086 0030 9AB2     		uxth	r2, r3
 1087 0032 0A23     		mov	r3, #10
 1088 0034 FB18     		add	r3, r7, r3
 1089 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 1090              		.loc 1 828 0
 1091 0038 0A23     		mov	r3, #10
 1092 003a FB18     		add	r3, r7, r3
 1093 003c 1B88     		ldrh	r3, [r3]
 1094 003e 1BB2     		sxth	r3, r3
 1095 0040 3B60     		str	r3, [r7]
 1096 0042 DB17     		asr	r3, r3, #31
 1097 0044 7B60     		str	r3, [r7, #4]
 1098 0046 3868     		ldr	r0, [r7]
 1099 0048 7968     		ldr	r1, [r7, #4]
 1100 004a 0F4A     		ldr	r2, .L81+4
 1101 004c 0023     		mov	r3, #0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 35


 1102 004e FFF7FEFF 		bl	__aeabi_lmul
 1103 0052 021C     		mov	r2, r0
 1104 0054 0B1C     		mov	r3, r1
 1105 0056 101C     		mov	r0, r2
 1106 0058 191C     		mov	r1, r3
 1107 005a 0C4B     		ldr	r3, .L81+8
 1108 005c FA68     		ldr	r2, [r7, #12]
 1109 005e 9200     		lsl	r2, r2, #2
 1110 0060 D358     		ldr	r3, [r2, r3]
 1111 0062 1C1C     		mov	r4, r3
 1112 0064 DB17     		asr	r3, r3, #31
 1113 0066 1D1C     		mov	r5, r3
 1114 0068 221C     		mov	r2, r4
 1115 006a 2B1C     		mov	r3, r5
 1116 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1117 0070 031C     		mov	r3, r0
 1118 0072 0C1C     		mov	r4, r1
 1119 0074 3B61     		str	r3, [r7, #16]
 1120 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 1121              		.loc 1 830 0
 1122 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1123              		.loc 1 831 0
 1124 007a 181C     		mov	r0, r3
 1125 007c BD46     		mov	sp, r7
 1126 007e 06B0     		add	sp, sp, #24
 1127              		@ sp needed
 1128 0080 B0BD     		pop	{r4, r5, r7, pc}
 1129              	.L82:
 1130 0082 C046     		.align	2
 1131              	.L81:
 1132 0084 00000000 		.word	ADC_SAR_Seq_1_offset
 1133 0088 80969800 		.word	10000000
 1134 008c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1135              		.cfi_endproc
 1136              	.LFE16:
 1137              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 1138              		.global	__aeabi_i2f
 1139              		.global	__aeabi_fmul
 1140              		.global	__aeabi_fdiv
 1141              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 1142              		.align	2
 1143              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 1147              	ADC_SAR_Seq_1_CountsTo_Volts:
 1148              	.LFB17:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 36


 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 1149              		.loc 1 856 0
 1150              		.cfi_startproc
 1151 0000 90B5     		push	{r4, r7, lr}
 1152              		.cfi_def_cfa_offset 12
 1153              		.cfi_offset 4, -12
 1154              		.cfi_offset 7, -8
 1155              		.cfi_offset 14, -4
 1156 0002 85B0     		sub	sp, sp, #20
 1157              		.cfi_def_cfa_offset 32
 1158 0004 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 1160 0006 7860     		str	r0, [r7, #4]
 1161 0008 0A1C     		mov	r2, r1
 1162 000a BB1C     		add	r3, r7, #2
 1163 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1164              		.loc 1 860 0
 1165 000e 7B68     		ldr	r3, [r7, #4]
 1166 0010 002B     		cmp	r3, #0
 1167 0012 02D0     		beq	.L84
 1168              		.loc 1 860 0 is_stmt 0 discriminator 1
 1169 0014 0020     		mov	r0, #0
 1170 0016 FFF7FEFF 		bl	CyHalt
 1171              	.L84:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1172              		.loc 1 871 0 is_stmt 1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 37


 1173 001a 164B     		ldr	r3, .L86
 1174 001c 7A68     		ldr	r2, [r7, #4]
 1175 001e 5200     		lsl	r2, r2, #1
 1176 0020 D35A     		ldrh	r3, [r2, r3]
 1177 0022 99B2     		uxth	r1, r3
 1178 0024 BB1C     		add	r3, r7, #2
 1179 0026 1A88     		ldrh	r2, [r3]
 1180 0028 8BB2     		uxth	r3, r1
 1181 002a D31A     		sub	r3, r2, r3
 1182 002c 9AB2     		uxth	r2, r3
 1183 002e BB1C     		add	r3, r7, #2
 1184 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 1185              		.loc 1 873 0
 1186 0032 BB1C     		add	r3, r7, #2
 1187 0034 0022     		mov	r2, #0
 1188 0036 9B5E     		ldrsh	r3, [r3, r2]
 1189 0038 181C     		mov	r0, r3
 1190 003a FFF7FEFF 		bl	__aeabi_i2f
 1191 003e 031C     		add	r3, r0, #0
 1192 0040 181C     		add	r0, r3, #0
 1193 0042 0D49     		ldr	r1, .L86+4
 1194 0044 FFF7FEFF 		bl	__aeabi_fmul
 1195 0048 031C     		add	r3, r0, #0
 1196 004a 1C1C     		add	r4, r3, #0
 1197 004c 0B4B     		ldr	r3, .L86+8
 1198 004e 7A68     		ldr	r2, [r7, #4]
 1199 0050 9200     		lsl	r2, r2, #2
 1200 0052 D358     		ldr	r3, [r2, r3]
 1201 0054 181C     		mov	r0, r3
 1202 0056 FFF7FEFF 		bl	__aeabi_i2f
 1203 005a 031C     		add	r3, r0, #0
 1204 005c 201C     		add	r0, r4, #0
 1205 005e 191C     		add	r1, r3, #0
 1206 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1207 0064 031C     		add	r3, r0, #0
 1208 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 1209              		.loc 1 875 0
 1210 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1211              		.loc 1 876 0
 1212 006a 181C     		add	r0, r3, #0
 1213 006c BD46     		mov	sp, r7
 1214 006e 05B0     		add	sp, sp, #20
 1215              		@ sp needed
 1216 0070 90BD     		pop	{r4, r7, pc}
 1217              	.L87:
 1218 0072 C046     		.align	2
 1219              	.L86:
 1220 0074 00000000 		.word	ADC_SAR_Seq_1_offset
 1221 0078 00002041 		.word	1092616192
 1222 007c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1223              		.cfi_endproc
 1224              	.LFE17:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 38


 1225              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 1226              		.text
 1227              	.Letext0:
 1228              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1229              		.section	.debug_info,"",%progbits
 1230              	.Ldebug_info0:
 1231 0000 77040000 		.4byte	0x477
 1232 0004 0400     		.2byte	0x4
 1233 0006 00000000 		.4byte	.Ldebug_abbrev0
 1234 000a 04       		.byte	0x4
 1235 000b 01       		.uleb128 0x1
 1236 000c 20000000 		.4byte	.LASF59
 1237 0010 01       		.byte	0x1
 1238 0011 61010000 		.4byte	.LASF60
 1239 0015 26030000 		.4byte	.LASF61
 1240 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1241 001d 00000000 		.4byte	0
 1242 0021 00000000 		.4byte	.Ldebug_line0
 1243 0025 02       		.uleb128 0x2
 1244 0026 01       		.byte	0x1
 1245 0027 06       		.byte	0x6
 1246 0028 FB030000 		.4byte	.LASF0
 1247 002c 02       		.uleb128 0x2
 1248 002d 01       		.byte	0x1
 1249 002e 08       		.byte	0x8
 1250 002f 92010000 		.4byte	.LASF1
 1251 0033 02       		.uleb128 0x2
 1252 0034 02       		.byte	0x2
 1253 0035 05       		.byte	0x5
 1254 0036 A9030000 		.4byte	.LASF2
 1255 003a 02       		.uleb128 0x2
 1256 003b 02       		.byte	0x2
 1257 003c 07       		.byte	0x7
 1258 003d 07040000 		.4byte	.LASF3
 1259 0041 02       		.uleb128 0x2
 1260 0042 04       		.byte	0x4
 1261 0043 05       		.byte	0x5
 1262 0044 D4030000 		.4byte	.LASF4
 1263 0048 02       		.uleb128 0x2
 1264 0049 04       		.byte	0x4
 1265 004a 07       		.byte	0x7
 1266 004b D4010000 		.4byte	.LASF5
 1267 004f 02       		.uleb128 0x2
 1268 0050 08       		.byte	0x8
 1269 0051 05       		.byte	0x5
 1270 0052 6A030000 		.4byte	.LASF6
 1271 0056 02       		.uleb128 0x2
 1272 0057 08       		.byte	0x8
 1273 0058 07       		.byte	0x7
 1274 0059 DD020000 		.4byte	.LASF7
 1275 005d 03       		.uleb128 0x3
 1276 005e 04       		.byte	0x4
 1277 005f 05       		.byte	0x5
 1278 0060 696E7400 		.ascii	"int\000"
 1279 0064 02       		.uleb128 0x2
 1280 0065 04       		.byte	0x4
 1281 0066 07       		.byte	0x7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 39


 1282 0067 AE020000 		.4byte	.LASF8
 1283 006b 04       		.uleb128 0x4
 1284 006c B3030000 		.4byte	.LASF9
 1285 0070 02       		.byte	0x2
 1286 0071 B901     		.2byte	0x1b9
 1287 0073 2C000000 		.4byte	0x2c
 1288 0077 04       		.uleb128 0x4
 1289 0078 7D020000 		.4byte	.LASF10
 1290 007c 02       		.byte	0x2
 1291 007d BA01     		.2byte	0x1ba
 1292 007f 3A000000 		.4byte	0x3a
 1293 0083 04       		.uleb128 0x4
 1294 0084 8E020000 		.4byte	.LASF11
 1295 0088 02       		.byte	0x2
 1296 0089 BB01     		.2byte	0x1bb
 1297 008b 48000000 		.4byte	0x48
 1298 008f 04       		.uleb128 0x4
 1299 0090 CE010000 		.4byte	.LASF12
 1300 0094 02       		.byte	0x2
 1301 0095 BD01     		.2byte	0x1bd
 1302 0097 33000000 		.4byte	0x33
 1303 009b 04       		.uleb128 0x4
 1304 009c E6010000 		.4byte	.LASF13
 1305 00a0 02       		.byte	0x2
 1306 00a1 BE01     		.2byte	0x1be
 1307 00a3 41000000 		.4byte	0x41
 1308 00a7 04       		.uleb128 0x4
 1309 00a8 59010000 		.4byte	.LASF14
 1310 00ac 02       		.byte	0x2
 1311 00ad BF01     		.2byte	0x1bf
 1312 00af B3000000 		.4byte	0xb3
 1313 00b3 02       		.uleb128 0x2
 1314 00b4 04       		.byte	0x4
 1315 00b5 04       		.byte	0x4
 1316 00b6 CA000000 		.4byte	.LASF15
 1317 00ba 02       		.uleb128 0x2
 1318 00bb 08       		.byte	0x8
 1319 00bc 04       		.byte	0x4
 1320 00bd 32020000 		.4byte	.LASF16
 1321 00c1 04       		.uleb128 0x4
 1322 00c2 21040000 		.4byte	.LASF17
 1323 00c6 02       		.byte	0x2
 1324 00c7 C401     		.2byte	0x1c4
 1325 00c9 4F000000 		.4byte	0x4f
 1326 00cd 02       		.uleb128 0x2
 1327 00ce 01       		.byte	0x1
 1328 00cf 08       		.byte	0x8
 1329 00d0 2F010000 		.4byte	.LASF18
 1330 00d4 04       		.uleb128 0x4
 1331 00d5 1A000000 		.4byte	.LASF19
 1332 00d9 02       		.byte	0x2
 1333 00da 6502     		.2byte	0x265
 1334 00dc E0000000 		.4byte	0xe0
 1335 00e0 05       		.uleb128 0x5
 1336 00e1 83000000 		.4byte	0x83
 1337 00e5 02       		.uleb128 0x2
 1338 00e6 04       		.byte	0x4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 40


 1339 00e7 07       		.byte	0x7
 1340 00e8 61030000 		.4byte	.LASF20
 1341 00ec 06       		.uleb128 0x6
 1342 00ed 1E020000 		.4byte	.LASF24
 1343 00f1 01       		.byte	0x1
 1344 00f2 3F       		.byte	0x3f
 1345 00f3 00000000 		.4byte	.LFB0
 1346 00f7 24000000 		.4byte	.LFE0-.LFB0
 1347 00fb 01       		.uleb128 0x1
 1348 00fc 9C       		.byte	0x9c
 1349 00fd 07       		.uleb128 0x7
 1350 00fe 27040000 		.4byte	.LASF35
 1351 0102 01       		.byte	0x1
 1352 0103 5E       		.byte	0x5e
 1353 0104 00000000 		.4byte	.LFB1
 1354 0108 C4010000 		.4byte	.LFE1-.LFB1
 1355 010c 01       		.uleb128 0x1
 1356 010d 9C       		.byte	0x9c
 1357 010e 3D010000 		.4byte	0x13d
 1358 0112 08       		.uleb128 0x8
 1359 0113 7D030000 		.4byte	.LASF21
 1360 0117 01       		.byte	0x1
 1361 0118 60       		.byte	0x60
 1362 0119 83000000 		.4byte	0x83
 1363 011d 02       		.uleb128 0x2
 1364 011e 91       		.byte	0x91
 1365 011f 74       		.sleb128 -12
 1366 0120 08       		.uleb128 0x8
 1367 0121 88010000 		.4byte	.LASF22
 1368 0125 01       		.byte	0x1
 1369 0126 61       		.byte	0x61
 1370 0127 83000000 		.4byte	0x83
 1371 012b 02       		.uleb128 0x2
 1372 012c 91       		.byte	0x91
 1373 012d 6C       		.sleb128 -20
 1374 012e 08       		.uleb128 0x8
 1375 012f D6020000 		.4byte	.LASF23
 1376 0133 01       		.byte	0x1
 1377 0134 62       		.byte	0x62
 1378 0135 9B000000 		.4byte	0x9b
 1379 0139 02       		.uleb128 0x2
 1380 013a 91       		.byte	0x91
 1381 013b 70       		.sleb128 -16
 1382 013c 00       		.byte	0
 1383 013d 09       		.uleb128 0x9
 1384 013e EC010000 		.4byte	.LASF25
 1385 0142 01       		.byte	0x1
 1386 0143 4A01     		.2byte	0x14a
 1387 0145 00000000 		.4byte	.LFB2
 1388 0149 28000000 		.4byte	.LFE2-.LFB2
 1389 014d 01       		.uleb128 0x1
 1390 014e 9C       		.byte	0x9c
 1391 014f 0A       		.uleb128 0xa
 1392 0150 A0010000 		.4byte	.LASF26
 1393 0154 01       		.byte	0x1
 1394 0155 6D01     		.2byte	0x16d
 1395 0157 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 41


 1396 015b 18000000 		.4byte	.LFE3-.LFB3
 1397 015f 01       		.uleb128 0x1
 1398 0160 9C       		.byte	0x9c
 1399 0161 0A       		.uleb128 0xa
 1400 0162 BB020000 		.4byte	.LASF27
 1401 0166 01       		.byte	0x1
 1402 0167 8701     		.2byte	0x187
 1403 0169 00000000 		.4byte	.LFB4
 1404 016d 1C000000 		.4byte	.LFE4-.LFB4
 1405 0171 01       		.uleb128 0x1
 1406 0172 9C       		.byte	0x9c
 1407 0173 0A       		.uleb128 0xa
 1408 0174 00000000 		.4byte	.LASF28
 1409 0178 01       		.byte	0x1
 1410 0179 A001     		.2byte	0x1a0
 1411 017b 00000000 		.4byte	.LFB5
 1412 017f 1C000000 		.4byte	.LFE5-.LFB5
 1413 0183 01       		.uleb128 0x1
 1414 0184 9C       		.byte	0x9c
 1415 0185 0B       		.uleb128 0xb
 1416 0186 DD030000 		.4byte	.LASF30
 1417 018a 01       		.byte	0x1
 1418 018b C201     		.2byte	0x1c2
 1419 018d 83000000 		.4byte	0x83
 1420 0191 00000000 		.4byte	.LFB6
 1421 0195 48000000 		.4byte	.LFE6-.LFB6
 1422 0199 01       		.uleb128 0x1
 1423 019a 9C       		.byte	0x9c
 1424 019b BE010000 		.4byte	0x1be
 1425 019f 0C       		.uleb128 0xc
 1426 01a0 A1030000 		.4byte	.LASF32
 1427 01a4 01       		.byte	0x1
 1428 01a5 C201     		.2byte	0x1c2
 1429 01a7 83000000 		.4byte	0x83
 1430 01ab 02       		.uleb128 0x2
 1431 01ac 91       		.byte	0x91
 1432 01ad 6C       		.sleb128 -20
 1433 01ae 0D       		.uleb128 0xd
 1434 01af 34010000 		.4byte	.LASF29
 1435 01b3 01       		.byte	0x1
 1436 01b4 C401     		.2byte	0x1c4
 1437 01b6 83000000 		.4byte	0x83
 1438 01ba 02       		.uleb128 0x2
 1439 01bb 91       		.byte	0x91
 1440 01bc 74       		.sleb128 -12
 1441 01bd 00       		.byte	0
 1442 01be 0E       		.uleb128 0xe
 1443 01bf 3A040000 		.4byte	.LASF31
 1444 01c3 01       		.byte	0x1
 1445 01c4 F801     		.2byte	0x1f8
 1446 01c6 8F000000 		.4byte	0x8f
 1447 01ca 00000000 		.4byte	.LFB7
 1448 01ce 44000000 		.4byte	.LFE7-.LFB7
 1449 01d2 01       		.uleb128 0x1
 1450 01d3 9C       		.byte	0x9c
 1451 01d4 F7010000 		.4byte	0x1f7
 1452 01d8 0C       		.uleb128 0xc
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 42


 1453 01d9 55030000 		.4byte	.LASF33
 1454 01dd 01       		.byte	0x1
 1455 01de F801     		.2byte	0x1f8
 1456 01e0 83000000 		.4byte	0x83
 1457 01e4 02       		.uleb128 0x2
 1458 01e5 91       		.byte	0x91
 1459 01e6 6C       		.sleb128 -20
 1460 01e7 0D       		.uleb128 0xd
 1461 01e8 1A040000 		.4byte	.LASF34
 1462 01ec 01       		.byte	0x1
 1463 01ed FA01     		.2byte	0x1fa
 1464 01ef 83000000 		.4byte	0x83
 1465 01f3 02       		.uleb128 0x2
 1466 01f4 91       		.byte	0x91
 1467 01f5 74       		.sleb128 -12
 1468 01f6 00       		.byte	0
 1469 01f7 0F       		.uleb128 0xf
 1470 01f8 0C030000 		.4byte	.LASF36
 1471 01fc 01       		.byte	0x1
 1472 01fd 2502     		.2byte	0x225
 1473 01ff 00000000 		.4byte	.LFB8
 1474 0203 1C000000 		.4byte	.LFE8-.LFB8
 1475 0207 01       		.uleb128 0x1
 1476 0208 9C       		.byte	0x9c
 1477 0209 1D020000 		.4byte	0x21d
 1478 020d 0C       		.uleb128 0xc
 1479 020e 78030000 		.4byte	.LASF37
 1480 0212 01       		.byte	0x1
 1481 0213 2502     		.2byte	0x225
 1482 0215 83000000 		.4byte	0x83
 1483 0219 02       		.uleb128 0x2
 1484 021a 91       		.byte	0x91
 1485 021b 74       		.sleb128 -12
 1486 021c 00       		.byte	0
 1487 021d 0F       		.uleb128 0xf
 1488 021e DA000000 		.4byte	.LASF38
 1489 0222 01       		.byte	0x1
 1490 0223 5102     		.2byte	0x251
 1491 0225 00000000 		.4byte	.LFB9
 1492 0229 30000000 		.4byte	.LFE9-.LFB9
 1493 022d 01       		.uleb128 0x1
 1494 022e 9C       		.byte	0x9c
 1495 022f 43020000 		.4byte	0x243
 1496 0233 0C       		.uleb128 0xc
 1497 0234 6C020000 		.4byte	.LASF39
 1498 0238 01       		.byte	0x1
 1499 0239 5102     		.2byte	0x251
 1500 023b 83000000 		.4byte	0x83
 1501 023f 02       		.uleb128 0x2
 1502 0240 91       		.byte	0x91
 1503 0241 74       		.sleb128 -12
 1504 0242 00       		.byte	0
 1505 0243 0F       		.uleb128 0xf
 1506 0244 B3010000 		.4byte	.LASF40
 1507 0248 01       		.byte	0x1
 1508 0249 6602     		.2byte	0x266
 1509 024b 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 43


 1510 024f 2C000000 		.4byte	.LFE10-.LFB10
 1511 0253 01       		.uleb128 0x1
 1512 0254 9C       		.byte	0x9c
 1513 0255 69020000 		.4byte	0x269
 1514 0259 0C       		.uleb128 0xc
 1515 025a D0000000 		.4byte	.LASF41
 1516 025e 01       		.byte	0x1
 1517 025f 6602     		.2byte	0x266
 1518 0261 83000000 		.4byte	0x83
 1519 0265 02       		.uleb128 0x2
 1520 0266 91       		.byte	0x91
 1521 0267 74       		.sleb128 -12
 1522 0268 00       		.byte	0
 1523 0269 0F       		.uleb128 0xf
 1524 026a B9030000 		.4byte	.LASF42
 1525 026e 01       		.byte	0x1
 1526 026f 7E02     		.2byte	0x27e
 1527 0271 00000000 		.4byte	.LFB11
 1528 0275 1C000000 		.4byte	.LFE11-.LFB11
 1529 0279 01       		.uleb128 0x1
 1530 027a 9C       		.byte	0x9c
 1531 027b 8F020000 		.4byte	0x28f
 1532 027f 0C       		.uleb128 0xc
 1533 0280 78030000 		.4byte	.LASF37
 1534 0284 01       		.byte	0x1
 1535 0285 7E02     		.2byte	0x27e
 1536 0287 83000000 		.4byte	0x83
 1537 028b 02       		.uleb128 0x2
 1538 028c 91       		.byte	0x91
 1539 028d 74       		.sleb128 -12
 1540 028e 00       		.byte	0
 1541 028f 0F       		.uleb128 0xf
 1542 0290 95020000 		.4byte	.LASF43
 1543 0294 01       		.byte	0x1
 1544 0295 9502     		.2byte	0x295
 1545 0297 00000000 		.4byte	.LFB12
 1546 029b 1C000000 		.4byte	.LFE12-.LFB12
 1547 029f 01       		.uleb128 0x1
 1548 02a0 9C       		.byte	0x9c
 1549 02a1 B5020000 		.4byte	0x2b5
 1550 02a5 0C       		.uleb128 0xc
 1551 02a6 78030000 		.4byte	.LASF37
 1552 02aa 01       		.byte	0x1
 1553 02ab 9502     		.2byte	0x295
 1554 02ad 83000000 		.4byte	0x83
 1555 02b1 02       		.uleb128 0x2
 1556 02b2 91       		.byte	0x91
 1557 02b3 74       		.sleb128 -12
 1558 02b4 00       		.byte	0
 1559 02b5 10       		.uleb128 0x10
 1560 02b6 F4020000 		.4byte	.LASF44
 1561 02ba 01       		.byte	0x1
 1562 02bb B102     		.2byte	0x2b1
 1563 02bd 00000000 		.4byte	.LFB13
 1564 02c1 30000000 		.4byte	.LFE13-.LFB13
 1565 02c5 01       		.uleb128 0x1
 1566 02c6 9C       		.byte	0x9c
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 44


 1567 02c7 EA020000 		.4byte	0x2ea
 1568 02cb 0C       		.uleb128 0xc
 1569 02cc 55030000 		.4byte	.LASF33
 1570 02d0 01       		.byte	0x1
 1571 02d1 B102     		.2byte	0x2b1
 1572 02d3 83000000 		.4byte	0x83
 1573 02d7 02       		.uleb128 0x2
 1574 02d8 91       		.byte	0x91
 1575 02d9 74       		.sleb128 -12
 1576 02da 0C       		.uleb128 0xc
 1577 02db C3000000 		.4byte	.LASF45
 1578 02df 01       		.byte	0x1
 1579 02e0 B102     		.2byte	0x2b1
 1580 02e2 8F000000 		.4byte	0x8f
 1581 02e6 02       		.uleb128 0x2
 1582 02e7 91       		.byte	0x91
 1583 02e8 72       		.sleb128 -14
 1584 02e9 00       		.byte	0
 1585 02ea 10       		.uleb128 0x10
 1586 02eb 56020000 		.4byte	.LASF46
 1587 02ef 01       		.byte	0x1
 1588 02f0 D302     		.2byte	0x2d3
 1589 02f2 00000000 		.4byte	.LFB14
 1590 02f6 2C000000 		.4byte	.LFE14-.LFB14
 1591 02fa 01       		.uleb128 0x1
 1592 02fb 9C       		.byte	0x9c
 1593 02fc 1F030000 		.4byte	0x31f
 1594 0300 0C       		.uleb128 0xc
 1595 0301 55030000 		.4byte	.LASF33
 1596 0305 01       		.byte	0x1
 1597 0306 D302     		.2byte	0x2d3
 1598 0308 83000000 		.4byte	0x83
 1599 030c 02       		.uleb128 0x2
 1600 030d 91       		.byte	0x91
 1601 030e 74       		.sleb128 -12
 1602 030f 0C       		.uleb128 0xc
 1603 0310 75020000 		.4byte	.LASF47
 1604 0314 01       		.byte	0x1
 1605 0315 D302     		.2byte	0x2d3
 1606 0317 9B000000 		.4byte	0x9b
 1607 031b 02       		.uleb128 0x2
 1608 031c 91       		.byte	0x91
 1609 031d 70       		.sleb128 -16
 1610 031e 00       		.byte	0
 1611 031f 0E       		.uleb128 0xe
 1612 0320 83030000 		.4byte	.LASF48
 1613 0324 01       		.byte	0x1
 1614 0325 F402     		.2byte	0x2f4
 1615 0327 8F000000 		.4byte	0x8f
 1616 032b 00000000 		.4byte	.LFB15
 1617 032f A4000000 		.4byte	.LFE15-.LFB15
 1618 0333 01       		.uleb128 0x1
 1619 0334 9C       		.byte	0x9c
 1620 0335 67030000 		.4byte	0x367
 1621 0339 0C       		.uleb128 0xc
 1622 033a 55030000 		.4byte	.LASF33
 1623 033e 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 45


 1624 033f F402     		.2byte	0x2f4
 1625 0341 83000000 		.4byte	0x83
 1626 0345 02       		.uleb128 0x2
 1627 0346 91       		.byte	0x91
 1628 0347 6C       		.sleb128 -20
 1629 0348 0C       		.uleb128 0xc
 1630 0349 84020000 		.4byte	.LASF49
 1631 034d 01       		.byte	0x1
 1632 034e F402     		.2byte	0x2f4
 1633 0350 8F000000 		.4byte	0x8f
 1634 0354 02       		.uleb128 0x2
 1635 0355 91       		.byte	0x91
 1636 0356 6A       		.sleb128 -22
 1637 0357 0D       		.uleb128 0xd
 1638 0358 5A030000 		.4byte	.LASF50
 1639 035c 01       		.byte	0x1
 1640 035d F602     		.2byte	0x2f6
 1641 035f 8F000000 		.4byte	0x8f
 1642 0363 02       		.uleb128 0x2
 1643 0364 91       		.byte	0x91
 1644 0365 76       		.sleb128 -10
 1645 0366 00       		.byte	0
 1646 0367 0E       		.uleb128 0xe
 1647 0368 3B010000 		.4byte	.LASF51
 1648 036c 01       		.byte	0x1
 1649 036d 2A03     		.2byte	0x32a
 1650 036f 9B000000 		.4byte	0x9b
 1651 0373 00000000 		.4byte	.LFB16
 1652 0377 90000000 		.4byte	.LFE16-.LFB16
 1653 037b 01       		.uleb128 0x1
 1654 037c 9C       		.byte	0x9c
 1655 037d AF030000 		.4byte	0x3af
 1656 0381 0C       		.uleb128 0xc
 1657 0382 55030000 		.4byte	.LASF33
 1658 0386 01       		.byte	0x1
 1659 0387 2A03     		.2byte	0x32a
 1660 0389 83000000 		.4byte	0x83
 1661 038d 02       		.uleb128 0x2
 1662 038e 91       		.byte	0x91
 1663 038f 64       		.sleb128 -28
 1664 0390 0C       		.uleb128 0xc
 1665 0391 84020000 		.4byte	.LASF49
 1666 0395 01       		.byte	0x1
 1667 0396 2A03     		.2byte	0x32a
 1668 0398 8F000000 		.4byte	0x8f
 1669 039c 02       		.uleb128 0x2
 1670 039d 91       		.byte	0x91
 1671 039e 62       		.sleb128 -30
 1672 039f 0D       		.uleb128 0xd
 1673 03a0 12010000 		.4byte	.LASF52
 1674 03a4 01       		.byte	0x1
 1675 03a5 2C03     		.2byte	0x32c
 1676 03a7 C1000000 		.4byte	0xc1
 1677 03ab 02       		.uleb128 0x2
 1678 03ac 91       		.byte	0x91
 1679 03ad 68       		.sleb128 -24
 1680 03ae 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 46


 1681 03af 0E       		.uleb128 0xe
 1682 03b0 39020000 		.4byte	.LASF53
 1683 03b4 01       		.byte	0x1
 1684 03b5 5703     		.2byte	0x357
 1685 03b7 A7000000 		.4byte	0xa7
 1686 03bb 00000000 		.4byte	.LFB17
 1687 03bf 80000000 		.4byte	.LFE17-.LFB17
 1688 03c3 01       		.uleb128 0x1
 1689 03c4 9C       		.byte	0x9c
 1690 03c5 F7030000 		.4byte	0x3f7
 1691 03c9 0C       		.uleb128 0xc
 1692 03ca 55030000 		.4byte	.LASF33
 1693 03ce 01       		.byte	0x1
 1694 03cf 5703     		.2byte	0x357
 1695 03d1 83000000 		.4byte	0x83
 1696 03d5 02       		.uleb128 0x2
 1697 03d6 91       		.byte	0x91
 1698 03d7 64       		.sleb128 -28
 1699 03d8 0C       		.uleb128 0xc
 1700 03d9 84020000 		.4byte	.LASF49
 1701 03dd 01       		.byte	0x1
 1702 03de 5703     		.2byte	0x357
 1703 03e0 8F000000 		.4byte	0x8f
 1704 03e4 02       		.uleb128 0x2
 1705 03e5 91       		.byte	0x91
 1706 03e6 62       		.sleb128 -30
 1707 03e7 0D       		.uleb128 0xd
 1708 03e8 4F030000 		.4byte	.LASF54
 1709 03ec 01       		.byte	0x1
 1710 03ed 5903     		.2byte	0x359
 1711 03ef A7000000 		.4byte	0xa7
 1712 03f3 02       		.uleb128 0x2
 1713 03f4 91       		.byte	0x91
 1714 03f5 6C       		.sleb128 -20
 1715 03f6 00       		.byte	0
 1716 03f7 11       		.uleb128 0x11
 1717 03f8 83000000 		.4byte	0x83
 1718 03fc 07040000 		.4byte	0x407
 1719 0400 12       		.uleb128 0x12
 1720 0401 E5000000 		.4byte	0xe5
 1721 0405 00       		.byte	0
 1722 0406 00       		.byte	0
 1723 0407 08       		.uleb128 0x8
 1724 0408 01020000 		.4byte	.LASF55
 1725 040c 01       		.byte	0x1
 1726 040d 21       		.byte	0x21
 1727 040e 18040000 		.4byte	0x418
 1728 0412 05       		.uleb128 0x5
 1729 0413 03       		.byte	0x3
 1730 0414 00000000 		.4byte	ADC_SAR_Seq_1_channelsConfig
 1731 0418 13       		.uleb128 0x13
 1732 0419 F7030000 		.4byte	0x3f7
 1733 041d 14       		.uleb128 0x14
 1734 041e 19010000 		.4byte	.LASF56
 1735 0422 01       		.byte	0x1
 1736 0423 18       		.byte	0x18
 1737 0424 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 47


 1738 0428 05       		.uleb128 0x5
 1739 0429 03       		.byte	0x3
 1740 042a 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1741 042e 11       		.uleb128 0x11
 1742 042f 8F000000 		.4byte	0x8f
 1743 0433 3E040000 		.4byte	0x43e
 1744 0437 12       		.uleb128 0x12
 1745 0438 E5000000 		.4byte	0xe5
 1746 043c 00       		.byte	0
 1747 043d 00       		.byte	0
 1748 043e 14       		.uleb128 0x14
 1749 043f AE000000 		.4byte	.LASF57
 1750 0443 01       		.byte	0x1
 1751 0444 19       		.byte	0x19
 1752 0445 4F040000 		.4byte	0x44f
 1753 0449 05       		.uleb128 0x5
 1754 044a 03       		.byte	0x3
 1755 044b 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1756 044f 05       		.uleb128 0x5
 1757 0450 2E040000 		.4byte	0x42e
 1758 0454 11       		.uleb128 0x11
 1759 0455 9B000000 		.4byte	0x9b
 1760 0459 64040000 		.4byte	0x464
 1761 045d 12       		.uleb128 0x12
 1762 045e E5000000 		.4byte	0xe5
 1763 0462 00       		.byte	0
 1764 0463 00       		.byte	0
 1765 0464 14       		.uleb128 0x14
 1766 0465 F4000000 		.4byte	.LASF58
 1767 0469 01       		.byte	0x1
 1768 046a 1A       		.byte	0x1a
 1769 046b 75040000 		.4byte	0x475
 1770 046f 05       		.uleb128 0x5
 1771 0470 03       		.byte	0x3
 1772 0471 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1773 0475 05       		.uleb128 0x5
 1774 0476 54040000 		.4byte	0x454
 1775 047a 00       		.byte	0
 1776              		.section	.debug_abbrev,"",%progbits
 1777              	.Ldebug_abbrev0:
 1778 0000 01       		.uleb128 0x1
 1779 0001 11       		.uleb128 0x11
 1780 0002 01       		.byte	0x1
 1781 0003 25       		.uleb128 0x25
 1782 0004 0E       		.uleb128 0xe
 1783 0005 13       		.uleb128 0x13
 1784 0006 0B       		.uleb128 0xb
 1785 0007 03       		.uleb128 0x3
 1786 0008 0E       		.uleb128 0xe
 1787 0009 1B       		.uleb128 0x1b
 1788 000a 0E       		.uleb128 0xe
 1789 000b 55       		.uleb128 0x55
 1790 000c 17       		.uleb128 0x17
 1791 000d 11       		.uleb128 0x11
 1792 000e 01       		.uleb128 0x1
 1793 000f 10       		.uleb128 0x10
 1794 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 48


 1795 0011 00       		.byte	0
 1796 0012 00       		.byte	0
 1797 0013 02       		.uleb128 0x2
 1798 0014 24       		.uleb128 0x24
 1799 0015 00       		.byte	0
 1800 0016 0B       		.uleb128 0xb
 1801 0017 0B       		.uleb128 0xb
 1802 0018 3E       		.uleb128 0x3e
 1803 0019 0B       		.uleb128 0xb
 1804 001a 03       		.uleb128 0x3
 1805 001b 0E       		.uleb128 0xe
 1806 001c 00       		.byte	0
 1807 001d 00       		.byte	0
 1808 001e 03       		.uleb128 0x3
 1809 001f 24       		.uleb128 0x24
 1810 0020 00       		.byte	0
 1811 0021 0B       		.uleb128 0xb
 1812 0022 0B       		.uleb128 0xb
 1813 0023 3E       		.uleb128 0x3e
 1814 0024 0B       		.uleb128 0xb
 1815 0025 03       		.uleb128 0x3
 1816 0026 08       		.uleb128 0x8
 1817 0027 00       		.byte	0
 1818 0028 00       		.byte	0
 1819 0029 04       		.uleb128 0x4
 1820 002a 16       		.uleb128 0x16
 1821 002b 00       		.byte	0
 1822 002c 03       		.uleb128 0x3
 1823 002d 0E       		.uleb128 0xe
 1824 002e 3A       		.uleb128 0x3a
 1825 002f 0B       		.uleb128 0xb
 1826 0030 3B       		.uleb128 0x3b
 1827 0031 05       		.uleb128 0x5
 1828 0032 49       		.uleb128 0x49
 1829 0033 13       		.uleb128 0x13
 1830 0034 00       		.byte	0
 1831 0035 00       		.byte	0
 1832 0036 05       		.uleb128 0x5
 1833 0037 35       		.uleb128 0x35
 1834 0038 00       		.byte	0
 1835 0039 49       		.uleb128 0x49
 1836 003a 13       		.uleb128 0x13
 1837 003b 00       		.byte	0
 1838 003c 00       		.byte	0
 1839 003d 06       		.uleb128 0x6
 1840 003e 2E       		.uleb128 0x2e
 1841 003f 00       		.byte	0
 1842 0040 3F       		.uleb128 0x3f
 1843 0041 19       		.uleb128 0x19
 1844 0042 03       		.uleb128 0x3
 1845 0043 0E       		.uleb128 0xe
 1846 0044 3A       		.uleb128 0x3a
 1847 0045 0B       		.uleb128 0xb
 1848 0046 3B       		.uleb128 0x3b
 1849 0047 0B       		.uleb128 0xb
 1850 0048 27       		.uleb128 0x27
 1851 0049 19       		.uleb128 0x19
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 49


 1852 004a 11       		.uleb128 0x11
 1853 004b 01       		.uleb128 0x1
 1854 004c 12       		.uleb128 0x12
 1855 004d 06       		.uleb128 0x6
 1856 004e 40       		.uleb128 0x40
 1857 004f 18       		.uleb128 0x18
 1858 0050 9642     		.uleb128 0x2116
 1859 0052 19       		.uleb128 0x19
 1860 0053 00       		.byte	0
 1861 0054 00       		.byte	0
 1862 0055 07       		.uleb128 0x7
 1863 0056 2E       		.uleb128 0x2e
 1864 0057 01       		.byte	0x1
 1865 0058 3F       		.uleb128 0x3f
 1866 0059 19       		.uleb128 0x19
 1867 005a 03       		.uleb128 0x3
 1868 005b 0E       		.uleb128 0xe
 1869 005c 3A       		.uleb128 0x3a
 1870 005d 0B       		.uleb128 0xb
 1871 005e 3B       		.uleb128 0x3b
 1872 005f 0B       		.uleb128 0xb
 1873 0060 27       		.uleb128 0x27
 1874 0061 19       		.uleb128 0x19
 1875 0062 11       		.uleb128 0x11
 1876 0063 01       		.uleb128 0x1
 1877 0064 12       		.uleb128 0x12
 1878 0065 06       		.uleb128 0x6
 1879 0066 40       		.uleb128 0x40
 1880 0067 18       		.uleb128 0x18
 1881 0068 9642     		.uleb128 0x2116
 1882 006a 19       		.uleb128 0x19
 1883 006b 01       		.uleb128 0x1
 1884 006c 13       		.uleb128 0x13
 1885 006d 00       		.byte	0
 1886 006e 00       		.byte	0
 1887 006f 08       		.uleb128 0x8
 1888 0070 34       		.uleb128 0x34
 1889 0071 00       		.byte	0
 1890 0072 03       		.uleb128 0x3
 1891 0073 0E       		.uleb128 0xe
 1892 0074 3A       		.uleb128 0x3a
 1893 0075 0B       		.uleb128 0xb
 1894 0076 3B       		.uleb128 0x3b
 1895 0077 0B       		.uleb128 0xb
 1896 0078 49       		.uleb128 0x49
 1897 0079 13       		.uleb128 0x13
 1898 007a 02       		.uleb128 0x2
 1899 007b 18       		.uleb128 0x18
 1900 007c 00       		.byte	0
 1901 007d 00       		.byte	0
 1902 007e 09       		.uleb128 0x9
 1903 007f 2E       		.uleb128 0x2e
 1904 0080 00       		.byte	0
 1905 0081 3F       		.uleb128 0x3f
 1906 0082 19       		.uleb128 0x19
 1907 0083 03       		.uleb128 0x3
 1908 0084 0E       		.uleb128 0xe
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 50


 1909 0085 3A       		.uleb128 0x3a
 1910 0086 0B       		.uleb128 0xb
 1911 0087 3B       		.uleb128 0x3b
 1912 0088 05       		.uleb128 0x5
 1913 0089 27       		.uleb128 0x27
 1914 008a 19       		.uleb128 0x19
 1915 008b 11       		.uleb128 0x11
 1916 008c 01       		.uleb128 0x1
 1917 008d 12       		.uleb128 0x12
 1918 008e 06       		.uleb128 0x6
 1919 008f 40       		.uleb128 0x40
 1920 0090 18       		.uleb128 0x18
 1921 0091 9642     		.uleb128 0x2116
 1922 0093 19       		.uleb128 0x19
 1923 0094 00       		.byte	0
 1924 0095 00       		.byte	0
 1925 0096 0A       		.uleb128 0xa
 1926 0097 2E       		.uleb128 0x2e
 1927 0098 00       		.byte	0
 1928 0099 3F       		.uleb128 0x3f
 1929 009a 19       		.uleb128 0x19
 1930 009b 03       		.uleb128 0x3
 1931 009c 0E       		.uleb128 0xe
 1932 009d 3A       		.uleb128 0x3a
 1933 009e 0B       		.uleb128 0xb
 1934 009f 3B       		.uleb128 0x3b
 1935 00a0 05       		.uleb128 0x5
 1936 00a1 27       		.uleb128 0x27
 1937 00a2 19       		.uleb128 0x19
 1938 00a3 11       		.uleb128 0x11
 1939 00a4 01       		.uleb128 0x1
 1940 00a5 12       		.uleb128 0x12
 1941 00a6 06       		.uleb128 0x6
 1942 00a7 40       		.uleb128 0x40
 1943 00a8 18       		.uleb128 0x18
 1944 00a9 9742     		.uleb128 0x2117
 1945 00ab 19       		.uleb128 0x19
 1946 00ac 00       		.byte	0
 1947 00ad 00       		.byte	0
 1948 00ae 0B       		.uleb128 0xb
 1949 00af 2E       		.uleb128 0x2e
 1950 00b0 01       		.byte	0x1
 1951 00b1 3F       		.uleb128 0x3f
 1952 00b2 19       		.uleb128 0x19
 1953 00b3 03       		.uleb128 0x3
 1954 00b4 0E       		.uleb128 0xe
 1955 00b5 3A       		.uleb128 0x3a
 1956 00b6 0B       		.uleb128 0xb
 1957 00b7 3B       		.uleb128 0x3b
 1958 00b8 05       		.uleb128 0x5
 1959 00b9 27       		.uleb128 0x27
 1960 00ba 19       		.uleb128 0x19
 1961 00bb 49       		.uleb128 0x49
 1962 00bc 13       		.uleb128 0x13
 1963 00bd 11       		.uleb128 0x11
 1964 00be 01       		.uleb128 0x1
 1965 00bf 12       		.uleb128 0x12
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 51


 1966 00c0 06       		.uleb128 0x6
 1967 00c1 40       		.uleb128 0x40
 1968 00c2 18       		.uleb128 0x18
 1969 00c3 9742     		.uleb128 0x2117
 1970 00c5 19       		.uleb128 0x19
 1971 00c6 01       		.uleb128 0x1
 1972 00c7 13       		.uleb128 0x13
 1973 00c8 00       		.byte	0
 1974 00c9 00       		.byte	0
 1975 00ca 0C       		.uleb128 0xc
 1976 00cb 05       		.uleb128 0x5
 1977 00cc 00       		.byte	0
 1978 00cd 03       		.uleb128 0x3
 1979 00ce 0E       		.uleb128 0xe
 1980 00cf 3A       		.uleb128 0x3a
 1981 00d0 0B       		.uleb128 0xb
 1982 00d1 3B       		.uleb128 0x3b
 1983 00d2 05       		.uleb128 0x5
 1984 00d3 49       		.uleb128 0x49
 1985 00d4 13       		.uleb128 0x13
 1986 00d5 02       		.uleb128 0x2
 1987 00d6 18       		.uleb128 0x18
 1988 00d7 00       		.byte	0
 1989 00d8 00       		.byte	0
 1990 00d9 0D       		.uleb128 0xd
 1991 00da 34       		.uleb128 0x34
 1992 00db 00       		.byte	0
 1993 00dc 03       		.uleb128 0x3
 1994 00dd 0E       		.uleb128 0xe
 1995 00de 3A       		.uleb128 0x3a
 1996 00df 0B       		.uleb128 0xb
 1997 00e0 3B       		.uleb128 0x3b
 1998 00e1 05       		.uleb128 0x5
 1999 00e2 49       		.uleb128 0x49
 2000 00e3 13       		.uleb128 0x13
 2001 00e4 02       		.uleb128 0x2
 2002 00e5 18       		.uleb128 0x18
 2003 00e6 00       		.byte	0
 2004 00e7 00       		.byte	0
 2005 00e8 0E       		.uleb128 0xe
 2006 00e9 2E       		.uleb128 0x2e
 2007 00ea 01       		.byte	0x1
 2008 00eb 3F       		.uleb128 0x3f
 2009 00ec 19       		.uleb128 0x19
 2010 00ed 03       		.uleb128 0x3
 2011 00ee 0E       		.uleb128 0xe
 2012 00ef 3A       		.uleb128 0x3a
 2013 00f0 0B       		.uleb128 0xb
 2014 00f1 3B       		.uleb128 0x3b
 2015 00f2 05       		.uleb128 0x5
 2016 00f3 27       		.uleb128 0x27
 2017 00f4 19       		.uleb128 0x19
 2018 00f5 49       		.uleb128 0x49
 2019 00f6 13       		.uleb128 0x13
 2020 00f7 11       		.uleb128 0x11
 2021 00f8 01       		.uleb128 0x1
 2022 00f9 12       		.uleb128 0x12
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 52


 2023 00fa 06       		.uleb128 0x6
 2024 00fb 40       		.uleb128 0x40
 2025 00fc 18       		.uleb128 0x18
 2026 00fd 9642     		.uleb128 0x2116
 2027 00ff 19       		.uleb128 0x19
 2028 0100 01       		.uleb128 0x1
 2029 0101 13       		.uleb128 0x13
 2030 0102 00       		.byte	0
 2031 0103 00       		.byte	0
 2032 0104 0F       		.uleb128 0xf
 2033 0105 2E       		.uleb128 0x2e
 2034 0106 01       		.byte	0x1
 2035 0107 3F       		.uleb128 0x3f
 2036 0108 19       		.uleb128 0x19
 2037 0109 03       		.uleb128 0x3
 2038 010a 0E       		.uleb128 0xe
 2039 010b 3A       		.uleb128 0x3a
 2040 010c 0B       		.uleb128 0xb
 2041 010d 3B       		.uleb128 0x3b
 2042 010e 05       		.uleb128 0x5
 2043 010f 27       		.uleb128 0x27
 2044 0110 19       		.uleb128 0x19
 2045 0111 11       		.uleb128 0x11
 2046 0112 01       		.uleb128 0x1
 2047 0113 12       		.uleb128 0x12
 2048 0114 06       		.uleb128 0x6
 2049 0115 40       		.uleb128 0x40
 2050 0116 18       		.uleb128 0x18
 2051 0117 9742     		.uleb128 0x2117
 2052 0119 19       		.uleb128 0x19
 2053 011a 01       		.uleb128 0x1
 2054 011b 13       		.uleb128 0x13
 2055 011c 00       		.byte	0
 2056 011d 00       		.byte	0
 2057 011e 10       		.uleb128 0x10
 2058 011f 2E       		.uleb128 0x2e
 2059 0120 01       		.byte	0x1
 2060 0121 3F       		.uleb128 0x3f
 2061 0122 19       		.uleb128 0x19
 2062 0123 03       		.uleb128 0x3
 2063 0124 0E       		.uleb128 0xe
 2064 0125 3A       		.uleb128 0x3a
 2065 0126 0B       		.uleb128 0xb
 2066 0127 3B       		.uleb128 0x3b
 2067 0128 05       		.uleb128 0x5
 2068 0129 27       		.uleb128 0x27
 2069 012a 19       		.uleb128 0x19
 2070 012b 11       		.uleb128 0x11
 2071 012c 01       		.uleb128 0x1
 2072 012d 12       		.uleb128 0x12
 2073 012e 06       		.uleb128 0x6
 2074 012f 40       		.uleb128 0x40
 2075 0130 18       		.uleb128 0x18
 2076 0131 9642     		.uleb128 0x2116
 2077 0133 19       		.uleb128 0x19
 2078 0134 01       		.uleb128 0x1
 2079 0135 13       		.uleb128 0x13
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 53


 2080 0136 00       		.byte	0
 2081 0137 00       		.byte	0
 2082 0138 11       		.uleb128 0x11
 2083 0139 01       		.uleb128 0x1
 2084 013a 01       		.byte	0x1
 2085 013b 49       		.uleb128 0x49
 2086 013c 13       		.uleb128 0x13
 2087 013d 01       		.uleb128 0x1
 2088 013e 13       		.uleb128 0x13
 2089 013f 00       		.byte	0
 2090 0140 00       		.byte	0
 2091 0141 12       		.uleb128 0x12
 2092 0142 21       		.uleb128 0x21
 2093 0143 00       		.byte	0
 2094 0144 49       		.uleb128 0x49
 2095 0145 13       		.uleb128 0x13
 2096 0146 2F       		.uleb128 0x2f
 2097 0147 0B       		.uleb128 0xb
 2098 0148 00       		.byte	0
 2099 0149 00       		.byte	0
 2100 014a 13       		.uleb128 0x13
 2101 014b 26       		.uleb128 0x26
 2102 014c 00       		.byte	0
 2103 014d 49       		.uleb128 0x49
 2104 014e 13       		.uleb128 0x13
 2105 014f 00       		.byte	0
 2106 0150 00       		.byte	0
 2107 0151 14       		.uleb128 0x14
 2108 0152 34       		.uleb128 0x34
 2109 0153 00       		.byte	0
 2110 0154 03       		.uleb128 0x3
 2111 0155 0E       		.uleb128 0xe
 2112 0156 3A       		.uleb128 0x3a
 2113 0157 0B       		.uleb128 0xb
 2114 0158 3B       		.uleb128 0x3b
 2115 0159 0B       		.uleb128 0xb
 2116 015a 49       		.uleb128 0x49
 2117 015b 13       		.uleb128 0x13
 2118 015c 3F       		.uleb128 0x3f
 2119 015d 19       		.uleb128 0x19
 2120 015e 02       		.uleb128 0x2
 2121 015f 18       		.uleb128 0x18
 2122 0160 00       		.byte	0
 2123 0161 00       		.byte	0
 2124 0162 00       		.byte	0
 2125              		.section	.debug_aranges,"",%progbits
 2126 0000 A4000000 		.4byte	0xa4
 2127 0004 0200     		.2byte	0x2
 2128 0006 00000000 		.4byte	.Ldebug_info0
 2129 000a 04       		.byte	0x4
 2130 000b 00       		.byte	0
 2131 000c 0000     		.2byte	0
 2132 000e 0000     		.2byte	0
 2133 0010 00000000 		.4byte	.LFB0
 2134 0014 24000000 		.4byte	.LFE0-.LFB0
 2135 0018 00000000 		.4byte	.LFB1
 2136 001c C4010000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 54


 2137 0020 00000000 		.4byte	.LFB2
 2138 0024 28000000 		.4byte	.LFE2-.LFB2
 2139 0028 00000000 		.4byte	.LFB3
 2140 002c 18000000 		.4byte	.LFE3-.LFB3
 2141 0030 00000000 		.4byte	.LFB4
 2142 0034 1C000000 		.4byte	.LFE4-.LFB4
 2143 0038 00000000 		.4byte	.LFB5
 2144 003c 1C000000 		.4byte	.LFE5-.LFB5
 2145 0040 00000000 		.4byte	.LFB6
 2146 0044 48000000 		.4byte	.LFE6-.LFB6
 2147 0048 00000000 		.4byte	.LFB7
 2148 004c 44000000 		.4byte	.LFE7-.LFB7
 2149 0050 00000000 		.4byte	.LFB8
 2150 0054 1C000000 		.4byte	.LFE8-.LFB8
 2151 0058 00000000 		.4byte	.LFB9
 2152 005c 30000000 		.4byte	.LFE9-.LFB9
 2153 0060 00000000 		.4byte	.LFB10
 2154 0064 2C000000 		.4byte	.LFE10-.LFB10
 2155 0068 00000000 		.4byte	.LFB11
 2156 006c 1C000000 		.4byte	.LFE11-.LFB11
 2157 0070 00000000 		.4byte	.LFB12
 2158 0074 1C000000 		.4byte	.LFE12-.LFB12
 2159 0078 00000000 		.4byte	.LFB13
 2160 007c 30000000 		.4byte	.LFE13-.LFB13
 2161 0080 00000000 		.4byte	.LFB14
 2162 0084 2C000000 		.4byte	.LFE14-.LFB14
 2163 0088 00000000 		.4byte	.LFB15
 2164 008c A4000000 		.4byte	.LFE15-.LFB15
 2165 0090 00000000 		.4byte	.LFB16
 2166 0094 90000000 		.4byte	.LFE16-.LFB16
 2167 0098 00000000 		.4byte	.LFB17
 2168 009c 80000000 		.4byte	.LFE17-.LFB17
 2169 00a0 00000000 		.4byte	0
 2170 00a4 00000000 		.4byte	0
 2171              		.section	.debug_ranges,"",%progbits
 2172              	.Ldebug_ranges0:
 2173 0000 00000000 		.4byte	.LFB0
 2174 0004 24000000 		.4byte	.LFE0
 2175 0008 00000000 		.4byte	.LFB1
 2176 000c C4010000 		.4byte	.LFE1
 2177 0010 00000000 		.4byte	.LFB2
 2178 0014 28000000 		.4byte	.LFE2
 2179 0018 00000000 		.4byte	.LFB3
 2180 001c 18000000 		.4byte	.LFE3
 2181 0020 00000000 		.4byte	.LFB4
 2182 0024 1C000000 		.4byte	.LFE4
 2183 0028 00000000 		.4byte	.LFB5
 2184 002c 1C000000 		.4byte	.LFE5
 2185 0030 00000000 		.4byte	.LFB6
 2186 0034 48000000 		.4byte	.LFE6
 2187 0038 00000000 		.4byte	.LFB7
 2188 003c 44000000 		.4byte	.LFE7
 2189 0040 00000000 		.4byte	.LFB8
 2190 0044 1C000000 		.4byte	.LFE8
 2191 0048 00000000 		.4byte	.LFB9
 2192 004c 30000000 		.4byte	.LFE9
 2193 0050 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 55


 2194 0054 2C000000 		.4byte	.LFE10
 2195 0058 00000000 		.4byte	.LFB11
 2196 005c 1C000000 		.4byte	.LFE11
 2197 0060 00000000 		.4byte	.LFB12
 2198 0064 1C000000 		.4byte	.LFE12
 2199 0068 00000000 		.4byte	.LFB13
 2200 006c 30000000 		.4byte	.LFE13
 2201 0070 00000000 		.4byte	.LFB14
 2202 0074 2C000000 		.4byte	.LFE14
 2203 0078 00000000 		.4byte	.LFB15
 2204 007c A4000000 		.4byte	.LFE15
 2205 0080 00000000 		.4byte	.LFB16
 2206 0084 90000000 		.4byte	.LFE16
 2207 0088 00000000 		.4byte	.LFB17
 2208 008c 80000000 		.4byte	.LFE17
 2209 0090 00000000 		.4byte	0
 2210 0094 00000000 		.4byte	0
 2211              		.section	.debug_line,"",%progbits
 2212              	.Ldebug_line0:
 2213 0000 9C020000 		.section	.debug_str,"MS",%progbits,1
 2213      02004A00 
 2213      00000201 
 2213      FB0E0D00 
 2213      01010101 
 2214              	.LASF28:
 2215 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2215      5341525F 
 2215      5365715F 
 2215      315F5374 
 2215      6F70436F 
 2216              	.LASF19:
 2217 001a 72656733 		.ascii	"reg32\000"
 2217      3200
 2218              	.LASF59:
 2219 0020 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2219      4320342E 
 2219      392E3320 
 2219      32303135 
 2219      30333033 
 2220 0053 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2220      20726576 
 2220      6973696F 
 2220      6E203232 
 2220      31323230 
 2221 0086 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2221      66756E63 
 2221      74696F6E 
 2221      2D736563 
 2221      74696F6E 
 2222              	.LASF57:
 2223 00ae 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2223      5341525F 
 2223      5365715F 
 2223      315F6F66 
 2223      66736574 
 2224              	.LASF45:
 2225 00c3 6F666673 		.ascii	"offset\000"
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 56


 2225      657400
 2226              	.LASF15:
 2227 00ca 666C6F61 		.ascii	"float\000"
 2227      7400
 2228              	.LASF41:
 2229 00d0 68696768 		.ascii	"highLimit\000"
 2229      4C696D69 
 2229      7400
 2230              	.LASF38:
 2231 00da 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2231      5341525F 
 2231      5365715F 
 2231      315F5365 
 2231      744C6F77 
 2232              	.LASF58:
 2233 00f4 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2233      5341525F 
 2233      5365715F 
 2233      315F636F 
 2233      756E7473 
 2234              	.LASF52:
 2235 0112 75566F6C 		.ascii	"uVolts\000"
 2235      747300
 2236              	.LASF56:
 2237 0119 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2237      5341525F 
 2237      5365715F 
 2237      315F696E 
 2237      69745661 
 2238              	.LASF18:
 2239 012f 63686172 		.ascii	"char\000"
 2239      00
 2240              	.LASF29:
 2241 0134 73746174 		.ascii	"status\000"
 2241      757300
 2242              	.LASF51:
 2243 013b 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2243      5341525F 
 2243      5365715F 
 2243      315F436F 
 2243      756E7473 
 2244              	.LASF14:
 2245 0159 666C6F61 		.ascii	"float32\000"
 2245      74333200 
 2246              	.LASF60:
 2247 0161 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2247      72617465 
 2247      645F536F 
 2247      75726365 
 2247      5C50536F 
 2248              	.LASF22:
 2249 0188 746D7052 		.ascii	"tmpRegVal\000"
 2249      65675661 
 2249      6C00
 2250              	.LASF1:
 2251 0192 756E7369 		.ascii	"unsigned char\000"
 2251      676E6564 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 57


 2251      20636861 
 2251      7200
 2252              	.LASF26:
 2253 01a0 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2253      5341525F 
 2253      5365715F 
 2253      315F5374 
 2253      6F7000
 2254              	.LASF40:
 2255 01b3 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2255      5341525F 
 2255      5365715F 
 2255      315F5365 
 2255      74486967 
 2256              	.LASF12:
 2257 01ce 696E7431 		.ascii	"int16\000"
 2257      3600
 2258              	.LASF5:
 2259 01d4 6C6F6E67 		.ascii	"long unsigned int\000"
 2259      20756E73 
 2259      69676E65 
 2259      6420696E 
 2259      7400
 2260              	.LASF13:
 2261 01e6 696E7433 		.ascii	"int32\000"
 2261      3200
 2262              	.LASF25:
 2263 01ec 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2263      5341525F 
 2263      5365715F 
 2263      315F456E 
 2263      61626C65 
 2264              	.LASF55:
 2265 0201 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2265      5341525F 
 2265      5365715F 
 2265      315F6368 
 2265      616E6E65 
 2266              	.LASF24:
 2267 021e 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2267      5341525F 
 2267      5365715F 
 2267      315F5374 
 2267      61727400 
 2268              	.LASF16:
 2269 0232 646F7562 		.ascii	"double\000"
 2269      6C6500
 2270              	.LASF53:
 2271 0239 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2271      5341525F 
 2271      5365715F 
 2271      315F436F 
 2271      756E7473 
 2272              	.LASF46:
 2273 0256 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2273      5341525F 
 2273      5365715F 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 58


 2273      315F5365 
 2273      74476169 
 2274              	.LASF39:
 2275 026c 6C6F774C 		.ascii	"lowLimit\000"
 2275      696D6974 
 2275      00
 2276              	.LASF47:
 2277 0275 61646347 		.ascii	"adcGain\000"
 2277      61696E00 
 2278              	.LASF10:
 2279 027d 75696E74 		.ascii	"uint16\000"
 2279      313600
 2280              	.LASF49:
 2281 0284 61646343 		.ascii	"adcCounts\000"
 2281      6F756E74 
 2281      7300
 2282              	.LASF11:
 2283 028e 75696E74 		.ascii	"uint32\000"
 2283      333200
 2284              	.LASF43:
 2285 0295 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2285      5341525F 
 2285      5365715F 
 2285      315F5365 
 2285      74536174 
 2286              	.LASF8:
 2287 02ae 756E7369 		.ascii	"unsigned int\000"
 2287      676E6564 
 2287      20696E74 
 2287      00
 2288              	.LASF27:
 2289 02bb 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2289      5341525F 
 2289      5365715F 
 2289      315F5374 
 2289      61727443 
 2290              	.LASF23:
 2291 02d6 636F756E 		.ascii	"counts\000"
 2291      747300
 2292              	.LASF7:
 2293 02dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 2293      206C6F6E 
 2293      6720756E 
 2293      7369676E 
 2293      65642069 
 2294              	.LASF44:
 2295 02f4 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2295      5341525F 
 2295      5365715F 
 2295      315F5365 
 2295      744F6666 
 2296              	.LASF36:
 2297 030c 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2297      5341525F 
 2297      5365715F 
 2297      315F5365 
 2297      74436861 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 59


 2298              	.LASF61:
 2299 0326 433A5C70 		.ascii	"C:\\psoc\\chamonix\\fixed\\Fixed\\fixed.cydsn\000"
 2299      736F635C 
 2299      6368616D 
 2299      6F6E6978 
 2299      5C666978 
 2300              	.LASF54:
 2301 034f 766F6C74 		.ascii	"volts\000"
 2301      7300
 2302              	.LASF33:
 2303 0355 6368616E 		.ascii	"chan\000"
 2303      00
 2304              	.LASF50:
 2305 035a 6D566F6C 		.ascii	"mVolts\000"
 2305      747300
 2306              	.LASF20:
 2307 0361 73697A65 		.ascii	"sizetype\000"
 2307      74797065 
 2307      00
 2308              	.LASF6:
 2309 036a 6C6F6E67 		.ascii	"long long int\000"
 2309      206C6F6E 
 2309      6720696E 
 2309      7400
 2310              	.LASF37:
 2311 0378 6D61736B 		.ascii	"mask\000"
 2311      00
 2312              	.LASF21:
 2313 037d 63684E75 		.ascii	"chNum\000"
 2313      6D00
 2314              	.LASF48:
 2315 0383 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2315      5341525F 
 2315      5365715F 
 2315      315F436F 
 2315      756E7473 
 2316              	.LASF32:
 2317 03a1 7265744D 		.ascii	"retMode\000"
 2317      6F646500 
 2318              	.LASF2:
 2319 03a9 73686F72 		.ascii	"short int\000"
 2319      7420696E 
 2319      7400
 2320              	.LASF9:
 2321 03b3 75696E74 		.ascii	"uint8\000"
 2321      3800
 2322              	.LASF42:
 2323 03b9 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2323      5341525F 
 2323      5365715F 
 2323      315F5365 
 2323      744C696D 
 2324              	.LASF4:
 2325 03d4 6C6F6E67 		.ascii	"long int\000"
 2325      20696E74 
 2325      00
 2326              	.LASF30:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccOmguvy.s 			page 60


 2327 03dd 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2327      5341525F 
 2327      5365715F 
 2327      315F4973 
 2327      456E6443 
 2328              	.LASF0:
 2329 03fb 7369676E 		.ascii	"signed char\000"
 2329      65642063 
 2329      68617200 
 2330              	.LASF3:
 2331 0407 73686F72 		.ascii	"short unsigned int\000"
 2331      7420756E 
 2331      7369676E 
 2331      65642069 
 2331      6E7400
 2332              	.LASF34:
 2333 041a 72657375 		.ascii	"result\000"
 2333      6C7400
 2334              	.LASF17:
 2335 0421 696E7436 		.ascii	"int64\000"
 2335      3400
 2336              	.LASF35:
 2337 0427 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2337      5341525F 
 2337      5365715F 
 2337      315F496E 
 2337      697400
 2338              	.LASF31:
 2339 043a 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2339      5341525F 
 2339      5365715F 
 2339      315F4765 
 2339      74526573 
 2340              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
