ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"I2C_LED_I2C_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_LED_I2C_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	I2C_LED_I2C_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	I2C_LED_I2C_ISR, %function
  25              	I2C_LED_I2C_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\I2C_LED_I2C_INT.c"
   1:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * \file I2C_LED_I2C_INT.c
   3:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * \version 3.20
   4:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *
   5:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * \brief
   6:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *  the SCB Component in I2C mode.
   8:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *
   9:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * Note:
  10:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *
  11:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * \copyright
  13:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  19:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #include "I2C_LED_PVT.h"
  20:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #include "I2C_LED_I2C_PVT.h"
  21:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  23:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  24:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** * Function Name: I2C_LED_I2C_ISR
  26:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** ****************************************************************************//**
  27:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *
  28:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *  Handles the Interrupt Service Routine for the SCB I2C mode.
  29:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *
  30:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** *******************************************************************************/
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 2


  31:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** CY_ISR(I2C_LED_I2C_ISR)
  32:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  33:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     uint32 diffCount;
  34:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     uint32 endTransfer;
  35:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  36:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #ifdef I2C_LED_I2C_ISR_ENTRY_CALLBACK
  37:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     I2C_LED_I2C_ISR_EntryCallback();
  38:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #endif /* I2C_LED_I2C_ISR_ENTRY_CALLBACK */
  39:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  40:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #if (I2C_LED_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
  41:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     uint32 response;
  42:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  43:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     response = I2C_LED_I2C_ACK_ADDR;
  44:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #endif /* (I2C_LED_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
  45:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  46:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     endTransfer = 0u; /* Continue active transfer */
  40              		.loc 1 46 0
  41 0006 0023     		movs	r3, #0
  42 0008 3B60     		str	r3, [r7]
  47:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  48:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     /* Calls customer routine if registered */
  49:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     if(NULL != I2C_LED_customIntrHandler)
  43              		.loc 1 49 0
  44 000a BE4B     		ldr	r3, .L45
  45 000c 1B68     		ldr	r3, [r3]
  46 000e 002B     		cmp	r3, #0
  47 0010 02D0     		beq	.L2
  50:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     {
  51:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_customIntrHandler();
  48              		.loc 1 51 0
  49 0012 BC4B     		ldr	r3, .L45
  50 0014 1B68     		ldr	r3, [r3]
  51 0016 9847     		blx	r3
  52              	.L2:
  52:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     }
  53:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  54:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     if(I2C_LED_CHECK_INTR_I2C_EC_MASKED(I2C_LED_INTR_I2C_EC_WAKE_UP))
  53              		.loc 1 54 0
  54 0018 BB4B     		ldr	r3, .L45+4
  55 001a 1B68     		ldr	r3, [r3]
  56 001c 0122     		movs	r2, #1
  57 001e 1340     		ands	r3, r2
  58 0020 02D0     		beq	.L3
  55:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     {
  56:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         /* Mask-off after wakeup */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 3


  57:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_SetI2CExtClkInterruptMode(I2C_LED_NO_INTR_SOURCES);
  59              		.loc 1 57 0
  60 0022 BA4B     		ldr	r3, .L45+8
  61 0024 0022     		movs	r2, #0
  62 0026 1A60     		str	r2, [r3]
  63              	.L3:
  58:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     }
  59:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  60:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     /* Master and Slave error tracking:
  61:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     * Add the master state check to track only the master errors when the master is active or
  62:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     * track slave errors when the slave is active or idle.
  63:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     * A special MMS case: in the address phase with misplaced Start: the master sets the LOST_ARB a
  64:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     * slave BUS_ERR. The valid event is LOST_ARB comes from the master.
  65:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     */
  66:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     if(I2C_LED_CHECK_I2C_FSM_MASTER)
  64              		.loc 1 66 0
  65 0028 B94B     		ldr	r3, .L45+12
  66 002a 1B78     		ldrb	r3, [r3]
  67 002c DBB2     		uxtb	r3, r3
  68 002e 2022     		movs	r2, #32
  69 0030 1340     		ands	r3, r2
  70 0032 DBB2     		uxtb	r3, r3
  71 0034 002B     		cmp	r3, #0
  72 0036 38D0     		beq	.L4
  67:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     {
  68:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #if(I2C_LED_I2C_MASTER)
  69:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         {
  70:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* INTR_MASTER_I2C_BUS_ERROR:
  71:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * A misplaced Start or Stop condition occurred on the bus: complete the transaction.
  72:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The interrupt is cleared in I2C_FSM_EXIT_IDLE.
  73:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
  74:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(I2C_LED_CHECK_INTR_MASTER_MASKED(I2C_LED_INTR_MASTER_I2C_BUS_ERROR))
  73              		.loc 1 74 0
  74 0038 B64B     		ldr	r3, .L45+16
  75 003a 1A68     		ldr	r2, [r3]
  76 003c 8023     		movs	r3, #128
  77 003e 5B00     		lsls	r3, r3, #1
  78 0040 1340     		ands	r3, r2
  79 0042 0AD0     		beq	.L5
  75:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
  76:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_mstrStatus |= (uint16) (I2C_LED_I2C_MSTAT_ERR_XFER |
  80              		.loc 1 76 0
  81 0044 B44B     		ldr	r3, .L45+20
  82 0046 1B88     		ldrh	r3, [r3]
  83 0048 9BB2     		uxth	r3, r3
  84 004a C022     		movs	r2, #192
  85 004c 9200     		lsls	r2, r2, #2
  86 004e 1343     		orrs	r3, r2
  87 0050 9AB2     		uxth	r2, r3
  88 0052 B14B     		ldr	r3, .L45+20
  89 0054 1A80     		strh	r2, [r3]
  77:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                          I2C_LED_I2C_MSTAT_ERR_BUS_ERROR);
  78:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  79:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
  90              		.loc 1 79 0
  91 0056 0123     		movs	r3, #1
  92 0058 3B60     		str	r3, [r7]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 4


  93              	.L5:
  80:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
  81:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  82:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* INTR_MASTER_I2C_ARB_LOST:
  83:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The MultiMaster lost arbitrage during transaction.
  84:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * A Misplaced Start or Stop condition is treated as lost arbitration when the master dr
  85:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The interrupt source is cleared in I2C_FSM_EXIT_IDLE.
  86:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
  87:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(I2C_LED_CHECK_INTR_MASTER_MASKED(I2C_LED_INTR_MASTER_I2C_ARB_LOST))
  94              		.loc 1 87 0
  95 005a AE4B     		ldr	r3, .L45+16
  96 005c 1B68     		ldr	r3, [r3]
  97 005e 0122     		movs	r2, #1
  98 0060 1340     		ands	r3, r2
  99 0062 0AD0     		beq	.L6
  88:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
  89:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_mstrStatus |= (uint16) (I2C_LED_I2C_MSTAT_ERR_XFER |
 100              		.loc 1 89 0
 101 0064 AC4B     		ldr	r3, .L45+20
 102 0066 1B88     		ldrh	r3, [r3]
 103 0068 9BB2     		uxth	r3, r3
 104 006a 9022     		movs	r2, #144
 105 006c 9200     		lsls	r2, r2, #2
 106 006e 1343     		orrs	r3, r2
 107 0070 9AB2     		uxth	r2, r3
 108 0072 A94B     		ldr	r3, .L45+20
 109 0074 1A80     		strh	r2, [r3]
  90:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                          I2C_LED_I2C_MSTAT_ERR_ARB_LOST);
  91:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  92:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 110              		.loc 1 92 0
 111 0076 0123     		movs	r3, #1
 112 0078 3B60     		str	r3, [r7]
 113              	.L6:
  93:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
  94:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
  95:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             #if(I2C_LED_I2C_MULTI_MASTER_SLAVE)
  96:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
  97:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* I2C_MASTER_CMD_M_START_ON_IDLE:
  98:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 * MultiMaster-Slave does not generate start, because Slave was addressed.
  99:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 * Pass control to slave.
 100:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 */
 101:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(I2C_LED_CHECK_I2C_MASTER_CMD(I2C_LED_I2C_MASTER_CMD_M_START_ON_IDLE))
 102:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 103:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_mstrStatus |= (uint16) (I2C_LED_I2C_MSTAT_ERR_XFER |
 104:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                              I2C_LED_I2C_MSTAT_ERR_ABORT_XFER);
 105:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 106:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 107:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 108:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 109:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             #endif
 110:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 111:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* The error handling common part:
 112:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * Sets a completion flag of the master transaction and passes control to:
 113:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             *  - I2C_FSM_EXIT_IDLE - to complete transaction in case of: ARB_LOST or BUS_ERR.
 114:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             *  - I2C_FSM_IDLE      - to take chance for the slave to process incoming transaction.
 115:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 5


 116:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(0u != endTransfer)
 114              		.loc 1 116 0
 115 007a 3B68     		ldr	r3, [r7]
 116 007c 002B     		cmp	r3, #0
 117 007e 14D0     		beq	.L4
 117:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 118:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Set completion flags for master */
 119:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_mstrStatus |= (uint16) I2C_LED_GET_I2C_MSTAT_CMPLT;
 118              		.loc 1 119 0
 119 0080 A34B     		ldr	r3, .L45+12
 120 0082 1B78     		ldrb	r3, [r3]
 121 0084 DBB2     		uxtb	r3, r3
 122 0086 0122     		movs	r2, #1
 123 0088 1340     		ands	r3, r2
 124 008a DBB2     		uxtb	r3, r3
 125 008c 002B     		cmp	r3, #0
 126 008e 01D0     		beq	.L8
 127              		.loc 1 119 0 is_stmt 0 discriminator 1
 128 0090 0123     		movs	r3, #1
 129 0092 00E0     		b	.L9
 130              	.L8:
 131              		.loc 1 119 0 discriminator 2
 132 0094 0223     		movs	r3, #2
 133              	.L9:
 134              		.loc 1 119 0 discriminator 4
 135 0096 A04A     		ldr	r2, .L45+20
 136 0098 1288     		ldrh	r2, [r2]
 137 009a 92B2     		uxth	r2, r2
 138 009c 1343     		orrs	r3, r2
 139 009e 9AB2     		uxth	r2, r3
 140 00a0 9D4B     		ldr	r3, .L45+20
 141 00a2 1A80     		strh	r2, [r3]
 120:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 121:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #if(I2C_LED_I2C_MULTI_MASTER_SLAVE)
 122:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 123:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     if(I2C_LED_CHECK_I2C_FSM_ADDR)
 124:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 125:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Start generation is set after another master starts accessing Slave.
 126:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * Clean-up master and turn to slave. Set state to IDLE.
 127:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         */
 128:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         if(I2C_LED_CHECK_I2C_MASTER_CMD(I2C_LED_I2C_MASTER_CMD_M_START_ON_IDLE))
 129:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 130:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_I2C_MASTER_CLEAR_START;
 131:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 132:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Slave 
 133:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 134:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Valid arbitration lost on the address phase happens only when: master LO
 135:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * slave BUS_ERR is cleared. Only in that case set the state to IDLE without
 136:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         */
 137:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else if((!I2C_LED_CHECK_INTR_SLAVE_MASKED(I2C_LED_INTR_SLAVE_I2C_BUS_ERROR)
 138:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                && I2C_LED_CHECK_INTR_MASTER_MASKED(I2C_LED_INTR_MASTER_I2C_ARB_LOST
 139:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 140:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Slave 
 141:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 142:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else
 143:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 144:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             endTransfer = 0u; /* Causes I2C_FSM_EXIT_IDLE to be set below */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 6


 145:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 146:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 147:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         if(0u != endTransfer) /* Clean-up master to proceed with slave */
 148:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 149:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_CLEAR_TX_FIFO; /* Shifter keeps address, clear it */
 150:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 151:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_DISABLE_MASTER_AUTO_DATA_ACK; /* In case of reading disable aut
 152:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 153:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Clean-up master interrupt sources */
 154:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_ClearMasterInterruptSource(I2C_LED_INTR_MASTER_ALL);
 155:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 156:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Disable data processing interrupts: they have to be cleared before *
 157:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_SetRxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 158:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_SetTxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 159:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 160:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_state = I2C_LED_I2C_FSM_IDLE;
 161:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 162:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else
 163:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 164:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Set I2C_FSM_EXIT_IDLE for BUS_ERR and ARB_LOST (that is really bus e
 165:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_state = I2C_LED_I2C_FSM_EXIT_IDLE;
 166:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 167:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 168:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     else
 169:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 170:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Set I2C_FSM_EXIT_IDLE if any other state than address */
 171:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_state = I2C_LED_I2C_FSM_EXIT_IDLE;
 172:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 173:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 174:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #else
 175:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 176:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* In case of LOST*/
 177:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_state = I2C_LED_I2C_FSM_EXIT_IDLE;
 142              		.loc 1 177 0 is_stmt 1 discriminator 4
 143 00a4 9A4B     		ldr	r3, .L45+12
 144 00a6 0022     		movs	r2, #0
 145 00a8 1A70     		strb	r2, [r3]
 146              	.L4:
 178:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 179:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #endif
 180:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 181:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         }
 182:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #endif
 183:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     }
 184:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     else /* (I2C_LED_CHECK_I2C_FSM_SLAVE) */
 185:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     {
 186:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #if(I2C_LED_I2C_SLAVE)
 187:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         {
 188:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* INTR_SLAVE_I2C_BUS_ERROR or I2C_LED_INTR_SLAVE_I2C_ARB_LOST:
 189:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * A Misplaced Start or Stop condition occurred on the bus: set a flag
 190:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * to notify an error condition.
 191:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
 192:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(I2C_LED_CHECK_INTR_SLAVE_MASKED(I2C_LED_INTR_SLAVE_I2C_BUS_ERROR |
 193:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                         I2C_LED_INTR_SLAVE_I2C_ARB_LOST))
 194:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 195:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(I2C_LED_CHECK_I2C_FSM_RD)
 196:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 7


 197:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* TX direction: master reads from slave */
 198:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slStatus &= (uint8) ~I2C_LED_I2C_SSTAT_RD_BUSY;
 199:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slStatus |= (uint8) (I2C_LED_I2C_SSTAT_RD_ERR |
 200:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                           I2C_LED_I2C_SSTAT_RD_CMPLT);
 201:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 202:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 else
 203:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 204:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* RX direction: master writes into slave */
 205:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slStatus &= (uint8) ~I2C_LED_I2C_SSTAT_WR_BUSY;
 206:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slStatus |= (uint8) (I2C_LED_I2C_SSTAT_WR_ERR |
 207:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                           I2C_LED_I2C_SSTAT_WR_CMPLT);
 208:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 209:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 210:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_state = I2C_LED_I2C_FSM_EXIT_IDLE;
 211:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 212:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         }
 213:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #endif
 214:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     }
 215:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 216:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     /* States description:
 217:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     * Any Master operation starts from: the ADDR_RD/WR state as the master generates traffic on the
 218:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     * Any Slave operation starts from: the IDLE state as the slave always waits for actions from th
 219:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     */
 220:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 221:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     /* FSM Master */
 222:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     if(I2C_LED_CHECK_I2C_FSM_MASTER)
 147              		.loc 1 222 0
 148 00aa 994B     		ldr	r3, .L45+12
 149 00ac 1B78     		ldrb	r3, [r3]
 150 00ae DBB2     		uxtb	r3, r3
 151 00b0 2022     		movs	r2, #32
 152 00b2 1340     		ands	r3, r2
 153 00b4 DBB2     		uxtb	r3, r3
 154 00b6 002B     		cmp	r3, #0
 155 00b8 00D1     		bne	.LCB119
 156 00ba A2E1     		b	.L10	@long jump
 157              	.LCB119:
 223:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     {
 224:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #if(I2C_LED_I2C_MASTER)
 225:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         {
 226:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* INTR_MASTER_I2C_STOP:
 227:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * A Stop condition was generated by the master: the end of the transaction.
 228:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * Set completion flags to notify the API.
 229:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
 230:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(I2C_LED_CHECK_INTR_MASTER_MASKED(I2C_LED_INTR_MASTER_I2C_STOP))
 158              		.loc 1 230 0
 159 00bc 954B     		ldr	r3, .L45+16
 160 00be 1B68     		ldr	r3, [r3]
 161 00c0 1022     		movs	r2, #16
 162 00c2 1340     		ands	r3, r2
 163 00c4 18D0     		beq	.L11
 231:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 232:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_ClearMasterInterruptSource(I2C_LED_INTR_MASTER_I2C_STOP);
 164              		.loc 1 232 0
 165 00c6 954B     		ldr	r3, .L45+24
 166 00c8 1022     		movs	r2, #16
 167 00ca 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 8


 233:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 234:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_mstrStatus |= (uint16) I2C_LED_GET_I2C_MSTAT_CMPLT;
 168              		.loc 1 234 0
 169 00cc 904B     		ldr	r3, .L45+12
 170 00ce 1B78     		ldrb	r3, [r3]
 171 00d0 DBB2     		uxtb	r3, r3
 172 00d2 0122     		movs	r2, #1
 173 00d4 1340     		ands	r3, r2
 174 00d6 DBB2     		uxtb	r3, r3
 175 00d8 002B     		cmp	r3, #0
 176 00da 01D0     		beq	.L12
 177              		.loc 1 234 0 is_stmt 0 discriminator 1
 178 00dc 0123     		movs	r3, #1
 179 00de 00E0     		b	.L13
 180              	.L12:
 181              		.loc 1 234 0 discriminator 2
 182 00e0 0223     		movs	r3, #2
 183              	.L13:
 184              		.loc 1 234 0 discriminator 4
 185 00e2 8D4A     		ldr	r2, .L45+20
 186 00e4 1288     		ldrh	r2, [r2]
 187 00e6 92B2     		uxth	r2, r2
 188 00e8 1343     		orrs	r3, r2
 189 00ea 9AB2     		uxth	r2, r3
 190 00ec 8A4B     		ldr	r3, .L45+20
 191 00ee 1A80     		strh	r2, [r3]
 235:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_state       = I2C_LED_I2C_FSM_IDLE;
 192              		.loc 1 235 0 is_stmt 1 discriminator 4
 193 00f0 874B     		ldr	r3, .L45+12
 194 00f2 1022     		movs	r2, #16
 195 00f4 1A70     		strb	r2, [r3]
 236:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 237:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             else
 238:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 239:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(I2C_LED_CHECK_I2C_FSM_ADDR) /* Address stage */
 240:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 241:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* INTR_MASTER_I2C_NACK:
 242:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     * The master sent an address but it was NACKed by the slave. Complete transacti
 243:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     */
 244:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     if(I2C_LED_CHECK_INTR_MASTER_MASKED(I2C_LED_INTR_MASTER_I2C_NACK))
 245:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 246:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_ClearMasterInterruptSource(I2C_LED_INTR_MASTER_I2C_NACK);
 247:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 248:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_mstrStatus |= (uint16) (I2C_LED_I2C_MSTAT_ERR_XFER |
 249:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                  I2C_LED_I2C_MSTAT_ERR_ADDR_NAK);
 250:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 251:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 252:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 253:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* INTR_TX_UNDERFLOW. The master sent an address:
 254:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     *  - TX direction: the clock is stretched after the ACK phase, because the TX F
 255:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     *    EMPTY. The TX EMPTY cleans all the TX interrupt sources.
 256:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     *  - RX direction: the 1st byte is received, but there is no ACK permission,
 257:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     *    the clock is stretched after 1 byte is received.
 258:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     */
 259:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     else
 260:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 261:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         if(I2C_LED_CHECK_I2C_FSM_RD) /* Reading */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 9


 262:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 263:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_state = I2C_LED_I2C_FSM_MSTR_RD_DATA;
 264:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 265:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else /* Writing */
 266:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 267:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_state = I2C_LED_I2C_FSM_MSTR_WR_DATA;
 268:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             if(0u != I2C_LED_mstrWrBufSize)
 269:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 270:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 /* Enable INTR.TX_EMPTY if there is data to transmit */
 271:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_SetTxInterruptMode(I2C_LED_INTR_TX_EMPTY);
 272:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 273:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 274:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 275:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 276:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 277:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(I2C_LED_CHECK_I2C_FSM_DATA) /* Data phase */
 278:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 279:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     if(I2C_LED_CHECK_I2C_FSM_RD) /* Reading */
 280:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 281:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* INTR_RX_FULL:
 282:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * RX direction: the master received 8 bytes.
 283:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * Get data from RX FIFO and decide whether to ACK or  NACK the following by
 284:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         */
 285:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         if(I2C_LED_CHECK_INTR_RX_MASKED(I2C_LED_INTR_RX_FULL))
 286:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 287:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Calculate difference */
 288:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             diffCount =  I2C_LED_mstrRdBufSize -
 289:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                         (I2C_LED_mstrRdBufIndex + I2C_LED_GET_RX_FIFO_ENTRIES);
 290:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 291:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Proceed transaction or end it when RX FIFO becomes FULL again */
 292:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             if(diffCount > I2C_LED_I2C_FIFO_SIZE)
 293:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 294:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 diffCount = I2C_LED_I2C_FIFO_SIZE;
 295:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 296:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             else
 297:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 298:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 if(0u == diffCount)
 299:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 {
 300:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     I2C_LED_DISABLE_MASTER_AUTO_DATA_ACK;
 301:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 302:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     diffCount   = I2C_LED_I2C_FIFO_SIZE;
 303:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 304:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 }
 305:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 306:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 307:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             for(; (0u != diffCount); diffCount--)
 308:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 309:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_mstrRdBufPtr[I2C_LED_mstrRdBufIndex] = (uint8)
 310:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                                         I2C_LED_RX_
 311:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_mstrRdBufIndex++;
 312:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 313:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 314:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* INTR_RX_NOT_EMPTY:
 315:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * RX direction: the master received one data byte, ACK or NACK it.
 316:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * The last byte is stored and NACKed by the master. The NACK and Stop is
 317:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * generated by one command generate Stop.
 318:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 10


 319:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else if(I2C_LED_CHECK_INTR_RX_MASKED(I2C_LED_INTR_RX_NOT_EMPTY))
 320:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 321:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Put data in component buffer */
 322:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_mstrRdBufPtr[I2C_LED_mstrRdBufIndex] = (uint8) I2C_LED_RX_FIFO_
 323:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_mstrRdBufIndex++;
 324:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 325:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             if(I2C_LED_mstrRdBufIndex < I2C_LED_mstrRdBufSize)
 326:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 327:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_I2C_MASTER_GENERATE_ACK;
 328:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 329:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             else
 330:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 331:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 332:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 333:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 334:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else
 335:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 336:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Do nothing */
 337:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 338:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 339:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_ClearRxInterruptSource(I2C_LED_INTR_RX_ALL);
 340:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 341:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     else /* Writing */
 342:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 343:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* INTR_MASTER_I2C_NACK :
 344:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * The master writes data to the slave and NACK was received: not all the by
 345:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * written to the slave from the TX FIFO. Revert the index if there is data 
 346:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * the TX FIFO and pass control to a complete transfer.
 347:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         */
 348:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         if(I2C_LED_CHECK_INTR_MASTER_MASKED(I2C_LED_INTR_MASTER_I2C_NACK))
 349:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 350:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_ClearMasterInterruptSource(I2C_LED_INTR_MASTER_I2C_NACK);
 351:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 352:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Rollback write buffer index: NACKed byte remains in shifter */
 353:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_mstrWrBufIndexTmp -= (I2C_LED_GET_TX_FIFO_ENTRIES +
 354:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                    I2C_LED_GET_TX_FIFO_SR_VALID);
 355:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 356:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Update number of transferred bytes */
 357:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_mstrWrBufIndex = I2C_LED_mstrWrBufIndexTmp;
 358:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 359:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_mstrStatus |= (uint16) (I2C_LED_I2C_MSTAT_ERR_XFER |
 360:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                      I2C_LED_I2C_MSTAT_ERR_SHORT_XF
 361:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 362:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_CLEAR_TX_FIFO;
 363:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 364:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 365:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 366:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* INTR_TX_EMPTY :
 367:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * TX direction: the TX FIFO is EMPTY, the data from the buffer needs to be 
 368:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * When there is no data in the component buffer, the underflow interrupt is
 369:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * enabled to catch when all the data has been transferred.
 370:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         */
 371:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else if(I2C_LED_CHECK_INTR_TX_MASKED(I2C_LED_INTR_TX_EMPTY))
 372:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 373:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             while(I2C_LED_I2C_FIFO_SIZE != I2C_LED_GET_TX_FIFO_ENTRIES)
 374:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 375:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 /* The temporary mstrWrBufIndexTmp is used because slave could NACK
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 11


 376:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 * roll-back required in this case. The mstrWrBufIndex is updated at
 377:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 */
 378:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 if(I2C_LED_mstrWrBufIndexTmp < I2C_LED_mstrWrBufSize)
 379:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 {
 380:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 #if(!I2C_LED_CY_SCBIP_V0)
 381:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                    /* Clear INTR_TX.UNDERFLOW before putting the last byte into TX 
 382:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     * a proper trigger at the end of transaction when INTR_TX.UNDER
 383:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     * event. Ticket ID# 156735.
 384:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     */
 385:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     if(I2C_LED_mstrWrBufIndexTmp == (I2C_LED_mstrWrBufSize - 1u))
 386:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     {
 387:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                         I2C_LED_ClearTxInterruptSource(I2C_LED_INTR_TX_UNDERFLOW);
 388:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                         I2C_LED_SetTxInterruptMode(I2C_LED_INTR_TX_UNDERFLOW);
 389:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     }
 390:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                  #endif /* (!I2C_LED_CY_SCBIP_V0) */
 391:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 392:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     /* Put data into TX FIFO */
 393:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     I2C_LED_TX_FIFO_WR_REG = (uint32) I2C_LED_mstrWrBufPtr[I2C_LED_
 394:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     I2C_LED_mstrWrBufIndexTmp++;
 395:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 }
 396:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 else
 397:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 {
 398:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     break; /* No more data to put */
 399:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 }
 400:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 401:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 402:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #if(I2C_LED_CY_SCBIP_V0)
 403:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             if(I2C_LED_mstrWrBufIndexTmp == I2C_LED_mstrWrBufSize)
 404:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 405:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_SetTxInterruptMode(I2C_LED_INTR_TX_UNDERFLOW);
 406:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 407:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 408:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_ClearTxInterruptSource(I2C_LED_INTR_TX_ALL);
 409:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #else
 410:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_ClearTxInterruptSource(I2C_LED_INTR_TX_EMPTY);
 411:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #endif /* (I2C_LED_CY_SCBIP_V0) */
 412:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 413:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* INTR_TX_UNDERFLOW:
 414:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * TX direction: all data from the TX FIFO was transferred to the slave.
 415:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * The transaction needs to be completed.
 416:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         */
 417:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else if(I2C_LED_CHECK_INTR_TX_MASKED(I2C_LED_INTR_TX_UNDERFLOW))
 418:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 419:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Update number of transferred bytes */
 420:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_mstrWrBufIndex = I2C_LED_mstrWrBufIndexTmp;
 421:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 422:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 423:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 424:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else
 425:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 426:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Do nothing */
 427:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 428:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 429:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 430:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 431:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(0u != endTransfer) /* Complete transfer */
 432:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 12


 433:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Clean-up master after reading: only in case of NACK */
 434:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_DISABLE_MASTER_AUTO_DATA_ACK;
 435:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 436:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Disable data processing interrupts: they have to be cleared before */
 437:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_SetRxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 438:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_SetTxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 439:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 440:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     if(I2C_LED_CHECK_I2C_MODE_NO_STOP(I2C_LED_mstrControl))
 441:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 442:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* On-going transaction is suspended: the ReStart is generated by the API r
 443:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_mstrStatus |= (uint16) (I2C_LED_I2C_MSTAT_XFER_HALT |
 444:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                  I2C_LED_GET_I2C_MSTAT_CMPLT);
 445:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 446:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_state = I2C_LED_I2C_FSM_MSTR_HALT;
 447:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 448:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     else
 449:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 450:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Complete transaction: exclude the data processing state and generate Sto
 451:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * The completion status will be set after Stop generation.
 452:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * A special case is read: because NACK and Stop are generated by the comman
 453:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * Lost arbitration can occur during NACK generation when
 454:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * the other master is still reading from the slave.
 455:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         */
 456:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_I2C_MASTER_GENERATE_STOP;
 457:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 458:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 459:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 460:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 461:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         } /* (I2C_LED_I2C_MASTER) */
 462:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #endif
 463:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 464:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     } /* (I2C_LED_CHECK_I2C_FSM_MASTER) */
 465:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 466:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 467:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     /* FSM Slave */
 468:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     else if(I2C_LED_CHECK_I2C_FSM_SLAVE)
 469:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     {
 470:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #if(I2C_LED_I2C_SLAVE)
 471:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         {
 472:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* INTR_SLAVE_NACK:
 473:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The master completes reading the slave: the appropriate flags have to be set.
 474:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The TX FIFO is cleared after an overflow condition is set.
 475:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
 476:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(I2C_LED_CHECK_INTR_SLAVE_MASKED(I2C_LED_INTR_SLAVE_I2C_NACK))
 477:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 478:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_ClearSlaveInterruptSource(I2C_LED_INTR_SLAVE_I2C_NACK);
 479:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 480:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* All entries that remain in TX FIFO are: FIFO Size + 1 (SHIFTER) */
 481:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 diffCount = (I2C_LED_GET_TX_FIFO_ENTRIES + I2C_LED_GET_TX_FIFO_SR_VALID);
 482:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 483:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(I2C_LED_slOverFlowCount > diffCount) /* Overflow */
 484:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 485:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slStatus |= (uint8) I2C_LED_I2C_SSTAT_RD_OVFL;
 486:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 487:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 else /* No Overflow */
 488:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 489:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Roll-back temporary index */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 13


 490:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slRdBufIndexTmp -= (diffCount - I2C_LED_slOverFlowCount);
 491:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 492:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 493:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Update slave of transferred bytes */
 494:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_slRdBufIndex = I2C_LED_slRdBufIndexTmp;
 495:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 496:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Clean-up TX FIFO */
 497:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_SetTxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 498:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_slOverFlowCount = 0u;
 499:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_CLEAR_TX_FIFO;
 500:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 501:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Complete master reading */
 502:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_slStatus &= (uint8) ~I2C_LED_I2C_SSTAT_RD_BUSY;
 503:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_slStatus |= (uint8)  I2C_LED_I2C_SSTAT_RD_CMPLT;
 504:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_state     =  I2C_LED_I2C_FSM_IDLE;
 505:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 506:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 507:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 508:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* INTR_SLAVE_I2C_WRITE_STOP:
 509:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The master completes writing to the slave: the appropriate flags have to be set.
 510:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The RX FIFO contains 1-8 bytes from the previous transaction which needs to be read.
 511:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * There is a possibility that RX FIFO contains an address, it needs to leave it there.
 512:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
 513:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(I2C_LED_CHECK_INTR_SLAVE_MASKED(I2C_LED_INTR_SLAVE_I2C_WRITE_STOP))
 514:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 515:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_ClearSlaveInterruptSource(I2C_LED_INTR_SLAVE_I2C_WRITE_STOP);
 516:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 517:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Read bytes from RX FIFO when auto data ACK receive logic is enabled. Otherwise a
 518:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 * were already read from the RX FIFO except for address byte which has to stay here
 519:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 * I2C_ADDR_MATCH.
 520:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 */
 521:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if (0u != (I2C_LED_I2C_CTRL_REG & I2C_LED_I2C_CTRL_S_READY_DATA_ACK))
 522:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 523:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     while(0u != I2C_LED_GET_RX_FIFO_ENTRIES)
 524:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 525:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #if(I2C_LED_CHECK_I2C_ACCEPT_ADDRESS)
 526:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 527:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             if((1u == I2C_LED_GET_RX_FIFO_ENTRIES) &&
 528:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                (I2C_LED_CHECK_INTR_SLAVE_MASKED(I2C_LED_INTR_SLAVE_I2C_ADDR_MATCH))
 529:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 530:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 break; /* Leave address in RX FIFO */
 531:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 532:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 533:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #endif
 534:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 535:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Put data in component buffer */
 536:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_slWrBufPtr[I2C_LED_slWrBufIndex] = (uint8) I2C_LED_RX_FIFO_RD_REG;
 537:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_slWrBufIndex++;
 538:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 539:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 540:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_DISABLE_SLAVE_AUTO_DATA;
 541:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 542:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 543:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(I2C_LED_CHECK_INTR_RX(I2C_LED_INTR_RX_OVERFLOW))
 544:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 545:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slStatus |= (uint8) I2C_LED_I2C_SSTAT_WR_OVFL;
 546:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 14


 547:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 548:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Clears RX interrupt sources triggered on data receiving */
 549:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_SetRxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 550:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_ClearRxInterruptSource(I2C_LED_INTR_RX_ALL);
 551:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 552:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Complete master writing */
 553:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_slStatus &= (uint8) ~I2C_LED_I2C_SSTAT_WR_BUSY;
 554:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_slStatus |= (uint8)  I2C_LED_I2C_SSTAT_WR_CMPLT;
 555:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_state     =  I2C_LED_I2C_FSM_IDLE;
 556:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 557:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 558:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 559:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* INTR_SLAVE_I2C_ADDR_MATCH or INTR_SLAVE_I2C_GENERAL:
 560:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The address match or general call address event starts the slave operation:
 561:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * after leaving the TX or RX direction has to be chosen.
 562:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The wakeup interrupt must be cleared only after an address match is set.
 563:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
 564:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #if (I2C_LED_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
 565:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if (I2C_LED_CHECK_INTR_SLAVE_MASKED(I2C_LED_INTR_SLAVE_I2C_ADDR_MATCH |
 566:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                          I2C_LED_INTR_SLAVE_I2C_GENERAL))
 567:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #else
 568:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if (I2C_LED_CHECK_INTR_SLAVE_MASKED(I2C_LED_INTR_SLAVE_I2C_ADDR_MATCH))
 569:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #endif /* (I2C_LED_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
 570:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 571:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Clear externally clocked address match interrupt source when internally clocked 
 572:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_ClearI2CExtClkInterruptSource(I2C_LED_INTR_I2C_EC_WAKE_UP);
 573:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 574:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #if (I2C_LED_I2C_CUSTOM_ADDRESS_HANDLER)
 575:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 576:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     if (NULL != I2C_LED_customAddressHandler)
 577:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 578:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Call custom address handler */
 579:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         response = I2C_LED_customAddressHandler();
 580:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 581:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     else
 582:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 583:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Read address from the RX FIFO. If there is no address underflow triggers
 584:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         * component does not use that source. */
 585:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         (void) I2C_LED_RX_FIFO_RD_REG;
 586:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         response = I2C_LED_I2C_ACK_ADDR;
 587:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 588:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 589:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Clears RX sources after address was received in the RX FIFO */
 590:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_ClearRxInterruptSource(I2C_LED_INTR_RX_ALL);
 591:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 592:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #endif
 593:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 594:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             #if (I2C_LED_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
 595:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if (response == I2C_LED_I2C_NAK_ADDR)
 596:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 597:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #if (!I2C_LED_CY_SCBIP_V0)
 598:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Disable write stop interrupt source as it triggers after address was NACKed.
 599:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_DISABLE_INTR_SLAVE(I2C_LED_INTR_SLAVE_I2C_WRITE_STOP);
 600:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #endif /* (!I2C_LED_CY_SCBIP_V0) */
 601:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 602:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Clear address match and stop history */
 603:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_ClearSlaveInterruptSource(I2C_LED_INTR_SLAVE_ALL);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 15


 604:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 605:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* ACK the address byte */
 606:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_I2C_SLAVE_GENERATE_NACK;
 607:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 608:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 else
 609:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             #endif /* (I2C_LED_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
 610:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 611:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     if(I2C_LED_CHECK_I2C_STATUS(I2C_LED_I2C_STATUS_S_READ))
 612:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* TX direction: master reads from slave */
 613:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 614:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_SetTxInterruptMode(I2C_LED_INTR_TX_EMPTY);
 615:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 616:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Set temporary index to address buffer clear from API */
 617:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_slRdBufIndexTmp = I2C_LED_slRdBufIndex;
 618:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 619:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Start master reading */
 620:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_slStatus |= (uint8) I2C_LED_I2C_SSTAT_RD_BUSY;
 621:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_state     = I2C_LED_I2C_FSM_SL_RD;
 622:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 623:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     else
 624:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* RX direction: master writes into slave */
 625:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 626:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Calculate available buffer size */
 627:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         diffCount = (I2C_LED_slWrBufSize - I2C_LED_slWrBufIndex);
 628:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 629:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     #if (I2C_LED_CY_SCBIP_V0)
 630:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         if(diffCount < I2C_LED_I2C_FIFO_SIZE)
 631:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Receive data: byte-by-byte */
 632:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 633:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_SetRxInterruptMode(I2C_LED_INTR_RX_NOT_EMPTY);
 634:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 635:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         else
 636:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Receive data: into RX FIFO */
 637:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 638:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             if(diffCount == I2C_LED_I2C_FIFO_SIZE)
 639:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 640:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 /* NACK when RX FIFO become FULL */
 641:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_ENABLE_SLAVE_AUTO_DATA;
 642:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 643:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             else
 644:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 645:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 /* Stretch clock when RX FIFO becomes FULL */
 646:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_ENABLE_SLAVE_AUTO_DATA_ACK;
 647:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_SetRxInterruptMode(I2C_LED_INTR_RX_FULL);
 648:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 649:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 650:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 651:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     #else
 652:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #if(I2C_LED_CHECK_I2C_ACCEPT_ADDRESS)
 653:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 654:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Enable RX.NOT_EMPTY interrupt source to receive byte by byte.
 655:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             * The byte by byte receive is always chosen for the case when an addres
 656:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             * in RX FIFO. Ticket ID#175559.
 657:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             */
 658:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_SetRxInterruptMode(I2C_LED_INTR_RX_NOT_EMPTY);
 659:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 660:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #else
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 16


 661:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 662:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             if(diffCount < I2C_LED_I2C_FIFO_SIZE)
 663:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Receive data: byte-by-byte */
 664:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 665:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_SetRxInterruptMode(I2C_LED_INTR_RX_NOT_EMPTY);
 666:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 667:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             else
 668:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Receive data: into RX FIFO */
 669:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 670:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 if(diffCount == I2C_LED_I2C_FIFO_SIZE)
 671:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 {
 672:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     /* NACK when RX FIFO become FULL */
 673:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     I2C_LED_ENABLE_SLAVE_AUTO_DATA;
 674:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 }
 675:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 else
 676:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 {
 677:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     /* Stretch clock when RX FIFO becomes FULL */
 678:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     I2C_LED_ENABLE_SLAVE_AUTO_DATA_ACK;
 679:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     I2C_LED_SetRxInterruptMode(I2C_LED_INTR_RX_FULL);
 680:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 }
 681:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 682:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 683:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #endif
 684:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     #endif /* (I2C_LED_CY_SCBIP_V0) */
 685:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 686:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         /* Start master reading */
 687:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_slStatus |= (uint8) I2C_LED_I2C_SSTAT_WR_BUSY;
 688:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_state     = I2C_LED_I2C_FSM_SL_WR;
 689:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 690:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 691:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Clear address match and stop history */
 692:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_ClearSlaveInterruptSource(I2C_LED_INTR_SLAVE_ALL);
 693:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 694:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #if (!I2C_LED_CY_SCBIP_V0)
 695:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Enable write stop interrupt source as it triggers after address was NACKed. 
 696:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_ENABLE_INTR_SLAVE(I2C_LED_INTR_SLAVE_I2C_WRITE_STOP);
 697:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 #endif /* (!I2C_LED_CY_SCBIP_V0) */
 698:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 699:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* ACK the address byte */
 700:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_I2C_SLAVE_GENERATE_ACK;
 701:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 702:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 703:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 704:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* I2C_LED_INTR_RX_FULL:
 705:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * Get data from the RX FIFO and decide whether to ACK or NACK the following bytes
 706:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
 707:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(I2C_LED_CHECK_INTR_RX_MASKED(I2C_LED_INTR_RX_FULL))
 708:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 709:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Calculate available buffer size to take into account that RX FIFO is FULL */
 710:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 diffCount =  I2C_LED_slWrBufSize -
 711:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             (I2C_LED_slWrBufIndex + I2C_LED_I2C_FIFO_SIZE);
 712:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 713:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(diffCount > I2C_LED_I2C_FIFO_SIZE) /* Proceed transaction */
 714:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 715:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     diffCount   = I2C_LED_I2C_FIFO_SIZE;
 716:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     endTransfer = 0u;  /* Continue active transfer */
 717:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 17


 718:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 else /* End when FIFO becomes FULL again */
 719:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 720:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 721:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 722:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 723:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 for(; (0u != diffCount); diffCount--)
 724:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 725:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Put data in component buffer */
 726:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slWrBufPtr[I2C_LED_slWrBufIndex] = (uint8) I2C_LED_RX_FIFO_RD_REG;
 727:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slWrBufIndex++;
 728:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 729:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 730:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(0u != endTransfer) /* End transfer sending NACK */
 731:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 732:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_ENABLE_SLAVE_AUTO_DATA_NACK;
 733:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 734:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* INTR_RX_FULL triggers earlier than INTR_SLAVE_I2C_STOP:
 735:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     * disable all RX interrupt sources.
 736:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     */
 737:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_SetRxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 738:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 739:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 740:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_ClearRxInterruptSource(I2C_LED_INTR_RX_FULL);
 741:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 742:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* I2C_LED_INTR_RX_NOT_EMPTY:
 743:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The buffer size is less than 8: it requires processing in byte-by-byte mode.
 744:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
 745:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             else if(I2C_LED_CHECK_INTR_RX_MASKED(I2C_LED_INTR_RX_NOT_EMPTY))
 746:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 747:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 diffCount = I2C_LED_RX_FIFO_RD_REG;
 748:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 749:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 if(I2C_LED_slWrBufIndex < I2C_LED_slWrBufSize)
 750:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 751:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_I2C_SLAVE_GENERATE_ACK;
 752:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 753:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Put data into component buffer */
 754:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slWrBufPtr[I2C_LED_slWrBufIndex] = (uint8) diffCount;
 755:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slWrBufIndex++;
 756:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 757:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 else /* Overflow: there is no space in write buffer */
 758:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 759:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_I2C_SLAVE_GENERATE_NACK;
 760:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 761:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_slStatus |= (uint8) I2C_LED_I2C_SSTAT_WR_OVFL;
 762:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 763:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 764:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_ClearRxInterruptSource(I2C_LED_INTR_RX_NOT_EMPTY);
 765:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 766:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             else
 767:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 768:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 /* Does nothing */
 769:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 770:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 771:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 772:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             /* I2C_LED_INTR_TX_EMPTY:
 773:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The master reads the slave: provide data to read or 0xFF in the case of the end of th
 774:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * The overflow condition must be captured, but not set until the end of transaction.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 18


 775:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             * There is a possibility of a false overflow due to TX FIFO utilization.
 776:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             */
 777:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             if(I2C_LED_CHECK_INTR_TX_MASKED(I2C_LED_INTR_TX_EMPTY))
 778:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             {
 779:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 while(I2C_LED_I2C_FIFO_SIZE != I2C_LED_GET_TX_FIFO_ENTRIES)
 780:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 781:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Temporary slRdBufIndexTmp is used because the master can NACK the byte and
 782:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     * index roll-back is required in this case. The slRdBufIndex is updated at the 
 783:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     * of the read transfer.
 784:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     */
 785:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     if(I2C_LED_slRdBufIndexTmp < I2C_LED_slRdBufSize)
 786:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Data from buffer */
 787:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 788:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_TX_FIFO_WR_REG = (uint32) I2C_LED_slRdBufPtr[I2C_LED_slRdBufIndexTm
 789:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_slRdBufIndexTmp++;
 790:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 791:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     else
 792:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     /* Probably Overflow */
 793:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 794:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         I2C_LED_TX_FIFO_WR_REG = I2C_LED_I2C_SLAVE_OVFL_RETURN;
 795:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 796:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         if(I2C_LED_slOverFlowCount <= I2C_LED_I2C_TX_OVERFLOW_COUNT)
 797:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 798:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             /* Get counter in range of overflow. */
 799:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_slOverFlowCount++;
 800:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 801:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 802:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 }
 803:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 804:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 I2C_LED_ClearTxInterruptSource(I2C_LED_INTR_TX_EMPTY);
 805:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****             }
 806:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 807:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         }  /* (I2C_LED_I2C_SLAVE) */
 808:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         #endif
 809:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     }
 810:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 811:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 812:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     /* FSM EXIT:
 813:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     * Slave:  INTR_SLAVE_I2C_BUS_ERROR, INTR_SLAVE_I2C_ARB_LOST
 814:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     * Master: INTR_MASTER_I2C_BUS_ERROR, INTR_MASTER_I2C_ARB_LOST.
 815:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     */
 816:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     else
 817:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     {
 818:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_CTRL_REG &= (uint32) ~I2C_LED_CTRL_ENABLED; /* Disable scb IP */
 819:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 820:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_state = I2C_LED_I2C_FSM_IDLE;
 821:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 822:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_DISABLE_SLAVE_AUTO_DATA;
 823:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_DISABLE_MASTER_AUTO_DATA;
 824:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 825:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     #if(I2C_LED_CY_SCBIP_V0)
 826:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_SetRxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 827:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_SetTxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 828:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 829:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         /* Clear interrupt sources as they are not automatically cleared after SCB is disabled */
 830:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_ClearTxInterruptSource(I2C_LED_INTR_RX_ALL);
 831:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_ClearRxInterruptSource(I2C_LED_INTR_TX_ALL);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 19


 832:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_ClearSlaveInterruptSource(I2C_LED_INTR_SLAVE_ALL);
 833:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_ClearMasterInterruptSource(I2C_LED_INTR_MASTER_ALL);
 834:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     #endif /* (I2C_LED_CY_SCBIP_V0) */
 835:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 836:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_CTRL_REG |= (uint32) I2C_LED_CTRL_ENABLED;  /* Enable scb IP */
 837:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     }
 838:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 839:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #ifdef I2C_LED_I2C_ISR_EXIT_CALLBACK
 840:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     I2C_LED_I2C_ISR_ExitCallback();
 841:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** #endif /* I2C_LED_I2C_ISR_EXIT_CALLBACK */
 842:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 843:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** }
 196              		.loc 1 843 0 discriminator 4
 197 00f6 BAE1     		b	.L44
 198              	.L11:
 239:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 199              		.loc 1 239 0
 200 00f8 854B     		ldr	r3, .L45+12
 201 00fa 1B78     		ldrb	r3, [r3]
 202 00fc DBB2     		uxtb	r3, r3
 203 00fe 0822     		movs	r2, #8
 204 0100 1340     		ands	r3, r2
 205 0102 DBB2     		uxtb	r3, r3
 206 0104 002B     		cmp	r3, #0
 207 0106 29D0     		beq	.L15
 244:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 208              		.loc 1 244 0
 209 0108 824B     		ldr	r3, .L45+16
 210 010a 1B68     		ldr	r3, [r3]
 211 010c 0222     		movs	r2, #2
 212 010e 1340     		ands	r3, r2
 213 0110 0ED0     		beq	.L16
 246:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 214              		.loc 1 246 0
 215 0112 824B     		ldr	r3, .L45+24
 216 0114 0222     		movs	r2, #2
 217 0116 1A60     		str	r2, [r3]
 248:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                  I2C_LED_I2C_MSTAT_ERR_ADDR_NAK);
 218              		.loc 1 248 0
 219 0118 7F4B     		ldr	r3, .L45+20
 220 011a 1B88     		ldrh	r3, [r3]
 221 011c 9BB2     		uxth	r3, r3
 222 011e 8822     		movs	r2, #136
 223 0120 9200     		lsls	r2, r2, #2
 224 0122 1343     		orrs	r3, r2
 225 0124 9AB2     		uxth	r2, r3
 226 0126 7C4B     		ldr	r3, .L45+20
 227 0128 1A80     		strh	r2, [r3]
 251:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 228              		.loc 1 251 0
 229 012a 0123     		movs	r3, #1
 230 012c 3B60     		str	r3, [r7]
 231 012e 15E0     		b	.L15
 232              	.L16:
 261:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 233              		.loc 1 261 0
 234 0130 774B     		ldr	r3, .L45+12
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 20


 235 0132 1B78     		ldrb	r3, [r3]
 236 0134 DBB2     		uxtb	r3, r3
 237 0136 0122     		movs	r2, #1
 238 0138 1340     		ands	r3, r2
 239 013a DBB2     		uxtb	r3, r3
 240 013c 002B     		cmp	r3, #0
 241 013e 03D0     		beq	.L17
 263:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 242              		.loc 1 263 0
 243 0140 734B     		ldr	r3, .L45+12
 244 0142 2522     		movs	r2, #37
 245 0144 1A70     		strb	r2, [r3]
 246 0146 09E0     		b	.L15
 247              	.L17:
 267:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             if(0u != I2C_LED_mstrWrBufSize)
 248              		.loc 1 267 0
 249 0148 714B     		ldr	r3, .L45+12
 250 014a 2422     		movs	r2, #36
 251 014c 1A70     		strb	r2, [r3]
 268:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 252              		.loc 1 268 0
 253 014e 744B     		ldr	r3, .L45+28
 254 0150 1B68     		ldr	r3, [r3]
 255 0152 002B     		cmp	r3, #0
 256 0154 02D0     		beq	.L15
 271:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 257              		.loc 1 271 0
 258 0156 734B     		ldr	r3, .L45+32
 259 0158 1022     		movs	r2, #16
 260 015a 1A60     		str	r2, [r3]
 261              	.L15:
 277:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 262              		.loc 1 277 0
 263 015c 6C4B     		ldr	r3, .L45+12
 264 015e 1B78     		ldrb	r3, [r3]
 265 0160 DBB2     		uxtb	r3, r3
 266 0162 0422     		movs	r2, #4
 267 0164 1340     		ands	r3, r2
 268 0166 DBB2     		uxtb	r3, r3
 269 0168 002B     		cmp	r3, #0
 270 016a 00D1     		bne	.LCB225
 271 016c 11E1     		b	.L18	@long jump
 272              	.LCB225:
 279:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 273              		.loc 1 279 0
 274 016e 684B     		ldr	r3, .L45+12
 275 0170 1B78     		ldrb	r3, [r3]
 276 0172 DBB2     		uxtb	r3, r3
 277 0174 0122     		movs	r2, #1
 278 0176 1340     		ands	r3, r2
 279 0178 DBB2     		uxtb	r3, r3
 280 017a 002B     		cmp	r3, #0
 281 017c 5BD0     		beq	.L19
 285:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 282              		.loc 1 285 0
 283 017e 6A4B     		ldr	r3, .L45+36
 284 0180 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 21


 285 0182 0822     		movs	r2, #8
 286 0184 1340     		ands	r3, r2
 287 0186 33D0     		beq	.L20
 288:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                         (I2C_LED_mstrRdBufIndex + I2C_LED_GET_RX_FIFO_ENTRIES);
 288              		.loc 1 288 0
 289 0188 684B     		ldr	r3, .L45+40
 290 018a 1A68     		ldr	r2, [r3]
 289:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 291              		.loc 1 289 0
 292 018c 684B     		ldr	r3, .L45+44
 293 018e 1B68     		ldr	r3, [r3]
 294 0190 0F21     		movs	r1, #15
 295 0192 1940     		ands	r1, r3
 296 0194 674B     		ldr	r3, .L45+48
 297 0196 1B68     		ldr	r3, [r3]
 298 0198 CB18     		adds	r3, r1, r3
 288:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                         (I2C_LED_mstrRdBufIndex + I2C_LED_GET_RX_FIFO_ENTRIES);
 299              		.loc 1 288 0
 300 019a D31A     		subs	r3, r2, r3
 301 019c 7B60     		str	r3, [r7, #4]
 292:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 302              		.loc 1 292 0
 303 019e 7B68     		ldr	r3, [r7, #4]
 304 01a0 082B     		cmp	r3, #8
 305 01a2 02D9     		bls	.L21
 294:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 306              		.loc 1 294 0
 307 01a4 0823     		movs	r3, #8
 308 01a6 7B60     		str	r3, [r7, #4]
 309 01a8 1EE0     		b	.L23
 310              	.L21:
 298:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 {
 311              		.loc 1 298 0
 312 01aa 7B68     		ldr	r3, [r7, #4]
 313 01ac 002B     		cmp	r3, #0
 314 01ae 1BD1     		bne	.L23
 300:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 315              		.loc 1 300 0
 316 01b0 614B     		ldr	r3, .L45+52
 317 01b2 614A     		ldr	r2, .L45+52
 318 01b4 1268     		ldr	r2, [r2]
 319 01b6 6149     		ldr	r1, .L45+56
 320 01b8 0A40     		ands	r2, r1
 321 01ba 1A60     		str	r2, [r3]
 302:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     endTransfer = I2C_LED_I2C_CMPLT_ANY_TRANSFER;
 322              		.loc 1 302 0
 323 01bc 0823     		movs	r3, #8
 324 01be 7B60     		str	r3, [r7, #4]
 303:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 }
 325              		.loc 1 303 0
 326 01c0 0123     		movs	r3, #1
 327 01c2 3B60     		str	r3, [r7]
 307:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 328              		.loc 1 307 0
 329 01c4 10E0     		b	.L23
 330              	.L24:
 309:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                                         I2C_LED_RX_
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 22


 331              		.loc 1 309 0 discriminator 2
 332 01c6 5E4B     		ldr	r3, .L45+60
 333 01c8 1A68     		ldr	r2, [r3]
 334 01ca 5A4B     		ldr	r3, .L45+48
 335 01cc 1B68     		ldr	r3, [r3]
 336 01ce D218     		adds	r2, r2, r3
 310:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 I2C_LED_mstrRdBufIndex++;
 337              		.loc 1 310 0 discriminator 2
 338 01d0 5C4B     		ldr	r3, .L45+64
 339 01d2 1B68     		ldr	r3, [r3]
 309:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                                         I2C_LED_RX_
 340              		.loc 1 309 0 discriminator 2
 341 01d4 DBB2     		uxtb	r3, r3
 342 01d6 1370     		strb	r3, [r2]
 311:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 343              		.loc 1 311 0 discriminator 2
 344 01d8 564B     		ldr	r3, .L45+48
 345 01da 1B68     		ldr	r3, [r3]
 346 01dc 5A1C     		adds	r2, r3, #1
 347 01de 554B     		ldr	r3, .L45+48
 348 01e0 1A60     		str	r2, [r3]
 307:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 349              		.loc 1 307 0 discriminator 2
 350 01e2 7B68     		ldr	r3, [r7, #4]
 351 01e4 013B     		subs	r3, r3, #1
 352 01e6 7B60     		str	r3, [r7, #4]
 353              	.L23:
 307:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 354              		.loc 1 307 0 is_stmt 0 discriminator 1
 355 01e8 7B68     		ldr	r3, [r7, #4]
 356 01ea 002B     		cmp	r3, #0
 357 01ec EBD1     		bne	.L24
 358 01ee 1EE0     		b	.L25
 359              	.L20:
 319:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 360              		.loc 1 319 0 is_stmt 1
 361 01f0 4D4B     		ldr	r3, .L45+36
 362 01f2 1B68     		ldr	r3, [r3]
 363 01f4 0422     		movs	r2, #4
 364 01f6 1340     		ands	r3, r2
 365 01f8 19D0     		beq	.L25
 322:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             I2C_LED_mstrRdBufIndex++;
 366              		.loc 1 322 0
 367 01fa 514B     		ldr	r3, .L45+60
 368 01fc 1A68     		ldr	r2, [r3]
 369 01fe 4D4B     		ldr	r3, .L45+48
 370 0200 1B68     		ldr	r3, [r3]
 371 0202 D218     		adds	r2, r2, r3
 372 0204 4F4B     		ldr	r3, .L45+64
 373 0206 1B68     		ldr	r3, [r3]
 374 0208 DBB2     		uxtb	r3, r3
 375 020a 1370     		strb	r3, [r2]
 323:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 376              		.loc 1 323 0
 377 020c 494B     		ldr	r3, .L45+48
 378 020e 1B68     		ldr	r3, [r3]
 379 0210 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 23


 380 0212 484B     		ldr	r3, .L45+48
 381 0214 1A60     		str	r2, [r3]
 325:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 382              		.loc 1 325 0
 383 0216 474B     		ldr	r3, .L45+48
 384 0218 1A68     		ldr	r2, [r3]
 385 021a 444B     		ldr	r3, .L45+40
 386 021c 1B68     		ldr	r3, [r3]
 387 021e 9A42     		cmp	r2, r3
 388 0220 03D2     		bcs	.L26
 327:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 389              		.loc 1 327 0
 390 0222 494B     		ldr	r3, .L45+68
 391 0224 0422     		movs	r2, #4
 392 0226 1A60     		str	r2, [r3]
 393 0228 01E0     		b	.L25
 394              	.L26:
 331:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 395              		.loc 1 331 0
 396 022a 0123     		movs	r3, #1
 397 022c 3B60     		str	r3, [r7]
 398              	.L25:
 339:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 399              		.loc 1 339 0
 400 022e 474B     		ldr	r3, .L45+72
 401 0230 474A     		ldr	r2, .L45+76
 402 0232 1A60     		str	r2, [r3]
 403 0234 ADE0     		b	.L18
 404              	.L19:
 348:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 405              		.loc 1 348 0
 406 0236 374B     		ldr	r3, .L45+16
 407 0238 1B68     		ldr	r3, [r3]
 408 023a 0222     		movs	r2, #2
 409 023c 1340     		ands	r3, r2
 410 023e 32D0     		beq	.L28
 350:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 411              		.loc 1 350 0
 412 0240 364B     		ldr	r3, .L45+24
 413 0242 0222     		movs	r2, #2
 414 0244 1A60     		str	r2, [r3]
 353:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                    I2C_LED_GET_TX_FIFO_SR_VALID);
 415              		.loc 1 353 0
 416 0246 434B     		ldr	r3, .L45+80
 417 0248 1B68     		ldr	r3, [r3]
 418 024a 0F22     		movs	r2, #15
 419 024c 1A40     		ands	r2, r3
 354:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 420              		.loc 1 354 0
 421 024e 414B     		ldr	r3, .L45+80
 422 0250 1968     		ldr	r1, [r3]
 423 0252 8023     		movs	r3, #128
 424 0254 1B02     		lsls	r3, r3, #8
 425 0256 0B40     		ands	r3, r1
 353:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                    I2C_LED_GET_TX_FIFO_SR_VALID);
 426              		.loc 1 353 0
 427 0258 01D0     		beq	.L29
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 24


 353:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                    I2C_LED_GET_TX_FIFO_SR_VALID);
 428              		.loc 1 353 0 is_stmt 0 discriminator 1
 429 025a 0123     		movs	r3, #1
 430 025c 00E0     		b	.L30
 431              	.L29:
 353:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                    I2C_LED_GET_TX_FIFO_SR_VALID);
 432              		.loc 1 353 0 discriminator 2
 433 025e 0023     		movs	r3, #0
 434              	.L30:
 353:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                    I2C_LED_GET_TX_FIFO_SR_VALID);
 435              		.loc 1 353 0 discriminator 4
 436 0260 D218     		adds	r2, r2, r3
 437 0262 3D4B     		ldr	r3, .L45+84
 438 0264 1B68     		ldr	r3, [r3]
 439 0266 9A1A     		subs	r2, r3, r2
 440 0268 3B4B     		ldr	r3, .L45+84
 441 026a 1A60     		str	r2, [r3]
 357:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 442              		.loc 1 357 0 is_stmt 1 discriminator 4
 443 026c 3A4B     		ldr	r3, .L45+84
 444 026e 1A68     		ldr	r2, [r3]
 445 0270 3A4B     		ldr	r3, .L45+88
 446 0272 1A60     		str	r2, [r3]
 359:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                      I2C_LED_I2C_MSTAT_ERR_SHORT_XF
 447              		.loc 1 359 0 discriminator 4
 448 0274 284B     		ldr	r3, .L45+20
 449 0276 1B88     		ldrh	r3, [r3]
 450 0278 9BB2     		uxth	r3, r3
 451 027a 8422     		movs	r2, #132
 452 027c 9200     		lsls	r2, r2, #2
 453 027e 1343     		orrs	r3, r2
 454 0280 9AB2     		uxth	r2, r3
 455 0282 254B     		ldr	r3, .L45+20
 456 0284 1A80     		strh	r2, [r3]
 362:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 457              		.loc 1 362 0 discriminator 4
 458 0286 364B     		ldr	r3, .L45+92
 459 0288 354A     		ldr	r2, .L45+92
 460 028a 1268     		ldr	r2, [r2]
 461 028c 8021     		movs	r1, #128
 462 028e 4902     		lsls	r1, r1, #9
 463 0290 0A43     		orrs	r2, r1
 464 0292 1A60     		str	r2, [r3]
 465 0294 324B     		ldr	r3, .L45+92
 466 0296 324A     		ldr	r2, .L45+92
 467 0298 1268     		ldr	r2, [r2]
 468 029a 3249     		ldr	r1, .L45+96
 469 029c 0A40     		ands	r2, r1
 470 029e 1A60     		str	r2, [r3]
 364:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 471              		.loc 1 364 0 discriminator 4
 472 02a0 0123     		movs	r3, #1
 473 02a2 3B60     		str	r3, [r7]
 474 02a4 75E0     		b	.L18
 475              	.L28:
 371:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 476              		.loc 1 371 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 25


 477 02a6 304B     		ldr	r3, .L45+100
 478 02a8 1B68     		ldr	r3, [r3]
 479 02aa 1022     		movs	r2, #16
 480 02ac 1340     		ands	r3, r2
 481 02ae 65D0     		beq	.L31
 373:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 482              		.loc 1 373 0
 483 02b0 13E0     		b	.L32
 484              	.L35:
 378:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 {
 485              		.loc 1 378 0
 486 02b2 294B     		ldr	r3, .L45+84
 487 02b4 1A68     		ldr	r2, [r3]
 488 02b6 1A4B     		ldr	r3, .L45+28
 489 02b8 1B68     		ldr	r3, [r3]
 490 02ba 9A42     		cmp	r2, r3
 491 02bc 14D2     		bcs	.L43
 393:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                     I2C_LED_mstrWrBufIndexTmp++;
 492              		.loc 1 393 0
 493 02be 2B4A     		ldr	r2, .L45+104
 494 02c0 2B4B     		ldr	r3, .L45+108
 495 02c2 1968     		ldr	r1, [r3]
 496 02c4 244B     		ldr	r3, .L45+84
 497 02c6 1B68     		ldr	r3, [r3]
 498 02c8 CB18     		adds	r3, r1, r3
 499 02ca 1B78     		ldrb	r3, [r3]
 500 02cc DBB2     		uxtb	r3, r3
 501 02ce 1360     		str	r3, [r2]
 394:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 }
 502              		.loc 1 394 0
 503 02d0 214B     		ldr	r3, .L45+84
 504 02d2 1B68     		ldr	r3, [r3]
 505 02d4 5A1C     		adds	r2, r3, #1
 506 02d6 204B     		ldr	r3, .L45+84
 507 02d8 1A60     		str	r2, [r3]
 508              	.L32:
 373:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 509              		.loc 1 373 0
 510 02da 1E4B     		ldr	r3, .L45+80
 511 02dc 1B68     		ldr	r3, [r3]
 512 02de 0F22     		movs	r2, #15
 513 02e0 1340     		ands	r3, r2
 514 02e2 082B     		cmp	r3, #8
 515 02e4 E5D1     		bne	.L35
 516 02e6 00E0     		b	.L34
 517              	.L43:
 398:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                 }
 518              		.loc 1 398 0
 519 02e8 C046     		nop
 520              	.L34:
 403:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             {
 521              		.loc 1 403 0
 522 02ea 1B4B     		ldr	r3, .L45+84
 523 02ec 1A68     		ldr	r2, [r3]
 524 02ee 0C4B     		ldr	r3, .L45+28
 525 02f0 1B68     		ldr	r3, [r3]
 526 02f2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 26


 527 02f4 02D1     		bne	.L36
 405:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                             }
 528              		.loc 1 405 0
 529 02f6 0B4B     		ldr	r3, .L45+32
 530 02f8 4022     		movs	r2, #64
 531 02fa 1A60     		str	r2, [r3]
 532              	.L36:
 408:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         #else
 533              		.loc 1 408 0
 534 02fc 1D4B     		ldr	r3, .L45+112
 535 02fe 1E4A     		ldr	r2, .L45+116
 536 0300 1A60     		str	r2, [r3]
 537 0302 46E0     		b	.L18
 538              	.L46:
 539              		.align	2
 540              	.L45:
 541 0304 00000000 		.word	I2C_LED_customIntrHandler
 542 0308 8C0E0640 		.word	1074138764
 543 030c 880E0640 		.word	1074138760
 544 0310 00000000 		.word	I2C_LED_state
 545 0314 0C0F0640 		.word	1074138892
 546 0318 00000000 		.word	I2C_LED_mstrStatus
 547 031c 000F0640 		.word	1074138880
 548 0320 00000000 		.word	I2C_LED_mstrWrBufSize
 549 0324 880F0640 		.word	1074139016
 550 0328 CC0F0640 		.word	1074139084
 551 032c 00000000 		.word	I2C_LED_mstrRdBufSize
 552 0330 08030640 		.word	1074135816
 553 0334 00000000 		.word	I2C_LED_mstrRdBufIndex
 554 0338 60000640 		.word	1074135136
 555 033c FFFEFFFF 		.word	-257
 556 0340 00000000 		.word	I2C_LED_mstrRdBufPtr
 557 0344 40030640 		.word	1074135872
 558 0348 68000640 		.word	1074135144
 559 034c C00F0640 		.word	1074139072
 560 0350 ED0F0000 		.word	4077
 561 0354 08020640 		.word	1074135560
 562 0358 00000000 		.word	I2C_LED_mstrWrBufIndexTmp
 563 035c 00000000 		.word	I2C_LED_mstrWrBufIndex
 564 0360 04020640 		.word	1074135556
 565 0364 FFFFFEFF 		.word	-65537
 566 0368 8C0F0640 		.word	1074139020
 567 036c 40020640 		.word	1074135616
 568 0370 00000000 		.word	I2C_LED_mstrWrBufPtr
 569 0374 800F0640 		.word	1074139008
 570 0378 F3070000 		.word	2035
 571              	.L31:
 417:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         {
 572              		.loc 1 417 0
 573 037c 3E4B     		ldr	r3, .L47
 574 037e 1B68     		ldr	r3, [r3]
 575 0380 4022     		movs	r2, #64
 576 0382 1340     		ands	r3, r2
 577 0384 05D0     		beq	.L18
 420:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 578              		.loc 1 420 0
 579 0386 3D4B     		ldr	r3, .L47+4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 27


 580 0388 1A68     		ldr	r2, [r3]
 581 038a 3D4B     		ldr	r3, .L47+8
 582 038c 1A60     		str	r2, [r3]
 422:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                         }
 583              		.loc 1 422 0
 584 038e 0123     		movs	r3, #1
 585 0390 3B60     		str	r3, [r7]
 586              	.L18:
 431:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                 {
 587              		.loc 1 431 0
 588 0392 3B68     		ldr	r3, [r7]
 589 0394 002B     		cmp	r3, #0
 590 0396 6AD0     		beq	.L44
 434:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 591              		.loc 1 434 0
 592 0398 3A4B     		ldr	r3, .L47+12
 593 039a 3A4A     		ldr	r2, .L47+12
 594 039c 1268     		ldr	r2, [r2]
 595 039e 3A49     		ldr	r1, .L47+16
 596 03a0 0A40     		ands	r2, r1
 597 03a2 1A60     		str	r2, [r3]
 437:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     I2C_LED_SetTxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 598              		.loc 1 437 0
 599 03a4 394B     		ldr	r3, .L47+20
 600 03a6 0022     		movs	r2, #0
 601 03a8 1A60     		str	r2, [r3]
 438:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 602              		.loc 1 438 0
 603 03aa 394B     		ldr	r3, .L47+24
 604 03ac 0022     		movs	r2, #0
 605 03ae 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     {
 606              		.loc 1 440 0
 607 03b0 384B     		ldr	r3, .L47+28
 608 03b2 1B78     		ldrb	r3, [r3]
 609 03b4 DBB2     		uxtb	r3, r3
 610 03b6 0222     		movs	r2, #2
 611 03b8 1340     		ands	r3, r2
 612 03ba DBB2     		uxtb	r3, r3
 613 03bc 002B     		cmp	r3, #0
 614 03be 15D0     		beq	.L37
 444:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 615              		.loc 1 444 0
 616 03c0 354B     		ldr	r3, .L47+32
 617 03c2 1B78     		ldrb	r3, [r3]
 618 03c4 DBB2     		uxtb	r3, r3
 619 03c6 0122     		movs	r2, #1
 620 03c8 1340     		ands	r3, r2
 621 03ca DBB2     		uxtb	r3, r3
 443:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                  I2C_LED_GET_I2C_MSTAT_CMPLT);
 622              		.loc 1 443 0
 623 03cc 002B     		cmp	r3, #0
 624 03ce 01D0     		beq	.L38
 443:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                  I2C_LED_GET_I2C_MSTAT_CMPLT);
 625              		.loc 1 443 0 is_stmt 0 discriminator 1
 626 03d0 0923     		movs	r3, #9
 627 03d2 00E0     		b	.L39
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 28


 628              	.L38:
 443:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                  I2C_LED_GET_I2C_MSTAT_CMPLT);
 629              		.loc 1 443 0 discriminator 2
 630 03d4 0A23     		movs	r3, #10
 631              	.L39:
 443:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                                                                  I2C_LED_GET_I2C_MSTAT_CMPLT);
 632              		.loc 1 443 0 discriminator 4
 633 03d6 314A     		ldr	r2, .L47+36
 634 03d8 1288     		ldrh	r2, [r2]
 635 03da 92B2     		uxth	r2, r2
 636 03dc 1343     		orrs	r3, r2
 637 03de 9AB2     		uxth	r2, r3
 638 03e0 2E4B     		ldr	r3, .L47+36
 639 03e2 1A80     		strh	r2, [r3]
 446:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 640              		.loc 1 446 0 is_stmt 1 discriminator 4
 641 03e4 2C4B     		ldr	r3, .L47+32
 642 03e6 6022     		movs	r2, #96
 643 03e8 1A70     		strb	r2, [r3]
 644              		.loc 1 843 0 discriminator 4
 645 03ea 40E0     		b	.L44
 646              	.L37:
 456:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 647              		.loc 1 456 0
 648 03ec 2C4B     		ldr	r3, .L47+40
 649 03ee 2D4A     		ldr	r2, .L47+44
 650 03f0 1268     		ldr	r2, [r2]
 651 03f2 2021     		movs	r1, #32
 652 03f4 0A40     		ands	r2, r1
 653 03f6 01D0     		beq	.L40
 456:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 654              		.loc 1 456 0 is_stmt 0 discriminator 1
 655 03f8 1822     		movs	r2, #24
 656 03fa 00E0     		b	.L41
 657              	.L40:
 456:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 658              		.loc 1 456 0 discriminator 2
 659 03fc 1022     		movs	r2, #16
 660              	.L41:
 456:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****                     }
 661              		.loc 1 456 0 discriminator 4
 662 03fe 1A60     		str	r2, [r3]
 663              		.loc 1 843 0 is_stmt 1 discriminator 4
 664 0400 35E0     		b	.L44
 665              	.L10:
 468:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     {
 666              		.loc 1 468 0
 667 0402 254B     		ldr	r3, .L47+32
 668 0404 1B78     		ldrb	r3, [r3]
 669 0406 DBB2     		uxtb	r3, r3
 670 0408 1022     		movs	r2, #16
 671 040a 1340     		ands	r3, r2
 672 040c DBB2     		uxtb	r3, r3
 673 040e 002B     		cmp	r3, #0
 674 0410 2DD1     		bne	.L44
 818:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 675              		.loc 1 818 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 29


 676 0412 254B     		ldr	r3, .L47+48
 677 0414 244A     		ldr	r2, .L47+48
 678 0416 1268     		ldr	r2, [r2]
 679 0418 5200     		lsls	r2, r2, #1
 680 041a 5208     		lsrs	r2, r2, #1
 681 041c 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 682              		.loc 1 820 0
 683 041e 1E4B     		ldr	r3, .L47+32
 684 0420 1022     		movs	r2, #16
 685 0422 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_DISABLE_MASTER_AUTO_DATA;
 686              		.loc 1 822 0
 687 0424 174B     		ldr	r3, .L47+12
 688 0426 174A     		ldr	r2, .L47+12
 689 0428 1268     		ldr	r2, [r2]
 690 042a 2049     		ldr	r1, .L47+52
 691 042c 0A40     		ands	r2, r1
 692 042e 1A60     		str	r2, [r3]
 823:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 693              		.loc 1 823 0
 694 0430 144B     		ldr	r3, .L47+12
 695 0432 144A     		ldr	r2, .L47+12
 696 0434 1268     		ldr	r2, [r2]
 697 0436 1E49     		ldr	r1, .L47+56
 698 0438 0A40     		ands	r2, r1
 699 043a 1A60     		str	r2, [r3]
 826:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_SetTxInterruptMode(I2C_LED_NO_INTR_SOURCES);
 700              		.loc 1 826 0
 701 043c 134B     		ldr	r3, .L47+20
 702 043e 0022     		movs	r2, #0
 703 0440 1A60     		str	r2, [r3]
 827:Generated_Source\PSoC4/I2C_LED_I2C_INT.c **** 
 704              		.loc 1 827 0
 705 0442 134B     		ldr	r3, .L47+24
 706 0444 0022     		movs	r2, #0
 707 0446 1A60     		str	r2, [r3]
 830:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_ClearRxInterruptSource(I2C_LED_INTR_TX_ALL);
 708              		.loc 1 830 0
 709 0448 1A4B     		ldr	r3, .L47+60
 710 044a 1B4A     		ldr	r2, .L47+64
 711 044c 1A60     		str	r2, [r3]
 831:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_ClearSlaveInterruptSource(I2C_LED_INTR_SLAVE_ALL);
 712              		.loc 1 831 0
 713 044e 1B4B     		ldr	r3, .L47+68
 714 0450 1B4A     		ldr	r2, .L47+72
 715 0452 1A60     		str	r2, [r3]
 832:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****         I2C_LED_ClearMasterInterruptSource(I2C_LED_INTR_MASTER_ALL);
 716              		.loc 1 832 0
 717 0454 1B4B     		ldr	r3, .L47+76
 718 0456 1C4A     		ldr	r2, .L47+80
 719 0458 1A60     		str	r2, [r3]
 833:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     #endif /* (I2C_LED_CY_SCBIP_V0) */
 720              		.loc 1 833 0
 721 045a 1C4B     		ldr	r3, .L47+84
 722 045c 1C4A     		ldr	r2, .L47+88
 723 045e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 30


 836:Generated_Source\PSoC4/I2C_LED_I2C_INT.c ****     }
 724              		.loc 1 836 0
 725 0460 114B     		ldr	r3, .L47+48
 726 0462 114A     		ldr	r2, .L47+48
 727 0464 1268     		ldr	r2, [r2]
 728 0466 8021     		movs	r1, #128
 729 0468 0906     		lsls	r1, r1, #24
 730 046a 0A43     		orrs	r2, r1
 731 046c 1A60     		str	r2, [r3]
 732              	.L44:
 733              		.loc 1 843 0
 734 046e C046     		nop
 735 0470 BD46     		mov	sp, r7
 736 0472 02B0     		add	sp, sp, #8
 737              		@ sp needed
 738 0474 80BD     		pop	{r7, pc}
 739              	.L48:
 740 0476 C046     		.align	2
 741              	.L47:
 742 0478 8C0F0640 		.word	1074139020
 743 047c 00000000 		.word	I2C_LED_mstrWrBufIndexTmp
 744 0480 00000000 		.word	I2C_LED_mstrWrBufIndex
 745 0484 60000640 		.word	1074135136
 746 0488 FFFEFFFF 		.word	-257
 747 048c C80F0640 		.word	1074139080
 748 0490 880F0640 		.word	1074139016
 749 0494 00000000 		.word	I2C_LED_mstrControl
 750 0498 00000000 		.word	I2C_LED_state
 751 049c 00000000 		.word	I2C_LED_mstrStatus
 752 04a0 68000640 		.word	1074135144
 753 04a4 64000640 		.word	1074135140
 754 04a8 00000640 		.word	1074135040
 755 04ac FF5FFFFF 		.word	-40961
 756 04b0 FFFCFFFF 		.word	-769
 757 04b4 800F0640 		.word	1074139008
 758 04b8 ED0F0000 		.word	4077
 759 04bc C00F0640 		.word	1074139072
 760 04c0 F3070000 		.word	2035
 761 04c4 400F0640 		.word	1074138944
 762 04c8 FF0F0000 		.word	4095
 763 04cc 000F0640 		.word	1074138880
 764 04d0 17030000 		.word	791
 765              		.cfi_endproc
 766              	.LFE0:
 767              		.size	I2C_LED_I2C_ISR, .-I2C_LED_I2C_ISR
 768              		.text
 769              	.Letext0:
 770              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 771              		.file 3 "Generated_Source\\PSoC4\\I2C_LED_PVT.h"
 772              		.file 4 "Generated_Source\\PSoC4\\I2C_LED_I2C_PVT.h"
 773              		.section	.debug_info,"",%progbits
 774              	.Ldebug_info0:
 775 0000 8E010000 		.4byte	0x18e
 776 0004 0400     		.2byte	0x4
 777 0006 00000000 		.4byte	.Ldebug_abbrev0
 778 000a 04       		.byte	0x4
 779 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 31


 780 000c 0E010000 		.4byte	.LASF32
 781 0010 0C       		.byte	0xc
 782 0011 62000000 		.4byte	.LASF33
 783 0015 24000000 		.4byte	.LASF34
 784 0019 00000000 		.4byte	.Ldebug_ranges0+0
 785 001d 00000000 		.4byte	0
 786 0021 00000000 		.4byte	.Ldebug_line0
 787 0025 02       		.uleb128 0x2
 788 0026 01       		.byte	0x1
 789 0027 06       		.byte	0x6
 790 0028 B9020000 		.4byte	.LASF0
 791 002c 02       		.uleb128 0x2
 792 002d 01       		.byte	0x1
 793 002e 08       		.byte	0x8
 794 002f DE000000 		.4byte	.LASF1
 795 0033 02       		.uleb128 0x2
 796 0034 02       		.byte	0x2
 797 0035 05       		.byte	0x5
 798 0036 87020000 		.4byte	.LASF2
 799 003a 02       		.uleb128 0x2
 800 003b 02       		.byte	0x2
 801 003c 07       		.byte	0x7
 802 003d 8B000000 		.4byte	.LASF3
 803 0041 02       		.uleb128 0x2
 804 0042 04       		.byte	0x4
 805 0043 05       		.byte	0x5
 806 0044 A4020000 		.4byte	.LASF4
 807 0048 02       		.uleb128 0x2
 808 0049 04       		.byte	0x4
 809 004a 07       		.byte	0x7
 810 004b EC000000 		.4byte	.LASF5
 811 004f 02       		.uleb128 0x2
 812 0050 08       		.byte	0x8
 813 0051 05       		.byte	0x5
 814 0052 2D020000 		.4byte	.LASF6
 815 0056 02       		.uleb128 0x2
 816 0057 08       		.byte	0x8
 817 0058 07       		.byte	0x7
 818 0059 00020000 		.4byte	.LASF7
 819 005d 03       		.uleb128 0x3
 820 005e 04       		.byte	0x4
 821 005f 05       		.byte	0x5
 822 0060 696E7400 		.ascii	"int\000"
 823 0064 02       		.uleb128 0x2
 824 0065 04       		.byte	0x4
 825 0066 07       		.byte	0x7
 826 0067 DC010000 		.4byte	.LASF8
 827 006b 04       		.uleb128 0x4
 828 006c 08010000 		.4byte	.LASF9
 829 0070 02       		.byte	0x2
 830 0071 B901     		.2byte	0x1b9
 831 0073 2C000000 		.4byte	0x2c
 832 0077 04       		.uleb128 0x4
 833 0078 CE010000 		.4byte	.LASF10
 834 007c 02       		.byte	0x2
 835 007d BA01     		.2byte	0x1ba
 836 007f 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 32


 837 0083 04       		.uleb128 0x4
 838 0084 D5010000 		.4byte	.LASF11
 839 0088 02       		.byte	0x2
 840 0089 BB01     		.2byte	0x1bb
 841 008b 48000000 		.4byte	0x48
 842 008f 02       		.uleb128 0x2
 843 0090 04       		.byte	0x4
 844 0091 04       		.byte	0x4
 845 0092 C4000000 		.4byte	.LASF12
 846 0096 02       		.uleb128 0x2
 847 0097 08       		.byte	0x8
 848 0098 04       		.byte	0x4
 849 0099 9C010000 		.4byte	.LASF13
 850 009d 02       		.uleb128 0x2
 851 009e 01       		.byte	0x1
 852 009f 08       		.byte	0x8
 853 00a0 3B020000 		.4byte	.LASF14
 854 00a4 05       		.uleb128 0x5
 855 00a5 6B000000 		.4byte	0x6b
 856 00a9 05       		.uleb128 0x5
 857 00aa 77000000 		.4byte	0x77
 858 00ae 04       		.uleb128 0x4
 859 00af 00000000 		.4byte	.LASF15
 860 00b3 02       		.byte	0x2
 861 00b4 6502     		.2byte	0x265
 862 00b6 BA000000 		.4byte	0xba
 863 00ba 05       		.uleb128 0x5
 864 00bb 83000000 		.4byte	0x83
 865 00bf 04       		.uleb128 0x4
 866 00c0 17020000 		.4byte	.LASF16
 867 00c4 02       		.byte	0x2
 868 00c5 7502     		.2byte	0x275
 869 00c7 CB000000 		.4byte	0xcb
 870 00cb 06       		.uleb128 0x6
 871 00cc 04       		.byte	0x4
 872 00cd D1000000 		.4byte	0xd1
 873 00d1 07       		.uleb128 0x7
 874 00d2 02       		.uleb128 0x2
 875 00d3 08       		.byte	0x8
 876 00d4 04       		.byte	0x4
 877 00d5 AD020000 		.4byte	.LASF17
 878 00d9 02       		.uleb128 0x2
 879 00da 04       		.byte	0x4
 880 00db 07       		.byte	0x7
 881 00dc 24020000 		.4byte	.LASF18
 882 00e0 08       		.uleb128 0x8
 883 00e1 06000000 		.4byte	.LASF35
 884 00e5 01       		.byte	0x1
 885 00e6 1F       		.byte	0x1f
 886 00e7 00000000 		.4byte	.LFB0
 887 00eb D4040000 		.4byte	.LFE0-.LFB0
 888 00ef 01       		.uleb128 0x1
 889 00f0 9C       		.byte	0x9c
 890 00f1 12010000 		.4byte	0x112
 891 00f5 09       		.uleb128 0x9
 892 00f6 FE000000 		.4byte	.LASF19
 893 00fa 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 33


 894 00fb 21       		.byte	0x21
 895 00fc 83000000 		.4byte	0x83
 896 0100 02       		.uleb128 0x2
 897 0101 91       		.byte	0x91
 898 0102 74       		.sleb128 -12
 899 0103 09       		.uleb128 0x9
 900 0104 9E000000 		.4byte	.LASF20
 901 0108 01       		.byte	0x1
 902 0109 22       		.byte	0x22
 903 010a 83000000 		.4byte	0x83
 904 010e 02       		.uleb128 0x2
 905 010f 91       		.byte	0x91
 906 0110 70       		.sleb128 -16
 907 0111 00       		.byte	0
 908 0112 0A       		.uleb128 0xa
 909 0113 AA000000 		.4byte	.LASF21
 910 0117 03       		.byte	0x3
 911 0118 3B       		.byte	0x3b
 912 0119 BF000000 		.4byte	0xbf
 913 011d 0A       		.uleb128 0xa
 914 011e 16000000 		.4byte	.LASF22
 915 0122 04       		.byte	0x4
 916 0123 1E       		.byte	0x1e
 917 0124 A4000000 		.4byte	0xa4
 918 0128 0A       		.uleb128 0xa
 919 0129 91020000 		.4byte	.LASF23
 920 012d 04       		.byte	0x4
 921 012e 31       		.byte	0x31
 922 012f A9000000 		.4byte	0xa9
 923 0133 0A       		.uleb128 0xa
 924 0134 CA000000 		.4byte	.LASF24
 925 0138 04       		.byte	0x4
 926 0139 32       		.byte	0x32
 927 013a A4000000 		.4byte	0xa4
 928 013e 0A       		.uleb128 0xa
 929 013f 4D000000 		.4byte	.LASF25
 930 0143 04       		.byte	0x4
 931 0144 35       		.byte	0x35
 932 0145 49010000 		.4byte	0x149
 933 0149 06       		.uleb128 0x6
 934 014a 04       		.byte	0x4
 935 014b A4000000 		.4byte	0xa4
 936 014f 0A       		.uleb128 0xa
 937 0150 B8010000 		.4byte	.LASF26
 938 0154 04       		.byte	0x4
 939 0155 36       		.byte	0x36
 940 0156 BA000000 		.4byte	0xba
 941 015a 0A       		.uleb128 0xa
 942 015b 70020000 		.4byte	.LASF27
 943 015f 04       		.byte	0x4
 944 0160 37       		.byte	0x37
 945 0161 BA000000 		.4byte	0xba
 946 0165 0A       		.uleb128 0xa
 947 0166 A3010000 		.4byte	.LASF28
 948 016a 04       		.byte	0x4
 949 016b 3A       		.byte	0x3a
 950 016c 49010000 		.4byte	0x149
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 34


 951 0170 0A       		.uleb128 0xa
 952 0171 5A020000 		.4byte	.LASF29
 953 0175 04       		.byte	0x4
 954 0176 3B       		.byte	0x3b
 955 0177 BA000000 		.4byte	0xba
 956 017b 0A       		.uleb128 0xa
 957 017c E9010000 		.4byte	.LASF30
 958 0180 04       		.byte	0x4
 959 0181 3C       		.byte	0x3c
 960 0182 BA000000 		.4byte	0xba
 961 0186 0A       		.uleb128 0xa
 962 0187 40020000 		.4byte	.LASF31
 963 018b 04       		.byte	0x4
 964 018c 3D       		.byte	0x3d
 965 018d BA000000 		.4byte	0xba
 966 0191 00       		.byte	0
 967              		.section	.debug_abbrev,"",%progbits
 968              	.Ldebug_abbrev0:
 969 0000 01       		.uleb128 0x1
 970 0001 11       		.uleb128 0x11
 971 0002 01       		.byte	0x1
 972 0003 25       		.uleb128 0x25
 973 0004 0E       		.uleb128 0xe
 974 0005 13       		.uleb128 0x13
 975 0006 0B       		.uleb128 0xb
 976 0007 03       		.uleb128 0x3
 977 0008 0E       		.uleb128 0xe
 978 0009 1B       		.uleb128 0x1b
 979 000a 0E       		.uleb128 0xe
 980 000b 55       		.uleb128 0x55
 981 000c 17       		.uleb128 0x17
 982 000d 11       		.uleb128 0x11
 983 000e 01       		.uleb128 0x1
 984 000f 10       		.uleb128 0x10
 985 0010 17       		.uleb128 0x17
 986 0011 00       		.byte	0
 987 0012 00       		.byte	0
 988 0013 02       		.uleb128 0x2
 989 0014 24       		.uleb128 0x24
 990 0015 00       		.byte	0
 991 0016 0B       		.uleb128 0xb
 992 0017 0B       		.uleb128 0xb
 993 0018 3E       		.uleb128 0x3e
 994 0019 0B       		.uleb128 0xb
 995 001a 03       		.uleb128 0x3
 996 001b 0E       		.uleb128 0xe
 997 001c 00       		.byte	0
 998 001d 00       		.byte	0
 999 001e 03       		.uleb128 0x3
 1000 001f 24       		.uleb128 0x24
 1001 0020 00       		.byte	0
 1002 0021 0B       		.uleb128 0xb
 1003 0022 0B       		.uleb128 0xb
 1004 0023 3E       		.uleb128 0x3e
 1005 0024 0B       		.uleb128 0xb
 1006 0025 03       		.uleb128 0x3
 1007 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 35


 1008 0027 00       		.byte	0
 1009 0028 00       		.byte	0
 1010 0029 04       		.uleb128 0x4
 1011 002a 16       		.uleb128 0x16
 1012 002b 00       		.byte	0
 1013 002c 03       		.uleb128 0x3
 1014 002d 0E       		.uleb128 0xe
 1015 002e 3A       		.uleb128 0x3a
 1016 002f 0B       		.uleb128 0xb
 1017 0030 3B       		.uleb128 0x3b
 1018 0031 05       		.uleb128 0x5
 1019 0032 49       		.uleb128 0x49
 1020 0033 13       		.uleb128 0x13
 1021 0034 00       		.byte	0
 1022 0035 00       		.byte	0
 1023 0036 05       		.uleb128 0x5
 1024 0037 35       		.uleb128 0x35
 1025 0038 00       		.byte	0
 1026 0039 49       		.uleb128 0x49
 1027 003a 13       		.uleb128 0x13
 1028 003b 00       		.byte	0
 1029 003c 00       		.byte	0
 1030 003d 06       		.uleb128 0x6
 1031 003e 0F       		.uleb128 0xf
 1032 003f 00       		.byte	0
 1033 0040 0B       		.uleb128 0xb
 1034 0041 0B       		.uleb128 0xb
 1035 0042 49       		.uleb128 0x49
 1036 0043 13       		.uleb128 0x13
 1037 0044 00       		.byte	0
 1038 0045 00       		.byte	0
 1039 0046 07       		.uleb128 0x7
 1040 0047 15       		.uleb128 0x15
 1041 0048 00       		.byte	0
 1042 0049 27       		.uleb128 0x27
 1043 004a 19       		.uleb128 0x19
 1044 004b 00       		.byte	0
 1045 004c 00       		.byte	0
 1046 004d 08       		.uleb128 0x8
 1047 004e 2E       		.uleb128 0x2e
 1048 004f 01       		.byte	0x1
 1049 0050 3F       		.uleb128 0x3f
 1050 0051 19       		.uleb128 0x19
 1051 0052 03       		.uleb128 0x3
 1052 0053 0E       		.uleb128 0xe
 1053 0054 3A       		.uleb128 0x3a
 1054 0055 0B       		.uleb128 0xb
 1055 0056 3B       		.uleb128 0x3b
 1056 0057 0B       		.uleb128 0xb
 1057 0058 27       		.uleb128 0x27
 1058 0059 19       		.uleb128 0x19
 1059 005a 11       		.uleb128 0x11
 1060 005b 01       		.uleb128 0x1
 1061 005c 12       		.uleb128 0x12
 1062 005d 06       		.uleb128 0x6
 1063 005e 40       		.uleb128 0x40
 1064 005f 18       		.uleb128 0x18
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 36


 1065 0060 9642     		.uleb128 0x2116
 1066 0062 19       		.uleb128 0x19
 1067 0063 01       		.uleb128 0x1
 1068 0064 13       		.uleb128 0x13
 1069 0065 00       		.byte	0
 1070 0066 00       		.byte	0
 1071 0067 09       		.uleb128 0x9
 1072 0068 34       		.uleb128 0x34
 1073 0069 00       		.byte	0
 1074 006a 03       		.uleb128 0x3
 1075 006b 0E       		.uleb128 0xe
 1076 006c 3A       		.uleb128 0x3a
 1077 006d 0B       		.uleb128 0xb
 1078 006e 3B       		.uleb128 0x3b
 1079 006f 0B       		.uleb128 0xb
 1080 0070 49       		.uleb128 0x49
 1081 0071 13       		.uleb128 0x13
 1082 0072 02       		.uleb128 0x2
 1083 0073 18       		.uleb128 0x18
 1084 0074 00       		.byte	0
 1085 0075 00       		.byte	0
 1086 0076 0A       		.uleb128 0xa
 1087 0077 34       		.uleb128 0x34
 1088 0078 00       		.byte	0
 1089 0079 03       		.uleb128 0x3
 1090 007a 0E       		.uleb128 0xe
 1091 007b 3A       		.uleb128 0x3a
 1092 007c 0B       		.uleb128 0xb
 1093 007d 3B       		.uleb128 0x3b
 1094 007e 0B       		.uleb128 0xb
 1095 007f 49       		.uleb128 0x49
 1096 0080 13       		.uleb128 0x13
 1097 0081 3F       		.uleb128 0x3f
 1098 0082 19       		.uleb128 0x19
 1099 0083 3C       		.uleb128 0x3c
 1100 0084 19       		.uleb128 0x19
 1101 0085 00       		.byte	0
 1102 0086 00       		.byte	0
 1103 0087 00       		.byte	0
 1104              		.section	.debug_aranges,"",%progbits
 1105 0000 1C000000 		.4byte	0x1c
 1106 0004 0200     		.2byte	0x2
 1107 0006 00000000 		.4byte	.Ldebug_info0
 1108 000a 04       		.byte	0x4
 1109 000b 00       		.byte	0
 1110 000c 0000     		.2byte	0
 1111 000e 0000     		.2byte	0
 1112 0010 00000000 		.4byte	.LFB0
 1113 0014 D4040000 		.4byte	.LFE0-.LFB0
 1114 0018 00000000 		.4byte	0
 1115 001c 00000000 		.4byte	0
 1116              		.section	.debug_ranges,"",%progbits
 1117              	.Ldebug_ranges0:
 1118 0000 00000000 		.4byte	.LFB0
 1119 0004 D4040000 		.4byte	.LFE0
 1120 0008 00000000 		.4byte	0
 1121 000c 00000000 		.4byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 37


 1122              		.section	.debug_line,"",%progbits
 1123              	.Ldebug_line0:
 1124 0000 B6010000 		.section	.debug_str,"MS",%progbits,1
 1124      02007200 
 1124      00000201 
 1124      FB0E0D00 
 1124      01010101 
 1125              	.LASF15:
 1126 0000 72656733 		.ascii	"reg32\000"
 1126      3200
 1127              	.LASF35:
 1128 0006 4932435F 		.ascii	"I2C_LED_I2C_ISR\000"
 1128      4C45445F 
 1128      4932435F 
 1128      49535200 
 1129              	.LASF22:
 1130 0016 4932435F 		.ascii	"I2C_LED_state\000"
 1130      4C45445F 
 1130      73746174 
 1130      6500
 1131              	.LASF34:
 1132 0024 433A5C70 		.ascii	"C:\\psoc\\chamonix\\fixed\\Fixed\\fixed.cydsn\000"
 1132      736F635C 
 1132      6368616D 
 1132      6F6E6978 
 1132      5C666978 
 1133              	.LASF25:
 1134 004d 4932435F 		.ascii	"I2C_LED_mstrRdBufPtr\000"
 1134      4C45445F 
 1134      6D737472 
 1134      52644275 
 1134      66507472 
 1135              	.LASF33:
 1136 0062 47656E65 		.ascii	"Generated_Source\\PSoC4\\I2C_LED_I2C_INT.c\000"
 1136      72617465 
 1136      645F536F 
 1136      75726365 
 1136      5C50536F 
 1137              	.LASF3:
 1138 008b 73686F72 		.ascii	"short unsigned int\000"
 1138      7420756E 
 1138      7369676E 
 1138      65642069 
 1138      6E7400
 1139              	.LASF20:
 1140 009e 656E6454 		.ascii	"endTransfer\000"
 1140      72616E73 
 1140      66657200 
 1141              	.LASF21:
 1142 00aa 4932435F 		.ascii	"I2C_LED_customIntrHandler\000"
 1142      4C45445F 
 1142      63757374 
 1142      6F6D496E 
 1142      74724861 
 1143              	.LASF12:
 1144 00c4 666C6F61 		.ascii	"float\000"
 1144      7400
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 38


 1145              	.LASF24:
 1146 00ca 4932435F 		.ascii	"I2C_LED_mstrControl\000"
 1146      4C45445F 
 1146      6D737472 
 1146      436F6E74 
 1146      726F6C00 
 1147              	.LASF1:
 1148 00de 756E7369 		.ascii	"unsigned char\000"
 1148      676E6564 
 1148      20636861 
 1148      7200
 1149              	.LASF5:
 1150 00ec 6C6F6E67 		.ascii	"long unsigned int\000"
 1150      20756E73 
 1150      69676E65 
 1150      6420696E 
 1150      7400
 1151              	.LASF19:
 1152 00fe 64696666 		.ascii	"diffCount\000"
 1152      436F756E 
 1152      7400
 1153              	.LASF9:
 1154 0108 75696E74 		.ascii	"uint8\000"
 1154      3800
 1155              	.LASF32:
 1156 010e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1156      43313120 
 1156      352E342E 
 1156      31203230 
 1156      31363036 
 1157 0141 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1157      20726576 
 1157      6973696F 
 1157      6E203233 
 1157      37373135 
 1158 0174 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1158      66756E63 
 1158      74696F6E 
 1158      2D736563 
 1158      74696F6E 
 1159              	.LASF13:
 1160 019c 646F7562 		.ascii	"double\000"
 1160      6C6500
 1161              	.LASF28:
 1162 01a3 4932435F 		.ascii	"I2C_LED_mstrWrBufPtr\000"
 1162      4C45445F 
 1162      6D737472 
 1162      57724275 
 1162      66507472 
 1163              	.LASF26:
 1164 01b8 4932435F 		.ascii	"I2C_LED_mstrRdBufSize\000"
 1164      4C45445F 
 1164      6D737472 
 1164      52644275 
 1164      6653697A 
 1165              	.LASF10:
 1166 01ce 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 39


 1166      313600
 1167              	.LASF11:
 1168 01d5 75696E74 		.ascii	"uint32\000"
 1168      333200
 1169              	.LASF8:
 1170 01dc 756E7369 		.ascii	"unsigned int\000"
 1170      676E6564 
 1170      20696E74 
 1170      00
 1171              	.LASF30:
 1172 01e9 4932435F 		.ascii	"I2C_LED_mstrWrBufIndex\000"
 1172      4C45445F 
 1172      6D737472 
 1172      57724275 
 1172      66496E64 
 1173              	.LASF7:
 1174 0200 6C6F6E67 		.ascii	"long long unsigned int\000"
 1174      206C6F6E 
 1174      6720756E 
 1174      7369676E 
 1174      65642069 
 1175              	.LASF16:
 1176 0217 63796973 		.ascii	"cyisraddress\000"
 1176      72616464 
 1176      72657373 
 1176      00
 1177              	.LASF18:
 1178 0224 73697A65 		.ascii	"sizetype\000"
 1178      74797065 
 1178      00
 1179              	.LASF6:
 1180 022d 6C6F6E67 		.ascii	"long long int\000"
 1180      206C6F6E 
 1180      6720696E 
 1180      7400
 1181              	.LASF14:
 1182 023b 63686172 		.ascii	"char\000"
 1182      00
 1183              	.LASF31:
 1184 0240 4932435F 		.ascii	"I2C_LED_mstrWrBufIndexTmp\000"
 1184      4C45445F 
 1184      6D737472 
 1184      57724275 
 1184      66496E64 
 1185              	.LASF29:
 1186 025a 4932435F 		.ascii	"I2C_LED_mstrWrBufSize\000"
 1186      4C45445F 
 1186      6D737472 
 1186      57724275 
 1186      6653697A 
 1187              	.LASF27:
 1188 0270 4932435F 		.ascii	"I2C_LED_mstrRdBufIndex\000"
 1188      4C45445F 
 1188      6D737472 
 1188      52644275 
 1188      66496E64 
 1189              	.LASF2:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccwacmyE.s 			page 40


 1190 0287 73686F72 		.ascii	"short int\000"
 1190      7420696E 
 1190      7400
 1191              	.LASF23:
 1192 0291 4932435F 		.ascii	"I2C_LED_mstrStatus\000"
 1192      4C45445F 
 1192      6D737472 
 1192      53746174 
 1192      757300
 1193              	.LASF4:
 1194 02a4 6C6F6E67 		.ascii	"long int\000"
 1194      20696E74 
 1194      00
 1195              	.LASF17:
 1196 02ad 6C6F6E67 		.ascii	"long double\000"
 1196      20646F75 
 1196      626C6500 
 1197              	.LASF0:
 1198 02b9 7369676E 		.ascii	"signed char\000"
 1198      65642063 
 1198      68617200 
 1199              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
