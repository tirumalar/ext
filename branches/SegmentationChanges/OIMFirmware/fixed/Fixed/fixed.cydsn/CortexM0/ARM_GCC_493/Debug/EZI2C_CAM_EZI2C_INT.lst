ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"EZI2C_CAM_EZI2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.EZI2C_CAM_EZI2C_STRETCH_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	EZI2C_CAM_EZI2C_STRETCH_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	EZI2C_CAM_EZI2C_STRETCH_ISR, %function
  23              	EZI2C_CAM_EZI2C_STRETCH_ISR:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\EZI2C_CAM_EZI2C_INT.c"
   1:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * \file EZI2C_CAM_EZI2C_INT.c
   3:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * \version 3.20
   4:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** *
   5:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * \brief
   6:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** *
   9:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * Note:
  10:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** *
  11:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * \copyright
  13:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  19:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** #include "EZI2C_CAM_PVT.h"
  20:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** #include "EZI2C_CAM_EZI2C_PVT.h"
  21:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  23:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** #if(EZI2C_CAM_EZI2C_SCL_STRETCH_ENABLE_CONST)
  24:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     /*******************************************************************************
  25:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     * Function Name: EZI2C_CAM_EZI2C_STRETCH_ISR
  26:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     ****************************************************************************//**
  27:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     *
  28:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode.
  29:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     *  The clock stretching is used during operation.
  30:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     *
  31:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     *******************************************************************************/
  32:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     CY_ISR_PROTO(EZI2C_CAM_EZI2C_STRETCH_ISR)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 2


  33:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     {
  26              		.loc 1 33 0
  27              		.cfi_startproc
  28 0000 70B5     		push	{r4, r5, r6, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 4, -16
  31              		.cfi_offset 5, -12
  32              		.cfi_offset 6, -8
  33              		.cfi_offset 14, -4
  34:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         static uint16 locBufSize;
  35:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         uint32 locIndex;
  36:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         uint32 locStatus;
  37:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  38:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         uint32 endTransfer;
  39:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         uint32 fifoIndex;
  40:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         uint32 locByte;
  41:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  42:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         uint32 locIntrCause;
  43:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         uint32 locIntrSlave;
  44:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  45:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #ifdef EZI2C_CAM_EZI2C_STRETCH_ISR_ENTRY_CALLBACK
  46:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         EZI2C_CAM_EZI2C_STRETCH_ISR_EntryCallback();
  47:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #endif /* EZI2C_CAM_EZI2C_STRETCH_ISR_ENTRY_CALLBACK */
  48:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  49:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #if(EZI2C_CAM_SECONDARY_ADDRESS_ENABLE_CONST)
  50:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  51:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         static volatile uint8 * EZI2C_CAM_dataBuffer; /* Pointer to data buffer              */
  52:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         static uint16 EZI2C_CAM_bufSizeBuf;           /* Size of buffer in bytes             */
  53:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         static uint16 EZI2C_CAM_protectBuf;           /* Start index of write protected area */
  54:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  55:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         static uint8 activeAddress;
  56:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         uint32 ackResponse;
  57:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  58:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         ackResponse = EZI2C_CAM_EZI2C_ACK_RECEIVED_ADDRESS;
  59:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #endif /* (EZI2C_CAM_SECONDARY_ADDRESS_ENABLE_CONST) */
  60:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  61:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #if !defined (CY_REMOVE_EZI2C_CAM_CUSTOM_INTR_HANDLER)
  62:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         if(NULL != EZI2C_CAM_customIntrHandler)
  34              		.loc 1 62 0
  35 0002 AA4B     		ldr	r3, .L38
  36 0004 1B68     		ldr	r3, [r3]
  37 0006 002B     		cmp	r3, #0
  38 0008 00D0     		beq	.L2
  63:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         {
  64:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_customIntrHandler();
  39              		.loc 1 64 0
  40 000a 9847     		blx	r3
  41              	.LVL0:
  42              	.L2:
  65:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         }
  66:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #else
  67:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         CY_EZI2C_CAM_CUSTOM_INTR_HANDLER();
  68:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_EZI2C_CAM_CUSTOM_INTR_HANDLER) */
  69:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  70:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         /* Make local copy of global variable */
  71:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         locIndex = EZI2C_CAM_EZI2C_GET_INDEX(activeAddress);
  43              		.loc 1 71 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 3


  44 000c A84B     		ldr	r3, .L38+4
  45 000e 1C88     		ldrh	r4, [r3]
  46              	.LVL1:
  72:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  73:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         /* Get interrupt sources */
  74:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         locIntrSlave = EZI2C_CAM_GetSlaveInterruptSource();
  47              		.loc 1 74 0
  48 0010 A84B     		ldr	r3, .L38+8
  49 0012 1D68     		ldr	r5, [r3]
  50              	.LVL2:
  75:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         locIntrCause = EZI2C_CAM_GetInterruptCause();
  51              		.loc 1 75 0
  52 0014 A84B     		ldr	r3, .L38+12
  53 0016 1E68     		ldr	r6, [r3]
  54              	.LVL3:
  76:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  77:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  78:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  79:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  80:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         */
  81:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         if(0u != (locIntrSlave & (EZI2C_CAM_INTR_SLAVE_I2C_ARB_LOST |
  55              		.loc 1 81 0
  56 0018 0223     		mov	r3, #2
  57 001a FF33     		add	r3, r3, #255
  58 001c 1D42     		tst	r5, r3
  59 001e 3FD0     		beq	.L3
  82:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                   EZI2C_CAM_INTR_SLAVE_I2C_BUS_ERROR)))
  83:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         {
  84:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_CTRL_REG &= (uint32) ~EZI2C_CAM_CTRL_ENABLED; /* Disable SCB block */
  60              		.loc 1 84 0
  61 0020 A64A     		ldr	r2, .L38+16
  62 0022 1368     		ldr	r3, [r2]
  63 0024 5B00     		lsl	r3, r3, #1
  64 0026 5B08     		lsr	r3, r3, #1
  65 0028 1360     		str	r3, [r2]
  85:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  86:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         #if(EZI2C_CAM_CY_SCBIP_V0)
  87:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             if(0u != ((uint8) EZI2C_CAM_EZI2C_STATUS_BUSY & EZI2C_CAM_curStatus))
  66              		.loc 1 87 0
  67 002a A54B     		ldr	r3, .L38+20
  68 002c 1B78     		ldrb	r3, [r3]
  69 002e 9B06     		lsl	r3, r3, #26
  70 0030 1DD5     		bpl	.L4
  88:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         #endif /* (EZI2C_CAM_CY_SCBIP_V0) */
  89:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             {
  90:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 EZI2C_CAM_curStatus &= (uint8) ~EZI2C_CAM_EZI2C_STATUS_BUSY;
  71              		.loc 1 90 0
  72 0032 A34B     		ldr	r3, .L38+20
  73 0034 1A78     		ldrb	r2, [r3]
  74 0036 2021     		mov	r1, #32
  75 0038 8A43     		bic	r2, r1
  76 003a 1A70     		strb	r2, [r3]
  91:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 EZI2C_CAM_curStatus |= (uint8)  EZI2C_CAM_EZI2C_STATUS_ERR;
  77              		.loc 1 91 0
  78 003c 1978     		ldrb	r1, [r3]
  79 003e 1022     		mov	r2, #16
  80 0040 0A43     		orr	r2, r1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 4


  81 0042 1A70     		strb	r2, [r3]
  92:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
  93:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  94:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 if(0u == (EZI2C_CAM_GetTxInterruptMode() & EZI2C_CAM_INTR_TX_EMPTY))
  82              		.loc 1 94 0
  83 0044 9F4B     		ldr	r3, .L38+24
  84 0046 1B68     		ldr	r3, [r3]
  85 0048 DB06     		lsl	r3, r3, #27
  86 004a 0BD4     		bmi	.L5
  95:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 {
  96:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Write complete */
  97:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     if(EZI2C_CAM_indexBuf1 != EZI2C_CAM_offsetBuf1)
  87              		.loc 1 97 0
  88 004c 9E4B     		ldr	r3, .L38+28
  89 004e 1A78     		ldrb	r2, [r3]
  90 0050 974B     		ldr	r3, .L38+4
  91 0052 1B88     		ldrh	r3, [r3]
  92 0054 9A42     		cmp	r2, r3
  93 0056 0AD0     		beq	.L4
  98:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
  99:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_curStatus |= (uint8) EZI2C_CAM_INTR_SLAVE_I2C_WRITE_STOP;
  94              		.loc 1 99 0
  95 0058 994A     		ldr	r2, .L38+20
  96 005a 1178     		ldrb	r1, [r2]
  97 005c 0823     		mov	r3, #8
  98 005e 0B43     		orr	r3, r1
  99 0060 1370     		strb	r3, [r2]
 100 0062 04E0     		b	.L4
 101              	.L5:
 100:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 101:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 }
 102:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 else
 103:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 {
 104:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Read complete */
 105:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     EZI2C_CAM_curStatus |= (uint8) EZI2C_CAM_INTR_SLAVE_I2C_NACK;
 102              		.loc 1 105 0
 103 0064 964A     		ldr	r2, .L38+20
 104 0066 1178     		ldrb	r1, [r2]
 105 0068 0223     		mov	r3, #2
 106 006a 0B43     		orr	r3, r1
 107 006c 1370     		strb	r3, [r2]
 108              	.L4:
 106:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 }
 107:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             }
 108:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 109:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_DISABLE_SLAVE_AUTO_DATA;
 109              		.loc 1 109 0
 110 006e 974A     		ldr	r2, .L38+32
 111 0070 1168     		ldr	r1, [r2]
 112 0072 974B     		ldr	r3, .L38+36
 113 0074 0B40     		and	r3, r1
 114 0076 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 111:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 112:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 115              		.loc 1 112 0
 116 0078 0023     		mov	r3, #0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 5


 117 007a 964A     		ldr	r2, .L38+40
 118 007c 1360     		str	r3, [r2]
 113:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 119              		.loc 1 113 0
 120 007e 914A     		ldr	r2, .L38+24
 121 0080 1360     		str	r3, [r2]
 114:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 115:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         #if(EZI2C_CAM_CY_SCBIP_V0)
 116:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 117:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_ALL);
 122              		.loc 1 117 0
 123 0082 9549     		ldr	r1, .L38+44
 124 0084 954A     		ldr	r2, .L38+48
 125 0086 1160     		str	r1, [r2]
 118:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_ClearSlaveInterruptSource(EZI2C_CAM_INTR_SLAVE_ALL);
 126              		.loc 1 118 0
 127 0088 9549     		ldr	r1, .L38+52
 128 008a 8A4A     		ldr	r2, .L38+8
 129 008c 1160     		str	r1, [r2]
 119:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         #endif /* (EZI2C_CAM_CY_SCBIP_V0) */
 120:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 121:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_fsmState = EZI2C_CAM_EZI2C_FSM_IDLE;
 130              		.loc 1 121 0
 131 008e 954A     		ldr	r2, .L38+56
 132 0090 1370     		strb	r3, [r2]
 122:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 123:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             EZI2C_CAM_CTRL_REG |= (uint32) EZI2C_CAM_CTRL_ENABLED;  /* Enable SCB block */
 133              		.loc 1 123 0
 134 0092 8A4A     		ldr	r2, .L38+16
 135 0094 1368     		ldr	r3, [r2]
 136 0096 8021     		mov	r1, #128
 137 0098 0906     		lsl	r1, r1, #24
 138 009a 0B43     		orr	r3, r1
 139 009c 1360     		str	r3, [r2]
 140 009e 02E1     		b	.L6
 141              	.L3:
 124:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         }
 125:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         else
 126:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         {
 127:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 128:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 129:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_CAM_INTR_CAUSE_I2C_EC))
 142              		.loc 1 129 0
 143 00a0 F306     		lsl	r3, r6, #27
 144 00a2 02D5     		bpl	.L7
 130:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             {
 131:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 132:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 EZI2C_CAM_SetI2CExtClkInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 145              		.loc 1 132 0
 146 00a4 0022     		mov	r2, #0
 147 00a6 904B     		ldr	r3, .L38+60
 148 00a8 1A60     		str	r2, [r3]
 149              	.L7:
 133:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             }
 134:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 135:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             if(0u != (locIntrCause & (EZI2C_CAM_INTR_CAUSE_RX | EZI2C_CAM_INTR_CAUSE_SLAVE)))
 150              		.loc 1 135 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 6


 151 00aa 0A23     		mov	r3, #10
 152 00ac 3342     		tst	r3, r6
 153 00ae 00D1     		bne	.LCB131
 154 00b0 90E0     		b	.L8	@long jump
 155              	.LCB131:
 136:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             {
 137:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 138:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 139:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 if (0u != (EZI2C_CAM_GetRxInterruptSourceMasked() & EZI2C_CAM_INTR_RX_NOT_EMPTY))
 156              		.loc 1 139 0
 157 00b2 8E4B     		ldr	r3, .L38+64
 158 00b4 1B68     		ldr	r3, [r3]
 159 00b6 5B07     		lsl	r3, r3, #29
 160 00b8 56D5     		bpl	.L9
 140:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 {
 141:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 #if(EZI2C_CAM_SECONDARY_ADDRESS_ENABLE_CONST)
 142:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 143:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 144:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 145:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     */
 146:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     if (0u == (locIntrCause & EZI2C_CAM_INTR_CAUSE_SLAVE))
 147:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 #endif /* (EZI2C_CAM_SECONDARY_ADDRESS_ENABLE_CONST) */
 148:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 149:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         locByte = EZI2C_CAM_RX_FIFO_RD_REG;
 161              		.loc 1 149 0
 162 00ba 8D4B     		ldr	r3, .L38+68
 163 00bc 1B68     		ldr	r3, [r3]
 164              	.LVL4:
 150:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 151:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         switch(EZI2C_CAM_fsmState)
 165              		.loc 1 151 0
 166 00be 894A     		ldr	r2, .L38+56
 167 00c0 1278     		ldrb	r2, [r2]
 168 00c2 002A     		cmp	r2, #0
 169 00c4 16D0     		beq	.L11
 170 00c6 012A     		cmp	r2, #1
 171 00c8 47D1     		bne	.L37
 152:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 153:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         case EZI2C_CAM_EZI2C_FSM_BYTE_WRITE:
 154:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             if(0u != locBufSize)
 172              		.loc 1 154 0
 173 00ca 8A4A     		ldr	r2, .L38+72
 174 00cc 1288     		ldrh	r2, [r2]
 175 00ce 002A     		cmp	r2, #0
 176 00d0 0DD0     		beq	.L13
 155:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             {
 156:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 157:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 EZI2C_CAM_I2C_SLAVE_GENERATE_ACK;
 177              		.loc 1 157 0
 178 00d2 0121     		mov	r1, #1
 179 00d4 884A     		ldr	r2, .L38+76
 180 00d6 1160     		str	r1, [r2]
 158:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 159:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 EZI2C_CAM_dataBuffer1[locIndex] = (uint8) locByte;
 181              		.loc 1 159 0
 182 00d8 884A     		ldr	r2, .L38+80
 183 00da 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 7


 184 00dc 1219     		add	r2, r2, r4
 185 00de DBB2     		uxtb	r3, r3
 186              	.LVL5:
 187 00e0 1370     		strb	r3, [r2]
 160:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 locIndex++;
 188              		.loc 1 160 0
 189 00e2 0134     		add	r4, r4, #1
 190              	.LVL6:
 161:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 locBufSize--;
 191              		.loc 1 161 0
 192 00e4 834A     		ldr	r2, .L38+72
 193 00e6 1388     		ldrh	r3, [r2]
 194 00e8 013B     		sub	r3, r3, #1
 195 00ea 1380     		strh	r3, [r2]
 196 00ec 38E0     		b	.L14
 197              	.LVL7:
 198              	.L13:
 162:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             }
 163:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             else
 164:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             {
 165:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 166:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 EZI2C_CAM_I2C_SLAVE_GENERATE_NACK;
 199              		.loc 1 166 0
 200 00ee FFF7FEFF 		bl	EZI2C_CAM_I2CSlaveNackGeneration
 201              	.LVL8:
 202 00f2 35E0     		b	.L14
 203              	.LVL9:
 204              	.L11:
 167:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             }
 168:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             break;
 169:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 170:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #if(EZI2C_CAM_SUB_ADDRESS_SIZE16_CONST)
 171:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         case EZI2C_CAM_EZI2C_FSM_OFFSET_HI8:
 172:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 173:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_I2C_SLAVE_GENERATE_ACK;
 174:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 175:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Store offset most significant byre */
 176:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 177:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 178:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_fsmState = EZI2C_CAM_EZI2C_FSM_OFFSET_LO8;
 179:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 180:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             break;
 181:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #endif /* (EZI2C_CAM_SUB_ADDRESS_SIZE16_CONST) */
 182:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 183:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         case EZI2C_CAM_EZI2C_FSM_OFFSET_LO8:
 184:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 185:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             #if (EZI2C_CAM_SUB_ADDRESS_SIZE16)
 186:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             {
 187:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 188:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 189:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             }
 190:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             #endif
 191:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 192:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Check offset against buffer size */
 193:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             if(locByte < (uint32) EZI2C_CAM_bufSizeBuf1)
 205              		.loc 1 193 0
 206 00f4 824A     		ldr	r2, .L38+84
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 8


 207 00f6 1288     		ldrh	r2, [r2]
 208 00f8 9A42     		cmp	r2, r3
 209 00fa 2BD9     		bls	.L15
 194:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             {
 195:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 EZI2C_CAM_I2C_SLAVE_GENERATE_ACK;
 210              		.loc 1 195 0
 211 00fc 0121     		mov	r1, #1
 212 00fe 7E4A     		ldr	r2, .L38+76
 213 0100 1160     		str	r1, [r2]
 214              	.LVL10:
 196:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 197:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 198:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 locIndex = locByte;
 199:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 200:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 201:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < EZI2C_CAM_protectBuf1) ?
 215              		.loc 1 201 0
 216 0102 804A     		ldr	r2, .L38+88
 217 0104 1288     		ldrh	r2, [r2]
 218 0106 9A42     		cmp	r2, r3
 219 0108 02D9     		bls	.L34
 220              		.loc 1 201 0 is_stmt 0 discriminator 1
 221 010a D21A     		sub	r2, r2, r3
 222 010c 92B2     		uxth	r2, r2
 223 010e 00E0     		b	.L16
 224              	.L34:
 225              		.loc 1 201 0
 226 0110 0022     		mov	r2, #0
 227              	.L16:
 228              		.loc 1 201 0 discriminator 4
 229 0112 7849     		ldr	r1, .L38+72
 230 0114 0A80     		strh	r2, [r1]
 202:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                                        (EZI2C_CAM_protectBuf1 - locByte) : (0u));
 203:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 204:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             #if(EZI2C_CAM_CY_SCBIP_V0)
 205:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 206:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 if(locBufSize < EZI2C_CAM_EZI2C_FIFO_SIZE)
 231              		.loc 1 206 0 is_stmt 1 discriminator 4
 232 0116 072A     		cmp	r2, #7
 233 0118 03D8     		bhi	.L17
 207:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 {
 208:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 209:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     EZI2C_CAM_fsmState = EZI2C_CAM_EZI2C_FSM_BYTE_WRITE;
 234              		.loc 1 209 0
 235 011a 0121     		mov	r1, #1
 236 011c 714A     		ldr	r2, .L38+56
 237 011e 1170     		strb	r1, [r2]
 238 0120 14E0     		b	.L18
 239              	.L17:
 210:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 }
 211:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 212:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 else if(locBufSize == EZI2C_CAM_EZI2C_FIFO_SIZE)
 240              		.loc 1 212 0
 241 0122 082A     		cmp	r2, #8
 242 0124 09D1     		bne	.L19
 213:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 {
 214:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 9


 243              		.loc 1 214 0
 244 0126 6949     		ldr	r1, .L38+32
 245 0128 0A68     		ldr	r2, [r1]
 246 012a A020     		mov	r0, #160
 247 012c 0002     		lsl	r0, r0, #8
 248 012e 0243     		orr	r2, r0
 249 0130 0A60     		str	r2, [r1]
 215:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 250              		.loc 1 215 0
 251 0132 0021     		mov	r1, #0
 252 0134 674A     		ldr	r2, .L38+40
 253 0136 1160     		str	r1, [r2]
 254 0138 08E0     		b	.L18
 255              	.L19:
 216:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 }
 217:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 else
 218:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 {
 219:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO i
 256              		.loc 1 219 0
 257 013a 6449     		ldr	r1, .L38+32
 258 013c 0A68     		ldr	r2, [r1]
 259 013e 8020     		mov	r0, #128
 260 0140 8001     		lsl	r0, r0, #6
 261 0142 0243     		orr	r2, r0
 262 0144 0A60     		str	r2, [r1]
 220:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_INTR_RX_FULL);
 263              		.loc 1 220 0
 264 0146 0821     		mov	r1, #8
 265 0148 624A     		ldr	r2, .L38+40
 266 014a 1160     		str	r1, [r2]
 267              	.L18:
 221:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 }
 222:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 223:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             #else
 224:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 225:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 #if(EZI2C_CAM_SECONDARY_ADDRESS_ENABLE)
 226:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 {
 227:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 228:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 229:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     */
 230:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     EZI2C_CAM_fsmState = EZI2C_CAM_EZI2C_FSM_BYTE_WRITE;
 231:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 }
 232:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 #else
 233:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 {
 234:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     if (locBufSize < EZI2C_CAM_EZI2C_FIFO_SIZE)
 235:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     {
 236:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 237:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                         EZI2C_CAM_fsmState = EZI2C_CAM_EZI2C_FSM_BYTE_WRITE;
 238:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     }
 239:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 240:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     else if (locBufSize == EZI2C_CAM_EZI2C_FIFO_SIZE)
 241:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     {
 242:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                         EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is f
 243:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                         EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 244:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     }
 245:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     else
 246:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 10


 247:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                         EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FI
 248:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                         EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_INTR_RX_FULL);
 249:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                     }
 250:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 }
 251:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 #endif
 252:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 253:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             #endif /* (EZI2C_CAM_CY_SCBIP_V0) */
 254:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 255:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 256:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 EZI2C_CAM_EZI2C_SET_OFFSET(activeAddress, locIndex);
 268              		.loc 1 256 0
 269 014c 5E4A     		ldr	r2, .L38+28
 270 014e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 271              		.loc 1 198 0
 272 0150 1C1C     		mov	r4, r3
 273 0152 05E0     		b	.L14
 274              	.LVL11:
 275              	.L15:
 257:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             }
 258:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             else
 259:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             {
 260:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 261:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 EZI2C_CAM_I2C_SLAVE_GENERATE_NACK;
 276              		.loc 1 261 0
 277 0154 FFF7FEFF 		bl	EZI2C_CAM_I2CSlaveNackGeneration
 278              	.LVL12:
 279 0158 02E0     		b	.L14
 280              	.LVL13:
 281              	.L37:
 262:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             }
 263:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             break;
 264:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 265:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         default:
 266:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 282              		.loc 1 266 0 discriminator 1
 283 015a 0020     		mov	r0, #0
 284 015c FFF7FEFF 		bl	CyHalt
 285              	.LVL14:
 286              	.L14:
 267:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             break;
 268:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 269:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 270:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_NOT_EMPTY);
 287              		.loc 1 270 0
 288 0160 0422     		mov	r2, #4
 289 0162 5E4B     		ldr	r3, .L38+48
 290 0164 1A60     		str	r2, [r3]
 291 0166 35E0     		b	.L8
 292              	.L9:
 271:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 272:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 }
 273:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 274:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 275:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 else if (0u != (EZI2C_CAM_I2C_CTRL_REG & EZI2C_CAM_I2C_CTRL_S_READY_DATA_ACK))
 293              		.loc 1 275 0
 294 0168 584B     		ldr	r3, .L38+32
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 11


 295 016a 1B68     		ldr	r3, [r3]
 296 016c 9B04     		lsl	r3, r3, #18
 297 016e 31D5     		bpl	.L8
 276:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 {
 277:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 278:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 279:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 280:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     */
 281:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     if(0u != (locIntrCause & EZI2C_CAM_INTR_CAUSE_SLAVE))
 298              		.loc 1 281 0
 299 0170 B307     		lsl	r3, r6, #30
 300 0172 0DD5     		bpl	.L20
 282:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 283:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 284:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         fifoIndex = EZI2C_CAM_GET_RX_FIFO_ENTRIES;
 301              		.loc 1 284 0
 302 0174 644B     		ldr	r3, .L38+92
 303 0176 1B68     		ldr	r3, [r3]
 304 0178 0F21     		mov	r1, #15
 305 017a 1940     		and	r1, r3
 306              	.LVL15:
 285:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 286:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         #if(EZI2C_CAM_SECONDARY_ADDRESS_ENABLE)
 287:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 288:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Update with current address match */
 289:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             if(EZI2C_CAM_CHECK_INTR_SLAVE_MASKED(EZI2C_CAM_INTR_SLAVE_I2C_ADDR_MATC
 290:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             {
 291:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 292:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 fifoIndex = EZI2C_CAM_GET_RX_FIFO_ENTRIES;
 293:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 294:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 295:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 296:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 297:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 */
 298:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                 fifoIndex -= ((0u != EZI2C_CAM_GET_RX_FIFO_SR_VALID) ? (0u) : (1u))
 299:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             }
 300:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 301:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         #endif
 302:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 303:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_DISABLE_SLAVE_AUTO_DATA;
 307              		.loc 1 303 0
 308 017c 534A     		ldr	r2, .L38+32
 309 017e 1068     		ldr	r0, [r2]
 310 0180 534B     		ldr	r3, .L38+36
 311 0182 0340     		and	r3, r0
 312 0184 1360     		str	r3, [r2]
 313              	.LVL16:
 304:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         endTransfer = EZI2C_CAM_EZI2C_CONTINUE_TRANSFER;
 314              		.loc 1 304 0
 315 0186 0120     		mov	r0, #1
 316 0188 14E0     		b	.L21
 317              	.LVL17:
 318              	.L35:
 305:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 306:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     else
 307:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 308:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 12


 309:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 310:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 311:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_CAM_EZI2C_FIFO_SIZE;
 312:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 313:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_CAM_EZI2C_FIFO_SIZE)
 314:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 315:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 316:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 317:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             endTransfer = EZI2C_CAM_EZI2C_COMPLETE_TRANSFER;
 318:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 319:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         else
 320:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 321:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Continue  transaction */
 322:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             fifoIndex   = EZI2C_CAM_EZI2C_FIFO_SIZE;
 319              		.loc 1 322 0
 320 018a 0821     		mov	r1, #8
 323:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             endTransfer = EZI2C_CAM_EZI2C_CONTINUE_TRANSFER;
 321              		.loc 1 323 0
 322 018c 0120     		mov	r0, #1
 323 018e 11E0     		b	.L21
 324              	.L20:
 311:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 325              		.loc 1 311 0
 326 0190 584B     		ldr	r3, .L38+72
 327 0192 1988     		ldrh	r1, [r3]
 328 0194 0839     		sub	r1, r1, #8
 329 0196 89B2     		uxth	r1, r1
 330 0198 1980     		strh	r1, [r3]
 313:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 331              		.loc 1 313 0
 332 019a 0829     		cmp	r1, #8
 333 019c F5D8     		bhi	.L35
 334              	.LVL18:
 317:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 335              		.loc 1 317 0
 336 019e 0020     		mov	r0, #0
 337 01a0 08E0     		b	.L21
 338              	.LVL19:
 339              	.L23:
 324:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 325:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 326:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 327:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 328:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 329:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Store data in buffer */
 330:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_dataBuffer1[locIndex] = (uint8) EZI2C_CAM_RX_FIFO_RD_REG;
 340              		.loc 1 330 0 discriminator 2
 341 01a2 564B     		ldr	r3, .L38+80
 342 01a4 1B68     		ldr	r3, [r3]
 343 01a6 1B19     		add	r3, r3, r4
 344 01a8 514A     		ldr	r2, .L38+68
 345 01aa 1268     		ldr	r2, [r2]
 346 01ac D2B2     		uxtb	r2, r2
 347 01ae 1A70     		strb	r2, [r3]
 331:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         locIndex++;
 348              		.loc 1 331 0 discriminator 2
 349 01b0 0134     		add	r4, r4, #1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 13


 350              	.LVL20:
 327:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 351              		.loc 1 327 0 discriminator 2
 352 01b2 0139     		sub	r1, r1, #1
 353              	.LVL21:
 354              	.L21:
 327:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 355              		.loc 1 327 0 is_stmt 0 discriminator 1
 356 01b4 0029     		cmp	r1, #0
 357 01b6 F4D1     		bne	.L23
 332:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 333:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 334:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 335:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     if(EZI2C_CAM_EZI2C_COMPLETE_TRANSFER == endTransfer)
 358              		.loc 1 335 0 is_stmt 1
 359 01b8 0028     		cmp	r0, #0
 360 01ba 08D1     		bne	.L24
 336:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 337:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA_NACK;
 361              		.loc 1 337 0
 362 01bc 434A     		ldr	r2, .L38+32
 363 01be 1368     		ldr	r3, [r2]
 364 01c0 8021     		mov	r1, #128
 365              	.LVL22:
 366 01c2 0902     		lsl	r1, r1, #8
 367 01c4 0B43     		orr	r3, r1
 368 01c6 1360     		str	r3, [r2]
 338:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 339:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 340:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 369              		.loc 1 340 0
 370 01c8 0022     		mov	r2, #0
 371 01ca 424B     		ldr	r3, .L38+40
 372 01cc 1A60     		str	r2, [r3]
 373              	.L24:
 341:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 342:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 343:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_FULL |
 374              		.loc 1 343 0
 375 01ce 0C22     		mov	r2, #12
 376 01d0 424B     		ldr	r3, .L38+48
 377 01d2 1A60     		str	r2, [r3]
 378              	.LVL23:
 379              	.L8:
 344:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                                                             EZI2C_CAM_INTR_RX_NOT_EMPTY);
 345:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 }
 346:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 else
 347:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 {
 348:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 349:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 350:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     */
 351:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 }
 352:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             }
 353:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 354:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_CAM_INTR_CAUSE_SLAVE))
 380              		.loc 1 354 0
 381 01d4 B307     		lsl	r3, r6, #30
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 14


 382 01d6 45D5     		bpl	.L25
 355:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             {
 356:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 357:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 358:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             #if(!EZI2C_CAM_SECONDARY_ADDRESS_ENABLE_CONST)
 359:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_CAM_INTR_SLAVE_I2C_STOP))
 383              		.loc 1 359 0
 384 01d8 EB06     		lsl	r3, r5, #27
 385 01da 15D5     		bpl	.L26
 360:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             #else
 361:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 362:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 if((0u != (locIntrSlave & EZI2C_CAM_INTR_SLAVE_I2C_STOP)) &&
 363:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                    (0u != ((uint8) EZI2C_CAM_EZI2C_STATUS_BUSY & EZI2C_CAM_curStatus)))
 364:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             #endif
 365:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 {
 366:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 367:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 386              		.loc 1 367 0
 387 01dc 0023     		mov	r3, #0
 388 01de 3D4A     		ldr	r2, .L38+40
 389 01e0 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 390              		.loc 1 368 0
 391 01e2 384A     		ldr	r2, .L38+24
 392 01e4 1360     		str	r3, [r2]
 393              	.LVL24:
 369:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 370:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Set read completion mask */
 371:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     locStatus = EZI2C_CAM_INTR_SLAVE_I2C_NACK;
 372:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 373:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 374:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     if(locIndex != EZI2C_CAM_EZI2C_GET_OFFSET(activeAddress))
 394              		.loc 1 374 0
 395 01e6 384B     		ldr	r3, .L38+28
 396 01e8 1B78     		ldrb	r3, [r3]
 397 01ea A342     		cmp	r3, r4
 398 01ec 01D1     		bne	.L36
 371:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 399              		.loc 1 371 0
 400 01ee 0223     		mov	r3, #2
 401 01f0 00E0     		b	.L27
 402              	.L36:
 375:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 376:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         locStatus |= EZI2C_CAM_INTR_SLAVE_I2C_WRITE_STOP;
 403              		.loc 1 376 0
 404 01f2 0A23     		mov	r3, #10
 405              	.L27:
 406              	.LVL25:
 377:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 378:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 379:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Complete read or write transaction */
 380:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 407              		.loc 1 380 0
 408 01f4 2B40     		and	r3, r5
 409              	.LVL26:
 381:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     EZI2C_CAM_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 382:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     locStatus |= (uint32)  EZI2C_CAM_curStatus;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 15


 410              		.loc 1 382 0
 411 01f6 324A     		ldr	r2, .L38+20
 412 01f8 1178     		ldrb	r1, [r2]
 413 01fa 0B43     		orr	r3, r1
 414              	.LVL27:
 383:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     locStatus &= (uint32) ~EZI2C_CAM_EZI2C_STATUS_BUSY;
 384:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     EZI2C_CAM_curStatus = (uint8) locStatus;
 415              		.loc 1 384 0
 416 01fc 2021     		mov	r1, #32
 417 01fe 8B43     		bic	r3, r1
 418              	.LVL28:
 419 0200 1370     		strb	r3, [r2]
 385:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 386:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     EZI2C_CAM_fsmState = EZI2C_CAM_EZI2C_FSM_IDLE;
 420              		.loc 1 386 0
 421 0202 0022     		mov	r2, #0
 422 0204 374B     		ldr	r3, .L38+56
 423 0206 1A70     		strb	r2, [r3]
 424              	.L26:
 387:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 388:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #if(EZI2C_CAM_SECONDARY_ADDRESS_ENABLE)
 389:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 390:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 391:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_EZI2C_SET_INDEX(activeAddress, locIndex);
 392:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 393:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #endif
 394:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 }
 395:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 396:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 397:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 398:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 399:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 400:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 */
 401:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_CAM_INTR_SLAVE_I2C_ADDR_MATCH))
 425              		.loc 1 401 0
 426 0208 6B06     		lsl	r3, r5, #25
 427 020a 29D5     		bpl	.L28
 402:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 {
 403:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #if(EZI2C_CAM_SECONDARY_ADDRESS_ENABLE)
 404:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 405:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 406:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         locByte = EZI2C_CAM_GET_I2C_7BIT_ADDRESS(EZI2C_CAM_RX_FIFO_RD_REG);
 407:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 408:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_NOT_EMPTY);
 409:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 410:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Check received address against device addresses */
 411:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         if(EZI2C_CAM_addrBuf1 == locByte)
 412:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 413:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 414:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_dataBuffer = EZI2C_CAM_dataBuffer1;
 415:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_bufSizeBuf = EZI2C_CAM_bufSizeBuf1;
 416:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_protectBuf = EZI2C_CAM_protectBuf1;
 417:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 418:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             activeAddress = EZI2C_CAM_EZI2C_ACTIVE_ADDRESS1;
 419:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 420:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         else if(EZI2C_CAM_addrBuf2 == locByte)
 421:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 16


 422:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 423:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_dataBuffer = EZI2C_CAM_dataBuffer2;
 424:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_bufSizeBuf = EZI2C_CAM_bufSizeBuf2;
 425:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_protectBuf = EZI2C_CAM_protectBuf2;
 426:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 427:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             activeAddress = EZI2C_CAM_EZI2C_ACTIVE_ADDRESS2;
 428:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 429:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         else
 430:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 431:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Address does not match */
 432:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             ackResponse = EZI2C_CAM_EZI2C_NACK_RECEIVED_ADDRESS;
 433:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 434:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 435:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #endif
 436:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 437:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 #if(EZI2C_CAM_SECONDARY_ADDRESS_ENABLE_CONST)
 438:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     if(EZI2C_CAM_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 439:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 440:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 441:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_ClearI2CExtClkInterruptSource(EZI2C_CAM_INTR_I2C_EC_WAKE_UP);
 442:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_ClearSlaveInterruptSource(EZI2C_CAM_INTR_SLAVE_ALL);
 443:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 444:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #if(!EZI2C_CAM_CY_SCBIP_V0)
 445:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 446:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_DISABLE_INTR_SLAVE(EZI2C_CAM_INTR_SLAVE_I2C_STOP);
 447:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #endif /* (!EZI2C_CAM_CY_SCBIP_V0) */
 448:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 449:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 450:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_I2C_SLAVE_GENERATE_NACK;
 451:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 452:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     else
 453:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 #endif /* (EZI2C_CAM_SECONDARY_ADDRESS_ENABLE_CONST) */
 454:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 455:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 456:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #if(EZI2C_CAM_SCB_MODE_UNCONFIG_CONST_CFG)
 457:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         if(!EZI2C_CAM_SECONDARY_ADDRESS_ENABLE)
 458:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 459:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 460:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_dataBuffer = EZI2C_CAM_dataBuffer1;
 461:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_bufSizeBuf = EZI2C_CAM_bufSizeBuf1;
 462:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_protectBuf = EZI2C_CAM_protectBuf1;
 463:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 464:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             activeAddress = EZI2C_CAM_EZI2C_ACTIVE_ADDRESS1;
 465:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 466:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #endif /* (EZI2C_CAM_SCB_MODE_UNCONFIG_CONST_CFG) */
 467:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 468:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 469:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_curStatus |= (uint8) EZI2C_CAM_EZI2C_STATUS_BUSY;
 428              		.loc 1 469 0
 429 020c 2C4A     		ldr	r2, .L38+20
 430 020e 1178     		ldrb	r1, [r2]
 431 0210 2023     		mov	r3, #32
 432 0212 0B43     		orr	r3, r1
 433 0214 1370     		strb	r3, [r2]
 470:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 471:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 472:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         locIndex = EZI2C_CAM_EZI2C_GET_OFFSET(activeAddress);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 17


 434              		.loc 1 472 0
 435 0216 2C4B     		ldr	r3, .L38+28
 436 0218 1B78     		ldrb	r3, [r3]
 437 021a 1C1C     		mov	r4, r3
 438              	.LVL29:
 473:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 474:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Check transaction direction */
 475:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         if(EZI2C_CAM_CHECK_I2C_STATUS(EZI2C_CAM_I2C_STATUS_S_READ))
 439              		.loc 1 475 0
 440 021c 3B4A     		ldr	r2, .L38+96
 441 021e 1268     		ldr	r2, [r2]
 442 0220 D206     		lsl	r2, r2, #27
 443 0222 12D5     		bpl	.L29
 476:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 477:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 478:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             locBufSize = EZI2C_CAM_bufSizeBuf1 - (uint16) locIndex;
 444              		.loc 1 478 0
 445 0224 364A     		ldr	r2, .L38+84
 446 0226 1288     		ldrh	r2, [r2]
 447 0228 D31A     		sub	r3, r2, r3
 448              	.LVL30:
 449 022a 324A     		ldr	r2, .L38+72
 450 022c 1380     		strh	r3, [r2]
 479:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 480:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 481:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_CLEAR_TX_FIFO;
 451              		.loc 1 481 0
 452 022e 384B     		ldr	r3, .L38+100
 453 0230 1A68     		ldr	r2, [r3]
 454 0232 8021     		mov	r1, #128
 455 0234 4902     		lsl	r1, r1, #9
 456 0236 0A43     		orr	r2, r1
 457 0238 1A60     		str	r2, [r3]
 458 023a 1968     		ldr	r1, [r3]
 459 023c 354A     		ldr	r2, .L38+104
 460 023e 0A40     		and	r2, r1
 461 0240 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_INTR_TX_EMPTY);
 462              		.loc 1 482 0
 463 0242 1022     		mov	r2, #16
 464 0244 1F4B     		ldr	r3, .L38+24
 465 0246 1A60     		str	r2, [r3]
 466 0248 02E0     		b	.L30
 467              	.LVL31:
 468              	.L29:
 483:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
 484:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         else
 485:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         {
 486:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 487:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                             EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_INTR_RX_NOT_EMPTY);
 469              		.loc 1 487 0
 470 024a 0422     		mov	r2, #4
 471 024c 214B     		ldr	r3, .L38+40
 472              	.LVL32:
 473 024e 1A60     		str	r2, [r3]
 474              	.L30:
 488:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 18


 489:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 490:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 491:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_ClearI2CExtClkInterruptSource(EZI2C_CAM_INTR_I2C_EC_WAKE_UP);
 475              		.loc 1 491 0
 476 0250 0123     		mov	r3, #1
 477 0252 314A     		ldr	r2, .L38+108
 478 0254 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_ClearSlaveInterruptSource(EZI2C_CAM_INTR_SLAVE_ALL);
 479              		.loc 1 492 0
 480 0256 2249     		ldr	r1, .L38+52
 481 0258 164A     		ldr	r2, .L38+8
 482 025a 1160     		str	r1, [r2]
 493:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 494:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #if (!EZI2C_CAM_CY_SCBIP_V0)
 495:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 496:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_ENABLE_INTR_SLAVE(EZI2C_CAM_INTR_SLAVE_I2C_STOP);
 497:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     #endif /* (!EZI2C_CAM_CY_SCBIP_V0) */
 498:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 499:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         /* ACK the address byte */
 500:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_I2C_SLAVE_GENERATE_ACK;
 483              		.loc 1 500 0
 484 025c 264A     		ldr	r2, .L38+76
 485 025e 1360     		str	r3, [r2]
 486              	.L28:
 501:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 502:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 }
 503:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 504:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 505:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 EZI2C_CAM_ClearSlaveInterruptSource(locIntrSlave);
 487              		.loc 1 505 0
 488 0260 144B     		ldr	r3, .L38+8
 489 0262 1D60     		str	r5, [r3]
 490              	.L25:
 506:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             }
 507:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 508:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 509:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 510:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 511:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             */
 512:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             if(0u != (EZI2C_CAM_GetInterruptCause() & EZI2C_CAM_INTR_CAUSE_TX))
 491              		.loc 1 512 0
 492 0264 144B     		ldr	r3, .L38+12
 493 0266 1B68     		ldr	r3, [r3]
 494 0268 5B07     		lsl	r3, r3, #29
 495 026a 1CD5     		bpl	.L6
 496              	.L33:
 513:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             {
 514:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 515:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 do
 516:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 {
 517:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 518:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     if(0u != locBufSize)
 497              		.loc 1 518 0
 498 026c 214B     		ldr	r3, .L38+72
 499 026e 1B88     		ldrh	r3, [r3]
 500 0270 002B     		cmp	r3, #0
 501 0272 0CD0     		beq	.L31
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 19


 519:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 520:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_TX_FIFO_WR_REG = (uint32) EZI2C_CAM_dataBuffer1[locIndex];
 502              		.loc 1 520 0
 503 0274 214B     		ldr	r3, .L38+80
 504 0276 1B68     		ldr	r3, [r3]
 505 0278 1B19     		add	r3, r3, r4
 506 027a 1B78     		ldrb	r3, [r3]
 507 027c DBB2     		uxtb	r3, r3
 508 027e 274A     		ldr	r2, .L38+112
 509 0280 1360     		str	r3, [r2]
 521:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         locIndex++;
 510              		.loc 1 521 0
 511 0282 0134     		add	r4, r4, #1
 512              	.LVL33:
 522:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         locBufSize--;
 513              		.loc 1 522 0
 514 0284 1B4A     		ldr	r2, .L38+72
 515 0286 1388     		ldrh	r3, [r2]
 516 0288 013B     		sub	r3, r3, #1
 517 028a 1380     		strh	r3, [r2]
 518 028c 02E0     		b	.L32
 519              	.L31:
 523:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 524:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     else
 525:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     {
 526:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                         EZI2C_CAM_TX_FIFO_WR_REG = EZI2C_CAM_EZI2C_OVFL_RETURN;
 520              		.loc 1 526 0
 521 028e FF22     		mov	r2, #255
 522 0290 224B     		ldr	r3, .L38+112
 523 0292 1A60     		str	r2, [r3]
 524              	.L32:
 527:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                     }
 528:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 }
 529:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 while(EZI2C_CAM_EZI2C_FIFO_SIZE != EZI2C_CAM_GET_TX_FIFO_ENTRIES);
 525              		.loc 1 529 0
 526 0294 224B     		ldr	r3, .L38+116
 527 0296 1B68     		ldr	r3, [r3]
 528 0298 0F22     		mov	r2, #15
 529 029a 1340     		and	r3, r2
 530 029c 082B     		cmp	r3, #8
 531 029e E5D1     		bne	.L33
 530:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 531:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****                 EZI2C_CAM_ClearTxInterruptSource(EZI2C_CAM_INTR_TX_EMPTY);
 532              		.loc 1 531 0
 533 02a0 0132     		add	r2, r2, #1
 534 02a2 204B     		ldr	r3, .L38+120
 535 02a4 1A60     		str	r2, [r3]
 536              	.L6:
 532:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****             }
 533:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         }
 534:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 535:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         /* Store local index copy into global variable */
 536:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         EZI2C_CAM_EZI2C_SET_INDEX(activeAddress, locIndex);
 537              		.loc 1 536 0
 538 02a6 024B     		ldr	r3, .L38+4
 539 02a8 1C80     		strh	r4, [r3]
 537:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 20


 538:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #ifdef EZI2C_CAM_EZI2C_STRETCH_ISR_EXIT_CALLBACK
 539:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****         EZI2C_CAM_EZI2C_STRETCH_ISR_ExitCallback();
 540:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     #endif /* EZI2C_CAM_EZI2C_STRETCH_ISR_EXIT_CALLBACK */
 541:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c **** 
 542:Generated_Source\PSoC4/EZI2C_CAM_EZI2C_INT.c ****     }
 540              		.loc 1 542 0
 541              		@ sp needed
 542              	.LVL34:
 543              	.LVL35:
 544              	.LVL36:
 545 02aa 70BD     		pop	{r4, r5, r6, pc}
 546              	.L39:
 547              		.align	2
 548              	.L38:
 549 02ac 00000000 		.word	EZI2C_CAM_customIntrHandler
 550 02b0 00000000 		.word	EZI2C_CAM_indexBuf1
 551 02b4 400F0740 		.word	1074204480
 552 02b8 000E0740 		.word	1074204160
 553 02bc 00000740 		.word	1074200576
 554 02c0 00000000 		.word	EZI2C_CAM_curStatus
 555 02c4 880F0740 		.word	1074204552
 556 02c8 00000000 		.word	EZI2C_CAM_offsetBuf1
 557 02cc 60000740 		.word	1074200672
 558 02d0 FF5FFFFF 		.word	-40961
 559 02d4 C80F0740 		.word	1074204616
 560 02d8 ED0F0000 		.word	4077
 561 02dc C00F0740 		.word	1074204608
 562 02e0 FF0F0000 		.word	4095
 563 02e4 00000000 		.word	EZI2C_CAM_fsmState
 564 02e8 880E0740 		.word	1074204296
 565 02ec CC0F0740 		.word	1074204620
 566 02f0 40030740 		.word	1074201408
 567 02f4 00000000 		.word	.LANCHOR0
 568 02f8 6C000740 		.word	1074200684
 569 02fc 00000000 		.word	EZI2C_CAM_dataBuffer1
 570 0300 00000000 		.word	EZI2C_CAM_bufSizeBuf1
 571 0304 00000000 		.word	EZI2C_CAM_protectBuf1
 572 0308 08030740 		.word	1074201352
 573 030c 64000740 		.word	1074200676
 574 0310 04020740 		.word	1074201092
 575 0314 FFFFFEFF 		.word	-65537
 576 0318 800E0740 		.word	1074204288
 577 031c 40020740 		.word	1074201152
 578 0320 08020740 		.word	1074201096
 579 0324 800F0740 		.word	1074204544
 580              		.cfi_endproc
 581              	.LFE0:
 582              		.size	EZI2C_CAM_EZI2C_STRETCH_ISR, .-EZI2C_CAM_EZI2C_STRETCH_ISR
 583              		.bss
 584              		.align	1
 585              		.set	.LANCHOR0,. + 0
 586              		.type	locBufSize.4801, %object
 587              		.size	locBufSize.4801, 2
 588              	locBufSize.4801:
 589 0000 0000     		.space	2
 590              		.text
 591              	.Letext0:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 21


 592              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 593              		.file 3 "Generated_Source\\PSoC4\\EZI2C_CAM_PVT.h"
 594              		.file 4 "Generated_Source\\PSoC4\\EZI2C_CAM_EZI2C_PVT.h"
 595              		.file 5 "Generated_Source\\PSoC4\\EZI2C_CAM.h"
 596              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 597              		.section	.debug_info,"",%progbits
 598              	.Ldebug_info0:
 599 0000 F5010000 		.4byte	0x1f5
 600 0004 0400     		.2byte	0x4
 601 0006 00000000 		.4byte	.Ldebug_abbrev0
 602 000a 04       		.byte	0x4
 603 000b 01       		.uleb128 0x1
 604 000c 1C020000 		.4byte	.LASF34
 605 0010 01       		.byte	0x1
 606 0011 E4000000 		.4byte	.LASF35
 607 0015 43010000 		.4byte	.LASF36
 608 0019 00000000 		.4byte	.Ldebug_ranges0+0
 609 001d 00000000 		.4byte	0
 610 0021 00000000 		.4byte	.Ldebug_line0
 611 0025 02       		.uleb128 0x2
 612 0026 01       		.byte	0x1
 613 0027 06       		.byte	0x6
 614 0028 DE020000 		.4byte	.LASF0
 615 002c 02       		.uleb128 0x2
 616 002d 01       		.byte	0x1
 617 002e 08       		.byte	0x8
 618 002f BA000000 		.4byte	.LASF1
 619 0033 02       		.uleb128 0x2
 620 0034 02       		.byte	0x2
 621 0035 05       		.byte	0x5
 622 0036 AA020000 		.4byte	.LASF2
 623 003a 02       		.uleb128 0x2
 624 003b 02       		.byte	0x2
 625 003c 07       		.byte	0x7
 626 003d 31000000 		.4byte	.LASF3
 627 0041 02       		.uleb128 0x2
 628 0042 04       		.byte	0x4
 629 0043 05       		.byte	0x5
 630 0044 D5020000 		.4byte	.LASF4
 631 0048 02       		.uleb128 0x2
 632 0049 04       		.byte	0x4
 633 004a 07       		.byte	0x7
 634 004b 1B010000 		.4byte	.LASF5
 635 004f 02       		.uleb128 0x2
 636 0050 08       		.byte	0x8
 637 0051 05       		.byte	0x5
 638 0052 FC010000 		.4byte	.LASF6
 639 0056 02       		.uleb128 0x2
 640 0057 08       		.byte	0x8
 641 0058 07       		.byte	0x7
 642 0059 B2010000 		.4byte	.LASF7
 643 005d 03       		.uleb128 0x3
 644 005e 04       		.byte	0x4
 645 005f 05       		.byte	0x5
 646 0060 696E7400 		.ascii	"int\000"
 647 0064 02       		.uleb128 0x2
 648 0065 04       		.byte	0x4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 22


 649 0066 07       		.byte	0x7
 650 0067 90010000 		.4byte	.LASF8
 651 006b 04       		.uleb128 0x4
 652 006c 2D010000 		.4byte	.LASF9
 653 0070 02       		.byte	0x2
 654 0071 B901     		.2byte	0x1b9
 655 0073 2C000000 		.4byte	0x2c
 656 0077 04       		.uleb128 0x4
 657 0078 82010000 		.4byte	.LASF10
 658 007c 02       		.byte	0x2
 659 007d BA01     		.2byte	0x1ba
 660 007f 3A000000 		.4byte	0x3a
 661 0083 04       		.uleb128 0x4
 662 0084 89010000 		.4byte	.LASF11
 663 0088 02       		.byte	0x2
 664 0089 BB01     		.2byte	0x1bb
 665 008b 48000000 		.4byte	0x48
 666 008f 02       		.uleb128 0x2
 667 0090 04       		.byte	0x4
 668 0091 04       		.byte	0x4
 669 0092 77000000 		.4byte	.LASF12
 670 0096 02       		.uleb128 0x2
 671 0097 08       		.byte	0x8
 672 0098 04       		.byte	0x4
 673 0099 3C010000 		.4byte	.LASF13
 674 009d 02       		.uleb128 0x2
 675 009e 01       		.byte	0x1
 676 009f 08       		.byte	0x8
 677 00a0 0A020000 		.4byte	.LASF14
 678 00a4 05       		.uleb128 0x5
 679 00a5 6B000000 		.4byte	0x6b
 680 00a9 04       		.uleb128 0x4
 681 00aa 16000000 		.4byte	.LASF15
 682 00ae 02       		.byte	0x2
 683 00af 6502     		.2byte	0x265
 684 00b1 B5000000 		.4byte	0xb5
 685 00b5 05       		.uleb128 0x5
 686 00b6 83000000 		.4byte	0x83
 687 00ba 04       		.uleb128 0x4
 688 00bb C9010000 		.4byte	.LASF16
 689 00bf 02       		.byte	0x2
 690 00c0 7502     		.2byte	0x275
 691 00c2 C6000000 		.4byte	0xc6
 692 00c6 06       		.uleb128 0x6
 693 00c7 04       		.byte	0x4
 694 00c8 CC000000 		.4byte	0xcc
 695 00cc 07       		.uleb128 0x7
 696 00cd 02       		.uleb128 0x2
 697 00ce 04       		.byte	0x4
 698 00cf 07       		.byte	0x7
 699 00d0 F3010000 		.4byte	.LASF17
 700 00d4 08       		.uleb128 0x8
 701 00d5 C8000000 		.4byte	.LASF37
 702 00d9 01       		.byte	0x1
 703 00da 20       		.byte	0x20
 704 00db 00000000 		.4byte	.LFB0
 705 00df 28030000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 23


 706 00e3 01       		.uleb128 0x1
 707 00e4 9C       		.byte	0x9c
 708 00e5 85010000 		.4byte	0x185
 709 00e9 09       		.uleb128 0x9
 710 00ea 9D010000 		.4byte	.LASF18
 711 00ee 01       		.byte	0x1
 712 00ef 22       		.byte	0x22
 713 00f0 77000000 		.4byte	0x77
 714 00f4 05       		.uleb128 0x5
 715 00f5 03       		.byte	0x3
 716 00f6 00000000 		.4byte	locBufSize.4801
 717 00fa 0A       		.uleb128 0xa
 718 00fb 33010000 		.4byte	.LASF19
 719 00ff 01       		.byte	0x1
 720 0100 23       		.byte	0x23
 721 0101 83000000 		.4byte	0x83
 722 0105 00000000 		.4byte	.LLST0
 723 0109 0A       		.uleb128 0xa
 724 010a 11010000 		.4byte	.LASF20
 725 010e 01       		.byte	0x1
 726 010f 24       		.byte	0x24
 727 0110 83000000 		.4byte	0x83
 728 0114 60000000 		.4byte	.LLST1
 729 0118 0A       		.uleb128 0xa
 730 0119 44000000 		.4byte	.LASF21
 731 011d 01       		.byte	0x1
 732 011e 26       		.byte	0x26
 733 011f 83000000 		.4byte	0x83
 734 0123 8F000000 		.4byte	.LLST2
 735 0127 0A       		.uleb128 0xa
 736 0128 A8010000 		.4byte	.LASF22
 737 012c 01       		.byte	0x1
 738 012d 27       		.byte	0x27
 739 012e 83000000 		.4byte	0x83
 740 0132 BA000000 		.4byte	.LLST3
 741 0136 0A       		.uleb128 0xa
 742 0137 EA020000 		.4byte	.LASF23
 743 013b 01       		.byte	0x1
 744 013c 28       		.byte	0x28
 745 013d 83000000 		.4byte	0x83
 746 0141 D8000000 		.4byte	.LLST4
 747 0145 0A       		.uleb128 0xa
 748 0146 B4020000 		.4byte	.LASF24
 749 014a 01       		.byte	0x1
 750 014b 2A       		.byte	0x2a
 751 014c 83000000 		.4byte	0x83
 752 0150 0C010000 		.4byte	.LLST5
 753 0154 0A       		.uleb128 0xa
 754 0155 0F020000 		.4byte	.LASF25
 755 0159 01       		.byte	0x1
 756 015a 2B       		.byte	0x2b
 757 015b 83000000 		.4byte	0x83
 758 015f 1F010000 		.4byte	.LLST6
 759 0163 0B       		.uleb128 0xb
 760 0164 F2000000 		.4byte	.LVL8
 761 0168 E3010000 		.4byte	0x1e3
 762 016c 0B       		.uleb128 0xb
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 24


 763 016d 58010000 		.4byte	.LVL12
 764 0171 E3010000 		.4byte	0x1e3
 765 0175 0C       		.uleb128 0xc
 766 0176 60010000 		.4byte	.LVL14
 767 017a EB010000 		.4byte	0x1eb
 768 017e 0D       		.uleb128 0xd
 769 017f 01       		.uleb128 0x1
 770 0180 50       		.byte	0x50
 771 0181 01       		.uleb128 0x1
 772 0182 30       		.byte	0x30
 773 0183 00       		.byte	0
 774 0184 00       		.byte	0
 775 0185 0E       		.uleb128 0xe
 776 0186 9E000000 		.4byte	.LASF26
 777 018a 03       		.byte	0x3
 778 018b 3B       		.byte	0x3b
 779 018c BA000000 		.4byte	0xba
 780 0190 0E       		.uleb128 0xe
 781 0191 C1020000 		.4byte	.LASF27
 782 0195 04       		.byte	0x4
 783 0196 1E       		.byte	0x1e
 784 0197 A4000000 		.4byte	0xa4
 785 019b 0E       		.uleb128 0xe
 786 019c 50000000 		.4byte	.LASF28
 787 01a0 04       		.byte	0x4
 788 01a1 1F       		.byte	0x1f
 789 01a2 6B000000 		.4byte	0x6b
 790 01a6 0E       		.uleb128 0xe
 791 01a7 00000000 		.4byte	.LASF29
 792 01ab 04       		.byte	0x4
 793 01ac 22       		.byte	0x22
 794 01ad B1010000 		.4byte	0x1b1
 795 01b1 06       		.uleb128 0x6
 796 01b2 04       		.byte	0x4
 797 01b3 A4000000 		.4byte	0xa4
 798 01b7 0E       		.uleb128 0xe
 799 01b8 6C010000 		.4byte	.LASF30
 800 01bc 04       		.byte	0x4
 801 01bd 23       		.byte	0x23
 802 01be 77000000 		.4byte	0x77
 803 01c2 0E       		.uleb128 0xe
 804 01c3 DD010000 		.4byte	.LASF31
 805 01c7 04       		.byte	0x4
 806 01c8 24       		.byte	0x24
 807 01c9 77000000 		.4byte	0x77
 808 01cd 0E       		.uleb128 0xe
 809 01ce 1C000000 		.4byte	.LASF32
 810 01d2 04       		.byte	0x4
 811 01d3 25       		.byte	0x25
 812 01d4 6B000000 		.4byte	0x6b
 813 01d8 0E       		.uleb128 0xe
 814 01d9 63000000 		.4byte	.LASF33
 815 01dd 04       		.byte	0x4
 816 01de 26       		.byte	0x26
 817 01df 77000000 		.4byte	0x77
 818 01e3 0F       		.uleb128 0xf
 819 01e4 7D000000 		.4byte	.LASF38
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 25


 820 01e8 05       		.byte	0x5
 821 01e9 1507     		.2byte	0x715
 822 01eb 10       		.uleb128 0x10
 823 01ec D6010000 		.4byte	.LASF39
 824 01f0 06       		.byte	0x6
 825 01f1 E7       		.byte	0xe7
 826 01f2 11       		.uleb128 0x11
 827 01f3 6B000000 		.4byte	0x6b
 828 01f7 00       		.byte	0
 829 01f8 00       		.byte	0
 830              		.section	.debug_abbrev,"",%progbits
 831              	.Ldebug_abbrev0:
 832 0000 01       		.uleb128 0x1
 833 0001 11       		.uleb128 0x11
 834 0002 01       		.byte	0x1
 835 0003 25       		.uleb128 0x25
 836 0004 0E       		.uleb128 0xe
 837 0005 13       		.uleb128 0x13
 838 0006 0B       		.uleb128 0xb
 839 0007 03       		.uleb128 0x3
 840 0008 0E       		.uleb128 0xe
 841 0009 1B       		.uleb128 0x1b
 842 000a 0E       		.uleb128 0xe
 843 000b 55       		.uleb128 0x55
 844 000c 17       		.uleb128 0x17
 845 000d 11       		.uleb128 0x11
 846 000e 01       		.uleb128 0x1
 847 000f 10       		.uleb128 0x10
 848 0010 17       		.uleb128 0x17
 849 0011 00       		.byte	0
 850 0012 00       		.byte	0
 851 0013 02       		.uleb128 0x2
 852 0014 24       		.uleb128 0x24
 853 0015 00       		.byte	0
 854 0016 0B       		.uleb128 0xb
 855 0017 0B       		.uleb128 0xb
 856 0018 3E       		.uleb128 0x3e
 857 0019 0B       		.uleb128 0xb
 858 001a 03       		.uleb128 0x3
 859 001b 0E       		.uleb128 0xe
 860 001c 00       		.byte	0
 861 001d 00       		.byte	0
 862 001e 03       		.uleb128 0x3
 863 001f 24       		.uleb128 0x24
 864 0020 00       		.byte	0
 865 0021 0B       		.uleb128 0xb
 866 0022 0B       		.uleb128 0xb
 867 0023 3E       		.uleb128 0x3e
 868 0024 0B       		.uleb128 0xb
 869 0025 03       		.uleb128 0x3
 870 0026 08       		.uleb128 0x8
 871 0027 00       		.byte	0
 872 0028 00       		.byte	0
 873 0029 04       		.uleb128 0x4
 874 002a 16       		.uleb128 0x16
 875 002b 00       		.byte	0
 876 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 26


 877 002d 0E       		.uleb128 0xe
 878 002e 3A       		.uleb128 0x3a
 879 002f 0B       		.uleb128 0xb
 880 0030 3B       		.uleb128 0x3b
 881 0031 05       		.uleb128 0x5
 882 0032 49       		.uleb128 0x49
 883 0033 13       		.uleb128 0x13
 884 0034 00       		.byte	0
 885 0035 00       		.byte	0
 886 0036 05       		.uleb128 0x5
 887 0037 35       		.uleb128 0x35
 888 0038 00       		.byte	0
 889 0039 49       		.uleb128 0x49
 890 003a 13       		.uleb128 0x13
 891 003b 00       		.byte	0
 892 003c 00       		.byte	0
 893 003d 06       		.uleb128 0x6
 894 003e 0F       		.uleb128 0xf
 895 003f 00       		.byte	0
 896 0040 0B       		.uleb128 0xb
 897 0041 0B       		.uleb128 0xb
 898 0042 49       		.uleb128 0x49
 899 0043 13       		.uleb128 0x13
 900 0044 00       		.byte	0
 901 0045 00       		.byte	0
 902 0046 07       		.uleb128 0x7
 903 0047 15       		.uleb128 0x15
 904 0048 00       		.byte	0
 905 0049 27       		.uleb128 0x27
 906 004a 19       		.uleb128 0x19
 907 004b 00       		.byte	0
 908 004c 00       		.byte	0
 909 004d 08       		.uleb128 0x8
 910 004e 2E       		.uleb128 0x2e
 911 004f 01       		.byte	0x1
 912 0050 3F       		.uleb128 0x3f
 913 0051 19       		.uleb128 0x19
 914 0052 03       		.uleb128 0x3
 915 0053 0E       		.uleb128 0xe
 916 0054 3A       		.uleb128 0x3a
 917 0055 0B       		.uleb128 0xb
 918 0056 3B       		.uleb128 0x3b
 919 0057 0B       		.uleb128 0xb
 920 0058 27       		.uleb128 0x27
 921 0059 19       		.uleb128 0x19
 922 005a 11       		.uleb128 0x11
 923 005b 01       		.uleb128 0x1
 924 005c 12       		.uleb128 0x12
 925 005d 06       		.uleb128 0x6
 926 005e 40       		.uleb128 0x40
 927 005f 18       		.uleb128 0x18
 928 0060 9642     		.uleb128 0x2116
 929 0062 19       		.uleb128 0x19
 930 0063 01       		.uleb128 0x1
 931 0064 13       		.uleb128 0x13
 932 0065 00       		.byte	0
 933 0066 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 27


 934 0067 09       		.uleb128 0x9
 935 0068 34       		.uleb128 0x34
 936 0069 00       		.byte	0
 937 006a 03       		.uleb128 0x3
 938 006b 0E       		.uleb128 0xe
 939 006c 3A       		.uleb128 0x3a
 940 006d 0B       		.uleb128 0xb
 941 006e 3B       		.uleb128 0x3b
 942 006f 0B       		.uleb128 0xb
 943 0070 49       		.uleb128 0x49
 944 0071 13       		.uleb128 0x13
 945 0072 02       		.uleb128 0x2
 946 0073 18       		.uleb128 0x18
 947 0074 00       		.byte	0
 948 0075 00       		.byte	0
 949 0076 0A       		.uleb128 0xa
 950 0077 34       		.uleb128 0x34
 951 0078 00       		.byte	0
 952 0079 03       		.uleb128 0x3
 953 007a 0E       		.uleb128 0xe
 954 007b 3A       		.uleb128 0x3a
 955 007c 0B       		.uleb128 0xb
 956 007d 3B       		.uleb128 0x3b
 957 007e 0B       		.uleb128 0xb
 958 007f 49       		.uleb128 0x49
 959 0080 13       		.uleb128 0x13
 960 0081 02       		.uleb128 0x2
 961 0082 17       		.uleb128 0x17
 962 0083 00       		.byte	0
 963 0084 00       		.byte	0
 964 0085 0B       		.uleb128 0xb
 965 0086 898201   		.uleb128 0x4109
 966 0089 00       		.byte	0
 967 008a 11       		.uleb128 0x11
 968 008b 01       		.uleb128 0x1
 969 008c 31       		.uleb128 0x31
 970 008d 13       		.uleb128 0x13
 971 008e 00       		.byte	0
 972 008f 00       		.byte	0
 973 0090 0C       		.uleb128 0xc
 974 0091 898201   		.uleb128 0x4109
 975 0094 01       		.byte	0x1
 976 0095 11       		.uleb128 0x11
 977 0096 01       		.uleb128 0x1
 978 0097 31       		.uleb128 0x31
 979 0098 13       		.uleb128 0x13
 980 0099 00       		.byte	0
 981 009a 00       		.byte	0
 982 009b 0D       		.uleb128 0xd
 983 009c 8A8201   		.uleb128 0x410a
 984 009f 00       		.byte	0
 985 00a0 02       		.uleb128 0x2
 986 00a1 18       		.uleb128 0x18
 987 00a2 9142     		.uleb128 0x2111
 988 00a4 18       		.uleb128 0x18
 989 00a5 00       		.byte	0
 990 00a6 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 28


 991 00a7 0E       		.uleb128 0xe
 992 00a8 34       		.uleb128 0x34
 993 00a9 00       		.byte	0
 994 00aa 03       		.uleb128 0x3
 995 00ab 0E       		.uleb128 0xe
 996 00ac 3A       		.uleb128 0x3a
 997 00ad 0B       		.uleb128 0xb
 998 00ae 3B       		.uleb128 0x3b
 999 00af 0B       		.uleb128 0xb
 1000 00b0 49       		.uleb128 0x49
 1001 00b1 13       		.uleb128 0x13
 1002 00b2 3F       		.uleb128 0x3f
 1003 00b3 19       		.uleb128 0x19
 1004 00b4 3C       		.uleb128 0x3c
 1005 00b5 19       		.uleb128 0x19
 1006 00b6 00       		.byte	0
 1007 00b7 00       		.byte	0
 1008 00b8 0F       		.uleb128 0xf
 1009 00b9 2E       		.uleb128 0x2e
 1010 00ba 00       		.byte	0
 1011 00bb 3F       		.uleb128 0x3f
 1012 00bc 19       		.uleb128 0x19
 1013 00bd 03       		.uleb128 0x3
 1014 00be 0E       		.uleb128 0xe
 1015 00bf 3A       		.uleb128 0x3a
 1016 00c0 0B       		.uleb128 0xb
 1017 00c1 3B       		.uleb128 0x3b
 1018 00c2 05       		.uleb128 0x5
 1019 00c3 27       		.uleb128 0x27
 1020 00c4 19       		.uleb128 0x19
 1021 00c5 3C       		.uleb128 0x3c
 1022 00c6 19       		.uleb128 0x19
 1023 00c7 00       		.byte	0
 1024 00c8 00       		.byte	0
 1025 00c9 10       		.uleb128 0x10
 1026 00ca 2E       		.uleb128 0x2e
 1027 00cb 01       		.byte	0x1
 1028 00cc 3F       		.uleb128 0x3f
 1029 00cd 19       		.uleb128 0x19
 1030 00ce 03       		.uleb128 0x3
 1031 00cf 0E       		.uleb128 0xe
 1032 00d0 3A       		.uleb128 0x3a
 1033 00d1 0B       		.uleb128 0xb
 1034 00d2 3B       		.uleb128 0x3b
 1035 00d3 0B       		.uleb128 0xb
 1036 00d4 27       		.uleb128 0x27
 1037 00d5 19       		.uleb128 0x19
 1038 00d6 3C       		.uleb128 0x3c
 1039 00d7 19       		.uleb128 0x19
 1040 00d8 00       		.byte	0
 1041 00d9 00       		.byte	0
 1042 00da 11       		.uleb128 0x11
 1043 00db 05       		.uleb128 0x5
 1044 00dc 00       		.byte	0
 1045 00dd 49       		.uleb128 0x49
 1046 00de 13       		.uleb128 0x13
 1047 00df 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 29


 1048 00e0 00       		.byte	0
 1049 00e1 00       		.byte	0
 1050              		.section	.debug_loc,"",%progbits
 1051              	.Ldebug_loc0:
 1052              	.LLST0:
 1053 0000 10000000 		.4byte	.LVL1
 1054 0004 BE000000 		.4byte	.LVL4
 1055 0008 0100     		.2byte	0x1
 1056 000a 54       		.byte	0x54
 1057 000b E4000000 		.4byte	.LVL6
 1058 000f EE000000 		.4byte	.LVL7
 1059 0013 0100     		.2byte	0x1
 1060 0015 54       		.byte	0x54
 1061 0016 02010000 		.4byte	.LVL10
 1062 001a 54010000 		.4byte	.LVL11
 1063 001e 0100     		.2byte	0x1
 1064 0020 53       		.byte	0x53
 1065 0021 60010000 		.4byte	.LVL14
 1066 0025 1C020000 		.4byte	.LVL29
 1067 0029 0100     		.2byte	0x1
 1068 002b 54       		.byte	0x54
 1069 002c 1C020000 		.4byte	.LVL29
 1070 0030 2A020000 		.4byte	.LVL30
 1071 0034 0100     		.2byte	0x1
 1072 0036 53       		.byte	0x53
 1073 0037 2A020000 		.4byte	.LVL30
 1074 003b 4A020000 		.4byte	.LVL31
 1075 003f 0100     		.2byte	0x1
 1076 0041 54       		.byte	0x54
 1077 0042 4A020000 		.4byte	.LVL31
 1078 0046 4E020000 		.4byte	.LVL32
 1079 004a 0100     		.2byte	0x1
 1080 004c 53       		.byte	0x53
 1081 004d 4E020000 		.4byte	.LVL32
 1082 0051 AA020000 		.4byte	.LVL34
 1083 0055 0100     		.2byte	0x1
 1084 0057 54       		.byte	0x54
 1085 0058 00000000 		.4byte	0
 1086 005c 00000000 		.4byte	0
 1087              	.LLST1:
 1088 0060 E6010000 		.4byte	.LVL24
 1089 0064 F4010000 		.4byte	.LVL25
 1090 0068 0200     		.2byte	0x2
 1091 006a 32       		.byte	0x32
 1092 006b 9F       		.byte	0x9f
 1093 006c F4010000 		.4byte	.LVL25
 1094 0070 FC010000 		.4byte	.LVL27
 1095 0074 0100     		.2byte	0x1
 1096 0076 53       		.byte	0x53
 1097 0077 FC010000 		.4byte	.LVL27
 1098 007b 00020000 		.4byte	.LVL28
 1099 007f 0600     		.2byte	0x6
 1100 0081 73       		.byte	0x73
 1101 0082 00       		.sleb128 0
 1102 0083 09       		.byte	0x9
 1103 0084 DF       		.byte	0xdf
 1104 0085 1A       		.byte	0x1a
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 30


 1105 0086 9F       		.byte	0x9f
 1106 0087 00000000 		.4byte	0
 1107 008b 00000000 		.4byte	0
 1108              	.LLST2:
 1109 008f 86010000 		.4byte	.LVL16
 1110 0093 8A010000 		.4byte	.LVL17
 1111 0097 0200     		.2byte	0x2
 1112 0099 31       		.byte	0x31
 1113 009a 9F       		.byte	0x9f
 1114 009b 9E010000 		.4byte	.LVL18
 1115 009f A2010000 		.4byte	.LVL19
 1116 00a3 0200     		.2byte	0x2
 1117 00a5 30       		.byte	0x30
 1118 00a6 9F       		.byte	0x9f
 1119 00a7 A2010000 		.4byte	.LVL19
 1120 00ab D4010000 		.4byte	.LVL23
 1121 00af 0100     		.2byte	0x1
 1122 00b1 50       		.byte	0x50
 1123 00b2 00000000 		.4byte	0
 1124 00b6 00000000 		.4byte	0
 1125              	.LLST3:
 1126 00ba 7C010000 		.4byte	.LVL15
 1127 00be 8A010000 		.4byte	.LVL17
 1128 00c2 0100     		.2byte	0x1
 1129 00c4 51       		.byte	0x51
 1130 00c5 9E010000 		.4byte	.LVL18
 1131 00c9 C2010000 		.4byte	.LVL22
 1132 00cd 0100     		.2byte	0x1
 1133 00cf 51       		.byte	0x51
 1134 00d0 00000000 		.4byte	0
 1135 00d4 00000000 		.4byte	0
 1136              	.LLST4:
 1137 00d8 BE000000 		.4byte	.LVL4
 1138 00dc E0000000 		.4byte	.LVL5
 1139 00e0 0100     		.2byte	0x1
 1140 00e2 53       		.byte	0x53
 1141 00e3 EE000000 		.4byte	.LVL7
 1142 00e7 F1000000 		.4byte	.LVL8-1
 1143 00eb 0100     		.2byte	0x1
 1144 00ed 53       		.byte	0x53
 1145 00ee F4000000 		.4byte	.LVL9
 1146 00f2 57010000 		.4byte	.LVL12-1
 1147 00f6 0100     		.2byte	0x1
 1148 00f8 53       		.byte	0x53
 1149 00f9 5A010000 		.4byte	.LVL13
 1150 00fd 5F010000 		.4byte	.LVL14-1
 1151 0101 0100     		.2byte	0x1
 1152 0103 53       		.byte	0x53
 1153 0104 00000000 		.4byte	0
 1154 0108 00000000 		.4byte	0
 1155              	.LLST5:
 1156 010c 18000000 		.4byte	.LVL3
 1157 0110 AA020000 		.4byte	.LVL36
 1158 0114 0100     		.2byte	0x1
 1159 0116 56       		.byte	0x56
 1160 0117 00000000 		.4byte	0
 1161 011b 00000000 		.4byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 31


 1162              	.LLST6:
 1163 011f 14000000 		.4byte	.LVL2
 1164 0123 AA020000 		.4byte	.LVL35
 1165 0127 0100     		.2byte	0x1
 1166 0129 55       		.byte	0x55
 1167 012a 00000000 		.4byte	0
 1168 012e 00000000 		.4byte	0
 1169              		.section	.debug_aranges,"",%progbits
 1170 0000 1C000000 		.4byte	0x1c
 1171 0004 0200     		.2byte	0x2
 1172 0006 00000000 		.4byte	.Ldebug_info0
 1173 000a 04       		.byte	0x4
 1174 000b 00       		.byte	0
 1175 000c 0000     		.2byte	0
 1176 000e 0000     		.2byte	0
 1177 0010 00000000 		.4byte	.LFB0
 1178 0014 28030000 		.4byte	.LFE0-.LFB0
 1179 0018 00000000 		.4byte	0
 1180 001c 00000000 		.4byte	0
 1181              		.section	.debug_ranges,"",%progbits
 1182              	.Ldebug_ranges0:
 1183 0000 00000000 		.4byte	.LFB0
 1184 0004 28030000 		.4byte	.LFE0
 1185 0008 00000000 		.4byte	0
 1186 000c 00000000 		.4byte	0
 1187              		.section	.debug_line,"",%progbits
 1188              	.Ldebug_line0:
 1189 0000 50010000 		.section	.debug_str,"MS",%progbits,1
 1189      02009600 
 1189      00000201 
 1189      FB0E0D00 
 1189      01010101 
 1190              	.LASF29:
 1191 0000 455A4932 		.ascii	"EZI2C_CAM_dataBuffer1\000"
 1191      435F4341 
 1191      4D5F6461 
 1191      74614275 
 1191      66666572 
 1192              	.LASF15:
 1193 0016 72656733 		.ascii	"reg32\000"
 1193      3200
 1194              	.LASF32:
 1195 001c 455A4932 		.ascii	"EZI2C_CAM_offsetBuf1\000"
 1195      435F4341 
 1195      4D5F6F66 
 1195      66736574 
 1195      42756631 
 1196              	.LASF3:
 1197 0031 73686F72 		.ascii	"short unsigned int\000"
 1197      7420756E 
 1197      7369676E 
 1197      65642069 
 1197      6E7400
 1198              	.LASF21:
 1199 0044 656E6454 		.ascii	"endTransfer\000"
 1199      72616E73 
 1199      66657200 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 32


 1200              	.LASF28:
 1201 0050 455A4932 		.ascii	"EZI2C_CAM_fsmState\000"
 1201      435F4341 
 1201      4D5F6673 
 1201      6D537461 
 1201      746500
 1202              	.LASF33:
 1203 0063 455A4932 		.ascii	"EZI2C_CAM_indexBuf1\000"
 1203      435F4341 
 1203      4D5F696E 
 1203      64657842 
 1203      75663100 
 1204              	.LASF12:
 1205 0077 666C6F61 		.ascii	"float\000"
 1205      7400
 1206              	.LASF38:
 1207 007d 455A4932 		.ascii	"EZI2C_CAM_I2CSlaveNackGeneration\000"
 1207      435F4341 
 1207      4D5F4932 
 1207      43536C61 
 1207      76654E61 
 1208              	.LASF26:
 1209 009e 455A4932 		.ascii	"EZI2C_CAM_customIntrHandler\000"
 1209      435F4341 
 1209      4D5F6375 
 1209      73746F6D 
 1209      496E7472 
 1210              	.LASF1:
 1211 00ba 756E7369 		.ascii	"unsigned char\000"
 1211      676E6564 
 1211      20636861 
 1211      7200
 1212              	.LASF37:
 1213 00c8 455A4932 		.ascii	"EZI2C_CAM_EZI2C_STRETCH_ISR\000"
 1213      435F4341 
 1213      4D5F455A 
 1213      4932435F 
 1213      53545245 
 1214              	.LASF35:
 1215 00e4 47656E65 		.ascii	"Generated_Source\\PSoC4\\EZI2C_CAM_EZI2C_INT.c\000"
 1215      72617465 
 1215      645F536F 
 1215      75726365 
 1215      5C50536F 
 1216              	.LASF20:
 1217 0111 6C6F6353 		.ascii	"locStatus\000"
 1217      74617475 
 1217      7300
 1218              	.LASF5:
 1219 011b 6C6F6E67 		.ascii	"long unsigned int\000"
 1219      20756E73 
 1219      69676E65 
 1219      6420696E 
 1219      7400
 1220              	.LASF9:
 1221 012d 75696E74 		.ascii	"uint8\000"
 1221      3800
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 33


 1222              	.LASF19:
 1223 0133 6C6F6349 		.ascii	"locIndex\000"
 1223      6E646578 
 1223      00
 1224              	.LASF13:
 1225 013c 646F7562 		.ascii	"double\000"
 1225      6C6500
 1226              	.LASF36:
 1227 0143 433A5C70 		.ascii	"C:\\psoc\\chamonix\\fixed\\Fixed\\fixed.cydsn\000"
 1227      736F635C 
 1227      6368616D 
 1227      6F6E6978 
 1227      5C666978 
 1228              	.LASF30:
 1229 016c 455A4932 		.ascii	"EZI2C_CAM_bufSizeBuf1\000"
 1229      435F4341 
 1229      4D5F6275 
 1229      6653697A 
 1229      65427566 
 1230              	.LASF10:
 1231 0182 75696E74 		.ascii	"uint16\000"
 1231      313600
 1232              	.LASF11:
 1233 0189 75696E74 		.ascii	"uint32\000"
 1233      333200
 1234              	.LASF8:
 1235 0190 756E7369 		.ascii	"unsigned int\000"
 1235      676E6564 
 1235      20696E74 
 1235      00
 1236              	.LASF18:
 1237 019d 6C6F6342 		.ascii	"locBufSize\000"
 1237      75665369 
 1237      7A6500
 1238              	.LASF22:
 1239 01a8 6669666F 		.ascii	"fifoIndex\000"
 1239      496E6465 
 1239      7800
 1240              	.LASF7:
 1241 01b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1241      206C6F6E 
 1241      6720756E 
 1241      7369676E 
 1241      65642069 
 1242              	.LASF16:
 1243 01c9 63796973 		.ascii	"cyisraddress\000"
 1243      72616464 
 1243      72657373 
 1243      00
 1244              	.LASF39:
 1245 01d6 43794861 		.ascii	"CyHalt\000"
 1245      6C7400
 1246              	.LASF31:
 1247 01dd 455A4932 		.ascii	"EZI2C_CAM_protectBuf1\000"
 1247      435F4341 
 1247      4D5F7072 
 1247      6F746563 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 34


 1247      74427566 
 1248              	.LASF17:
 1249 01f3 73697A65 		.ascii	"sizetype\000"
 1249      74797065 
 1249      00
 1250              	.LASF6:
 1251 01fc 6C6F6E67 		.ascii	"long long int\000"
 1251      206C6F6E 
 1251      6720696E 
 1251      7400
 1252              	.LASF14:
 1253 020a 63686172 		.ascii	"char\000"
 1253      00
 1254              	.LASF25:
 1255 020f 6C6F6349 		.ascii	"locIntrSlave\000"
 1255      6E747253 
 1255      6C617665 
 1255      00
 1256              	.LASF34:
 1257 021c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1257      4320342E 
 1257      392E3320 
 1257      32303135 
 1257      30333033 
 1258 024f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1258      20726576 
 1258      6973696F 
 1258      6E203232 
 1258      31323230 
 1259 0282 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1259      66756E63 
 1259      74696F6E 
 1259      2D736563 
 1259      74696F6E 
 1260              	.LASF2:
 1261 02aa 73686F72 		.ascii	"short int\000"
 1261      7420696E 
 1261      7400
 1262              	.LASF24:
 1263 02b4 6C6F6349 		.ascii	"locIntrCause\000"
 1263      6E747243 
 1263      61757365 
 1263      00
 1264              	.LASF27:
 1265 02c1 455A4932 		.ascii	"EZI2C_CAM_curStatus\000"
 1265      435F4341 
 1265      4D5F6375 
 1265      72537461 
 1265      74757300 
 1266              	.LASF4:
 1267 02d5 6C6F6E67 		.ascii	"long int\000"
 1267      20696E74 
 1267      00
 1268              	.LASF0:
 1269 02de 7369676E 		.ascii	"signed char\000"
 1269      65642063 
 1269      68617200 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cchHRLyw.s 			page 35


 1270              	.LASF23:
 1271 02ea 6C6F6342 		.ascii	"locByte\000"
 1271      79746500 
 1272              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
