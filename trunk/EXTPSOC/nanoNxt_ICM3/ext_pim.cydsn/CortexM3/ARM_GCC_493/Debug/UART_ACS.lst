ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_ACS.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_ACS_initVar
  19              		.bss
  20              		.type	UART_ACS_initVar, %object
  21              		.size	UART_ACS_initVar, 1
  22              	UART_ACS_initVar:
  23 0000 00       		.space	1
  24              		.global	UART_ACS_errorStatus
  25              		.type	UART_ACS_errorStatus, %object
  26              		.size	UART_ACS_errorStatus, 1
  27              	UART_ACS_errorStatus:
  28 0001 00       		.space	1
  29              		.comm	UART_ACS_rxBuffer,256,4
  30              		.global	UART_ACS_rxBufferRead
  31              		.align	1
  32              		.type	UART_ACS_rxBufferRead, %object
  33              		.size	UART_ACS_rxBufferRead, 2
  34              	UART_ACS_rxBufferRead:
  35 0002 0000     		.space	2
  36              		.global	UART_ACS_rxBufferWrite
  37              		.align	1
  38              		.type	UART_ACS_rxBufferWrite, %object
  39              		.size	UART_ACS_rxBufferWrite, 2
  40              	UART_ACS_rxBufferWrite:
  41 0004 0000     		.space	2
  42              		.global	UART_ACS_rxBufferLoopDetect
  43              		.type	UART_ACS_rxBufferLoopDetect, %object
  44              		.size	UART_ACS_rxBufferLoopDetect, 1
  45              	UART_ACS_rxBufferLoopDetect:
  46 0006 00       		.space	1
  47              		.global	UART_ACS_rxBufferOverflow
  48              		.type	UART_ACS_rxBufferOverflow, %object
  49              		.size	UART_ACS_rxBufferOverflow, 1
  50              	UART_ACS_rxBufferOverflow:
  51 0007 00       		.space	1
  52              		.section	.text.UART_ACS_Start,"ax",%progbits
  53              		.align	2
  54              		.global	UART_ACS_Start
  55              		.thumb
  56              		.thumb_func
  57              		.type	UART_ACS_Start, %function
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 2


  58              	UART_ACS_Start:
  59              	.LFB0:
  60              		.file 1 ".\\Generated_Source\\PSoC5\\UART_ACS.c"
   1:.\Generated_Source\PSoC5/UART_ACS.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_ACS.c **** * File Name: UART_ACS.c
   3:.\Generated_Source\PSoC5/UART_ACS.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_ACS.c **** *
   5:.\Generated_Source\PSoC5/UART_ACS.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_ACS.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_ACS.c **** *
   8:.\Generated_Source\PSoC5/UART_ACS.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_ACS.c **** *
  10:.\Generated_Source\PSoC5/UART_ACS.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_ACS.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_ACS.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_ACS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_ACS.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_ACS.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_ACS.c **** 
  17:.\Generated_Source\PSoC5/UART_ACS.c **** #include "UART_ACS.h"
  18:.\Generated_Source\PSoC5/UART_ACS.c **** #if (UART_ACS_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART_ACS.c ****     #include "UART_ACS_IntClock.h"
  20:.\Generated_Source\PSoC5/UART_ACS.c **** #endif /* End UART_ACS_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART_ACS.c **** 
  22:.\Generated_Source\PSoC5/UART_ACS.c **** 
  23:.\Generated_Source\PSoC5/UART_ACS.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_ACS.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART_ACS.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART_ACS.c **** 
  27:.\Generated_Source\PSoC5/UART_ACS.c **** uint8 UART_ACS_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART_ACS.c **** 
  29:.\Generated_Source\PSoC5/UART_ACS.c **** #if (UART_ACS_TX_INTERRUPT_ENABLED && UART_ACS_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART_ACS.c ****     volatile uint8 UART_ACS_txBuffer[UART_ACS_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART_ACS.c ****     volatile uint8 UART_ACS_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 UART_ACS_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_ACS.c **** #endif /* (UART_ACS_TX_INTERRUPT_ENABLED && UART_ACS_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART_ACS.c **** 
  35:.\Generated_Source\PSoC5/UART_ACS.c **** #if (UART_ACS_RX_INTERRUPT_ENABLED && (UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 UART_ACS_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART_ACS.c ****     volatile uint8 UART_ACS_rxBuffer[UART_ACS_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART_ACS.c ****     volatile uint16 UART_ACS_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART_ACS.c ****     volatile uint16 UART_ACS_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART_ACS.c ****     volatile uint8 UART_ACS_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART_ACS.c ****     volatile uint8 UART_ACS_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART_ACS.c ****         volatile uint8 UART_ACS_rxAddressMode = UART_ACS_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART_ACS.c ****         volatile uint8 UART_ACS_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART_ACS.c **** #endif /* (UART_ACS_RX_INTERRUPT_ENABLED && (UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART_ACS.c **** 
  48:.\Generated_Source\PSoC5/UART_ACS.c **** 
  49:.\Generated_Source\PSoC5/UART_ACS.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART_ACS.c **** * Function Name: UART_ACS_Start
  51:.\Generated_Source\PSoC5/UART_ACS.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART_ACS.c **** *
  53:.\Generated_Source\PSoC5/UART_ACS.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART_ACS.c **** *  This is the preferred method to begin component operation.
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 3


  55:.\Generated_Source\PSoC5/UART_ACS.c **** *  UART_ACS_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART_ACS.c **** *  UART_ACS_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART_ACS.c **** *  UART_ACS_Enable() function.
  58:.\Generated_Source\PSoC5/UART_ACS.c **** *
  59:.\Generated_Source\PSoC5/UART_ACS.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_ACS.c **** *
  62:.\Generated_Source\PSoC5/UART_ACS.c **** * Return:
  63:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
  64:.\Generated_Source\PSoC5/UART_ACS.c **** *
  65:.\Generated_Source\PSoC5/UART_ACS.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART_ACS.c **** *  The UART_ACS_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART_ACS.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART_ACS.c **** *  and set to one (1u) the first time UART_ACS_Start() is called. This
  69:.\Generated_Source\PSoC5/UART_ACS.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART_ACS.c **** *  subsequent calls to the UART_ACS_Start() routine.
  71:.\Generated_Source\PSoC5/UART_ACS.c **** *
  72:.\Generated_Source\PSoC5/UART_ACS.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART_ACS.c **** *  No.
  74:.\Generated_Source\PSoC5/UART_ACS.c **** *
  75:.\Generated_Source\PSoC5/UART_ACS.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART_ACS.c **** void UART_ACS_Start(void) 
  77:.\Generated_Source\PSoC5/UART_ACS.c **** {
  61              		.loc 1 77 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/UART_ACS.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART_ACS.c ****     if(UART_ACS_initVar == 0u)
  71              		.loc 1 79 0
  72 0004 054B     		ldr	r3, .L3
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74 0008 002B     		cmp	r3, #0
  75 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/UART_ACS.c ****     {
  81:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_Init();
  76              		.loc 1 81 0
  77 000c FFF7FEFF 		bl	UART_ACS_Init
  82:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_initVar = 1u;
  78              		.loc 1 82 0
  79 0010 024B     		ldr	r3, .L3
  80 0012 0122     		movs	r2, #1
  81 0014 1A70     		strb	r2, [r3]
  82              	.L2:
  83:.\Generated_Source\PSoC5/UART_ACS.c ****     }
  84:.\Generated_Source\PSoC5/UART_ACS.c **** 
  85:.\Generated_Source\PSoC5/UART_ACS.c ****     UART_ACS_Enable();
  83              		.loc 1 85 0
  84 0016 FFF7FEFF 		bl	UART_ACS_Enable
  86:.\Generated_Source\PSoC5/UART_ACS.c **** }
  85              		.loc 1 86 0
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 4


  86 001a 80BD     		pop	{r7, pc}
  87              	.L4:
  88              		.align	2
  89              	.L3:
  90 001c 00000000 		.word	UART_ACS_initVar
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	UART_ACS_Start, .-UART_ACS_Start
  94              		.section	.text.UART_ACS_Init,"ax",%progbits
  95              		.align	2
  96              		.global	UART_ACS_Init
  97              		.thumb
  98              		.thumb_func
  99              		.type	UART_ACS_Init, %function
 100              	UART_ACS_Init:
 101              	.LFB1:
  87:.\Generated_Source\PSoC5/UART_ACS.c **** 
  88:.\Generated_Source\PSoC5/UART_ACS.c **** 
  89:.\Generated_Source\PSoC5/UART_ACS.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART_ACS.c **** * Function Name: UART_ACS_Init
  91:.\Generated_Source\PSoC5/UART_ACS.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART_ACS.c **** *
  93:.\Generated_Source\PSoC5/UART_ACS.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART_ACS.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART_ACS.c **** *  dialog settings. It is not necessary to call UART_ACS_Init() because
  96:.\Generated_Source\PSoC5/UART_ACS.c **** *  the UART_ACS_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART_ACS.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART_ACS.c **** *
  99:.\Generated_Source\PSoC5/UART_ACS.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
 101:.\Generated_Source\PSoC5/UART_ACS.c **** *
 102:.\Generated_Source\PSoC5/UART_ACS.c **** * Return:
 103:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
 104:.\Generated_Source\PSoC5/UART_ACS.c **** *
 105:.\Generated_Source\PSoC5/UART_ACS.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART_ACS.c **** void UART_ACS_Init(void) 
 107:.\Generated_Source\PSoC5/UART_ACS.c **** {
 102              		.loc 1 107 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/UART_ACS.c ****     #if(UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART_ACS.c **** 
 110:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART_ACS.c ****             (void) CyIntSetVector(UART_ACS_RX_VECT_NUM, &UART_ACS_RXISR);
 112              		.loc 1 112 0
 113 0004 0020     		movs	r0, #0
 114 0006 0849     		ldr	r1, .L6
 115 0008 FFF7FEFF 		bl	CyIntSetVector
 113:.\Generated_Source\PSoC5/UART_ACS.c ****             CyIntSetPriority(UART_ACS_RX_VECT_NUM, UART_ACS_RX_PRIOR_NUM);
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 5


 116              		.loc 1 113 0
 117 000c 0020     		movs	r0, #0
 118 000e 0721     		movs	r1, #7
 119 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_errorStatus = 0u;
 120              		.loc 1 114 0
 121 0014 054B     		ldr	r3, .L6+4
 122 0016 0022     		movs	r2, #0
 123 0018 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART_ACS.c **** 
 117:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_SetRxAddressMode(UART_ACS_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_SetRxAddress1(UART_ACS_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_SetRxAddress2(UART_ACS_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* End UART_ACS_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART_ACS.c **** 
 123:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXBITCTR_PERIOD_REG = UART_ACS_RXBITCTR_INIT;
 124              		.loc 1 124 0
 125 001a 054B     		ldr	r3, .L6+8
 126 001c 7222     		movs	r2, #114
 127 001e 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXSTATUS_MASK_REG  = UART_ACS_INIT_RX_INTERRUPTS_MASK;
 128              		.loc 1 126 0
 129 0020 044B     		ldr	r3, .L6+12
 130 0022 2022     		movs	r2, #32
 131 0024 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* End UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART_ACS.c **** 
 129:.\Generated_Source\PSoC5/UART_ACS.c ****     #if(UART_ACS_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART_ACS.c ****             (void) CyIntSetVector(UART_ACS_TX_VECT_NUM, &UART_ACS_TXISR);
 133:.\Generated_Source\PSoC5/UART_ACS.c ****             CyIntSetPriority(UART_ACS_TX_VECT_NUM, UART_ACS_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_ACS.c **** 
 136:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXBITCLKGEN_CTR_REG = UART_ACS_BIT_CENTER;
 139:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXBITCLKTX_COMPLETE_REG = ((UART_ACS_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC5/UART_ACS.c ****                         UART_ACS_NUMBER_OF_START_BIT) * UART_ACS_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART_ACS.c ****         #else
 142:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXBITCTR_PERIOD_REG = ((UART_ACS_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART_ACS.c ****                         UART_ACS_NUMBER_OF_START_BIT) * UART_ACS_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* End UART_ACS_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART_ACS.c **** 
 146:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXSTATUS_MASK_REG = UART_ACS_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART_ACS.c ****         #else
 150:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXSTATUS_MASK_REG = UART_ACS_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /*End UART_ACS_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART_ACS.c **** 
 153:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* End UART_ACS_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART_ACS.c **** 
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 6


 155:.\Generated_Source\PSoC5/UART_ACS.c ****     #if(UART_ACS_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART_ACS.c ****             (UART_ACS_ReadControlRegister() & (uint8)~UART_ACS_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART_ACS.c ****             (uint8)(UART_ACS_PARITY_TYPE << UART_ACS_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* End UART_ACS_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART_ACS.c **** }
 132              		.loc 1 160 0
 133 0026 80BD     		pop	{r7, pc}
 134              	.L7:
 135              		.align	2
 136              	.L6:
 137 0028 00000000 		.word	UART_ACS_RXISR
 138 002c 00000000 		.word	UART_ACS_errorStatus
 139 0030 87650040 		.word	1073767815
 140 0034 86640040 		.word	1073767558
 141              		.cfi_endproc
 142              	.LFE1:
 143              		.size	UART_ACS_Init, .-UART_ACS_Init
 144              		.section	.text.UART_ACS_Enable,"ax",%progbits
 145              		.align	2
 146              		.global	UART_ACS_Enable
 147              		.thumb
 148              		.thumb_func
 149              		.type	UART_ACS_Enable, %function
 150              	UART_ACS_Enable:
 151              	.LFB2:
 161:.\Generated_Source\PSoC5/UART_ACS.c **** 
 162:.\Generated_Source\PSoC5/UART_ACS.c **** 
 163:.\Generated_Source\PSoC5/UART_ACS.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART_ACS.c **** * Function Name: UART_ACS_Enable
 165:.\Generated_Source\PSoC5/UART_ACS.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART_ACS.c **** *
 167:.\Generated_Source\PSoC5/UART_ACS.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART_ACS.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART_ACS.c **** *  to call UART_ACS_Enable() because the UART_ACS_Start() API
 170:.\Generated_Source\PSoC5/UART_ACS.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART_ACS.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART_ACS.c **** 
 173:.\Generated_Source\PSoC5/UART_ACS.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
 175:.\Generated_Source\PSoC5/UART_ACS.c **** *
 176:.\Generated_Source\PSoC5/UART_ACS.c **** * Return:
 177:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
 178:.\Generated_Source\PSoC5/UART_ACS.c **** *
 179:.\Generated_Source\PSoC5/UART_ACS.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART_ACS.c **** *  UART_ACS_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART_ACS.c **** *
 182:.\Generated_Source\PSoC5/UART_ACS.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_ACS.c **** void UART_ACS_Enable(void) 
 184:.\Generated_Source\PSoC5/UART_ACS.c **** {
 152              		.loc 1 184 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 7


 159              		.cfi_offset 14, -4
 160 0002 82B0     		sub	sp, sp, #8
 161              		.cfi_def_cfa_offset 16
 162 0004 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART_ACS.c ****     enableInterrupts = CyEnterCriticalSection();
 164              		.loc 1 186 0
 165 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 166 000a 0346     		mov	r3, r0
 167 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/UART_ACS.c **** 
 188:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART_ACS.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXBITCTR_CONTROL_REG |= UART_ACS_CNTR_ENABLE;
 168              		.loc 1 190 0
 169 000e 0D4A     		ldr	r2, .L9
 170 0010 0C4B     		ldr	r3, .L9
 171 0012 1B78     		ldrb	r3, [r3]
 172 0014 DBB2     		uxtb	r3, r3
 173 0016 43F02003 		orr	r3, r3, #32
 174 001a DBB2     		uxtb	r3, r3
 175 001c 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/UART_ACS.c **** 
 192:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXSTATUS_ACTL_REG  |= UART_ACS_INT_ENABLE;
 176              		.loc 1 193 0
 177 001e 0A4A     		ldr	r2, .L9+4
 178 0020 094B     		ldr	r3, .L9+4
 179 0022 1B78     		ldrb	r3, [r3]
 180 0024 DBB2     		uxtb	r3, r3
 181 0026 43F01003 		orr	r3, r3, #16
 182 002a DBB2     		uxtb	r3, r3
 183 002c 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/UART_ACS.c **** 
 195:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_EnableRxInt();
 184              		.loc 1 196 0
 185 002e 074B     		ldr	r3, .L9+8
 186 0030 0122     		movs	r2, #1
 187 0032 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/UART_ACS.c **** 
 198:.\Generated_Source\PSoC5/UART_ACS.c ****             #if (UART_ACS_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART_ACS.c ****             #endif /* (UART_ACS_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART_ACS.c **** 
 204:.\Generated_Source\PSoC5/UART_ACS.c ****     #if(UART_ACS_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART_ACS.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART_ACS.c ****         #if(!UART_ACS_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXBITCTR_CONTROL_REG |= UART_ACS_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* End UART_ACS_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART_ACS.c **** 
 210:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_TXSTATUS_ACTL_REG |= UART_ACS_INT_ENABLE;
 212:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_TX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 8


 213:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART_ACS.c ****      #endif /* (UART_ACS_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART_ACS.c **** 
 218:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_IntClock_Start();  /* Enable the clock */
 220:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART_ACS.c **** 
 222:.\Generated_Source\PSoC5/UART_ACS.c ****     CyExitCriticalSection(enableInterrupts);
 188              		.loc 1 222 0
 189 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 190 0036 1846     		mov	r0, r3
 191 0038 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/UART_ACS.c **** }
 192              		.loc 1 223 0
 193 003c 0837     		adds	r7, r7, #8
 194              		.cfi_def_cfa_offset 8
 195 003e BD46     		mov	sp, r7
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
 198 0040 80BD     		pop	{r7, pc}
 199              	.L10:
 200 0042 00BF     		.align	2
 201              	.L9:
 202 0044 97650040 		.word	1073767831
 203 0048 96640040 		.word	1073767574
 204 004c 00E100E0 		.word	-536813312
 205              		.cfi_endproc
 206              	.LFE2:
 207              		.size	UART_ACS_Enable, .-UART_ACS_Enable
 208              		.section	.text.UART_ACS_Stop,"ax",%progbits
 209              		.align	2
 210              		.global	UART_ACS_Stop
 211              		.thumb
 212              		.thumb_func
 213              		.type	UART_ACS_Stop, %function
 214              	UART_ACS_Stop:
 215              	.LFB3:
 224:.\Generated_Source\PSoC5/UART_ACS.c **** 
 225:.\Generated_Source\PSoC5/UART_ACS.c **** 
 226:.\Generated_Source\PSoC5/UART_ACS.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART_ACS.c **** * Function Name: UART_ACS_Stop
 228:.\Generated_Source\PSoC5/UART_ACS.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART_ACS.c **** *
 230:.\Generated_Source\PSoC5/UART_ACS.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART_ACS.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART_ACS.c **** *
 233:.\Generated_Source\PSoC5/UART_ACS.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
 235:.\Generated_Source\PSoC5/UART_ACS.c **** *
 236:.\Generated_Source\PSoC5/UART_ACS.c **** * Return:
 237:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
 238:.\Generated_Source\PSoC5/UART_ACS.c **** *
 239:.\Generated_Source\PSoC5/UART_ACS.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART_ACS.c **** void UART_ACS_Stop(void) 
 241:.\Generated_Source\PSoC5/UART_ACS.c **** {
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 9


 216              		.loc 1 241 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART_ACS.c ****     enableInterrupts = CyEnterCriticalSection();
 228              		.loc 1 243 0
 229 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 230 000a 0346     		mov	r3, r0
 231 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/UART_ACS.c **** 
 245:.\Generated_Source\PSoC5/UART_ACS.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXBITCTR_CONTROL_REG &= (uint8) ~UART_ACS_CNTR_ENABLE;
 232              		.loc 1 247 0
 233 000e 0D4A     		ldr	r2, .L12
 234 0010 0C4B     		ldr	r3, .L12
 235 0012 1B78     		ldrb	r3, [r3]
 236 0014 DBB2     		uxtb	r3, r3
 237 0016 23F02003 		bic	r3, r3, #32
 238 001a DBB2     		uxtb	r3, r3
 239 001c 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART_ACS.c **** 
 250:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART_ACS.c ****         #if(!UART_ACS_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXBITCTR_CONTROL_REG &= (uint8) ~UART_ACS_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (!UART_ACS_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART_ACS.c **** 
 256:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART_ACS.c **** 
 260:.\Generated_Source\PSoC5/UART_ACS.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXSTATUS_ACTL_REG  &= (uint8) ~UART_ACS_INT_ENABLE;
 240              		.loc 1 262 0
 241 001e 0A4A     		ldr	r2, .L12+4
 242 0020 094B     		ldr	r3, .L12+4
 243 0022 1B78     		ldrb	r3, [r3]
 244 0024 DBB2     		uxtb	r3, r3
 245 0026 23F01003 		bic	r3, r3, #16
 246 002a DBB2     		uxtb	r3, r3
 247 002c 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/UART_ACS.c **** 
 264:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_DisableRxInt();
 248              		.loc 1 265 0
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 10


 249 002e 074B     		ldr	r3, .L12+8
 250 0030 0122     		movs	r2, #1
 251 0032 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART_ACS.c **** 
 269:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_TXSTATUS_ACTL_REG &= (uint8) ~UART_ACS_INT_ENABLE;
 271:.\Generated_Source\PSoC5/UART_ACS.c **** 
 272:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART_ACS.c **** 
 277:.\Generated_Source\PSoC5/UART_ACS.c ****     CyExitCriticalSection(enableInterrupts);
 252              		.loc 1 277 0
 253 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 254 0036 1846     		mov	r0, r3
 255 0038 FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/UART_ACS.c **** }
 256              		.loc 1 278 0
 257 003c 0837     		adds	r7, r7, #8
 258              		.cfi_def_cfa_offset 8
 259 003e BD46     		mov	sp, r7
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0040 80BD     		pop	{r7, pc}
 263              	.L13:
 264 0042 00BF     		.align	2
 265              	.L12:
 266 0044 97650040 		.word	1073767831
 267 0048 96640040 		.word	1073767574
 268 004c 80E100E0 		.word	-536813184
 269              		.cfi_endproc
 270              	.LFE3:
 271              		.size	UART_ACS_Stop, .-UART_ACS_Stop
 272              		.section	.text.UART_ACS_ReadControlRegister,"ax",%progbits
 273              		.align	2
 274              		.global	UART_ACS_ReadControlRegister
 275              		.thumb
 276              		.thumb_func
 277              		.type	UART_ACS_ReadControlRegister, %function
 278              	UART_ACS_ReadControlRegister:
 279              	.LFB4:
 279:.\Generated_Source\PSoC5/UART_ACS.c **** 
 280:.\Generated_Source\PSoC5/UART_ACS.c **** 
 281:.\Generated_Source\PSoC5/UART_ACS.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART_ACS.c **** * Function Name: UART_ACS_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART_ACS.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART_ACS.c **** *
 285:.\Generated_Source\PSoC5/UART_ACS.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART_ACS.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART_ACS.c **** *
 288:.\Generated_Source\PSoC5/UART_ACS.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
 290:.\Generated_Source\PSoC5/UART_ACS.c **** *
 291:.\Generated_Source\PSoC5/UART_ACS.c **** * Return:
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 11


 292:.\Generated_Source\PSoC5/UART_ACS.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART_ACS.c **** *
 294:.\Generated_Source\PSoC5/UART_ACS.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART_ACS.c **** uint8 UART_ACS_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART_ACS.c **** {
 280              		.loc 1 296 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 0000 80B4     		push	{r7}
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 7, -4
 288 0002 00AF     		add	r7, sp, #0
 289              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART_ACS.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART_ACS.c ****     #else
 300:.\Generated_Source\PSoC5/UART_ACS.c ****         return(UART_ACS_CONTROL_REG);
 290              		.loc 1 300 0
 291 0004 034B     		ldr	r3, .L16
 292 0006 1B78     		ldrb	r3, [r3]
 293 0008 DBB2     		uxtb	r3, r3
 301:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART_ACS.c **** }
 294              		.loc 1 302 0
 295 000a 1846     		mov	r0, r3
 296 000c BD46     		mov	sp, r7
 297              		.cfi_def_cfa_register 13
 298              		@ sp needed
 299 000e 5DF8047B 		ldr	r7, [sp], #4
 300              		.cfi_restore 7
 301              		.cfi_def_cfa_offset 0
 302 0012 7047     		bx	lr
 303              	.L17:
 304              		.align	2
 305              	.L16:
 306 0014 71640040 		.word	1073767537
 307              		.cfi_endproc
 308              	.LFE4:
 309              		.size	UART_ACS_ReadControlRegister, .-UART_ACS_ReadControlRegister
 310              		.section	.text.UART_ACS_WriteControlRegister,"ax",%progbits
 311              		.align	2
 312              		.global	UART_ACS_WriteControlRegister
 313              		.thumb
 314              		.thumb_func
 315              		.type	UART_ACS_WriteControlRegister, %function
 316              	UART_ACS_WriteControlRegister:
 317              	.LFB5:
 303:.\Generated_Source\PSoC5/UART_ACS.c **** 
 304:.\Generated_Source\PSoC5/UART_ACS.c **** 
 305:.\Generated_Source\PSoC5/UART_ACS.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART_ACS.c **** * Function Name: UART_ACS_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART_ACS.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART_ACS.c **** *
 309:.\Generated_Source\PSoC5/UART_ACS.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART_ACS.c **** *  Writes an 8-bit value into the control register
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 12


 311:.\Generated_Source\PSoC5/UART_ACS.c **** *
 312:.\Generated_Source\PSoC5/UART_ACS.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART_ACS.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART_ACS.c **** *
 315:.\Generated_Source\PSoC5/UART_ACS.c **** * Return:
 316:.\Generated_Source\PSoC5/UART_ACS.c **** *  None.
 317:.\Generated_Source\PSoC5/UART_ACS.c **** *
 318:.\Generated_Source\PSoC5/UART_ACS.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART_ACS.c **** void  UART_ACS_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART_ACS.c **** {
 318              		.loc 1 320 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 8
 321              		@ frame_needed = 1, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323 0000 80B4     		push	{r7}
 324              		.cfi_def_cfa_offset 4
 325              		.cfi_offset 7, -4
 326 0002 83B0     		sub	sp, sp, #12
 327              		.cfi_def_cfa_offset 16
 328 0004 00AF     		add	r7, sp, #0
 329              		.cfi_def_cfa_register 7
 330 0006 0346     		mov	r3, r0
 331 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART_ACS.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART_ACS.c ****         {
 324:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 326:.\Generated_Source\PSoC5/UART_ACS.c ****     #else
 327:.\Generated_Source\PSoC5/UART_ACS.c ****        UART_ACS_CONTROL_REG = control;
 332              		.loc 1 327 0
 333 000a 044A     		ldr	r2, .L19
 334 000c FB79     		ldrb	r3, [r7, #7]
 335 000e 1370     		strb	r3, [r2]
 328:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART_ACS.c **** }
 336              		.loc 1 329 0
 337 0010 0C37     		adds	r7, r7, #12
 338              		.cfi_def_cfa_offset 4
 339 0012 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 0014 5DF8047B 		ldr	r7, [sp], #4
 343              		.cfi_restore 7
 344              		.cfi_def_cfa_offset 0
 345 0018 7047     		bx	lr
 346              	.L20:
 347 001a 00BF     		.align	2
 348              	.L19:
 349 001c 71640040 		.word	1073767537
 350              		.cfi_endproc
 351              	.LFE5:
 352              		.size	UART_ACS_WriteControlRegister, .-UART_ACS_WriteControlRegister
 353              		.section	.text.UART_ACS_SetRxInterruptMode,"ax",%progbits
 354              		.align	2
 355              		.global	UART_ACS_SetRxInterruptMode
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 13


 356              		.thumb
 357              		.thumb_func
 358              		.type	UART_ACS_SetRxInterruptMode, %function
 359              	UART_ACS_SetRxInterruptMode:
 360              	.LFB6:
 330:.\Generated_Source\PSoC5/UART_ACS.c **** 
 331:.\Generated_Source\PSoC5/UART_ACS.c **** 
 332:.\Generated_Source\PSoC5/UART_ACS.c **** #if(UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 337:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 340:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART_ACS.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART_ACS.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART_ACS.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART_ACS.c ****     *      UART_ACS_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART_ACS.c ****     *      UART_ACS_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART_ACS.c ****     *      UART_ACS_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART_ACS.c ****     *      UART_ACS_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART_ACS.c ****     *      UART_ACS_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART_ACS.c ****     *      UART_ACS_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART_ACS.c ****     *      UART_ACS_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 352:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 355:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 358:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 361              		.loc 1 360 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 8
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 366 0000 80B4     		push	{r7}
 367              		.cfi_def_cfa_offset 4
 368              		.cfi_offset 7, -4
 369 0002 83B0     		sub	sp, sp, #12
 370              		.cfi_def_cfa_offset 16
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 0346     		mov	r3, r0
 374 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXSTATUS_MASK_REG  = intSrc;
 375              		.loc 1 361 0
 376 000a 044A     		ldr	r2, .L22
 377 000c FB79     		ldrb	r3, [r7, #7]
 378 000e 1370     		strb	r3, [r2]
 362:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 379              		.loc 1 362 0
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 14


 380 0010 0C37     		adds	r7, r7, #12
 381              		.cfi_def_cfa_offset 4
 382 0012 BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 0014 5DF8047B 		ldr	r7, [sp], #4
 386              		.cfi_restore 7
 387              		.cfi_def_cfa_offset 0
 388 0018 7047     		bx	lr
 389              	.L23:
 390 001a 00BF     		.align	2
 391              	.L22:
 392 001c 86640040 		.word	1073767558
 393              		.cfi_endproc
 394              	.LFE6:
 395              		.size	UART_ACS_SetRxInterruptMode, .-UART_ACS_SetRxInterruptMode
 396              		.section	.text.UART_ACS_ReadRxData,"ax",%progbits
 397              		.align	2
 398              		.global	UART_ACS_ReadRxData
 399              		.thumb
 400              		.thumb_func
 401              		.type	UART_ACS_ReadRxData, %function
 402              	UART_ACS_ReadRxData:
 403              	.LFB7:
 363:.\Generated_Source\PSoC5/UART_ACS.c **** 
 364:.\Generated_Source\PSoC5/UART_ACS.c **** 
 365:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_ReadRxData
 367:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 369:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART_ACS.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 373:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 376:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 379:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART_ACS.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART_ACS.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART_ACS.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 388:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 391:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 UART_ACS_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 404              		.loc 1 393 0
 405              		.cfi_startproc
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 15


 406              		@ args = 0, pretend = 0, frame = 8
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409 0000 80B4     		push	{r7}
 410              		.cfi_def_cfa_offset 4
 411              		.cfi_offset 7, -4
 412 0002 83B0     		sub	sp, sp, #12
 413              		.cfi_def_cfa_offset 16
 414 0004 00AF     		add	r7, sp, #0
 415              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART_ACS.c **** 
 396:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART_ACS.c **** 
 398:.\Generated_Source\PSoC5/UART_ACS.c ****         uint16 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART_ACS.c ****         uint16 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART_ACS.c **** 
 401:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_DisableRxInt();
 416              		.loc 1 402 0
 417 0006 1C4B     		ldr	r3, .L31
 418 0008 0122     		movs	r2, #1
 419 000a 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/UART_ACS.c **** 
 404:.\Generated_Source\PSoC5/UART_ACS.c ****         locRxBufferRead  = UART_ACS_rxBufferRead;
 420              		.loc 1 404 0
 421 000c 1B4B     		ldr	r3, .L31+4
 422 000e 1B88     		ldrh	r3, [r3]	@ movhi
 423 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 405:.\Generated_Source\PSoC5/UART_ACS.c ****         locRxBufferWrite = UART_ACS_rxBufferWrite;
 424              		.loc 1 405 0
 425 0012 1B4B     		ldr	r3, .L31+8
 426 0014 1B88     		ldrh	r3, [r3]	@ movhi
 427 0016 7B80     		strh	r3, [r7, #2]	@ movhi
 406:.\Generated_Source\PSoC5/UART_ACS.c **** 
 407:.\Generated_Source\PSoC5/UART_ACS.c ****         if( (UART_ACS_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 428              		.loc 1 407 0
 429 0018 1A4B     		ldr	r3, .L31+12
 430 001a 1B78     		ldrb	r3, [r3]
 431 001c DBB2     		uxtb	r3, r3
 432 001e 002B     		cmp	r3, #0
 433 0020 03D1     		bne	.L25
 434              		.loc 1 407 0 is_stmt 0 discriminator 1
 435 0022 BA88     		ldrh	r2, [r7, #4]
 436 0024 7B88     		ldrh	r3, [r7, #2]
 437 0026 9A42     		cmp	r2, r3
 438 0028 18D0     		beq	.L26
 439              	.L25:
 408:.\Generated_Source\PSoC5/UART_ACS.c ****         {
 409:.\Generated_Source\PSoC5/UART_ACS.c ****             rxData = UART_ACS_rxBuffer[locRxBufferRead];
 440              		.loc 1 409 0 is_stmt 1
 441 002a BB88     		ldrh	r3, [r7, #4]
 442 002c 164A     		ldr	r2, .L31+16
 443 002e D35C     		ldrb	r3, [r2, r3]
 444 0030 FB71     		strb	r3, [r7, #7]
 410:.\Generated_Source\PSoC5/UART_ACS.c ****             locRxBufferRead++;
 445              		.loc 1 410 0
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 16


 446 0032 BB88     		ldrh	r3, [r7, #4]
 447 0034 0133     		adds	r3, r3, #1
 448 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 411:.\Generated_Source\PSoC5/UART_ACS.c **** 
 412:.\Generated_Source\PSoC5/UART_ACS.c ****             if(locRxBufferRead >= UART_ACS_RX_BUFFER_SIZE)
 449              		.loc 1 412 0
 450 0038 BB88     		ldrh	r3, [r7, #4]
 451 003a FF2B     		cmp	r3, #255
 452 003c 01D9     		bls	.L27
 413:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 414:.\Generated_Source\PSoC5/UART_ACS.c ****                 locRxBufferRead = 0u;
 453              		.loc 1 414 0
 454 003e 0023     		movs	r3, #0
 455 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 456              	.L27:
 415:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 416:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_rxBufferRead = locRxBufferRead;
 457              		.loc 1 417 0
 458 0042 0E4A     		ldr	r2, .L31+4
 459 0044 BB88     		ldrh	r3, [r7, #4]	@ movhi
 460 0046 1380     		strh	r3, [r2]	@ movhi
 418:.\Generated_Source\PSoC5/UART_ACS.c **** 
 419:.\Generated_Source\PSoC5/UART_ACS.c ****             if(UART_ACS_rxBufferLoopDetect != 0u)
 461              		.loc 1 419 0
 462 0048 0E4B     		ldr	r3, .L31+12
 463 004a 1B78     		ldrb	r3, [r3]
 464 004c DBB2     		uxtb	r3, r3
 465 004e 002B     		cmp	r3, #0
 466 0050 03D0     		beq	.L28
 420:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 421:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_rxBufferLoopDetect = 0u;
 467              		.loc 1 421 0
 468 0052 0C4B     		ldr	r3, .L31+12
 469 0054 0022     		movs	r2, #0
 470 0056 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 471              		.loc 1 419 0
 472 0058 03E0     		b	.L29
 473              	.L28:
 474 005a 02E0     		b	.L29
 475              	.L26:
 422:.\Generated_Source\PSoC5/UART_ACS.c ****                 #if ((UART_ACS_RX_INTERRUPT_ENABLED) && (UART_ACS_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART_ACS.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART_ACS.c ****                     #if( UART_ACS_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART_ACS.c ****                         if((UART_ACS_CONTROL_REG & UART_ACS_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART_ACS.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART_ACS.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART_ACS.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART_ACS.c ****                             */
 430:.\Generated_Source\PSoC5/UART_ACS.c ****                             UART_ACS_RXSTATUS_MASK_REG  |= UART_ACS_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART_ACS.c ****                         }
 432:.\Generated_Source\PSoC5/UART_ACS.c ****                     #else
 433:.\Generated_Source\PSoC5/UART_ACS.c ****                         UART_ACS_RXSTATUS_MASK_REG  |= UART_ACS_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART_ACS.c ****                     #endif /* end UART_ACS_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART_ACS.c ****                 #endif /* ((UART_ACS_RX_INTERRUPT_ENABLED) && (UART_ACS_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART_ACS.c ****             }
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 17


 437:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 438:.\Generated_Source\PSoC5/UART_ACS.c ****         else
 439:.\Generated_Source\PSoC5/UART_ACS.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART_ACS.c ****             rxData = UART_ACS_RXDATA_REG;
 476              		.loc 1 440 0
 477 005c 0B4B     		ldr	r3, .L31+20
 478 005e 1B78     		ldrb	r3, [r3]
 479 0060 FB71     		strb	r3, [r7, #7]
 480              	.L29:
 441:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 442:.\Generated_Source\PSoC5/UART_ACS.c **** 
 443:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_EnableRxInt();
 481              		.loc 1 443 0
 482 0062 0B4B     		ldr	r3, .L31+24
 483 0064 0122     		movs	r2, #1
 484 0066 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/UART_ACS.c **** 
 445:.\Generated_Source\PSoC5/UART_ACS.c ****     #else
 446:.\Generated_Source\PSoC5/UART_ACS.c **** 
 447:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART_ACS.c ****         rxData = UART_ACS_RXDATA_REG;
 449:.\Generated_Source\PSoC5/UART_ACS.c **** 
 450:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART_ACS.c **** 
 452:.\Generated_Source\PSoC5/UART_ACS.c ****         return(rxData);
 485              		.loc 1 452 0
 486 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 487              		.loc 1 453 0
 488 006a 1846     		mov	r0, r3
 489 006c 0C37     		adds	r7, r7, #12
 490              		.cfi_def_cfa_offset 4
 491 006e BD46     		mov	sp, r7
 492              		.cfi_def_cfa_register 13
 493              		@ sp needed
 494 0070 5DF8047B 		ldr	r7, [sp], #4
 495              		.cfi_restore 7
 496              		.cfi_def_cfa_offset 0
 497 0074 7047     		bx	lr
 498              	.L32:
 499 0076 00BF     		.align	2
 500              	.L31:
 501 0078 80E100E0 		.word	-536813184
 502 007c 00000000 		.word	UART_ACS_rxBufferRead
 503 0080 00000000 		.word	UART_ACS_rxBufferWrite
 504 0084 00000000 		.word	UART_ACS_rxBufferLoopDetect
 505 0088 00000000 		.word	UART_ACS_rxBuffer
 506 008c 46640040 		.word	1073767494
 507 0090 00E100E0 		.word	-536813312
 508              		.cfi_endproc
 509              	.LFE7:
 510              		.size	UART_ACS_ReadRxData, .-UART_ACS_ReadRxData
 511              		.section	.text.UART_ACS_ReadRxStatus,"ax",%progbits
 512              		.align	2
 513              		.global	UART_ACS_ReadRxStatus
 514              		.thumb
 515              		.thumb_func
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 18


 516              		.type	UART_ACS_ReadRxStatus, %function
 517              	UART_ACS_ReadRxStatus:
 518              	.LFB8:
 454:.\Generated_Source\PSoC5/UART_ACS.c **** 
 455:.\Generated_Source\PSoC5/UART_ACS.c **** 
 456:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 460:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART_ACS.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 464:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 467:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 470:.\Generated_Source\PSoC5/UART_ACS.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART_ACS.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART_ACS.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 476:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART_ACS.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART_ACS.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART_ACS.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 484:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 UART_ACS_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 519              		.loc 1 486 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 8
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 83B0     		sub	sp, sp, #12
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART_ACS.c **** 
 489:.\Generated_Source\PSoC5/UART_ACS.c ****         status = UART_ACS_RXSTATUS_REG & UART_ACS_RX_HW_MASK;
 531              		.loc 1 489 0
 532 0006 0C4B     		ldr	r3, .L36
 533 0008 1B78     		ldrb	r3, [r3]
 534 000a DBB2     		uxtb	r3, r3
 535 000c 03F07F03 		and	r3, r3, #127
 536 0010 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 19


 490:.\Generated_Source\PSoC5/UART_ACS.c **** 
 491:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART_ACS.c ****         if(UART_ACS_rxBufferOverflow != 0u)
 537              		.loc 1 492 0
 538 0012 0A4B     		ldr	r3, .L36+4
 539 0014 1B78     		ldrb	r3, [r3]
 540 0016 DBB2     		uxtb	r3, r3
 541 0018 002B     		cmp	r3, #0
 542 001a 06D0     		beq	.L34
 493:.\Generated_Source\PSoC5/UART_ACS.c ****         {
 494:.\Generated_Source\PSoC5/UART_ACS.c ****             status |= UART_ACS_RX_STS_SOFT_BUFF_OVER;
 543              		.loc 1 494 0
 544 001c FB79     		ldrb	r3, [r7, #7]
 545 001e 63F07F03 		orn	r3, r3, #127
 546 0022 FB71     		strb	r3, [r7, #7]
 495:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_rxBufferOverflow = 0u;
 547              		.loc 1 495 0
 548 0024 054B     		ldr	r3, .L36+4
 549 0026 0022     		movs	r2, #0
 550 0028 1A70     		strb	r2, [r3]
 551              	.L34:
 496:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 497:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART_ACS.c **** 
 499:.\Generated_Source\PSoC5/UART_ACS.c ****         return(status);
 552              		.loc 1 499 0
 553 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 554              		.loc 1 500 0
 555 002c 1846     		mov	r0, r3
 556 002e 0C37     		adds	r7, r7, #12
 557              		.cfi_def_cfa_offset 4
 558 0030 BD46     		mov	sp, r7
 559              		.cfi_def_cfa_register 13
 560              		@ sp needed
 561 0032 5DF8047B 		ldr	r7, [sp], #4
 562              		.cfi_restore 7
 563              		.cfi_def_cfa_offset 0
 564 0036 7047     		bx	lr
 565              	.L37:
 566              		.align	2
 567              	.L36:
 568 0038 66640040 		.word	1073767526
 569 003c 00000000 		.word	UART_ACS_rxBufferOverflow
 570              		.cfi_endproc
 571              	.LFE8:
 572              		.size	UART_ACS_ReadRxStatus, .-UART_ACS_ReadRxStatus
 573              		.section	.text.UART_ACS_GetChar,"ax",%progbits
 574              		.align	2
 575              		.global	UART_ACS_GetChar
 576              		.thumb
 577              		.thumb_func
 578              		.type	UART_ACS_GetChar, %function
 579              	UART_ACS_GetChar:
 580              	.LFB9:
 501:.\Generated_Source\PSoC5/UART_ACS.c **** 
 502:.\Generated_Source\PSoC5/UART_ACS.c **** 
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 20


 503:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_GetChar
 505:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 507:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Returns the last received byte of data. UART_ACS_GetChar() is
 509:.\Generated_Source\PSoC5/UART_ACS.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART_ACS.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 512:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 515:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART_ACS.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 519:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART_ACS.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART_ACS.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART_ACS.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 528:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 531:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 UART_ACS_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 581              		.loc 1 533 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 8
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586 0000 80B4     		push	{r7}
 587              		.cfi_def_cfa_offset 4
 588              		.cfi_offset 7, -4
 589 0002 83B0     		sub	sp, sp, #12
 590              		.cfi_def_cfa_offset 16
 591 0004 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 rxData = 0u;
 593              		.loc 1 534 0
 594 0006 0023     		movs	r3, #0
 595 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART_ACS.c **** 
 537:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART_ACS.c ****         uint16 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART_ACS.c ****         uint16 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART_ACS.c **** 
 541:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_DisableRxInt();
 596              		.loc 1 542 0
 597 000a 234B     		ldr	r3, .L45
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 21


 598 000c 0122     		movs	r2, #1
 599 000e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/UART_ACS.c **** 
 544:.\Generated_Source\PSoC5/UART_ACS.c ****         locRxBufferRead  = UART_ACS_rxBufferRead;
 600              		.loc 1 544 0
 601 0010 224B     		ldr	r3, .L45+4
 602 0012 1B88     		ldrh	r3, [r3]	@ movhi
 603 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 545:.\Generated_Source\PSoC5/UART_ACS.c ****         locRxBufferWrite = UART_ACS_rxBufferWrite;
 604              		.loc 1 545 0
 605 0016 224B     		ldr	r3, .L45+8
 606 0018 1B88     		ldrh	r3, [r3]	@ movhi
 607 001a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:.\Generated_Source\PSoC5/UART_ACS.c **** 
 547:.\Generated_Source\PSoC5/UART_ACS.c ****         if( (UART_ACS_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 608              		.loc 1 547 0
 609 001c 214B     		ldr	r3, .L45+12
 610 001e 1B78     		ldrb	r3, [r3]
 611 0020 DBB2     		uxtb	r3, r3
 612 0022 002B     		cmp	r3, #0
 613 0024 03D1     		bne	.L39
 614              		.loc 1 547 0 is_stmt 0 discriminator 1
 615 0026 BA88     		ldrh	r2, [r7, #4]
 616 0028 7B88     		ldrh	r3, [r7, #2]
 617 002a 9A42     		cmp	r2, r3
 618 002c 18D0     		beq	.L40
 619              	.L39:
 548:.\Generated_Source\PSoC5/UART_ACS.c ****         {
 549:.\Generated_Source\PSoC5/UART_ACS.c ****             rxData = UART_ACS_rxBuffer[locRxBufferRead];
 620              		.loc 1 549 0 is_stmt 1
 621 002e BB88     		ldrh	r3, [r7, #4]
 622 0030 1D4A     		ldr	r2, .L45+16
 623 0032 D35C     		ldrb	r3, [r2, r3]
 624 0034 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/UART_ACS.c ****             locRxBufferRead++;
 625              		.loc 1 550 0
 626 0036 BB88     		ldrh	r3, [r7, #4]
 627 0038 0133     		adds	r3, r3, #1
 628 003a BB80     		strh	r3, [r7, #4]	@ movhi
 551:.\Generated_Source\PSoC5/UART_ACS.c ****             if(locRxBufferRead >= UART_ACS_RX_BUFFER_SIZE)
 629              		.loc 1 551 0
 630 003c BB88     		ldrh	r3, [r7, #4]
 631 003e FF2B     		cmp	r3, #255
 632 0040 01D9     		bls	.L41
 552:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 553:.\Generated_Source\PSoC5/UART_ACS.c ****                 locRxBufferRead = 0u;
 633              		.loc 1 553 0
 634 0042 0023     		movs	r3, #0
 635 0044 BB80     		strh	r3, [r7, #4]	@ movhi
 636              	.L41:
 554:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 555:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_rxBufferRead = locRxBufferRead;
 637              		.loc 1 556 0
 638 0046 154A     		ldr	r2, .L45+4
 639 0048 BB88     		ldrh	r3, [r7, #4]	@ movhi
 640 004a 1380     		strh	r3, [r2]	@ movhi
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 22


 557:.\Generated_Source\PSoC5/UART_ACS.c **** 
 558:.\Generated_Source\PSoC5/UART_ACS.c ****             if(UART_ACS_rxBufferLoopDetect != 0u)
 641              		.loc 1 558 0
 642 004c 154B     		ldr	r3, .L45+12
 643 004e 1B78     		ldrb	r3, [r3]
 644 0050 DBB2     		uxtb	r3, r3
 645 0052 002B     		cmp	r3, #0
 646 0054 03D0     		beq	.L42
 559:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 560:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_rxBufferLoopDetect = 0u;
 647              		.loc 1 560 0
 648 0056 134B     		ldr	r3, .L45+12
 649 0058 0022     		movs	r2, #0
 650 005a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 651              		.loc 1 558 0
 652 005c 12E0     		b	.L43
 653              	.L42:
 654 005e 11E0     		b	.L43
 655              	.L40:
 561:.\Generated_Source\PSoC5/UART_ACS.c ****                 #if( (UART_ACS_RX_INTERRUPT_ENABLED) && (UART_ACS_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART_ACS.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART_ACS.c ****                     #if( UART_ACS_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART_ACS.c ****                         if((UART_ACS_CONTROL_REG & UART_ACS_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART_ACS.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART_ACS.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART_ACS.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART_ACS.c ****                             */
 569:.\Generated_Source\PSoC5/UART_ACS.c ****                             UART_ACS_RXSTATUS_MASK_REG |= UART_ACS_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART_ACS.c ****                         }
 571:.\Generated_Source\PSoC5/UART_ACS.c ****                     #else
 572:.\Generated_Source\PSoC5/UART_ACS.c ****                         UART_ACS_RXSTATUS_MASK_REG |= UART_ACS_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART_ACS.c ****                     #endif /* end UART_ACS_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART_ACS.c ****                 #endif /* UART_ACS_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 576:.\Generated_Source\PSoC5/UART_ACS.c **** 
 577:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 578:.\Generated_Source\PSoC5/UART_ACS.c ****         else
 579:.\Generated_Source\PSoC5/UART_ACS.c ****         {   rxStatus = UART_ACS_RXSTATUS_REG;
 656              		.loc 1 579 0
 657 0060 124B     		ldr	r3, .L45+20
 658 0062 1B78     		ldrb	r3, [r3]
 659 0064 7B70     		strb	r3, [r7, #1]
 580:.\Generated_Source\PSoC5/UART_ACS.c ****             if((rxStatus & UART_ACS_RX_STS_FIFO_NOTEMPTY) != 0u)
 660              		.loc 1 580 0
 661 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 662 0068 03F02003 		and	r3, r3, #32
 663 006c 002B     		cmp	r3, #0
 664 006e 09D0     		beq	.L43
 581:.\Generated_Source\PSoC5/UART_ACS.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART_ACS.c ****                 rxData = UART_ACS_RXDATA_REG;
 665              		.loc 1 582 0
 666 0070 0F4B     		ldr	r3, .L45+24
 667 0072 1B78     		ldrb	r3, [r3]
 668 0074 FB71     		strb	r3, [r7, #7]
 583:.\Generated_Source\PSoC5/UART_ACS.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART_ACS.c ****                 if((rxStatus & (UART_ACS_RX_STS_BREAK | UART_ACS_RX_STS_PAR_ERROR |
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 23


 585:.\Generated_Source\PSoC5/UART_ACS.c ****                                 UART_ACS_RX_STS_STOP_ERROR | UART_ACS_RX_STS_OVERRUN)) != 0u)
 669              		.loc 1 585 0
 670 0076 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 671 0078 03F01E03 		and	r3, r3, #30
 584:.\Generated_Source\PSoC5/UART_ACS.c ****                                 UART_ACS_RX_STS_STOP_ERROR | UART_ACS_RX_STS_OVERRUN)) != 0u)
 672              		.loc 1 584 0
 673 007c 002B     		cmp	r3, #0
 674 007e 01D0     		beq	.L43
 586:.\Generated_Source\PSoC5/UART_ACS.c ****                 {
 587:.\Generated_Source\PSoC5/UART_ACS.c ****                     rxData = 0u;
 675              		.loc 1 587 0
 676 0080 0023     		movs	r3, #0
 677 0082 FB71     		strb	r3, [r7, #7]
 678              	.L43:
 588:.\Generated_Source\PSoC5/UART_ACS.c ****                 }
 589:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 590:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 591:.\Generated_Source\PSoC5/UART_ACS.c **** 
 592:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_EnableRxInt();
 679              		.loc 1 592 0
 680 0084 0B4B     		ldr	r3, .L45+28
 681 0086 0122     		movs	r2, #1
 682 0088 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/UART_ACS.c **** 
 594:.\Generated_Source\PSoC5/UART_ACS.c ****     #else
 595:.\Generated_Source\PSoC5/UART_ACS.c **** 
 596:.\Generated_Source\PSoC5/UART_ACS.c ****         rxStatus =UART_ACS_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/UART_ACS.c ****         if((rxStatus & UART_ACS_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/UART_ACS.c ****         {
 599:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART_ACS.c ****             rxData = UART_ACS_RXDATA_REG;
 601:.\Generated_Source\PSoC5/UART_ACS.c **** 
 602:.\Generated_Source\PSoC5/UART_ACS.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART_ACS.c ****             if((rxStatus & (UART_ACS_RX_STS_BREAK | UART_ACS_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART_ACS.c ****                             UART_ACS_RX_STS_STOP_ERROR | UART_ACS_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 606:.\Generated_Source\PSoC5/UART_ACS.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 608:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 609:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART_ACS.c **** 
 611:.\Generated_Source\PSoC5/UART_ACS.c ****         return(rxData);
 683              		.loc 1 611 0
 684 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 685              		.loc 1 612 0
 686 008c 1846     		mov	r0, r3
 687 008e 0C37     		adds	r7, r7, #12
 688              		.cfi_def_cfa_offset 4
 689 0090 BD46     		mov	sp, r7
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
 692 0092 5DF8047B 		ldr	r7, [sp], #4
 693              		.cfi_restore 7
 694              		.cfi_def_cfa_offset 0
 695 0096 7047     		bx	lr
 696              	.L46:
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 24


 697              		.align	2
 698              	.L45:
 699 0098 80E100E0 		.word	-536813184
 700 009c 00000000 		.word	UART_ACS_rxBufferRead
 701 00a0 00000000 		.word	UART_ACS_rxBufferWrite
 702 00a4 00000000 		.word	UART_ACS_rxBufferLoopDetect
 703 00a8 00000000 		.word	UART_ACS_rxBuffer
 704 00ac 66640040 		.word	1073767526
 705 00b0 46640040 		.word	1073767494
 706 00b4 00E100E0 		.word	-536813312
 707              		.cfi_endproc
 708              	.LFE9:
 709              		.size	UART_ACS_GetChar, .-UART_ACS_GetChar
 710              		.section	.text.UART_ACS_GetByte,"ax",%progbits
 711              		.align	2
 712              		.global	UART_ACS_GetByte
 713              		.thumb
 714              		.thumb_func
 715              		.type	UART_ACS_GetByte, %function
 716              	UART_ACS_GetByte:
 717              	.LFB10:
 613:.\Generated_Source\PSoC5/UART_ACS.c **** 
 614:.\Generated_Source\PSoC5/UART_ACS.c **** 
 615:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_GetByte
 617:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 619:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART_ACS.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 623:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 626:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART_ACS.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART_ACS.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 630:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 633:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART_ACS.c ****     uint16 UART_ACS_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 718              		.loc 1 635 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 90B5     		push	{r4, r7, lr}
 723              		.cfi_def_cfa_offset 12
 724              		.cfi_offset 4, -12
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 83B0     		sub	sp, sp, #12
 728              		.cfi_def_cfa_offset 24
 729 0004 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 25


 636:.\Generated_Source\PSoC5/UART_ACS.c ****         
 637:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART_ACS.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_DisableRxInt();
 731              		.loc 1 640 0
 732 0006 0C4B     		ldr	r3, .L49
 733 0008 0122     		movs	r2, #1
 734 000a 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC5/UART_ACS.c ****         locErrorStatus = (uint16)UART_ACS_errorStatus;
 735              		.loc 1 641 0
 736 000c 0B4B     		ldr	r3, .L49+4
 737 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_errorStatus = 0u;
 739              		.loc 1 642 0
 740 0012 0A4B     		ldr	r3, .L49+4
 741 0014 0022     		movs	r2, #0
 742 0016 1A70     		strb	r2, [r3]
 643:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_EnableRxInt();
 743              		.loc 1 643 0
 744 0018 094B     		ldr	r3, .L49+8
 745 001a 0122     		movs	r2, #1
 746 001c 1A60     		str	r2, [r3]
 644:.\Generated_Source\PSoC5/UART_ACS.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ACS_ReadRxData() );
 747              		.loc 1 644 0
 748 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 749 0020 1B02     		lsls	r3, r3, #8
 750 0022 9CB2     		uxth	r4, r3
 751 0024 FFF7FEFF 		bl	UART_ACS_ReadRxData
 752 0028 0346     		mov	r3, r0
 753 002a 9BB2     		uxth	r3, r3
 754 002c 2343     		orrs	r3, r3, r4
 755 002e 9BB2     		uxth	r3, r3
 645:.\Generated_Source\PSoC5/UART_ACS.c ****     #else
 646:.\Generated_Source\PSoC5/UART_ACS.c ****         return ( ((uint16)UART_ACS_ReadRxStatus() << 8u) | UART_ACS_ReadRxData() );
 647:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* UART_ACS_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART_ACS.c ****         
 649:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 756              		.loc 1 649 0
 757 0030 1846     		mov	r0, r3
 758 0032 0C37     		adds	r7, r7, #12
 759              		.cfi_def_cfa_offset 12
 760 0034 BD46     		mov	sp, r7
 761              		.cfi_def_cfa_register 13
 762              		@ sp needed
 763 0036 90BD     		pop	{r4, r7, pc}
 764              	.L50:
 765              		.align	2
 766              	.L49:
 767 0038 80E100E0 		.word	-536813184
 768 003c 00000000 		.word	UART_ACS_errorStatus
 769 0040 00E100E0 		.word	-536813312
 770              		.cfi_endproc
 771              	.LFE10:
 772              		.size	UART_ACS_GetByte, .-UART_ACS_GetByte
 773              		.section	.text.UART_ACS_GetRxBufferSize,"ax",%progbits
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 26


 774              		.align	2
 775              		.global	UART_ACS_GetRxBufferSize
 776              		.thumb
 777              		.thumb_func
 778              		.type	UART_ACS_GetRxBufferSize, %function
 779              	UART_ACS_GetRxBufferSize:
 780              	.LFB11:
 650:.\Generated_Source\PSoC5/UART_ACS.c **** 
 651:.\Generated_Source\PSoC5/UART_ACS.c **** 
 652:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 656:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART_ACS.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART_ACS.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART_ACS.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART_ACS.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART_ACS.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 664:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 667:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART_ACS.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART_ACS.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 671:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 676:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 679:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 682:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART_ACS.c ****     uint16 UART_ACS_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART_ACS.c ****                                                             
 685:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 781              		.loc 1 685 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 786 0000 80B4     		push	{r7}
 787              		.cfi_def_cfa_offset 4
 788              		.cfi_offset 7, -4
 789 0002 83B0     		sub	sp, sp, #12
 790              		.cfi_def_cfa_offset 16
 791 0004 00AF     		add	r7, sp, #0
 792              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/UART_ACS.c ****         uint16 size;
 687:.\Generated_Source\PSoC5/UART_ACS.c **** 
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 27


 688:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART_ACS.c **** 
 690:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_DisableRxInt();
 793              		.loc 1 691 0
 794 0006 1E4B     		ldr	r3, .L58
 795 0008 0122     		movs	r2, #1
 796 000a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/UART_ACS.c **** 
 693:.\Generated_Source\PSoC5/UART_ACS.c ****         if(UART_ACS_rxBufferRead == UART_ACS_rxBufferWrite)
 797              		.loc 1 693 0
 798 000c 1D4B     		ldr	r3, .L58+4
 799 000e 1B88     		ldrh	r3, [r3]	@ movhi
 800 0010 9AB2     		uxth	r2, r3
 801 0012 1D4B     		ldr	r3, .L58+8
 802 0014 1B88     		ldrh	r3, [r3]	@ movhi
 803 0016 9BB2     		uxth	r3, r3
 804 0018 9A42     		cmp	r2, r3
 805 001a 0BD1     		bne	.L52
 694:.\Generated_Source\PSoC5/UART_ACS.c ****         {
 695:.\Generated_Source\PSoC5/UART_ACS.c ****             if(UART_ACS_rxBufferLoopDetect != 0u)
 806              		.loc 1 695 0
 807 001c 1B4B     		ldr	r3, .L58+12
 808 001e 1B78     		ldrb	r3, [r3]
 809 0020 DBB2     		uxtb	r3, r3
 810 0022 002B     		cmp	r3, #0
 811 0024 03D0     		beq	.L53
 696:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 697:.\Generated_Source\PSoC5/UART_ACS.c ****                 size = UART_ACS_RX_BUFFER_SIZE;
 812              		.loc 1 697 0
 813 0026 4FF48073 		mov	r3, #256
 814 002a FB80     		strh	r3, [r7, #6]	@ movhi
 815 002c 1EE0     		b	.L55
 816              	.L53:
 698:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 699:.\Generated_Source\PSoC5/UART_ACS.c ****             else
 700:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 701:.\Generated_Source\PSoC5/UART_ACS.c ****                 size = 0u;
 817              		.loc 1 701 0
 818 002e 0023     		movs	r3, #0
 819 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 820 0032 1BE0     		b	.L55
 821              	.L52:
 702:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 703:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 704:.\Generated_Source\PSoC5/UART_ACS.c ****         else if(UART_ACS_rxBufferRead < UART_ACS_rxBufferWrite)
 822              		.loc 1 704 0
 823 0034 134B     		ldr	r3, .L58+4
 824 0036 1B88     		ldrh	r3, [r3]	@ movhi
 825 0038 9AB2     		uxth	r2, r3
 826 003a 134B     		ldr	r3, .L58+8
 827 003c 1B88     		ldrh	r3, [r3]	@ movhi
 828 003e 9BB2     		uxth	r3, r3
 829 0040 9A42     		cmp	r2, r3
 830 0042 08D2     		bcs	.L56
 705:.\Generated_Source\PSoC5/UART_ACS.c ****         {
 706:.\Generated_Source\PSoC5/UART_ACS.c ****             size = (UART_ACS_rxBufferWrite - UART_ACS_rxBufferRead);
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 28


 831              		.loc 1 706 0
 832 0044 104B     		ldr	r3, .L58+8
 833 0046 1B88     		ldrh	r3, [r3]	@ movhi
 834 0048 9AB2     		uxth	r2, r3
 835 004a 0E4B     		ldr	r3, .L58+4
 836 004c 1B88     		ldrh	r3, [r3]	@ movhi
 837 004e 9BB2     		uxth	r3, r3
 838 0050 D31A     		subs	r3, r2, r3
 839 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 840 0054 0AE0     		b	.L55
 841              	.L56:
 707:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 708:.\Generated_Source\PSoC5/UART_ACS.c ****         else
 709:.\Generated_Source\PSoC5/UART_ACS.c ****         {
 710:.\Generated_Source\PSoC5/UART_ACS.c ****             size = (UART_ACS_RX_BUFFER_SIZE - UART_ACS_rxBufferRead) + UART_ACS_rxBufferWrite;
 842              		.loc 1 710 0
 843 0056 0C4B     		ldr	r3, .L58+8
 844 0058 1B88     		ldrh	r3, [r3]	@ movhi
 845 005a 9AB2     		uxth	r2, r3
 846 005c 094B     		ldr	r3, .L58+4
 847 005e 1B88     		ldrh	r3, [r3]	@ movhi
 848 0060 9BB2     		uxth	r3, r3
 849 0062 D31A     		subs	r3, r2, r3
 850 0064 9BB2     		uxth	r3, r3
 851 0066 03F58073 		add	r3, r3, #256
 852 006a FB80     		strh	r3, [r7, #6]	@ movhi
 853              	.L55:
 711:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 712:.\Generated_Source\PSoC5/UART_ACS.c **** 
 713:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_EnableRxInt();
 854              		.loc 1 713 0
 855 006c 084B     		ldr	r3, .L58+16
 856 006e 0122     		movs	r2, #1
 857 0070 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/UART_ACS.c **** 
 715:.\Generated_Source\PSoC5/UART_ACS.c ****     #else
 716:.\Generated_Source\PSoC5/UART_ACS.c **** 
 717:.\Generated_Source\PSoC5/UART_ACS.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART_ACS.c ****         size = ((UART_ACS_RXSTATUS_REG & UART_ACS_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/UART_ACS.c **** 
 720:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART_ACS.c **** 
 722:.\Generated_Source\PSoC5/UART_ACS.c ****         return(size);
 858              		.loc 1 722 0
 859 0072 FB88     		ldrh	r3, [r7, #6]
 723:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 860              		.loc 1 723 0
 861 0074 1846     		mov	r0, r3
 862 0076 0C37     		adds	r7, r7, #12
 863              		.cfi_def_cfa_offset 4
 864 0078 BD46     		mov	sp, r7
 865              		.cfi_def_cfa_register 13
 866              		@ sp needed
 867 007a 5DF8047B 		ldr	r7, [sp], #4
 868              		.cfi_restore 7
 869              		.cfi_def_cfa_offset 0
 870 007e 7047     		bx	lr
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 29


 871              	.L59:
 872              		.align	2
 873              	.L58:
 874 0080 80E100E0 		.word	-536813184
 875 0084 00000000 		.word	UART_ACS_rxBufferRead
 876 0088 00000000 		.word	UART_ACS_rxBufferWrite
 877 008c 00000000 		.word	UART_ACS_rxBufferLoopDetect
 878 0090 00E100E0 		.word	-536813312
 879              		.cfi_endproc
 880              	.LFE11:
 881              		.size	UART_ACS_GetRxBufferSize, .-UART_ACS_GetRxBufferSize
 882              		.section	.text.UART_ACS_ClearRxBuffer,"ax",%progbits
 883              		.align	2
 884              		.global	UART_ACS_ClearRxBuffer
 885              		.thumb
 886              		.thumb_func
 887              		.type	UART_ACS_ClearRxBuffer, %function
 888              	UART_ACS_ClearRxBuffer:
 889              	.LFB12:
 724:.\Generated_Source\PSoC5/UART_ACS.c **** 
 725:.\Generated_Source\PSoC5/UART_ACS.c **** 
 726:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 730:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 733:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 736:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 739:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 745:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 748:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART_ACS.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART_ACS.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 753:.\Generated_Source\PSoC5/UART_ACS.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 756:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 890              		.loc 1 758 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 30


 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART_ACS.c **** 
 761:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART_ACS.c ****         enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 762 0
 903 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 904 000a 0346     		mov	r3, r0
 905 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXDATA_AUX_CTL_REG |= (uint8)  UART_ACS_RX_FIFO_CLR;
 906              		.loc 1 763 0
 907 000e 144A     		ldr	r2, .L61
 908 0010 134B     		ldr	r3, .L61
 909 0012 1B78     		ldrb	r3, [r3]
 910 0014 DBB2     		uxtb	r3, r3
 911 0016 43F00103 		orr	r3, r3, #1
 912 001a DBB2     		uxtb	r3, r3
 913 001c 1370     		strb	r3, [r2]
 764:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXDATA_AUX_CTL_REG &= (uint8) ~UART_ACS_RX_FIFO_CLR;
 914              		.loc 1 764 0
 915 001e 104A     		ldr	r2, .L61
 916 0020 0F4B     		ldr	r3, .L61
 917 0022 1B78     		ldrb	r3, [r3]
 918 0024 DBB2     		uxtb	r3, r3
 919 0026 23F00103 		bic	r3, r3, #1
 920 002a DBB2     		uxtb	r3, r3
 921 002c 1370     		strb	r3, [r2]
 765:.\Generated_Source\PSoC5/UART_ACS.c ****         CyExitCriticalSection(enableInterrupts);
 922              		.loc 1 765 0
 923 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 924 0030 1846     		mov	r0, r3
 925 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/UART_ACS.c **** 
 767:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART_ACS.c **** 
 769:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_DisableRxInt();
 926              		.loc 1 770 0
 927 0036 0B4B     		ldr	r3, .L61+4
 928 0038 0122     		movs	r2, #1
 929 003a 1A60     		str	r2, [r3]
 771:.\Generated_Source\PSoC5/UART_ACS.c **** 
 772:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_rxBufferRead = 0u;
 930              		.loc 1 772 0
 931 003c 0A4B     		ldr	r3, .L61+8
 932 003e 0022     		movs	r2, #0
 933 0040 1A80     		strh	r2, [r3]	@ movhi
 773:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_rxBufferWrite = 0u;
 934              		.loc 1 773 0
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 31


 935 0042 0A4B     		ldr	r3, .L61+12
 936 0044 0022     		movs	r2, #0
 937 0046 1A80     		strh	r2, [r3]	@ movhi
 774:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_rxBufferLoopDetect = 0u;
 938              		.loc 1 774 0
 939 0048 094B     		ldr	r3, .L61+16
 940 004a 0022     		movs	r2, #0
 941 004c 1A70     		strb	r2, [r3]
 775:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_rxBufferOverflow = 0u;
 942              		.loc 1 775 0
 943 004e 094B     		ldr	r3, .L61+20
 944 0050 0022     		movs	r2, #0
 945 0052 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC5/UART_ACS.c **** 
 777:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_EnableRxInt();
 946              		.loc 1 777 0
 947 0054 084B     		ldr	r3, .L61+24
 948 0056 0122     		movs	r2, #1
 949 0058 1A60     		str	r2, [r3]
 778:.\Generated_Source\PSoC5/UART_ACS.c **** 
 779:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART_ACS.c **** 
 781:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 950              		.loc 1 781 0
 951 005a 0837     		adds	r7, r7, #8
 952              		.cfi_def_cfa_offset 8
 953 005c BD46     		mov	sp, r7
 954              		.cfi_def_cfa_register 13
 955              		@ sp needed
 956 005e 80BD     		pop	{r7, pc}
 957              	.L62:
 958              		.align	2
 959              	.L61:
 960 0060 96640040 		.word	1073767574
 961 0064 80E100E0 		.word	-536813184
 962 0068 00000000 		.word	UART_ACS_rxBufferRead
 963 006c 00000000 		.word	UART_ACS_rxBufferWrite
 964 0070 00000000 		.word	UART_ACS_rxBufferLoopDetect
 965 0074 00000000 		.word	UART_ACS_rxBufferOverflow
 966 0078 00E100E0 		.word	-536813312
 967              		.cfi_endproc
 968              	.LFE12:
 969              		.size	UART_ACS_ClearRxBuffer, .-UART_ACS_ClearRxBuffer
 970              		.section	.text.UART_ACS_SetRxAddressMode,"ax",%progbits
 971              		.align	2
 972              		.global	UART_ACS_SetRxAddressMode
 973              		.thumb
 974              		.thumb_func
 975              		.type	UART_ACS_SetRxAddressMode, %function
 976              	UART_ACS_SetRxAddressMode:
 977              	.LFB13:
 782:.\Generated_Source\PSoC5/UART_ACS.c **** 
 783:.\Generated_Source\PSoC5/UART_ACS.c **** 
 784:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART_ACS.c ****     *
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 32


 788:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 792:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART_ACS.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART_ACS.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART_ACS.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART_ACS.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART_ACS.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 804:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 807:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART_ACS.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 812:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART_ACS.c ****                                                         
 815:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 978              		.loc 1 815 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 8
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983 0000 80B4     		push	{r7}
 984              		.cfi_def_cfa_offset 4
 985              		.cfi_offset 7, -4
 986 0002 83B0     		sub	sp, sp, #12
 987              		.cfi_def_cfa_offset 16
 988 0004 00AF     		add	r7, sp, #0
 989              		.cfi_def_cfa_register 7
 990 0006 0346     		mov	r3, r0
 991 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/UART_ACS.c ****         #if(UART_ACS_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART_ACS.c ****             #if(UART_ACS_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART_ACS.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART_ACS.c ****                 {
 820:.\Generated_Source\PSoC5/UART_ACS.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART_ACS.c ****                 }
 822:.\Generated_Source\PSoC5/UART_ACS.c ****             #else /* UART_ACS_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART_ACS.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART_ACS.c ****                 tmpCtrl = UART_ACS_CONTROL_REG & (uint8)~UART_ACS_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART_ACS.c ****                 tmpCtrl |= (uint8)(addressMode << UART_ACS_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART_ACS.c **** 
 828:.\Generated_Source\PSoC5/UART_ACS.c ****                 #if(UART_ACS_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART_ACS.c ****                    (UART_ACS_RXBUFFERSIZE > UART_ACS_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART_ACS.c ****                     UART_ACS_rxAddressMode = addressMode;
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 33


 831:.\Generated_Source\PSoC5/UART_ACS.c ****                     UART_ACS_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART_ACS.c ****                 #endif /* End UART_ACS_RXBUFFERSIZE > UART_ACS_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART_ACS.c ****             #endif /* End UART_ACS_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART_ACS.c ****         #else /* UART_ACS_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART_ACS.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 837:.\Generated_Source\PSoC5/UART_ACS.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 839:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* End UART_ACS_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 992              		.loc 1 840 0
 993 000a 0C37     		adds	r7, r7, #12
 994              		.cfi_def_cfa_offset 4
 995 000c BD46     		mov	sp, r7
 996              		.cfi_def_cfa_register 13
 997              		@ sp needed
 998 000e 5DF8047B 		ldr	r7, [sp], #4
 999              		.cfi_restore 7
 1000              		.cfi_def_cfa_offset 0
 1001 0012 7047     		bx	lr
 1002              		.cfi_endproc
 1003              	.LFE13:
 1004              		.size	UART_ACS_SetRxAddressMode, .-UART_ACS_SetRxAddressMode
 1005              		.section	.text.UART_ACS_SetRxAddress1,"ax",%progbits
 1006              		.align	2
 1007              		.global	UART_ACS_SetRxAddress1
 1008              		.thumb
 1009              		.thumb_func
 1010              		.type	UART_ACS_SetRxAddress1, %function
 1011              	UART_ACS_SetRxAddress1:
 1012              	.LFB14:
 841:.\Generated_Source\PSoC5/UART_ACS.c **** 
 842:.\Generated_Source\PSoC5/UART_ACS.c **** 
 843:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 847:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 850:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART_ACS.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 853:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 856:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1013              		.loc 1 858 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 8
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017              		@ link register save eliminated.
 1018 0000 80B4     		push	{r7}
 1019              		.cfi_def_cfa_offset 4
 1020              		.cfi_offset 7, -4
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 34


 1021 0002 83B0     		sub	sp, sp, #12
 1022              		.cfi_def_cfa_offset 16
 1023 0004 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 1025 0006 0346     		mov	r3, r0
 1026 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXADDRESS1_REG = address;
 1027              		.loc 1 859 0
 1028 000a 044A     		ldr	r2, .L65
 1029 000c FB79     		ldrb	r3, [r7, #7]
 1030 000e 1370     		strb	r3, [r2]
 860:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1031              		.loc 1 860 0
 1032 0010 0C37     		adds	r7, r7, #12
 1033              		.cfi_def_cfa_offset 4
 1034 0012 BD46     		mov	sp, r7
 1035              		.cfi_def_cfa_register 13
 1036              		@ sp needed
 1037 0014 5DF8047B 		ldr	r7, [sp], #4
 1038              		.cfi_restore 7
 1039              		.cfi_def_cfa_offset 0
 1040 0018 7047     		bx	lr
 1041              	.L66:
 1042 001a 00BF     		.align	2
 1043              	.L65:
 1044 001c 26640040 		.word	1073767462
 1045              		.cfi_endproc
 1046              	.LFE14:
 1047              		.size	UART_ACS_SetRxAddress1, .-UART_ACS_SetRxAddress1
 1048              		.section	.text.UART_ACS_SetRxAddress2,"ax",%progbits
 1049              		.align	2
 1050              		.global	UART_ACS_SetRxAddress2
 1051              		.thumb
 1052              		.thumb_func
 1053              		.type	UART_ACS_SetRxAddress2, %function
 1054              	UART_ACS_SetRxAddress2:
 1055              	.LFB15:
 861:.\Generated_Source\PSoC5/UART_ACS.c **** 
 862:.\Generated_Source\PSoC5/UART_ACS.c **** 
 863:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 867:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 870:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART_ACS.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 873:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 876:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1056              		.loc 1 878 0
 1057              		.cfi_startproc
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 35


 1058              		@ args = 0, pretend = 0, frame = 8
 1059              		@ frame_needed = 1, uses_anonymous_args = 0
 1060              		@ link register save eliminated.
 1061 0000 80B4     		push	{r7}
 1062              		.cfi_def_cfa_offset 4
 1063              		.cfi_offset 7, -4
 1064 0002 83B0     		sub	sp, sp, #12
 1065              		.cfi_def_cfa_offset 16
 1066 0004 00AF     		add	r7, sp, #0
 1067              		.cfi_def_cfa_register 7
 1068 0006 0346     		mov	r3, r0
 1069 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXADDRESS2_REG = address;
 1070              		.loc 1 879 0
 1071 000a 044A     		ldr	r2, .L68
 1072 000c FB79     		ldrb	r3, [r7, #7]
 1073 000e 1370     		strb	r3, [r2]
 880:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1074              		.loc 1 880 0
 1075 0010 0C37     		adds	r7, r7, #12
 1076              		.cfi_def_cfa_offset 4
 1077 0012 BD46     		mov	sp, r7
 1078              		.cfi_def_cfa_register 13
 1079              		@ sp needed
 1080 0014 5DF8047B 		ldr	r7, [sp], #4
 1081              		.cfi_restore 7
 1082              		.cfi_def_cfa_offset 0
 1083 0018 7047     		bx	lr
 1084              	.L69:
 1085 001a 00BF     		.align	2
 1086              	.L68:
 1087 001c 36640040 		.word	1073767478
 1088              		.cfi_endproc
 1089              	.LFE15:
 1090              		.size	UART_ACS_SetRxAddress2, .-UART_ACS_SetRxAddress2
 1091              		.section	.text.UART_ACS_SetTxInterruptMode,"ax",%progbits
 1092              		.align	2
 1093              		.global	UART_ACS_SetTxInterruptMode
 1094              		.thumb
 1095              		.thumb_func
 1096              		.type	UART_ACS_SetTxInterruptMode, %function
 1097              	UART_ACS_SetTxInterruptMode:
 1098              	.LFB16:
 881:.\Generated_Source\PSoC5/UART_ACS.c **** 
 882:.\Generated_Source\PSoC5/UART_ACS.c **** #endif  /* UART_ACS_RX_ENABLED || UART_ACS_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART_ACS.c **** 
 884:.\Generated_Source\PSoC5/UART_ACS.c **** 
 885:.\Generated_Source\PSoC5/UART_ACS.c **** #if( (UART_ACS_TX_ENABLED) || (UART_ACS_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 890:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART_ACS.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 894:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 36


 895:.\Generated_Source\PSoC5/UART_ACS.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 901:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 904:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 907:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1099              		.loc 1 909 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 8
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104 0000 80B4     		push	{r7}
 1105              		.cfi_def_cfa_offset 4
 1106              		.cfi_offset 7, -4
 1107 0002 83B0     		sub	sp, sp, #12
 1108              		.cfi_def_cfa_offset 16
 1109 0004 00AF     		add	r7, sp, #0
 1110              		.cfi_def_cfa_register 7
 1111 0006 0346     		mov	r3, r0
 1112 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_TXSTATUS_MASK_REG = intSrc;
 1113              		.loc 1 910 0
 1114 000a 044A     		ldr	r2, .L71
 1115 000c FB79     		ldrb	r3, [r7, #7]
 1116 000e 1370     		strb	r3, [r2]
 911:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1117              		.loc 1 911 0
 1118 0010 0C37     		adds	r7, r7, #12
 1119              		.cfi_def_cfa_offset 4
 1120 0012 BD46     		mov	sp, r7
 1121              		.cfi_def_cfa_register 13
 1122              		@ sp needed
 1123 0014 5DF8047B 		ldr	r7, [sp], #4
 1124              		.cfi_restore 7
 1125              		.cfi_def_cfa_offset 0
 1126 0018 7047     		bx	lr
 1127              	.L72:
 1128 001a 00BF     		.align	2
 1129              	.L71:
 1130 001c 86640040 		.word	1073767558
 1131              		.cfi_endproc
 1132              	.LFE16:
 1133              		.size	UART_ACS_SetTxInterruptMode, .-UART_ACS_SetTxInterruptMode
 1134              		.section	.text.UART_ACS_WriteTxData,"ax",%progbits
 1135              		.align	2
 1136              		.global	UART_ACS_WriteTxData
 1137              		.thumb
 1138              		.thumb_func
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 37


 1139              		.type	UART_ACS_WriteTxData, %function
 1140              	UART_ACS_WriteTxData:
 1141              	.LFB17:
 912:.\Generated_Source\PSoC5/UART_ACS.c **** 
 913:.\Generated_Source\PSoC5/UART_ACS.c **** 
 914:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_WriteTxData
 916:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 918:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART_ACS.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART_ACS.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 923:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART_ACS.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 926:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART_ACS.c ****     * None.
 928:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 929:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART_ACS.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART_ACS.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART_ACS.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 938:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 941:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1142              		.loc 1 943 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 8
 1145              		@ frame_needed = 1, uses_anonymous_args = 0
 1146              		@ link register save eliminated.
 1147 0000 80B4     		push	{r7}
 1148              		.cfi_def_cfa_offset 4
 1149              		.cfi_offset 7, -4
 1150 0002 83B0     		sub	sp, sp, #12
 1151              		.cfi_def_cfa_offset 16
 1152 0004 00AF     		add	r7, sp, #0
 1153              		.cfi_def_cfa_register 7
 1154 0006 0346     		mov	r3, r0
 1155 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/UART_ACS.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART_ACS.c ****         if(UART_ACS_initVar != 0u)
 1156              		.loc 1 945 0
 1157 000a 064B     		ldr	r3, .L75
 1158 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1159 000e 002B     		cmp	r3, #0
 1160 0010 02D0     		beq	.L73
 946:.\Generated_Source\PSoC5/UART_ACS.c ****         {
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 38


 947:.\Generated_Source\PSoC5/UART_ACS.c ****         #if (UART_ACS_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART_ACS.c **** 
 949:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART_ACS.c **** 
 952:.\Generated_Source\PSoC5/UART_ACS.c ****             if( (UART_ACS_txBufferRead == UART_ACS_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/UART_ACS.c ****                 ((UART_ACS_TXSTATUS_REG & UART_ACS_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 955:.\Generated_Source\PSoC5/UART_ACS.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 958:.\Generated_Source\PSoC5/UART_ACS.c ****             else
 959:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 960:.\Generated_Source\PSoC5/UART_ACS.c ****                 if(UART_ACS_txBufferWrite >= UART_ACS_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART_ACS.c ****                 {
 962:.\Generated_Source\PSoC5/UART_ACS.c ****                     UART_ACS_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART_ACS.c ****                 }
 964:.\Generated_Source\PSoC5/UART_ACS.c **** 
 965:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_txBuffer[UART_ACS_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART_ACS.c **** 
 967:.\Generated_Source\PSoC5/UART_ACS.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART_ACS.c ****             }
 970:.\Generated_Source\PSoC5/UART_ACS.c **** 
 971:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART_ACS.c **** 
 973:.\Generated_Source\PSoC5/UART_ACS.c ****         #else
 974:.\Generated_Source\PSoC5/UART_ACS.c **** 
 975:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXDATA_REG = txDataByte;
 1161              		.loc 1 976 0
 1162 0012 054A     		ldr	r2, .L75+4
 1163 0014 FB79     		ldrb	r3, [r7, #7]
 1164 0016 1370     		strb	r3, [r2]
 1165              	.L73:
 977:.\Generated_Source\PSoC5/UART_ACS.c **** 
 978:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /*(UART_ACS_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART_ACS.c ****         }
 980:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1166              		.loc 1 980 0
 1167 0018 0C37     		adds	r7, r7, #12
 1168              		.cfi_def_cfa_offset 4
 1169 001a BD46     		mov	sp, r7
 1170              		.cfi_def_cfa_register 13
 1171              		@ sp needed
 1172 001c 5DF8047B 		ldr	r7, [sp], #4
 1173              		.cfi_restore 7
 1174              		.cfi_def_cfa_offset 0
 1175 0020 7047     		bx	lr
 1176              	.L76:
 1177 0022 00BF     		.align	2
 1178              	.L75:
 1179 0024 00000000 		.word	UART_ACS_initVar
 1180 0028 56640040 		.word	1073767510
 1181              		.cfi_endproc
 1182              	.LFE17:
 1183              		.size	UART_ACS_WriteTxData, .-UART_ACS_WriteTxData
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 39


 1184              		.section	.text.UART_ACS_ReadTxStatus,"ax",%progbits
 1185              		.align	2
 1186              		.global	UART_ACS_ReadTxStatus
 1187              		.thumb
 1188              		.thumb_func
 1189              		.type	UART_ACS_ReadTxStatus, %function
 1190              	UART_ACS_ReadTxStatus:
 1191              	.LFB18:
 981:.\Generated_Source\PSoC5/UART_ACS.c **** 
 982:.\Generated_Source\PSoC5/UART_ACS.c **** 
 983:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 987:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 990:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 993:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART_ACS.c ****     *
 996:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART_ACS.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART_ACS.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART_ACS.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART_ACS.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1002:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 UART_ACS_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1192              		.loc 1 1004 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 1, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
 1197 0000 80B4     		push	{r7}
 1198              		.cfi_def_cfa_offset 4
 1199              		.cfi_offset 7, -4
 1200 0002 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/UART_ACS.c ****         return(UART_ACS_TXSTATUS_REG);
 1202              		.loc 1 1005 0
 1203 0004 034B     		ldr	r3, .L79
 1204 0006 1B78     		ldrb	r3, [r3]
 1205 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1206              		.loc 1 1006 0
 1207 000a 1846     		mov	r0, r3
 1208 000c BD46     		mov	sp, r7
 1209              		.cfi_def_cfa_register 13
 1210              		@ sp needed
 1211 000e 5DF8047B 		ldr	r7, [sp], #4
 1212              		.cfi_restore 7
 1213              		.cfi_def_cfa_offset 0
 1214 0012 7047     		bx	lr
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 40


 1215              	.L80:
 1216              		.align	2
 1217              	.L79:
 1218 0014 66640040 		.word	1073767526
 1219              		.cfi_endproc
 1220              	.LFE18:
 1221              		.size	UART_ACS_ReadTxStatus, .-UART_ACS_ReadTxStatus
 1222              		.section	.text.UART_ACS_PutChar,"ax",%progbits
 1223              		.align	2
 1224              		.global	UART_ACS_PutChar
 1225              		.thumb
 1226              		.thumb_func
 1227              		.type	UART_ACS_PutChar, %function
 1228              	UART_ACS_PutChar:
 1229              	.LFB19:
1007:.\Generated_Source\PSoC5/UART_ACS.c **** 
1008:.\Generated_Source\PSoC5/UART_ACS.c **** 
1009:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_PutChar
1011:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1013:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART_ACS.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART_ACS.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1018:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART_ACS.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1021:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1024:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART_ACS.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART_ACS.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART_ACS.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART_ACS.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1034:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1037:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1040:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1230              		.loc 1 1042 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 8
 1233              		@ frame_needed = 1, uses_anonymous_args = 0
 1234              		@ link register save eliminated.
 1235 0000 80B4     		push	{r7}
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 41


 1236              		.cfi_def_cfa_offset 4
 1237              		.cfi_offset 7, -4
 1238 0002 83B0     		sub	sp, sp, #12
 1239              		.cfi_def_cfa_offset 16
 1240 0004 00AF     		add	r7, sp, #0
 1241              		.cfi_def_cfa_register 7
 1242 0006 0346     		mov	r3, r0
 1243 0008 FB71     		strb	r3, [r7, #7]
1043:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART_ACS.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART_ACS.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART_ACS.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART_ACS.c ****         */
1048:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART_ACS.c **** 
1051:.\Generated_Source\PSoC5/UART_ACS.c ****         do
1052:.\Generated_Source\PSoC5/UART_ACS.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART_ACS.c **** 
1054:.\Generated_Source\PSoC5/UART_ACS.c ****         #if ((UART_ACS_TX_BUFFER_SIZE > UART_ACS_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_TX_BUFFER_SIZE > UART_ACS_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART_ACS.c **** 
1059:.\Generated_Source\PSoC5/UART_ACS.c ****             locTxBufferWrite = UART_ACS_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART_ACS.c ****             locTxBufferRead  = UART_ACS_txBufferRead;
1061:.\Generated_Source\PSoC5/UART_ACS.c **** 
1062:.\Generated_Source\PSoC5/UART_ACS.c ****         #if ((UART_ACS_TX_BUFFER_SIZE > UART_ACS_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_TX_BUFFER_SIZE > UART_ACS_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1067:.\Generated_Source\PSoC5/UART_ACS.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART_ACS.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART_ACS.c ****                                 (uint8)(UART_ACS_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART_ACS.c **** 
1071:.\Generated_Source\PSoC5/UART_ACS.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/UART_ACS.c ****             ((UART_ACS_TXSTATUS_REG & UART_ACS_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1074:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1077:.\Generated_Source\PSoC5/UART_ACS.c ****         else
1078:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1079:.\Generated_Source\PSoC5/UART_ACS.c ****             if(locTxBufferWrite >= UART_ACS_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1081:.\Generated_Source\PSoC5/UART_ACS.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1083:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART_ACS.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/UART_ACS.c **** 
1087:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART_ACS.c ****         #if ((UART_ACS_TX_BUFFER_SIZE > UART_ACS_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_TX_BUFFER_SIZE > UART_ACS_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART_ACS.c **** 
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 42


1092:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART_ACS.c **** 
1094:.\Generated_Source\PSoC5/UART_ACS.c ****         #if ((UART_ACS_TX_BUFFER_SIZE > UART_ACS_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* (UART_ACS_TX_BUFFER_SIZE > UART_ACS_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART_ACS.c **** 
1098:.\Generated_Source\PSoC5/UART_ACS.c ****             if(0u != (UART_ACS_TXSTATUS_REG & UART_ACS_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1100:.\Generated_Source\PSoC5/UART_ACS.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1103:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1104:.\Generated_Source\PSoC5/UART_ACS.c **** 
1105:.\Generated_Source\PSoC5/UART_ACS.c ****     #else
1106:.\Generated_Source\PSoC5/UART_ACS.c **** 
1107:.\Generated_Source\PSoC5/UART_ACS.c ****         while((UART_ACS_TXSTATUS_REG & UART_ACS_TX_STS_FIFO_FULL) != 0u)
 1244              		.loc 1 1107 0
 1245 000a 00BF     		nop
 1246              	.L82:
 1247              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1248 000c 074B     		ldr	r3, .L83
 1249 000e 1B78     		ldrb	r3, [r3]
 1250 0010 DBB2     		uxtb	r3, r3
 1251 0012 03F02003 		and	r3, r3, #32
 1252 0016 002B     		cmp	r3, #0
 1253 0018 F8D1     		bne	.L82
1108:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1109:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1111:.\Generated_Source\PSoC5/UART_ACS.c **** 
1112:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_TXDATA_REG = txDataByte;
 1254              		.loc 1 1113 0 is_stmt 1
 1255 001a 054A     		ldr	r2, .L83+4
 1256 001c FB79     		ldrb	r3, [r7, #7]
 1257 001e 1370     		strb	r3, [r2]
1114:.\Generated_Source\PSoC5/UART_ACS.c **** 
1115:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* UART_ACS_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1258              		.loc 1 1116 0
 1259 0020 0C37     		adds	r7, r7, #12
 1260              		.cfi_def_cfa_offset 4
 1261 0022 BD46     		mov	sp, r7
 1262              		.cfi_def_cfa_register 13
 1263              		@ sp needed
 1264 0024 5DF8047B 		ldr	r7, [sp], #4
 1265              		.cfi_restore 7
 1266              		.cfi_def_cfa_offset 0
 1267 0028 7047     		bx	lr
 1268              	.L84:
 1269 002a 00BF     		.align	2
 1270              	.L83:
 1271 002c 66640040 		.word	1073767526
 1272 0030 56640040 		.word	1073767510
 1273              		.cfi_endproc
 1274              	.LFE19:
 1275              		.size	UART_ACS_PutChar, .-UART_ACS_PutChar
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 43


 1276              		.section	.text.UART_ACS_PutString,"ax",%progbits
 1277              		.align	2
 1278              		.global	UART_ACS_PutString
 1279              		.thumb
 1280              		.thumb_func
 1281              		.type	UART_ACS_PutString, %function
 1282              	UART_ACS_PutString:
 1283              	.LFB20:
1117:.\Generated_Source\PSoC5/UART_ACS.c **** 
1118:.\Generated_Source\PSoC5/UART_ACS.c **** 
1119:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_PutString
1121:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1123:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1126:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART_ACS.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1129:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1132:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART_ACS.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1136:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1139:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART_ACS.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART_ACS.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART_ACS.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1144:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1284              		.loc 1 1146 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 16
 1287              		@ frame_needed = 1, uses_anonymous_args = 0
 1288 0000 80B5     		push	{r7, lr}
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 7, -8
 1291              		.cfi_offset 14, -4
 1292 0002 84B0     		sub	sp, sp, #16
 1293              		.cfi_def_cfa_offset 24
 1294 0004 00AF     		add	r7, sp, #0
 1295              		.cfi_def_cfa_register 7
 1296 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/UART_ACS.c ****         uint16 bufIndex = 0u;
 1297              		.loc 1 1147 0
 1298 0008 0023     		movs	r3, #0
 1299 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/UART_ACS.c **** 
1149:.\Generated_Source\PSoC5/UART_ACS.c ****         /* If not Initialized then skip this function */
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 44


1150:.\Generated_Source\PSoC5/UART_ACS.c ****         if(UART_ACS_initVar != 0u)
 1300              		.loc 1 1150 0
 1301 000c 0B4B     		ldr	r3, .L89
 1302 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1303 0010 002B     		cmp	r3, #0
 1304 0012 10D0     		beq	.L85
1151:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1152:.\Generated_Source\PSoC5/UART_ACS.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART_ACS.c ****             while(string[bufIndex] != (char8) 0)
 1305              		.loc 1 1153 0
 1306 0014 09E0     		b	.L87
 1307              	.L88:
1154:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1155:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_PutChar((uint8)string[bufIndex]);
 1308              		.loc 1 1155 0
 1309 0016 FB89     		ldrh	r3, [r7, #14]
 1310 0018 7A68     		ldr	r2, [r7, #4]
 1311 001a 1344     		add	r3, r3, r2
 1312 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1313 001e 1846     		mov	r0, r3
 1314 0020 FFF7FEFF 		bl	UART_ACS_PutChar
1156:.\Generated_Source\PSoC5/UART_ACS.c ****                 bufIndex++;
 1315              		.loc 1 1156 0
 1316 0024 FB89     		ldrh	r3, [r7, #14]
 1317 0026 0133     		adds	r3, r3, #1
 1318 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1319              	.L87:
1153:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 1320              		.loc 1 1153 0
 1321 002a FB89     		ldrh	r3, [r7, #14]
 1322 002c 7A68     		ldr	r2, [r7, #4]
 1323 002e 1344     		add	r3, r3, r2
 1324 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0032 002B     		cmp	r3, #0
 1326 0034 EFD1     		bne	.L88
 1327              	.L85:
1157:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1158:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1159:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1328              		.loc 1 1159 0
 1329 0036 1037     		adds	r7, r7, #16
 1330              		.cfi_def_cfa_offset 8
 1331 0038 BD46     		mov	sp, r7
 1332              		.cfi_def_cfa_register 13
 1333              		@ sp needed
 1334 003a 80BD     		pop	{r7, pc}
 1335              	.L90:
 1336              		.align	2
 1337              	.L89:
 1338 003c 00000000 		.word	UART_ACS_initVar
 1339              		.cfi_endproc
 1340              	.LFE20:
 1341              		.size	UART_ACS_PutString, .-UART_ACS_PutString
 1342              		.section	.text.UART_ACS_PutArray,"ax",%progbits
 1343              		.align	2
 1344              		.global	UART_ACS_PutArray
 1345              		.thumb
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 45


 1346              		.thumb_func
 1347              		.type	UART_ACS_PutArray, %function
 1348              	UART_ACS_PutArray:
 1349              	.LFB21:
1160:.\Generated_Source\PSoC5/UART_ACS.c **** 
1161:.\Generated_Source\PSoC5/UART_ACS.c **** 
1162:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_PutArray
1164:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1166:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART_ACS.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1170:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART_ACS.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART_ACS.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART_ACS.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1175:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1178:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART_ACS.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1182:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1185:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART_ACS.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART_ACS.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART_ACS.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1190:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART_ACS.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1350              		.loc 1 1193 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 16
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354 0000 80B5     		push	{r7, lr}
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 84B0     		sub	sp, sp, #16
 1359              		.cfi_def_cfa_offset 24
 1360 0004 00AF     		add	r7, sp, #0
 1361              		.cfi_def_cfa_register 7
 1362 0006 7860     		str	r0, [r7, #4]
 1363 0008 0B46     		mov	r3, r1
 1364 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 bufIndex = 0u;
 1365              		.loc 1 1194 0
 1366 000c 0023     		movs	r3, #0
 1367 000e FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 46


1195:.\Generated_Source\PSoC5/UART_ACS.c **** 
1196:.\Generated_Source\PSoC5/UART_ACS.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART_ACS.c ****         if(UART_ACS_initVar != 0u)
 1368              		.loc 1 1197 0
 1369 0010 0A4B     		ldr	r3, .L95
 1370 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1371 0014 002B     		cmp	r3, #0
 1372 0016 0ED0     		beq	.L91
1198:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1199:.\Generated_Source\PSoC5/UART_ACS.c ****             while(bufIndex < byteCount)
 1373              		.loc 1 1199 0
 1374 0018 09E0     		b	.L93
 1375              	.L94:
1200:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1201:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_PutChar(string[bufIndex]);
 1376              		.loc 1 1201 0
 1377 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1378 001c 7A68     		ldr	r2, [r7, #4]
 1379 001e 1344     		add	r3, r3, r2
 1380 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 0022 1846     		mov	r0, r3
 1382 0024 FFF7FEFF 		bl	UART_ACS_PutChar
1202:.\Generated_Source\PSoC5/UART_ACS.c ****                 bufIndex++;
 1383              		.loc 1 1202 0
 1384 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1385 002a 0133     		adds	r3, r3, #1
 1386 002c FB73     		strb	r3, [r7, #15]
 1387              	.L93:
1199:.\Generated_Source\PSoC5/UART_ACS.c ****             {
 1388              		.loc 1 1199 0
 1389 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1390 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1391 0032 9A42     		cmp	r2, r3
 1392 0034 F1D3     		bcc	.L94
 1393              	.L91:
1203:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1204:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1205:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1394              		.loc 1 1205 0
 1395 0036 1037     		adds	r7, r7, #16
 1396              		.cfi_def_cfa_offset 8
 1397 0038 BD46     		mov	sp, r7
 1398              		.cfi_def_cfa_register 13
 1399              		@ sp needed
 1400 003a 80BD     		pop	{r7, pc}
 1401              	.L96:
 1402              		.align	2
 1403              	.L95:
 1404 003c 00000000 		.word	UART_ACS_initVar
 1405              		.cfi_endproc
 1406              	.LFE21:
 1407              		.size	UART_ACS_PutArray, .-UART_ACS_PutArray
 1408              		.section	.text.UART_ACS_PutCRLF,"ax",%progbits
 1409              		.align	2
 1410              		.global	UART_ACS_PutCRLF
 1411              		.thumb
 1412              		.thumb_func
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 47


 1413              		.type	UART_ACS_PutCRLF, %function
 1414              	UART_ACS_PutCRLF:
 1415              	.LFB22:
1206:.\Generated_Source\PSoC5/UART_ACS.c **** 
1207:.\Generated_Source\PSoC5/UART_ACS.c **** 
1208:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_PutCRLF
1210:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1212:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART_ACS.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1216:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART_ACS.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1219:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1222:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART_ACS.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1226:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1229:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1416              		.loc 1 1231 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 8
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420 0000 80B5     		push	{r7, lr}
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 82B0     		sub	sp, sp, #8
 1425              		.cfi_def_cfa_offset 16
 1426 0004 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 1428 0006 0346     		mov	r3, r0
 1429 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/UART_ACS.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART_ACS.c ****         if(UART_ACS_initVar != 0u)
 1430              		.loc 1 1233 0
 1431 000a 084B     		ldr	r3, .L99
 1432 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1433 000e 002B     		cmp	r3, #0
 1434 0010 09D0     		beq	.L97
1234:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1235:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_PutChar(txDataByte);
 1435              		.loc 1 1235 0
 1436 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1437 0014 1846     		mov	r0, r3
 1438 0016 FFF7FEFF 		bl	UART_ACS_PutChar
1236:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_PutChar(0x0Du);
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 48


 1439              		.loc 1 1236 0
 1440 001a 0D20     		movs	r0, #13
 1441 001c FFF7FEFF 		bl	UART_ACS_PutChar
1237:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_PutChar(0x0Au);
 1442              		.loc 1 1237 0
 1443 0020 0A20     		movs	r0, #10
 1444 0022 FFF7FEFF 		bl	UART_ACS_PutChar
 1445              	.L97:
1238:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1239:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1446              		.loc 1 1239 0
 1447 0026 0837     		adds	r7, r7, #8
 1448              		.cfi_def_cfa_offset 8
 1449 0028 BD46     		mov	sp, r7
 1450              		.cfi_def_cfa_register 13
 1451              		@ sp needed
 1452 002a 80BD     		pop	{r7, pc}
 1453              	.L100:
 1454              		.align	2
 1455              	.L99:
 1456 002c 00000000 		.word	UART_ACS_initVar
 1457              		.cfi_endproc
 1458              	.LFE22:
 1459              		.size	UART_ACS_PutCRLF, .-UART_ACS_PutCRLF
 1460              		.section	.text.UART_ACS_GetTxBufferSize,"ax",%progbits
 1461              		.align	2
 1462              		.global	UART_ACS_GetTxBufferSize
 1463              		.thumb
 1464              		.thumb_func
 1465              		.type	UART_ACS_GetTxBufferSize, %function
 1466              	UART_ACS_GetTxBufferSize:
 1467              	.LFB23:
1240:.\Generated_Source\PSoC5/UART_ACS.c **** 
1241:.\Generated_Source\PSoC5/UART_ACS.c **** 
1242:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1246:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART_ACS.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART_ACS.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART_ACS.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART_ACS.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART_ACS.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART_ACS.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1255:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1258:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1262:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBufferRead - used to calculate left space.
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 49


1265:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1266:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1269:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1272:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_ACS.c ****     uint8 UART_ACS_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART_ACS.c ****                                                             
1275:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1468              		.loc 1 1275 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 8
 1471              		@ frame_needed = 1, uses_anonymous_args = 0
 1472              		@ link register save eliminated.
 1473 0000 80B4     		push	{r7}
 1474              		.cfi_def_cfa_offset 4
 1475              		.cfi_offset 7, -4
 1476 0002 83B0     		sub	sp, sp, #12
 1477              		.cfi_def_cfa_offset 16
 1478 0004 00AF     		add	r7, sp, #0
 1479              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART_ACS.c **** 
1278:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART_ACS.c **** 
1280:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART_ACS.c **** 
1283:.\Generated_Source\PSoC5/UART_ACS.c ****         if(UART_ACS_txBufferRead == UART_ACS_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1285:.\Generated_Source\PSoC5/UART_ACS.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1287:.\Generated_Source\PSoC5/UART_ACS.c ****         else if(UART_ACS_txBufferRead < UART_ACS_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1289:.\Generated_Source\PSoC5/UART_ACS.c ****             size = (UART_ACS_txBufferWrite - UART_ACS_txBufferRead);
1290:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1291:.\Generated_Source\PSoC5/UART_ACS.c ****         else
1292:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1293:.\Generated_Source\PSoC5/UART_ACS.c ****             size = (UART_ACS_TX_BUFFER_SIZE - UART_ACS_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART_ACS.c ****                     UART_ACS_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1296:.\Generated_Source\PSoC5/UART_ACS.c **** 
1297:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART_ACS.c **** 
1299:.\Generated_Source\PSoC5/UART_ACS.c ****     #else
1300:.\Generated_Source\PSoC5/UART_ACS.c **** 
1301:.\Generated_Source\PSoC5/UART_ACS.c ****         size = UART_ACS_TXSTATUS_REG;
 1480              		.loc 1 1301 0
 1481 0006 0E4B     		ldr	r3, .L106
 1482 0008 1B78     		ldrb	r3, [r3]
 1483 000a FB71     		strb	r3, [r7, #7]
1302:.\Generated_Source\PSoC5/UART_ACS.c **** 
1303:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART_ACS.c ****         if((size & UART_ACS_TX_STS_FIFO_FULL) != 0u)
 1484              		.loc 1 1304 0
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 50


 1485 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1486 000e 03F02003 		and	r3, r3, #32
 1487 0012 002B     		cmp	r3, #0
 1488 0014 02D0     		beq	.L102
1305:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1306:.\Generated_Source\PSoC5/UART_ACS.c ****             size = UART_ACS_FIFO_LENGTH;
 1489              		.loc 1 1306 0
 1490 0016 0423     		movs	r3, #4
 1491 0018 FB71     		strb	r3, [r7, #7]
 1492 001a 09E0     		b	.L103
 1493              	.L102:
1307:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1308:.\Generated_Source\PSoC5/UART_ACS.c ****         else if((size & UART_ACS_TX_STS_FIFO_EMPTY) != 0u)
 1494              		.loc 1 1308 0
 1495 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1496 001e 03F00203 		and	r3, r3, #2
 1497 0022 002B     		cmp	r3, #0
 1498 0024 02D0     		beq	.L104
1309:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1310:.\Generated_Source\PSoC5/UART_ACS.c ****             size = 0u;
 1499              		.loc 1 1310 0
 1500 0026 0023     		movs	r3, #0
 1501 0028 FB71     		strb	r3, [r7, #7]
 1502 002a 01E0     		b	.L103
 1503              	.L104:
1311:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1312:.\Generated_Source\PSoC5/UART_ACS.c ****         else
1313:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1314:.\Generated_Source\PSoC5/UART_ACS.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART_ACS.c ****             size = 1u;
 1504              		.loc 1 1315 0
 1505 002c 0123     		movs	r3, #1
 1506 002e FB71     		strb	r3, [r7, #7]
 1507              	.L103:
1316:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1317:.\Generated_Source\PSoC5/UART_ACS.c **** 
1318:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART_ACS.c **** 
1320:.\Generated_Source\PSoC5/UART_ACS.c ****     return(size);
 1508              		.loc 1 1320 0
 1509 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1510              		.loc 1 1321 0
 1511 0032 1846     		mov	r0, r3
 1512 0034 0C37     		adds	r7, r7, #12
 1513              		.cfi_def_cfa_offset 4
 1514 0036 BD46     		mov	sp, r7
 1515              		.cfi_def_cfa_register 13
 1516              		@ sp needed
 1517 0038 5DF8047B 		ldr	r7, [sp], #4
 1518              		.cfi_restore 7
 1519              		.cfi_def_cfa_offset 0
 1520 003c 7047     		bx	lr
 1521              	.L107:
 1522 003e 00BF     		.align	2
 1523              	.L106:
 1524 0040 66640040 		.word	1073767526
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 51


 1525              		.cfi_endproc
 1526              	.LFE23:
 1527              		.size	UART_ACS_GetTxBufferSize, .-UART_ACS_GetTxBufferSize
 1528              		.section	.text.UART_ACS_ClearTxBuffer,"ax",%progbits
 1529              		.align	2
 1530              		.global	UART_ACS_ClearTxBuffer
 1531              		.thumb
 1532              		.thumb_func
 1533              		.type	UART_ACS_ClearTxBuffer, %function
 1534              	UART_ACS_ClearTxBuffer:
 1535              	.LFB24:
1322:.\Generated_Source\PSoC5/UART_ACS.c **** 
1323:.\Generated_Source\PSoC5/UART_ACS.c **** 
1324:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1328:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1331:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1334:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1337:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1341:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1344:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART_ACS.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART_ACS.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1349:.\Generated_Source\PSoC5/UART_ACS.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART_ACS.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1353:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1536              		.loc 1 1355 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 8
 1539              		@ frame_needed = 1, uses_anonymous_args = 0
 1540 0000 80B5     		push	{r7, lr}
 1541              		.cfi_def_cfa_offset 8
 1542              		.cfi_offset 7, -8
 1543              		.cfi_offset 14, -4
 1544 0002 82B0     		sub	sp, sp, #8
 1545              		.cfi_def_cfa_offset 16
 1546 0004 00AF     		add	r7, sp, #0
 1547              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 52


1356:.\Generated_Source\PSoC5/UART_ACS.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART_ACS.c **** 
1358:.\Generated_Source\PSoC5/UART_ACS.c ****         enableInterrupts = CyEnterCriticalSection();
 1548              		.loc 1 1358 0
 1549 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1550 000a 0346     		mov	r3, r0
 1551 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_TXDATA_AUX_CTL_REG |= (uint8)  UART_ACS_TX_FIFO_CLR;
 1552              		.loc 1 1360 0
 1553 000e 0B4A     		ldr	r2, .L109
 1554 0010 0A4B     		ldr	r3, .L109
 1555 0012 1B78     		ldrb	r3, [r3]
 1556 0014 DBB2     		uxtb	r3, r3
 1557 0016 43F00203 		orr	r3, r3, #2
 1558 001a DBB2     		uxtb	r3, r3
 1559 001c 1370     		strb	r3, [r2]
1361:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_TXDATA_AUX_CTL_REG &= (uint8) ~UART_ACS_TX_FIFO_CLR;
 1560              		.loc 1 1361 0
 1561 001e 074A     		ldr	r2, .L109
 1562 0020 064B     		ldr	r3, .L109
 1563 0022 1B78     		ldrb	r3, [r3]
 1564 0024 DBB2     		uxtb	r3, r3
 1565 0026 23F00203 		bic	r3, r3, #2
 1566 002a DBB2     		uxtb	r3, r3
 1567 002c 1370     		strb	r3, [r2]
1362:.\Generated_Source\PSoC5/UART_ACS.c ****         CyExitCriticalSection(enableInterrupts);
 1568              		.loc 1 1362 0
 1569 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1570 0030 1846     		mov	r0, r3
 1571 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/UART_ACS.c **** 
1364:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART_ACS.c **** 
1366:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART_ACS.c **** 
1369:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART_ACS.c **** 
1372:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART_ACS.c **** 
1375:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1572              		.loc 1 1376 0
 1573 0036 0837     		adds	r7, r7, #8
 1574              		.cfi_def_cfa_offset 8
 1575 0038 BD46     		mov	sp, r7
 1576              		.cfi_def_cfa_register 13
 1577              		@ sp needed
 1578 003a 80BD     		pop	{r7, pc}
 1579              	.L110:
 1580              		.align	2
 1581              	.L109:
 1582 003c 96640040 		.word	1073767574
 1583              		.cfi_endproc
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 53


 1584              	.LFE24:
 1585              		.size	UART_ACS_ClearTxBuffer, .-UART_ACS_ClearTxBuffer
 1586              		.section	.text.UART_ACS_SendBreak,"ax",%progbits
 1587              		.align	2
 1588              		.global	UART_ACS_SendBreak
 1589              		.thumb
 1590              		.thumb_func
 1591              		.type	UART_ACS_SendBreak, %function
 1592              	UART_ACS_SendBreak:
 1593              	.LFB25:
1377:.\Generated_Source\PSoC5/UART_ACS.c **** 
1378:.\Generated_Source\PSoC5/UART_ACS.c **** 
1379:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_SendBreak
1381:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1383:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1386:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART_ACS.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART_ACS.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART_ACS.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART_ACS.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART_ACS.c ****     *   UART_ACS_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART_ACS.c ****     *      UART_ACS_SEND_BREAK and UART_ACS_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART_ACS.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1398:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1401:.\Generated_Source\PSoC5/UART_ACS.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART_ACS.c ****     *  UART_ACS_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART_ACS.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART_ACS.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1406:.\Generated_Source\PSoC5/UART_ACS.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART_ACS.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1409:.\Generated_Source\PSoC5/UART_ACS.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART_ACS.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART_ACS.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART_ACS.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART_ACS.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART_ACS.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART_ACS.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART_ACS.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART_ACS.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART_ACS.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART_ACS.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART_ACS.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART_ACS.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART_ACS.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART_ACS.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 54


1424:.\Generated_Source\PSoC5/UART_ACS.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART_ACS.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART_ACS.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART_ACS.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART_ACS.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART_ACS.c ****     *     When interrupt appear with UART_ACS_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART_ACS.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1432:.\Generated_Source\PSoC5/UART_ACS.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART_ACS.c ****     *  The UART_ACS_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART_ACS.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART_ACS.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART_ACS.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1439:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1594              		.loc 1 1441 0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 16
 1597              		@ frame_needed = 1, uses_anonymous_args = 0
 1598 0000 80B5     		push	{r7, lr}
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 84B0     		sub	sp, sp, #16
 1603              		.cfi_def_cfa_offset 24
 1604 0004 00AF     		add	r7, sp, #0
 1605              		.cfi_def_cfa_register 7
 1606 0006 0346     		mov	r3, r0
 1607 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/UART_ACS.c **** 
1443:.\Generated_Source\PSoC5/UART_ACS.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART_ACS.c ****         if(UART_ACS_initVar != 0u)
 1608              		.loc 1 1444 0
 1609 000a 214B     		ldr	r3, .L119
 1610 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1611 000e 002B     		cmp	r3, #0
 1612 0010 3BD0     		beq	.L111
 1613              	.LBB2:
1445:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1446:.\Generated_Source\PSoC5/UART_ACS.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART_ACS.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART_ACS.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART_ACS.c **** 
1450:.\Generated_Source\PSoC5/UART_ACS.c ****         #if(UART_ACS_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART_ACS.c **** 
1452:.\Generated_Source\PSoC5/UART_ACS.c ****             if( (retMode == UART_ACS_SEND_BREAK) ||
 1614              		.loc 1 1452 0
 1615 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1616 0014 002B     		cmp	r3, #0
 1617 0016 02D0     		beq	.L113
 1618              		.loc 1 1452 0 is_stmt 0 discriminator 1
 1619 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1620 001a 032B     		cmp	r3, #3
 1621 001c 13D1     		bne	.L114
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 55


 1622              	.L113:
1453:.\Generated_Source\PSoC5/UART_ACS.c ****                 (retMode == UART_ACS_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1455:.\Generated_Source\PSoC5/UART_ACS.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_WriteControlRegister(UART_ACS_ReadControlRegister() |
 1623              		.loc 1 1456 0 is_stmt 1
 1624 001e FFF7FEFF 		bl	UART_ACS_ReadControlRegister
 1625 0022 0346     		mov	r3, r0
 1626 0024 43F00203 		orr	r3, r3, #2
 1627 0028 DBB2     		uxtb	r3, r3
 1628 002a 1846     		mov	r0, r3
 1629 002c FFF7FEFF 		bl	UART_ACS_WriteControlRegister
1457:.\Generated_Source\PSoC5/UART_ACS.c ****                                                       UART_ACS_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART_ACS.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_TXDATA_REG = 0u;
 1630              		.loc 1 1459 0
 1631 0030 184B     		ldr	r3, .L119+4
 1632 0032 0022     		movs	r2, #0
 1633 0034 1A70     		strb	r2, [r3]
 1634              	.L115:
1460:.\Generated_Source\PSoC5/UART_ACS.c **** 
1461:.\Generated_Source\PSoC5/UART_ACS.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART_ACS.c ****                 {
1463:.\Generated_Source\PSoC5/UART_ACS.c ****                     tmpStat = UART_ACS_TXSTATUS_REG;
 1635              		.loc 1 1463 0 discriminator 1
 1636 0036 184B     		ldr	r3, .L119+8
 1637 0038 1B78     		ldrb	r3, [r3]
 1638 003a FB73     		strb	r3, [r7, #15]
1464:.\Generated_Source\PSoC5/UART_ACS.c ****                 }
1465:.\Generated_Source\PSoC5/UART_ACS.c ****                 while((tmpStat & UART_ACS_TX_STS_FIFO_EMPTY) != 0u);
 1639              		.loc 1 1465 0 discriminator 1
 1640 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1641 003e 03F00203 		and	r3, r3, #2
 1642 0042 002B     		cmp	r3, #0
 1643 0044 F7D1     		bne	.L115
 1644              	.L114:
1466:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1467:.\Generated_Source\PSoC5/UART_ACS.c **** 
1468:.\Generated_Source\PSoC5/UART_ACS.c ****             if( (retMode == UART_ACS_WAIT_FOR_COMPLETE_REINIT) ||
 1645              		.loc 1 1468 0
 1646 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1647 0048 012B     		cmp	r3, #1
 1648 004a 02D0     		beq	.L116
 1649              		.loc 1 1468 0 is_stmt 0 discriminator 1
 1650 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1651 004e 032B     		cmp	r3, #3
 1652 0050 09D1     		bne	.L117
 1653              	.L116:
1469:.\Generated_Source\PSoC5/UART_ACS.c ****                 (retMode == UART_ACS_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1471:.\Generated_Source\PSoC5/UART_ACS.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART_ACS.c ****                 {
1473:.\Generated_Source\PSoC5/UART_ACS.c ****                     tmpStat = UART_ACS_TXSTATUS_REG;
 1654              		.loc 1 1473 0 is_stmt 1 discriminator 1
 1655 0052 114B     		ldr	r3, .L119+8
 1656 0054 1B78     		ldrb	r3, [r3]
 1657 0056 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 56


1474:.\Generated_Source\PSoC5/UART_ACS.c ****                 }
1475:.\Generated_Source\PSoC5/UART_ACS.c ****                 while(((uint8)~tmpStat & UART_ACS_TX_STS_COMPLETE) != 0u);
 1658              		.loc 1 1475 0 discriminator 1
 1659 0058 FB7B     		ldrb	r3, [r7, #15]
 1660 005a DB43     		mvns	r3, r3
 1661 005c DBB2     		uxtb	r3, r3
 1662 005e 03F00103 		and	r3, r3, #1
 1663 0062 002B     		cmp	r3, #0
 1664 0064 F5D1     		bne	.L116
 1665              	.L117:
1476:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1477:.\Generated_Source\PSoC5/UART_ACS.c **** 
1478:.\Generated_Source\PSoC5/UART_ACS.c ****             if( (retMode == UART_ACS_WAIT_FOR_COMPLETE_REINIT) ||
 1666              		.loc 1 1478 0
 1667 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1668 0068 012B     		cmp	r3, #1
 1669 006a 05D0     		beq	.L118
 1670              		.loc 1 1478 0 is_stmt 0 discriminator 1
 1671 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1672 006e 022B     		cmp	r3, #2
 1673 0070 02D0     		beq	.L118
1479:.\Generated_Source\PSoC5/UART_ACS.c ****                 (retMode == UART_ACS_REINIT) ||
 1674              		.loc 1 1479 0 is_stmt 1
 1675 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1676 0074 032B     		cmp	r3, #3
 1677 0076 08D1     		bne	.L111
 1678              	.L118:
1480:.\Generated_Source\PSoC5/UART_ACS.c ****                 (retMode == UART_ACS_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1482:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_WriteControlRegister(UART_ACS_ReadControlRegister() &
 1679              		.loc 1 1482 0
 1680 0078 FFF7FEFF 		bl	UART_ACS_ReadControlRegister
 1681 007c 0346     		mov	r3, r0
 1682 007e 23F00203 		bic	r3, r3, #2
 1683 0082 DBB2     		uxtb	r3, r3
 1684 0084 1846     		mov	r0, r3
 1685 0086 FFF7FEFF 		bl	UART_ACS_WriteControlRegister
 1686              	.L111:
 1687              	.LBE2:
1483:.\Generated_Source\PSoC5/UART_ACS.c ****                                               (uint8)~UART_ACS_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1485:.\Generated_Source\PSoC5/UART_ACS.c **** 
1486:.\Generated_Source\PSoC5/UART_ACS.c ****         #else /* UART_ACS_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART_ACS.c **** 
1488:.\Generated_Source\PSoC5/UART_ACS.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART_ACS.c **** 
1490:.\Generated_Source\PSoC5/UART_ACS.c ****             if( (retMode == UART_ACS_SEND_BREAK) ||
1491:.\Generated_Source\PSoC5/UART_ACS.c ****                 (retMode == UART_ACS_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1493:.\Generated_Source\PSoC5/UART_ACS.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART_ACS.c ****                 #if( (UART_ACS_PARITY_TYPE != UART_ACS__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART_ACS.c ****                                     (UART_ACS_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART_ACS.c ****                     UART_ACS_WriteControlRegister(UART_ACS_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART_ACS.c ****                                                           UART_ACS_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART_ACS.c ****                 #endif /* End UART_ACS_PARITY_TYPE != UART_ACS__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART_ACS.c **** 
1500:.\Generated_Source\PSoC5/UART_ACS.c ****                 #if(UART_ACS_TXCLKGEN_DP)
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 57


1501:.\Generated_Source\PSoC5/UART_ACS.c ****                     txPeriod = UART_ACS_TXBITCLKTX_COMPLETE_REG;
1502:.\Generated_Source\PSoC5/UART_ACS.c ****                     UART_ACS_TXBITCLKTX_COMPLETE_REG = UART_ACS_TXBITCTR_BREAKBITS;
1503:.\Generated_Source\PSoC5/UART_ACS.c ****                 #else
1504:.\Generated_Source\PSoC5/UART_ACS.c ****                     txPeriod = UART_ACS_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART_ACS.c ****                     UART_ACS_TXBITCTR_PERIOD_REG = UART_ACS_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART_ACS.c ****                 #endif /* End UART_ACS_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART_ACS.c **** 
1508:.\Generated_Source\PSoC5/UART_ACS.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_TXDATA_REG = 0u;
1510:.\Generated_Source\PSoC5/UART_ACS.c **** 
1511:.\Generated_Source\PSoC5/UART_ACS.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART_ACS.c ****                 {
1513:.\Generated_Source\PSoC5/UART_ACS.c ****                     tmpStat = UART_ACS_TXSTATUS_REG;
1514:.\Generated_Source\PSoC5/UART_ACS.c ****                 }
1515:.\Generated_Source\PSoC5/UART_ACS.c ****                 while((tmpStat & UART_ACS_TX_STS_FIFO_EMPTY) != 0u);
1516:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1517:.\Generated_Source\PSoC5/UART_ACS.c **** 
1518:.\Generated_Source\PSoC5/UART_ACS.c ****             if( (retMode == UART_ACS_WAIT_FOR_COMPLETE_REINIT) ||
1519:.\Generated_Source\PSoC5/UART_ACS.c ****                 (retMode == UART_ACS_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1521:.\Generated_Source\PSoC5/UART_ACS.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART_ACS.c ****                 {
1523:.\Generated_Source\PSoC5/UART_ACS.c ****                     tmpStat = UART_ACS_TXSTATUS_REG;
1524:.\Generated_Source\PSoC5/UART_ACS.c ****                 }
1525:.\Generated_Source\PSoC5/UART_ACS.c ****                 while(((uint8)~tmpStat & UART_ACS_TX_STS_COMPLETE) != 0u);
1526:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1527:.\Generated_Source\PSoC5/UART_ACS.c **** 
1528:.\Generated_Source\PSoC5/UART_ACS.c ****             if( (retMode == UART_ACS_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART_ACS.c ****                 (retMode == UART_ACS_REINIT) ||
1530:.\Generated_Source\PSoC5/UART_ACS.c ****                 (retMode == UART_ACS_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART_ACS.c ****             {
1532:.\Generated_Source\PSoC5/UART_ACS.c **** 
1533:.\Generated_Source\PSoC5/UART_ACS.c ****             #if(UART_ACS_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_TXBITCLKTX_COMPLETE_REG = txPeriod;
1535:.\Generated_Source\PSoC5/UART_ACS.c ****             #else
1536:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART_ACS.c ****             #endif /* End UART_ACS_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART_ACS.c **** 
1539:.\Generated_Source\PSoC5/UART_ACS.c ****             #if( (UART_ACS_PARITY_TYPE != UART_ACS__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART_ACS.c ****                  (UART_ACS_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART_ACS.c ****                 UART_ACS_WriteControlRegister(UART_ACS_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART_ACS.c ****                                                       (uint8) ~UART_ACS_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART_ACS.c ****             #endif /* End UART_ACS_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART_ACS.c ****             }
1545:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif    /* End UART_ACS_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1547:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1688              		.loc 1 1547 0
 1689 008a 1037     		adds	r7, r7, #16
 1690              		.cfi_def_cfa_offset 8
 1691 008c BD46     		mov	sp, r7
 1692              		.cfi_def_cfa_register 13
 1693              		@ sp needed
 1694 008e 80BD     		pop	{r7, pc}
 1695              	.L120:
 1696              		.align	2
 1697              	.L119:
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 58


 1698 0090 00000000 		.word	UART_ACS_initVar
 1699 0094 56640040 		.word	1073767510
 1700 0098 66640040 		.word	1073767526
 1701              		.cfi_endproc
 1702              	.LFE25:
 1703              		.size	UART_ACS_SendBreak, .-UART_ACS_SendBreak
 1704              		.section	.text.UART_ACS_SetTxAddressMode,"ax",%progbits
 1705              		.align	2
 1706              		.global	UART_ACS_SetTxAddressMode
 1707              		.thumb
 1708              		.thumb_func
 1709              		.type	UART_ACS_SetTxAddressMode, %function
 1710              	UART_ACS_SetTxAddressMode:
 1711              	.LFB26:
1548:.\Generated_Source\PSoC5/UART_ACS.c **** 
1549:.\Generated_Source\PSoC5/UART_ACS.c **** 
1550:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1554:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1557:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART_ACS.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART_ACS.c ****     *       UART_ACS_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART_ACS.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART_ACS.c ****     *       UART_ACS_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART_ACS.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1564:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1567:.\Generated_Source\PSoC5/UART_ACS.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART_ACS.c ****     *  This function sets and clears UART_ACS_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART_ACS.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1571:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1712              		.loc 1 1573 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 8
 1715              		@ frame_needed = 1, uses_anonymous_args = 0
 1716 0000 80B5     		push	{r7, lr}
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 7, -8
 1719              		.cfi_offset 14, -4
 1720 0002 82B0     		sub	sp, sp, #8
 1721              		.cfi_def_cfa_offset 16
 1722 0004 00AF     		add	r7, sp, #0
 1723              		.cfi_def_cfa_register 7
 1724 0006 0346     		mov	r3, r0
 1725 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/UART_ACS.c ****         if(addressMode != 0u)
 1726              		.loc 1 1575 0
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 59


 1727 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1728 000c 002B     		cmp	r3, #0
 1729 000e 09D0     		beq	.L122
1576:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1577:.\Generated_Source\PSoC5/UART_ACS.c ****         #if( UART_ACS_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_WriteControlRegister(UART_ACS_ReadControlRegister() |
 1730              		.loc 1 1578 0
 1731 0010 FFF7FEFF 		bl	UART_ACS_ReadControlRegister
 1732 0014 0346     		mov	r3, r0
 1733 0016 43F00403 		orr	r3, r3, #4
 1734 001a DBB2     		uxtb	r3, r3
 1735 001c 1846     		mov	r0, r3
 1736 001e FFF7FEFF 		bl	UART_ACS_WriteControlRegister
 1737 0022 08E0     		b	.L121
 1738              	.L122:
1579:.\Generated_Source\PSoC5/UART_ACS.c ****                                                   UART_ACS_CTRL_MARK);
1580:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* End UART_ACS_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1582:.\Generated_Source\PSoC5/UART_ACS.c ****         else
1583:.\Generated_Source\PSoC5/UART_ACS.c ****         {
1584:.\Generated_Source\PSoC5/UART_ACS.c ****         #if( UART_ACS_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/UART_ACS.c ****             UART_ACS_WriteControlRegister(UART_ACS_ReadControlRegister() &
 1739              		.loc 1 1585 0
 1740 0024 FFF7FEFF 		bl	UART_ACS_ReadControlRegister
 1741 0028 0346     		mov	r3, r0
 1742 002a 23F00403 		bic	r3, r3, #4
 1743 002e DBB2     		uxtb	r3, r3
 1744 0030 1846     		mov	r0, r3
 1745 0032 FFF7FEFF 		bl	UART_ACS_WriteControlRegister
 1746              	.L121:
1586:.\Generated_Source\PSoC5/UART_ACS.c ****                                                   (uint8) ~UART_ACS_CTRL_MARK);
1587:.\Generated_Source\PSoC5/UART_ACS.c ****         #endif /* End UART_ACS_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/UART_ACS.c ****         }
1589:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1747              		.loc 1 1589 0
 1748 0036 0837     		adds	r7, r7, #8
 1749              		.cfi_def_cfa_offset 8
 1750 0038 BD46     		mov	sp, r7
 1751              		.cfi_def_cfa_register 13
 1752              		@ sp needed
 1753 003a 80BD     		pop	{r7, pc}
 1754              		.cfi_endproc
 1755              	.LFE26:
 1756              		.size	UART_ACS_SetTxAddressMode, .-UART_ACS_SetTxAddressMode
 1757              		.section	.text.UART_ACS_LoadRxConfig,"ax",%progbits
 1758              		.align	2
 1759              		.global	UART_ACS_LoadRxConfig
 1760              		.thumb
 1761              		.thumb_func
 1762              		.type	UART_ACS_LoadRxConfig, %function
 1763              	UART_ACS_LoadRxConfig:
 1764              	.LFB27:
1590:.\Generated_Source\PSoC5/UART_ACS.c **** 
1591:.\Generated_Source\PSoC5/UART_ACS.c **** #endif  /* EndUART_ACS_TX_ENABLED */
1592:.\Generated_Source\PSoC5/UART_ACS.c **** 
1593:.\Generated_Source\PSoC5/UART_ACS.c **** #if(UART_ACS_HD_ENABLED)
1594:.\Generated_Source\PSoC5/UART_ACS.c **** 
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 60


1595:.\Generated_Source\PSoC5/UART_ACS.c **** 
1596:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1597:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_LoadRxConfig
1598:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1599:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1600:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1601:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Loads the receiver configuration in half duplex mode. After calling this
1602:.\Generated_Source\PSoC5/UART_ACS.c ****     *  function, the UART is ready to receive data.
1603:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1604:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1605:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1606:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1607:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1608:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1609:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1610:.\Generated_Source\PSoC5/UART_ACS.c ****     * Side Effects:
1611:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1612:.\Generated_Source\PSoC5/UART_ACS.c ****     *  transaction is complete and it is safe to unload the transmitter
1613:.\Generated_Source\PSoC5/UART_ACS.c ****     *  configuration.
1614:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1615:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1616:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_LoadRxConfig(void) 
1617:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1765              		.loc 1 1617 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 0
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769 0000 80B5     		push	{r7, lr}
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 7, -8
 1772              		.cfi_offset 14, -4
 1773 0002 00AF     		add	r7, sp, #0
 1774              		.cfi_def_cfa_register 7
1618:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_WriteControlRegister(UART_ACS_ReadControlRegister() &
 1775              		.loc 1 1618 0
 1776 0004 FFF7FEFF 		bl	UART_ACS_ReadControlRegister
 1777 0008 0346     		mov	r3, r0
 1778 000a 23F00103 		bic	r3, r3, #1
 1779 000e DBB2     		uxtb	r3, r3
 1780 0010 1846     		mov	r0, r3
 1781 0012 FFF7FEFF 		bl	UART_ACS_WriteControlRegister
1619:.\Generated_Source\PSoC5/UART_ACS.c ****                                                 (uint8)~UART_ACS_CTRL_HD_SEND);
1620:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXBITCTR_PERIOD_REG = UART_ACS_HD_RXBITCTR_INIT;
 1782              		.loc 1 1620 0
 1783 0016 034B     		ldr	r3, .L125
 1784 0018 7222     		movs	r2, #114
 1785 001a 1A70     		strb	r2, [r3]
1621:.\Generated_Source\PSoC5/UART_ACS.c **** 
1622:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_INTERRUPT_ENABLED)
1623:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Enable RX interrupt after set RX configuration */
1624:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_SetRxInterruptMode(UART_ACS_INIT_RX_INTERRUPTS_MASK);
 1786              		.loc 1 1624 0
 1787 001c 2020     		movs	r0, #32
 1788 001e FFF7FEFF 		bl	UART_ACS_SetRxInterruptMode
1625:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
1626:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1789              		.loc 1 1626 0
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 61


 1790 0022 80BD     		pop	{r7, pc}
 1791              	.L126:
 1792              		.align	2
 1793              	.L125:
 1794 0024 87650040 		.word	1073767815
 1795              		.cfi_endproc
 1796              	.LFE27:
 1797              		.size	UART_ACS_LoadRxConfig, .-UART_ACS_LoadRxConfig
 1798              		.section	.text.UART_ACS_LoadTxConfig,"ax",%progbits
 1799              		.align	2
 1800              		.global	UART_ACS_LoadTxConfig
 1801              		.thumb
 1802              		.thumb_func
 1803              		.type	UART_ACS_LoadTxConfig, %function
 1804              	UART_ACS_LoadTxConfig:
 1805              	.LFB28:
1627:.\Generated_Source\PSoC5/UART_ACS.c **** 
1628:.\Generated_Source\PSoC5/UART_ACS.c **** 
1629:.\Generated_Source\PSoC5/UART_ACS.c ****     /*******************************************************************************
1630:.\Generated_Source\PSoC5/UART_ACS.c ****     * Function Name: UART_ACS_LoadTxConfig
1631:.\Generated_Source\PSoC5/UART_ACS.c ****     ********************************************************************************
1632:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1633:.\Generated_Source\PSoC5/UART_ACS.c ****     * Summary:
1634:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Loads the transmitter configuration in half duplex mode. After calling this
1635:.\Generated_Source\PSoC5/UART_ACS.c ****     *  function, the UART is ready to transmit data.
1636:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1637:.\Generated_Source\PSoC5/UART_ACS.c ****     * Parameters:
1638:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1639:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1640:.\Generated_Source\PSoC5/UART_ACS.c ****     * Return:
1641:.\Generated_Source\PSoC5/UART_ACS.c ****     *  None.
1642:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1643:.\Generated_Source\PSoC5/UART_ACS.c ****     * Side Effects:
1644:.\Generated_Source\PSoC5/UART_ACS.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1645:.\Generated_Source\PSoC5/UART_ACS.c ****     *  transaction is complete and it is safe to unload the receiver configuration.
1646:.\Generated_Source\PSoC5/UART_ACS.c ****     *
1647:.\Generated_Source\PSoC5/UART_ACS.c ****     *******************************************************************************/
1648:.\Generated_Source\PSoC5/UART_ACS.c ****     void UART_ACS_LoadTxConfig(void) 
1649:.\Generated_Source\PSoC5/UART_ACS.c ****     {
 1806              		.loc 1 1649 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 0
 1809              		@ frame_needed = 1, uses_anonymous_args = 0
 1810 0000 80B5     		push	{r7, lr}
 1811              		.cfi_def_cfa_offset 8
 1812              		.cfi_offset 7, -8
 1813              		.cfi_offset 14, -4
 1814 0002 00AF     		add	r7, sp, #0
 1815              		.cfi_def_cfa_register 7
1650:.\Generated_Source\PSoC5/UART_ACS.c ****     #if (UART_ACS_RX_INTERRUPT_ENABLED)
1651:.\Generated_Source\PSoC5/UART_ACS.c ****         /* Disable RX interrupts before set TX configuration */
1652:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_SetRxInterruptMode(0u);
 1816              		.loc 1 1652 0
 1817 0004 0020     		movs	r0, #0
 1818 0006 FFF7FEFF 		bl	UART_ACS_SetRxInterruptMode
1653:.\Generated_Source\PSoC5/UART_ACS.c ****     #endif /* (UART_ACS_RX_INTERRUPT_ENABLED) */
1654:.\Generated_Source\PSoC5/UART_ACS.c **** 
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 62


1655:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_WriteControlRegister(UART_ACS_ReadControlRegister() | UART_ACS_CTRL_HD_SEND);
 1819              		.loc 1 1655 0
 1820 000a FFF7FEFF 		bl	UART_ACS_ReadControlRegister
 1821 000e 0346     		mov	r3, r0
 1822 0010 43F00103 		orr	r3, r3, #1
 1823 0014 DBB2     		uxtb	r3, r3
 1824 0016 1846     		mov	r0, r3
 1825 0018 FFF7FEFF 		bl	UART_ACS_WriteControlRegister
1656:.\Generated_Source\PSoC5/UART_ACS.c ****         UART_ACS_RXBITCTR_PERIOD_REG = UART_ACS_HD_TXBITCTR_INIT;
 1826              		.loc 1 1656 0
 1827 001c 014B     		ldr	r3, .L128
 1828 001e 6F22     		movs	r2, #111
 1829 0020 1A70     		strb	r2, [r3]
1657:.\Generated_Source\PSoC5/UART_ACS.c ****     }
 1830              		.loc 1 1657 0
 1831 0022 80BD     		pop	{r7, pc}
 1832              	.L129:
 1833              		.align	2
 1834              	.L128:
 1835 0024 87650040 		.word	1073767815
 1836              		.cfi_endproc
 1837              	.LFE28:
 1838              		.size	UART_ACS_LoadTxConfig, .-UART_ACS_LoadTxConfig
 1839              		.text
 1840              	.Letext0:
 1841              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1842              		.section	.debug_info,"",%progbits
 1843              	.Ldebug_info0:
 1844 0000 FE050000 		.4byte	0x5fe
 1845 0004 0400     		.2byte	0x4
 1846 0006 00000000 		.4byte	.Ldebug_abbrev0
 1847 000a 04       		.byte	0x4
 1848 000b 01       		.uleb128 0x1
 1849 000c 99020000 		.4byte	.LASF73
 1850 0010 01       		.byte	0x1
 1851 0011 4B010000 		.4byte	.LASF74
 1852 0015 EC030000 		.4byte	.LASF75
 1853 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1854 001d 00000000 		.4byte	0
 1855 0021 00000000 		.4byte	.Ldebug_line0
 1856 0025 02       		.uleb128 0x2
 1857 0026 01       		.byte	0x1
 1858 0027 06       		.byte	0x6
 1859 0028 C2000000 		.4byte	.LASF0
 1860 002c 02       		.uleb128 0x2
 1861 002d 01       		.byte	0x1
 1862 002e 08       		.byte	0x8
 1863 002f D4030000 		.4byte	.LASF1
 1864 0033 02       		.uleb128 0x2
 1865 0034 02       		.byte	0x2
 1866 0035 05       		.byte	0x5
 1867 0036 E2030000 		.4byte	.LASF2
 1868 003a 02       		.uleb128 0x2
 1869 003b 02       		.byte	0x2
 1870 003c 07       		.byte	0x7
 1871 003d 16020000 		.4byte	.LASF3
 1872 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 63


 1873 0042 04       		.byte	0x4
 1874 0043 05       		.byte	0x5
 1875 0044 FC000000 		.4byte	.LASF4
 1876 0048 02       		.uleb128 0x2
 1877 0049 04       		.byte	0x4
 1878 004a 07       		.byte	0x7
 1879 004b EA010000 		.4byte	.LASF5
 1880 004f 02       		.uleb128 0x2
 1881 0050 08       		.byte	0x8
 1882 0051 05       		.byte	0x5
 1883 0052 B4000000 		.4byte	.LASF6
 1884 0056 02       		.uleb128 0x2
 1885 0057 08       		.byte	0x8
 1886 0058 07       		.byte	0x7
 1887 0059 57000000 		.4byte	.LASF7
 1888 005d 03       		.uleb128 0x3
 1889 005e 04       		.byte	0x4
 1890 005f 05       		.byte	0x5
 1891 0060 696E7400 		.ascii	"int\000"
 1892 0064 02       		.uleb128 0x2
 1893 0065 04       		.byte	0x4
 1894 0066 07       		.byte	0x7
 1895 0067 C0010000 		.4byte	.LASF8
 1896 006b 04       		.uleb128 0x4
 1897 006c 05010000 		.4byte	.LASF9
 1898 0070 02       		.byte	0x2
 1899 0071 9201     		.2byte	0x192
 1900 0073 2C000000 		.4byte	0x2c
 1901 0077 04       		.uleb128 0x4
 1902 0078 00000000 		.4byte	.LASF10
 1903 007c 02       		.byte	0x2
 1904 007d 9301     		.2byte	0x193
 1905 007f 3A000000 		.4byte	0x3a
 1906 0083 04       		.uleb128 0x4
 1907 0084 44010000 		.4byte	.LASF11
 1908 0088 02       		.byte	0x2
 1909 0089 9401     		.2byte	0x194
 1910 008b 48000000 		.4byte	0x48
 1911 008f 02       		.uleb128 0x2
 1912 0090 04       		.byte	0x4
 1913 0091 04       		.byte	0x4
 1914 0092 6E030000 		.4byte	.LASF12
 1915 0096 02       		.uleb128 0x2
 1916 0097 08       		.byte	0x8
 1917 0098 04       		.byte	0x4
 1918 0099 1B010000 		.4byte	.LASF13
 1919 009d 04       		.uleb128 0x4
 1920 009e EC040000 		.4byte	.LASF14
 1921 00a2 02       		.byte	0x2
 1922 00a3 A301     		.2byte	0x1a3
 1923 00a5 A9000000 		.4byte	0xa9
 1924 00a9 02       		.uleb128 0x2
 1925 00aa 01       		.byte	0x1
 1926 00ab 08       		.byte	0x8
 1927 00ac E7040000 		.4byte	.LASF15
 1928 00b0 04       		.uleb128 0x4
 1929 00b1 CF030000 		.4byte	.LASF16
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 64


 1930 00b5 02       		.byte	0x2
 1931 00b6 3C02     		.2byte	0x23c
 1932 00b8 BC000000 		.4byte	0xbc
 1933 00bc 05       		.uleb128 0x5
 1934 00bd 6B000000 		.4byte	0x6b
 1935 00c1 05       		.uleb128 0x5
 1936 00c2 77000000 		.4byte	0x77
 1937 00c6 04       		.uleb128 0x4
 1938 00c7 67020000 		.4byte	.LASF17
 1939 00cb 02       		.byte	0x2
 1940 00cc 3E02     		.2byte	0x23e
 1941 00ce D2000000 		.4byte	0xd2
 1942 00d2 05       		.uleb128 0x5
 1943 00d3 83000000 		.4byte	0x83
 1944 00d7 02       		.uleb128 0x2
 1945 00d8 04       		.byte	0x4
 1946 00d9 07       		.byte	0x7
 1947 00da 88020000 		.4byte	.LASF18
 1948 00de 06       		.uleb128 0x6
 1949 00df 93000000 		.4byte	.LASF19
 1950 00e3 01       		.byte	0x1
 1951 00e4 4C       		.byte	0x4c
 1952 00e5 00000000 		.4byte	.LFB0
 1953 00e9 20000000 		.4byte	.LFE0-.LFB0
 1954 00ed 01       		.uleb128 0x1
 1955 00ee 9C       		.byte	0x9c
 1956 00ef 06       		.uleb128 0x6
 1957 00f0 AB040000 		.4byte	.LASF20
 1958 00f4 01       		.byte	0x1
 1959 00f5 6A       		.byte	0x6a
 1960 00f6 00000000 		.4byte	.LFB1
 1961 00fa 38000000 		.4byte	.LFE1-.LFB1
 1962 00fe 01       		.uleb128 0x1
 1963 00ff 9C       		.byte	0x9c
 1964 0100 07       		.uleb128 0x7
 1965 0101 0B010000 		.4byte	.LASF21
 1966 0105 01       		.byte	0x1
 1967 0106 B7       		.byte	0xb7
 1968 0107 00000000 		.4byte	.LFB2
 1969 010b 50000000 		.4byte	.LFE2-.LFB2
 1970 010f 01       		.uleb128 0x1
 1971 0110 9C       		.byte	0x9c
 1972 0111 24010000 		.4byte	0x124
 1973 0115 08       		.uleb128 0x8
 1974 0116 02050000 		.4byte	.LASF23
 1975 011a 01       		.byte	0x1
 1976 011b B9       		.byte	0xb9
 1977 011c 6B000000 		.4byte	0x6b
 1978 0120 02       		.uleb128 0x2
 1979 0121 91       		.byte	0x91
 1980 0122 77       		.sleb128 -9
 1981 0123 00       		.byte	0
 1982 0124 07       		.uleb128 0x7
 1983 0125 CD010000 		.4byte	.LASF22
 1984 0129 01       		.byte	0x1
 1985 012a F0       		.byte	0xf0
 1986 012b 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 65


 1987 012f 50000000 		.4byte	.LFE3-.LFB3
 1988 0133 01       		.uleb128 0x1
 1989 0134 9C       		.byte	0x9c
 1990 0135 48010000 		.4byte	0x148
 1991 0139 08       		.uleb128 0x8
 1992 013a 02050000 		.4byte	.LASF23
 1993 013e 01       		.byte	0x1
 1994 013f F2       		.byte	0xf2
 1995 0140 6B000000 		.4byte	0x6b
 1996 0144 02       		.uleb128 0x2
 1997 0145 91       		.byte	0x91
 1998 0146 77       		.sleb128 -9
 1999 0147 00       		.byte	0
 2000 0148 09       		.uleb128 0x9
 2001 0149 39020000 		.4byte	.LASF49
 2002 014d 01       		.byte	0x1
 2003 014e 2701     		.2byte	0x127
 2004 0150 6B000000 		.4byte	0x6b
 2005 0154 00000000 		.4byte	.LFB4
 2006 0158 18000000 		.4byte	.LFE4-.LFB4
 2007 015c 01       		.uleb128 0x1
 2008 015d 9C       		.byte	0x9c
 2009 015e 0A       		.uleb128 0xa
 2010 015f 63040000 		.4byte	.LASF24
 2011 0163 01       		.byte	0x1
 2012 0164 3F01     		.2byte	0x13f
 2013 0166 00000000 		.4byte	.LFB5
 2014 016a 20000000 		.4byte	.LFE5-.LFB5
 2015 016e 01       		.uleb128 0x1
 2016 016f 9C       		.byte	0x9c
 2017 0170 84010000 		.4byte	0x184
 2018 0174 0B       		.uleb128 0xb
 2019 0175 6F010000 		.4byte	.LASF26
 2020 0179 01       		.byte	0x1
 2021 017a 3F01     		.2byte	0x13f
 2022 017c 6B000000 		.4byte	0x6b
 2023 0180 02       		.uleb128 0x2
 2024 0181 91       		.byte	0x91
 2025 0182 77       		.sleb128 -9
 2026 0183 00       		.byte	0
 2027 0184 0A       		.uleb128 0xa
 2028 0185 A2030000 		.4byte	.LASF25
 2029 0189 01       		.byte	0x1
 2030 018a 6701     		.2byte	0x167
 2031 018c 00000000 		.4byte	.LFB6
 2032 0190 20000000 		.4byte	.LFE6-.LFB6
 2033 0194 01       		.uleb128 0x1
 2034 0195 9C       		.byte	0x9c
 2035 0196 AA010000 		.4byte	0x1aa
 2036 019a 0B       		.uleb128 0xb
 2037 019b 32020000 		.4byte	.LASF27
 2038 019f 01       		.byte	0x1
 2039 01a0 6701     		.2byte	0x167
 2040 01a2 6B000000 		.4byte	0x6b
 2041 01a6 02       		.uleb128 0x2
 2042 01a7 91       		.byte	0x91
 2043 01a8 77       		.sleb128 -9
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 66


 2044 01a9 00       		.byte	0
 2045 01aa 0C       		.uleb128 0xc
 2046 01ab 7F000000 		.4byte	.LASF31
 2047 01af 01       		.byte	0x1
 2048 01b0 8801     		.2byte	0x188
 2049 01b2 6B000000 		.4byte	0x6b
 2050 01b6 00000000 		.4byte	.LFB7
 2051 01ba 94000000 		.4byte	.LFE7-.LFB7
 2052 01be 01       		.uleb128 0x1
 2053 01bf 9C       		.byte	0x9c
 2054 01c0 F2010000 		.4byte	0x1f2
 2055 01c4 0D       		.uleb128 0xd
 2056 01c5 A4040000 		.4byte	.LASF28
 2057 01c9 01       		.byte	0x1
 2058 01ca 8A01     		.2byte	0x18a
 2059 01cc 6B000000 		.4byte	0x6b
 2060 01d0 02       		.uleb128 0x2
 2061 01d1 91       		.byte	0x91
 2062 01d2 77       		.sleb128 -9
 2063 01d3 0D       		.uleb128 0xd
 2064 01d4 F2040000 		.4byte	.LASF29
 2065 01d8 01       		.byte	0x1
 2066 01d9 8E01     		.2byte	0x18e
 2067 01db 77000000 		.4byte	0x77
 2068 01df 02       		.uleb128 0x2
 2069 01e0 91       		.byte	0x91
 2070 01e1 74       		.sleb128 -12
 2071 01e2 0D       		.uleb128 0xd
 2072 01e3 56020000 		.4byte	.LASF30
 2073 01e7 01       		.byte	0x1
 2074 01e8 8F01     		.2byte	0x18f
 2075 01ea 77000000 		.4byte	0x77
 2076 01ee 02       		.uleb128 0x2
 2077 01ef 91       		.byte	0x91
 2078 01f0 72       		.sleb128 -14
 2079 01f1 00       		.byte	0
 2080 01f2 0C       		.uleb128 0xc
 2081 01f3 58030000 		.4byte	.LASF32
 2082 01f7 01       		.byte	0x1
 2083 01f8 E501     		.2byte	0x1e5
 2084 01fa 6B000000 		.4byte	0x6b
 2085 01fe 00000000 		.4byte	.LFB8
 2086 0202 40000000 		.4byte	.LFE8-.LFB8
 2087 0206 01       		.uleb128 0x1
 2088 0207 9C       		.byte	0x9c
 2089 0208 1C020000 		.4byte	0x21c
 2090 020c 0D       		.uleb128 0xd
 2091 020d 13050000 		.4byte	.LASF33
 2092 0211 01       		.byte	0x1
 2093 0212 E701     		.2byte	0x1e7
 2094 0214 6B000000 		.4byte	0x6b
 2095 0218 02       		.uleb128 0x2
 2096 0219 91       		.byte	0x91
 2097 021a 77       		.sleb128 -9
 2098 021b 00       		.byte	0
 2099 021c 0C       		.uleb128 0xc
 2100 021d 47030000 		.4byte	.LASF34
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 67


 2101 0221 01       		.byte	0x1
 2102 0222 1402     		.2byte	0x214
 2103 0224 6B000000 		.4byte	0x6b
 2104 0228 00000000 		.4byte	.LFB9
 2105 022c B8000000 		.4byte	.LFE9-.LFB9
 2106 0230 01       		.uleb128 0x1
 2107 0231 9C       		.byte	0x9c
 2108 0232 73020000 		.4byte	0x273
 2109 0236 0D       		.uleb128 0xd
 2110 0237 A4040000 		.4byte	.LASF28
 2111 023b 01       		.byte	0x1
 2112 023c 1602     		.2byte	0x216
 2113 023e 6B000000 		.4byte	0x6b
 2114 0242 02       		.uleb128 0x2
 2115 0243 91       		.byte	0x91
 2116 0244 77       		.sleb128 -9
 2117 0245 0D       		.uleb128 0xd
 2118 0246 27030000 		.4byte	.LASF35
 2119 024a 01       		.byte	0x1
 2120 024b 1702     		.2byte	0x217
 2121 024d 6B000000 		.4byte	0x6b
 2122 0251 02       		.uleb128 0x2
 2123 0252 91       		.byte	0x91
 2124 0253 71       		.sleb128 -15
 2125 0254 0D       		.uleb128 0xd
 2126 0255 F2040000 		.4byte	.LASF29
 2127 0259 01       		.byte	0x1
 2128 025a 1A02     		.2byte	0x21a
 2129 025c 77000000 		.4byte	0x77
 2130 0260 02       		.uleb128 0x2
 2131 0261 91       		.byte	0x91
 2132 0262 74       		.sleb128 -12
 2133 0263 0D       		.uleb128 0xd
 2134 0264 56020000 		.4byte	.LASF30
 2135 0268 01       		.byte	0x1
 2136 0269 1B02     		.2byte	0x21b
 2137 026b 77000000 		.4byte	0x77
 2138 026f 02       		.uleb128 0x2
 2139 0270 91       		.byte	0x91
 2140 0271 72       		.sleb128 -14
 2141 0272 00       		.byte	0
 2142 0273 0E       		.uleb128 0xe
 2143 0274 46000000 		.4byte	.LASF36
 2144 0278 01       		.byte	0x1
 2145 0279 7A02     		.2byte	0x27a
 2146 027b 77000000 		.4byte	0x77
 2147 027f 00000000 		.4byte	.LFB10
 2148 0283 44000000 		.4byte	.LFE10-.LFB10
 2149 0287 01       		.uleb128 0x1
 2150 0288 9C       		.byte	0x9c
 2151 0289 9D020000 		.4byte	0x29d
 2152 028d 0D       		.uleb128 0xd
 2153 028e DB010000 		.4byte	.LASF37
 2154 0292 01       		.byte	0x1
 2155 0293 7E02     		.2byte	0x27e
 2156 0295 77000000 		.4byte	0x77
 2157 0299 02       		.uleb128 0x2
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 68


 2158 029a 91       		.byte	0x91
 2159 029b 6E       		.sleb128 -18
 2160 029c 00       		.byte	0
 2161 029d 0C       		.uleb128 0xc
 2162 029e 61050000 		.4byte	.LASF38
 2163 02a2 01       		.byte	0x1
 2164 02a3 AB02     		.2byte	0x2ab
 2165 02a5 77000000 		.4byte	0x77
 2166 02a9 00000000 		.4byte	.LFB11
 2167 02ad 94000000 		.4byte	.LFE11-.LFB11
 2168 02b1 01       		.uleb128 0x1
 2169 02b2 9C       		.byte	0x9c
 2170 02b3 C7020000 		.4byte	0x2c7
 2171 02b7 0D       		.uleb128 0xd
 2172 02b8 11020000 		.4byte	.LASF39
 2173 02bc 01       		.byte	0x1
 2174 02bd AE02     		.2byte	0x2ae
 2175 02bf 77000000 		.4byte	0x77
 2176 02c3 02       		.uleb128 0x2
 2177 02c4 91       		.byte	0x91
 2178 02c5 76       		.sleb128 -10
 2179 02c6 00       		.byte	0
 2180 02c7 0F       		.uleb128 0xf
 2181 02c8 CE000000 		.4byte	.LASF40
 2182 02cc 01       		.byte	0x1
 2183 02cd F502     		.2byte	0x2f5
 2184 02cf 00000000 		.4byte	.LFB12
 2185 02d3 7C000000 		.4byte	.LFE12-.LFB12
 2186 02d7 01       		.uleb128 0x1
 2187 02d8 9C       		.byte	0x9c
 2188 02d9 ED020000 		.4byte	0x2ed
 2189 02dd 0D       		.uleb128 0xd
 2190 02de 02050000 		.4byte	.LASF23
 2191 02e2 01       		.byte	0x1
 2192 02e3 F702     		.2byte	0x2f7
 2193 02e5 6B000000 		.4byte	0x6b
 2194 02e9 02       		.uleb128 0x2
 2195 02ea 91       		.byte	0x91
 2196 02eb 77       		.sleb128 -9
 2197 02ec 00       		.byte	0
 2198 02ed 0A       		.uleb128 0xa
 2199 02ee 1A050000 		.4byte	.LASF41
 2200 02f2 01       		.byte	0x1
 2201 02f3 2D03     		.2byte	0x32d
 2202 02f5 00000000 		.4byte	.LFB13
 2203 02f9 14000000 		.4byte	.LFE13-.LFB13
 2204 02fd 01       		.uleb128 0x1
 2205 02fe 9C       		.byte	0x9c
 2206 02ff 13030000 		.4byte	0x313
 2207 0303 0B       		.uleb128 0xb
 2208 0304 22010000 		.4byte	.LASF42
 2209 0308 01       		.byte	0x1
 2210 0309 2D03     		.2byte	0x32d
 2211 030b 6B000000 		.4byte	0x6b
 2212 030f 02       		.uleb128 0x2
 2213 0310 91       		.byte	0x91
 2214 0311 77       		.sleb128 -9
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 69


 2215 0312 00       		.byte	0
 2216 0313 0A       		.uleb128 0xa
 2217 0314 B9040000 		.4byte	.LASF43
 2218 0318 01       		.byte	0x1
 2219 0319 5903     		.2byte	0x359
 2220 031b 00000000 		.4byte	.LFB14
 2221 031f 20000000 		.4byte	.LFE14-.LFB14
 2222 0323 01       		.uleb128 0x1
 2223 0324 9C       		.byte	0x9c
 2224 0325 39030000 		.4byte	0x339
 2225 0329 0B       		.uleb128 0xb
 2226 032a 91020000 		.4byte	.LASF44
 2227 032e 01       		.byte	0x1
 2228 032f 5903     		.2byte	0x359
 2229 0331 6B000000 		.4byte	0x6b
 2230 0335 02       		.uleb128 0x2
 2231 0336 91       		.byte	0x91
 2232 0337 77       		.sleb128 -9
 2233 0338 00       		.byte	0
 2234 0339 0A       		.uleb128 0xa
 2235 033a D0040000 		.4byte	.LASF45
 2236 033e 01       		.byte	0x1
 2237 033f 6D03     		.2byte	0x36d
 2238 0341 00000000 		.4byte	.LFB15
 2239 0345 20000000 		.4byte	.LFE15-.LFB15
 2240 0349 01       		.uleb128 0x1
 2241 034a 9C       		.byte	0x9c
 2242 034b 5F030000 		.4byte	0x35f
 2243 034f 0B       		.uleb128 0xb
 2244 0350 91020000 		.4byte	.LASF44
 2245 0354 01       		.byte	0x1
 2246 0355 6D03     		.2byte	0x36d
 2247 0357 6B000000 		.4byte	0x6b
 2248 035b 02       		.uleb128 0x2
 2249 035c 91       		.byte	0x91
 2250 035d 77       		.sleb128 -9
 2251 035e 00       		.byte	0
 2252 035f 0A       		.uleb128 0xa
 2253 0360 86030000 		.4byte	.LASF46
 2254 0364 01       		.byte	0x1
 2255 0365 8C03     		.2byte	0x38c
 2256 0367 00000000 		.4byte	.LFB16
 2257 036b 20000000 		.4byte	.LFE16-.LFB16
 2258 036f 01       		.uleb128 0x1
 2259 0370 9C       		.byte	0x9c
 2260 0371 85030000 		.4byte	0x385
 2261 0375 0B       		.uleb128 0xb
 2262 0376 32020000 		.4byte	.LASF27
 2263 037a 01       		.byte	0x1
 2264 037b 8C03     		.2byte	0x38c
 2265 037d 6B000000 		.4byte	0x6b
 2266 0381 02       		.uleb128 0x2
 2267 0382 91       		.byte	0x91
 2268 0383 77       		.sleb128 -9
 2269 0384 00       		.byte	0
 2270 0385 0A       		.uleb128 0xa
 2271 0386 FC010000 		.4byte	.LASF47
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 70


 2272 038a 01       		.byte	0x1
 2273 038b AE03     		.2byte	0x3ae
 2274 038d 00000000 		.4byte	.LFB17
 2275 0391 2C000000 		.4byte	.LFE17-.LFB17
 2276 0395 01       		.uleb128 0x1
 2277 0396 9C       		.byte	0x9c
 2278 0397 AB030000 		.4byte	0x3ab
 2279 039b 0B       		.uleb128 0xb
 2280 039c 21000000 		.4byte	.LASF48
 2281 03a0 01       		.byte	0x1
 2282 03a1 AE03     		.2byte	0x3ae
 2283 03a3 6B000000 		.4byte	0x6b
 2284 03a7 02       		.uleb128 0x2
 2285 03a8 91       		.byte	0x91
 2286 03a9 77       		.sleb128 -9
 2287 03aa 00       		.byte	0
 2288 03ab 09       		.uleb128 0x9
 2289 03ac 8D010000 		.4byte	.LASF50
 2290 03b0 01       		.byte	0x1
 2291 03b1 EB03     		.2byte	0x3eb
 2292 03b3 6B000000 		.4byte	0x6b
 2293 03b7 00000000 		.4byte	.LFB18
 2294 03bb 18000000 		.4byte	.LFE18-.LFB18
 2295 03bf 01       		.uleb128 0x1
 2296 03c0 9C       		.byte	0x9c
 2297 03c1 0A       		.uleb128 0xa
 2298 03c2 50050000 		.4byte	.LASF51
 2299 03c6 01       		.byte	0x1
 2300 03c7 1104     		.2byte	0x411
 2301 03c9 00000000 		.4byte	.LFB19
 2302 03cd 34000000 		.4byte	.LFE19-.LFB19
 2303 03d1 01       		.uleb128 0x1
 2304 03d2 9C       		.byte	0x9c
 2305 03d3 E7030000 		.4byte	0x3e7
 2306 03d7 0B       		.uleb128 0xb
 2307 03d8 21000000 		.4byte	.LASF48
 2308 03dc 01       		.byte	0x1
 2309 03dd 1104     		.2byte	0x411
 2310 03df 6B000000 		.4byte	0x6b
 2311 03e3 02       		.uleb128 0x2
 2312 03e4 91       		.byte	0x91
 2313 03e5 77       		.sleb128 -9
 2314 03e6 00       		.byte	0
 2315 03e7 0F       		.uleb128 0xf
 2316 03e8 2C000000 		.4byte	.LASF52
 2317 03ec 01       		.byte	0x1
 2318 03ed 7904     		.2byte	0x479
 2319 03ef 00000000 		.4byte	.LFB20
 2320 03f3 40000000 		.4byte	.LFE20-.LFB20
 2321 03f7 01       		.uleb128 0x1
 2322 03f8 9C       		.byte	0x9c
 2323 03f9 1C040000 		.4byte	0x41c
 2324 03fd 0B       		.uleb128 0xb
 2325 03fe 3F000000 		.4byte	.LASF53
 2326 0402 01       		.byte	0x1
 2327 0403 7904     		.2byte	0x479
 2328 0405 1C040000 		.4byte	0x41c
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 71


 2329 0409 02       		.uleb128 0x2
 2330 040a 91       		.byte	0x91
 2331 040b 6C       		.sleb128 -20
 2332 040c 0D       		.uleb128 0xd
 2333 040d 29020000 		.4byte	.LASF54
 2334 0411 01       		.byte	0x1
 2335 0412 7B04     		.2byte	0x47b
 2336 0414 77000000 		.4byte	0x77
 2337 0418 02       		.uleb128 0x2
 2338 0419 91       		.byte	0x91
 2339 041a 76       		.sleb128 -10
 2340 041b 00       		.byte	0
 2341 041c 10       		.uleb128 0x10
 2342 041d 04       		.byte	0x4
 2343 041e 22040000 		.4byte	0x422
 2344 0422 11       		.uleb128 0x11
 2345 0423 9D000000 		.4byte	0x9d
 2346 0427 0F       		.uleb128 0xf
 2347 0428 74030000 		.4byte	.LASF55
 2348 042c 01       		.byte	0x1
 2349 042d A704     		.2byte	0x4a7
 2350 042f 00000000 		.4byte	.LFB21
 2351 0433 40000000 		.4byte	.LFE21-.LFB21
 2352 0437 01       		.uleb128 0x1
 2353 0438 9C       		.byte	0x9c
 2354 0439 6B040000 		.4byte	0x46b
 2355 043d 0B       		.uleb128 0xb
 2356 043e 3F000000 		.4byte	.LASF53
 2357 0442 01       		.byte	0x1
 2358 0443 A704     		.2byte	0x4a7
 2359 0445 6B040000 		.4byte	0x46b
 2360 0449 02       		.uleb128 0x2
 2361 044a 91       		.byte	0x91
 2362 044b 6C       		.sleb128 -20
 2363 044c 0B       		.uleb128 0xb
 2364 044d 81040000 		.4byte	.LASF56
 2365 0451 01       		.byte	0x1
 2366 0452 A704     		.2byte	0x4a7
 2367 0454 6B000000 		.4byte	0x6b
 2368 0458 02       		.uleb128 0x2
 2369 0459 91       		.byte	0x91
 2370 045a 6B       		.sleb128 -21
 2371 045b 0D       		.uleb128 0xd
 2372 045c 29020000 		.4byte	.LASF54
 2373 0460 01       		.byte	0x1
 2374 0461 AA04     		.2byte	0x4aa
 2375 0463 6B000000 		.4byte	0x6b
 2376 0467 02       		.uleb128 0x2
 2377 0468 91       		.byte	0x91
 2378 0469 77       		.sleb128 -9
 2379 046a 00       		.byte	0
 2380 046b 10       		.uleb128 0x10
 2381 046c 04       		.byte	0x4
 2382 046d 71040000 		.4byte	0x471
 2383 0471 11       		.uleb128 0x11
 2384 0472 6B000000 		.4byte	0x6b
 2385 0476 0F       		.uleb128 0xf
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 72


 2386 0477 6E000000 		.4byte	.LASF57
 2387 047b 01       		.byte	0x1
 2388 047c CE04     		.2byte	0x4ce
 2389 047e 00000000 		.4byte	.LFB22
 2390 0482 30000000 		.4byte	.LFE22-.LFB22
 2391 0486 01       		.uleb128 0x1
 2392 0487 9C       		.byte	0x9c
 2393 0488 9C040000 		.4byte	0x49c
 2394 048c 0B       		.uleb128 0xb
 2395 048d 21000000 		.4byte	.LASF48
 2396 0491 01       		.byte	0x1
 2397 0492 CE04     		.2byte	0x4ce
 2398 0494 6B000000 		.4byte	0x6b
 2399 0498 02       		.uleb128 0x2
 2400 0499 91       		.byte	0x91
 2401 049a 77       		.sleb128 -9
 2402 049b 00       		.byte	0
 2403 049c 0C       		.uleb128 0xc
 2404 049d 8B040000 		.4byte	.LASF58
 2405 04a1 01       		.byte	0x1
 2406 04a2 F904     		.2byte	0x4f9
 2407 04a4 6B000000 		.4byte	0x6b
 2408 04a8 00000000 		.4byte	.LFB23
 2409 04ac 44000000 		.4byte	.LFE23-.LFB23
 2410 04b0 01       		.uleb128 0x1
 2411 04b1 9C       		.byte	0x9c
 2412 04b2 C6040000 		.4byte	0x4c6
 2413 04b6 0D       		.uleb128 0xd
 2414 04b7 11020000 		.4byte	.LASF39
 2415 04bb 01       		.byte	0x1
 2416 04bc FC04     		.2byte	0x4fc
 2417 04be 6B000000 		.4byte	0x6b
 2418 04c2 02       		.uleb128 0x2
 2419 04c3 91       		.byte	0x91
 2420 04c4 77       		.sleb128 -9
 2421 04c5 00       		.byte	0
 2422 04c6 0F       		.uleb128 0xf
 2423 04c7 30030000 		.4byte	.LASF59
 2424 04cb 01       		.byte	0x1
 2425 04cc 4A05     		.2byte	0x54a
 2426 04ce 00000000 		.4byte	.LFB24
 2427 04d2 40000000 		.4byte	.LFE24-.LFB24
 2428 04d6 01       		.uleb128 0x1
 2429 04d7 9C       		.byte	0x9c
 2430 04d8 EC040000 		.4byte	0x4ec
 2431 04dc 0D       		.uleb128 0xd
 2432 04dd 02050000 		.4byte	.LASF23
 2433 04e1 01       		.byte	0x1
 2434 04e2 4C05     		.2byte	0x54c
 2435 04e4 6B000000 		.4byte	0x6b
 2436 04e8 02       		.uleb128 0x2
 2437 04e9 91       		.byte	0x91
 2438 04ea 77       		.sleb128 -9
 2439 04eb 00       		.byte	0
 2440 04ec 0F       		.uleb128 0xf
 2441 04ed 75020000 		.4byte	.LASF60
 2442 04f1 01       		.byte	0x1
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 73


 2443 04f2 A005     		.2byte	0x5a0
 2444 04f4 00000000 		.4byte	.LFB25
 2445 04f8 9C000000 		.4byte	.LFE25-.LFB25
 2446 04fc 01       		.uleb128 0x1
 2447 04fd 9C       		.byte	0x9c
 2448 04fe 2B050000 		.4byte	0x52b
 2449 0502 0B       		.uleb128 0xb
 2450 0503 B8010000 		.4byte	.LASF61
 2451 0507 01       		.byte	0x1
 2452 0508 A005     		.2byte	0x5a0
 2453 050a 6B000000 		.4byte	0x6b
 2454 050e 02       		.uleb128 0x2
 2455 050f 91       		.byte	0x91
 2456 0510 6F       		.sleb128 -17
 2457 0511 12       		.uleb128 0x12
 2458 0512 12000000 		.4byte	.LBB2
 2459 0516 78000000 		.4byte	.LBE2-.LBB2
 2460 051a 0D       		.uleb128 0xd
 2461 051b 6D020000 		.4byte	.LASF62
 2462 051f 01       		.byte	0x1
 2463 0520 A805     		.2byte	0x5a8
 2464 0522 6B000000 		.4byte	0x6b
 2465 0526 02       		.uleb128 0x2
 2466 0527 91       		.byte	0x91
 2467 0528 77       		.sleb128 -9
 2468 0529 00       		.byte	0
 2469 052a 00       		.byte	0
 2470 052b 0F       		.uleb128 0xf
 2471 052c 49040000 		.4byte	.LASF63
 2472 0530 01       		.byte	0x1
 2473 0531 2406     		.2byte	0x624
 2474 0533 00000000 		.4byte	.LFB26
 2475 0537 3C000000 		.4byte	.LFE26-.LFB26
 2476 053b 01       		.uleb128 0x1
 2477 053c 9C       		.byte	0x9c
 2478 053d 51050000 		.4byte	0x551
 2479 0541 0B       		.uleb128 0xb
 2480 0542 22010000 		.4byte	.LASF42
 2481 0546 01       		.byte	0x1
 2482 0547 2406     		.2byte	0x624
 2483 0549 6B000000 		.4byte	0x6b
 2484 054d 02       		.uleb128 0x2
 2485 054e 91       		.byte	0x91
 2486 054f 77       		.sleb128 -9
 2487 0550 00       		.byte	0
 2488 0551 13       		.uleb128 0x13
 2489 0552 77010000 		.4byte	.LASF64
 2490 0556 01       		.byte	0x1
 2491 0557 5006     		.2byte	0x650
 2492 0559 00000000 		.4byte	.LFB27
 2493 055d 28000000 		.4byte	.LFE27-.LFB27
 2494 0561 01       		.uleb128 0x1
 2495 0562 9C       		.byte	0x9c
 2496 0563 13       		.uleb128 0x13
 2497 0564 33040000 		.4byte	.LASF65
 2498 0568 01       		.byte	0x1
 2499 0569 7006     		.2byte	0x670
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 74


 2500 056b 00000000 		.4byte	.LFB28
 2501 056f 28000000 		.4byte	.LFE28-.LFB28
 2502 0573 01       		.uleb128 0x1
 2503 0574 9C       		.byte	0x9c
 2504 0575 14       		.uleb128 0x14
 2505 0576 BE030000 		.4byte	.LASF66
 2506 057a 01       		.byte	0x1
 2507 057b 1B       		.byte	0x1b
 2508 057c 6B000000 		.4byte	0x6b
 2509 0580 05       		.uleb128 0x5
 2510 0581 03       		.byte	0x3
 2511 0582 00000000 		.4byte	UART_ACS_initVar
 2512 0586 14       		.uleb128 0x14
 2513 0587 A3010000 		.4byte	.LASF67
 2514 058b 01       		.byte	0x1
 2515 058c 24       		.byte	0x24
 2516 058d 6B000000 		.4byte	0x6b
 2517 0591 05       		.uleb128 0x5
 2518 0592 03       		.byte	0x3
 2519 0593 00000000 		.4byte	UART_ACS_errorStatus
 2520 0597 15       		.uleb128 0x15
 2521 0598 6B000000 		.4byte	0x6b
 2522 059c A7050000 		.4byte	0x5a7
 2523 05a0 16       		.uleb128 0x16
 2524 05a1 D7000000 		.4byte	0xd7
 2525 05a5 FF       		.byte	0xff
 2526 05a6 00       		.byte	0
 2527 05a7 14       		.uleb128 0x14
 2528 05a8 A2000000 		.4byte	.LASF68
 2529 05ac 01       		.byte	0x1
 2530 05ad 25       		.byte	0x25
 2531 05ae B8050000 		.4byte	0x5b8
 2532 05b2 05       		.uleb128 0x5
 2533 05b3 03       		.byte	0x3
 2534 05b4 00000000 		.4byte	UART_ACS_rxBuffer
 2535 05b8 05       		.uleb128 0x5
 2536 05b9 97050000 		.4byte	0x597
 2537 05bd 14       		.uleb128 0x14
 2538 05be 2E010000 		.4byte	.LASF69
 2539 05c2 01       		.byte	0x1
 2540 05c3 26       		.byte	0x26
 2541 05c4 C1000000 		.4byte	0xc1
 2542 05c8 05       		.uleb128 0x5
 2543 05c9 03       		.byte	0x3
 2544 05ca 00000000 		.4byte	UART_ACS_rxBufferRead
 2545 05ce 14       		.uleb128 0x14
 2546 05cf E5000000 		.4byte	.LASF70
 2547 05d3 01       		.byte	0x1
 2548 05d4 27       		.byte	0x27
 2549 05d5 C1000000 		.4byte	0xc1
 2550 05d9 05       		.uleb128 0x5
 2551 05da 03       		.byte	0x3
 2552 05db 00000000 		.4byte	UART_ACS_rxBufferWrite
 2553 05df 14       		.uleb128 0x14
 2554 05e0 34050000 		.4byte	.LASF71
 2555 05e4 01       		.byte	0x1
 2556 05e5 28       		.byte	0x28
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 75


 2557 05e6 BC000000 		.4byte	0xbc
 2558 05ea 05       		.uleb128 0x5
 2559 05eb 03       		.byte	0x3
 2560 05ec 00000000 		.4byte	UART_ACS_rxBufferLoopDetect
 2561 05f0 14       		.uleb128 0x14
 2562 05f1 07000000 		.4byte	.LASF72
 2563 05f5 01       		.byte	0x1
 2564 05f6 29       		.byte	0x29
 2565 05f7 BC000000 		.4byte	0xbc
 2566 05fb 05       		.uleb128 0x5
 2567 05fc 03       		.byte	0x3
 2568 05fd 00000000 		.4byte	UART_ACS_rxBufferOverflow
 2569 0601 00       		.byte	0
 2570              		.section	.debug_abbrev,"",%progbits
 2571              	.Ldebug_abbrev0:
 2572 0000 01       		.uleb128 0x1
 2573 0001 11       		.uleb128 0x11
 2574 0002 01       		.byte	0x1
 2575 0003 25       		.uleb128 0x25
 2576 0004 0E       		.uleb128 0xe
 2577 0005 13       		.uleb128 0x13
 2578 0006 0B       		.uleb128 0xb
 2579 0007 03       		.uleb128 0x3
 2580 0008 0E       		.uleb128 0xe
 2581 0009 1B       		.uleb128 0x1b
 2582 000a 0E       		.uleb128 0xe
 2583 000b 55       		.uleb128 0x55
 2584 000c 17       		.uleb128 0x17
 2585 000d 11       		.uleb128 0x11
 2586 000e 01       		.uleb128 0x1
 2587 000f 10       		.uleb128 0x10
 2588 0010 17       		.uleb128 0x17
 2589 0011 00       		.byte	0
 2590 0012 00       		.byte	0
 2591 0013 02       		.uleb128 0x2
 2592 0014 24       		.uleb128 0x24
 2593 0015 00       		.byte	0
 2594 0016 0B       		.uleb128 0xb
 2595 0017 0B       		.uleb128 0xb
 2596 0018 3E       		.uleb128 0x3e
 2597 0019 0B       		.uleb128 0xb
 2598 001a 03       		.uleb128 0x3
 2599 001b 0E       		.uleb128 0xe
 2600 001c 00       		.byte	0
 2601 001d 00       		.byte	0
 2602 001e 03       		.uleb128 0x3
 2603 001f 24       		.uleb128 0x24
 2604 0020 00       		.byte	0
 2605 0021 0B       		.uleb128 0xb
 2606 0022 0B       		.uleb128 0xb
 2607 0023 3E       		.uleb128 0x3e
 2608 0024 0B       		.uleb128 0xb
 2609 0025 03       		.uleb128 0x3
 2610 0026 08       		.uleb128 0x8
 2611 0027 00       		.byte	0
 2612 0028 00       		.byte	0
 2613 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 76


 2614 002a 16       		.uleb128 0x16
 2615 002b 00       		.byte	0
 2616 002c 03       		.uleb128 0x3
 2617 002d 0E       		.uleb128 0xe
 2618 002e 3A       		.uleb128 0x3a
 2619 002f 0B       		.uleb128 0xb
 2620 0030 3B       		.uleb128 0x3b
 2621 0031 05       		.uleb128 0x5
 2622 0032 49       		.uleb128 0x49
 2623 0033 13       		.uleb128 0x13
 2624 0034 00       		.byte	0
 2625 0035 00       		.byte	0
 2626 0036 05       		.uleb128 0x5
 2627 0037 35       		.uleb128 0x35
 2628 0038 00       		.byte	0
 2629 0039 49       		.uleb128 0x49
 2630 003a 13       		.uleb128 0x13
 2631 003b 00       		.byte	0
 2632 003c 00       		.byte	0
 2633 003d 06       		.uleb128 0x6
 2634 003e 2E       		.uleb128 0x2e
 2635 003f 00       		.byte	0
 2636 0040 3F       		.uleb128 0x3f
 2637 0041 19       		.uleb128 0x19
 2638 0042 03       		.uleb128 0x3
 2639 0043 0E       		.uleb128 0xe
 2640 0044 3A       		.uleb128 0x3a
 2641 0045 0B       		.uleb128 0xb
 2642 0046 3B       		.uleb128 0x3b
 2643 0047 0B       		.uleb128 0xb
 2644 0048 27       		.uleb128 0x27
 2645 0049 19       		.uleb128 0x19
 2646 004a 11       		.uleb128 0x11
 2647 004b 01       		.uleb128 0x1
 2648 004c 12       		.uleb128 0x12
 2649 004d 06       		.uleb128 0x6
 2650 004e 40       		.uleb128 0x40
 2651 004f 18       		.uleb128 0x18
 2652 0050 9642     		.uleb128 0x2116
 2653 0052 19       		.uleb128 0x19
 2654 0053 00       		.byte	0
 2655 0054 00       		.byte	0
 2656 0055 07       		.uleb128 0x7
 2657 0056 2E       		.uleb128 0x2e
 2658 0057 01       		.byte	0x1
 2659 0058 3F       		.uleb128 0x3f
 2660 0059 19       		.uleb128 0x19
 2661 005a 03       		.uleb128 0x3
 2662 005b 0E       		.uleb128 0xe
 2663 005c 3A       		.uleb128 0x3a
 2664 005d 0B       		.uleb128 0xb
 2665 005e 3B       		.uleb128 0x3b
 2666 005f 0B       		.uleb128 0xb
 2667 0060 27       		.uleb128 0x27
 2668 0061 19       		.uleb128 0x19
 2669 0062 11       		.uleb128 0x11
 2670 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 77


 2671 0064 12       		.uleb128 0x12
 2672 0065 06       		.uleb128 0x6
 2673 0066 40       		.uleb128 0x40
 2674 0067 18       		.uleb128 0x18
 2675 0068 9642     		.uleb128 0x2116
 2676 006a 19       		.uleb128 0x19
 2677 006b 01       		.uleb128 0x1
 2678 006c 13       		.uleb128 0x13
 2679 006d 00       		.byte	0
 2680 006e 00       		.byte	0
 2681 006f 08       		.uleb128 0x8
 2682 0070 34       		.uleb128 0x34
 2683 0071 00       		.byte	0
 2684 0072 03       		.uleb128 0x3
 2685 0073 0E       		.uleb128 0xe
 2686 0074 3A       		.uleb128 0x3a
 2687 0075 0B       		.uleb128 0xb
 2688 0076 3B       		.uleb128 0x3b
 2689 0077 0B       		.uleb128 0xb
 2690 0078 49       		.uleb128 0x49
 2691 0079 13       		.uleb128 0x13
 2692 007a 02       		.uleb128 0x2
 2693 007b 18       		.uleb128 0x18
 2694 007c 00       		.byte	0
 2695 007d 00       		.byte	0
 2696 007e 09       		.uleb128 0x9
 2697 007f 2E       		.uleb128 0x2e
 2698 0080 00       		.byte	0
 2699 0081 3F       		.uleb128 0x3f
 2700 0082 19       		.uleb128 0x19
 2701 0083 03       		.uleb128 0x3
 2702 0084 0E       		.uleb128 0xe
 2703 0085 3A       		.uleb128 0x3a
 2704 0086 0B       		.uleb128 0xb
 2705 0087 3B       		.uleb128 0x3b
 2706 0088 05       		.uleb128 0x5
 2707 0089 27       		.uleb128 0x27
 2708 008a 19       		.uleb128 0x19
 2709 008b 49       		.uleb128 0x49
 2710 008c 13       		.uleb128 0x13
 2711 008d 11       		.uleb128 0x11
 2712 008e 01       		.uleb128 0x1
 2713 008f 12       		.uleb128 0x12
 2714 0090 06       		.uleb128 0x6
 2715 0091 40       		.uleb128 0x40
 2716 0092 18       		.uleb128 0x18
 2717 0093 9742     		.uleb128 0x2117
 2718 0095 19       		.uleb128 0x19
 2719 0096 00       		.byte	0
 2720 0097 00       		.byte	0
 2721 0098 0A       		.uleb128 0xa
 2722 0099 2E       		.uleb128 0x2e
 2723 009a 01       		.byte	0x1
 2724 009b 3F       		.uleb128 0x3f
 2725 009c 19       		.uleb128 0x19
 2726 009d 03       		.uleb128 0x3
 2727 009e 0E       		.uleb128 0xe
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 78


 2728 009f 3A       		.uleb128 0x3a
 2729 00a0 0B       		.uleb128 0xb
 2730 00a1 3B       		.uleb128 0x3b
 2731 00a2 05       		.uleb128 0x5
 2732 00a3 27       		.uleb128 0x27
 2733 00a4 19       		.uleb128 0x19
 2734 00a5 11       		.uleb128 0x11
 2735 00a6 01       		.uleb128 0x1
 2736 00a7 12       		.uleb128 0x12
 2737 00a8 06       		.uleb128 0x6
 2738 00a9 40       		.uleb128 0x40
 2739 00aa 18       		.uleb128 0x18
 2740 00ab 9742     		.uleb128 0x2117
 2741 00ad 19       		.uleb128 0x19
 2742 00ae 01       		.uleb128 0x1
 2743 00af 13       		.uleb128 0x13
 2744 00b0 00       		.byte	0
 2745 00b1 00       		.byte	0
 2746 00b2 0B       		.uleb128 0xb
 2747 00b3 05       		.uleb128 0x5
 2748 00b4 00       		.byte	0
 2749 00b5 03       		.uleb128 0x3
 2750 00b6 0E       		.uleb128 0xe
 2751 00b7 3A       		.uleb128 0x3a
 2752 00b8 0B       		.uleb128 0xb
 2753 00b9 3B       		.uleb128 0x3b
 2754 00ba 05       		.uleb128 0x5
 2755 00bb 49       		.uleb128 0x49
 2756 00bc 13       		.uleb128 0x13
 2757 00bd 02       		.uleb128 0x2
 2758 00be 18       		.uleb128 0x18
 2759 00bf 00       		.byte	0
 2760 00c0 00       		.byte	0
 2761 00c1 0C       		.uleb128 0xc
 2762 00c2 2E       		.uleb128 0x2e
 2763 00c3 01       		.byte	0x1
 2764 00c4 3F       		.uleb128 0x3f
 2765 00c5 19       		.uleb128 0x19
 2766 00c6 03       		.uleb128 0x3
 2767 00c7 0E       		.uleb128 0xe
 2768 00c8 3A       		.uleb128 0x3a
 2769 00c9 0B       		.uleb128 0xb
 2770 00ca 3B       		.uleb128 0x3b
 2771 00cb 05       		.uleb128 0x5
 2772 00cc 27       		.uleb128 0x27
 2773 00cd 19       		.uleb128 0x19
 2774 00ce 49       		.uleb128 0x49
 2775 00cf 13       		.uleb128 0x13
 2776 00d0 11       		.uleb128 0x11
 2777 00d1 01       		.uleb128 0x1
 2778 00d2 12       		.uleb128 0x12
 2779 00d3 06       		.uleb128 0x6
 2780 00d4 40       		.uleb128 0x40
 2781 00d5 18       		.uleb128 0x18
 2782 00d6 9742     		.uleb128 0x2117
 2783 00d8 19       		.uleb128 0x19
 2784 00d9 01       		.uleb128 0x1
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 79


 2785 00da 13       		.uleb128 0x13
 2786 00db 00       		.byte	0
 2787 00dc 00       		.byte	0
 2788 00dd 0D       		.uleb128 0xd
 2789 00de 34       		.uleb128 0x34
 2790 00df 00       		.byte	0
 2791 00e0 03       		.uleb128 0x3
 2792 00e1 0E       		.uleb128 0xe
 2793 00e2 3A       		.uleb128 0x3a
 2794 00e3 0B       		.uleb128 0xb
 2795 00e4 3B       		.uleb128 0x3b
 2796 00e5 05       		.uleb128 0x5
 2797 00e6 49       		.uleb128 0x49
 2798 00e7 13       		.uleb128 0x13
 2799 00e8 02       		.uleb128 0x2
 2800 00e9 18       		.uleb128 0x18
 2801 00ea 00       		.byte	0
 2802 00eb 00       		.byte	0
 2803 00ec 0E       		.uleb128 0xe
 2804 00ed 2E       		.uleb128 0x2e
 2805 00ee 01       		.byte	0x1
 2806 00ef 3F       		.uleb128 0x3f
 2807 00f0 19       		.uleb128 0x19
 2808 00f1 03       		.uleb128 0x3
 2809 00f2 0E       		.uleb128 0xe
 2810 00f3 3A       		.uleb128 0x3a
 2811 00f4 0B       		.uleb128 0xb
 2812 00f5 3B       		.uleb128 0x3b
 2813 00f6 05       		.uleb128 0x5
 2814 00f7 27       		.uleb128 0x27
 2815 00f8 19       		.uleb128 0x19
 2816 00f9 49       		.uleb128 0x49
 2817 00fa 13       		.uleb128 0x13
 2818 00fb 11       		.uleb128 0x11
 2819 00fc 01       		.uleb128 0x1
 2820 00fd 12       		.uleb128 0x12
 2821 00fe 06       		.uleb128 0x6
 2822 00ff 40       		.uleb128 0x40
 2823 0100 18       		.uleb128 0x18
 2824 0101 9642     		.uleb128 0x2116
 2825 0103 19       		.uleb128 0x19
 2826 0104 01       		.uleb128 0x1
 2827 0105 13       		.uleb128 0x13
 2828 0106 00       		.byte	0
 2829 0107 00       		.byte	0
 2830 0108 0F       		.uleb128 0xf
 2831 0109 2E       		.uleb128 0x2e
 2832 010a 01       		.byte	0x1
 2833 010b 3F       		.uleb128 0x3f
 2834 010c 19       		.uleb128 0x19
 2835 010d 03       		.uleb128 0x3
 2836 010e 0E       		.uleb128 0xe
 2837 010f 3A       		.uleb128 0x3a
 2838 0110 0B       		.uleb128 0xb
 2839 0111 3B       		.uleb128 0x3b
 2840 0112 05       		.uleb128 0x5
 2841 0113 27       		.uleb128 0x27
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 80


 2842 0114 19       		.uleb128 0x19
 2843 0115 11       		.uleb128 0x11
 2844 0116 01       		.uleb128 0x1
 2845 0117 12       		.uleb128 0x12
 2846 0118 06       		.uleb128 0x6
 2847 0119 40       		.uleb128 0x40
 2848 011a 18       		.uleb128 0x18
 2849 011b 9642     		.uleb128 0x2116
 2850 011d 19       		.uleb128 0x19
 2851 011e 01       		.uleb128 0x1
 2852 011f 13       		.uleb128 0x13
 2853 0120 00       		.byte	0
 2854 0121 00       		.byte	0
 2855 0122 10       		.uleb128 0x10
 2856 0123 0F       		.uleb128 0xf
 2857 0124 00       		.byte	0
 2858 0125 0B       		.uleb128 0xb
 2859 0126 0B       		.uleb128 0xb
 2860 0127 49       		.uleb128 0x49
 2861 0128 13       		.uleb128 0x13
 2862 0129 00       		.byte	0
 2863 012a 00       		.byte	0
 2864 012b 11       		.uleb128 0x11
 2865 012c 26       		.uleb128 0x26
 2866 012d 00       		.byte	0
 2867 012e 49       		.uleb128 0x49
 2868 012f 13       		.uleb128 0x13
 2869 0130 00       		.byte	0
 2870 0131 00       		.byte	0
 2871 0132 12       		.uleb128 0x12
 2872 0133 0B       		.uleb128 0xb
 2873 0134 01       		.byte	0x1
 2874 0135 11       		.uleb128 0x11
 2875 0136 01       		.uleb128 0x1
 2876 0137 12       		.uleb128 0x12
 2877 0138 06       		.uleb128 0x6
 2878 0139 00       		.byte	0
 2879 013a 00       		.byte	0
 2880 013b 13       		.uleb128 0x13
 2881 013c 2E       		.uleb128 0x2e
 2882 013d 00       		.byte	0
 2883 013e 3F       		.uleb128 0x3f
 2884 013f 19       		.uleb128 0x19
 2885 0140 03       		.uleb128 0x3
 2886 0141 0E       		.uleb128 0xe
 2887 0142 3A       		.uleb128 0x3a
 2888 0143 0B       		.uleb128 0xb
 2889 0144 3B       		.uleb128 0x3b
 2890 0145 05       		.uleb128 0x5
 2891 0146 27       		.uleb128 0x27
 2892 0147 19       		.uleb128 0x19
 2893 0148 11       		.uleb128 0x11
 2894 0149 01       		.uleb128 0x1
 2895 014a 12       		.uleb128 0x12
 2896 014b 06       		.uleb128 0x6
 2897 014c 40       		.uleb128 0x40
 2898 014d 18       		.uleb128 0x18
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 81


 2899 014e 9642     		.uleb128 0x2116
 2900 0150 19       		.uleb128 0x19
 2901 0151 00       		.byte	0
 2902 0152 00       		.byte	0
 2903 0153 14       		.uleb128 0x14
 2904 0154 34       		.uleb128 0x34
 2905 0155 00       		.byte	0
 2906 0156 03       		.uleb128 0x3
 2907 0157 0E       		.uleb128 0xe
 2908 0158 3A       		.uleb128 0x3a
 2909 0159 0B       		.uleb128 0xb
 2910 015a 3B       		.uleb128 0x3b
 2911 015b 0B       		.uleb128 0xb
 2912 015c 49       		.uleb128 0x49
 2913 015d 13       		.uleb128 0x13
 2914 015e 3F       		.uleb128 0x3f
 2915 015f 19       		.uleb128 0x19
 2916 0160 02       		.uleb128 0x2
 2917 0161 18       		.uleb128 0x18
 2918 0162 00       		.byte	0
 2919 0163 00       		.byte	0
 2920 0164 15       		.uleb128 0x15
 2921 0165 01       		.uleb128 0x1
 2922 0166 01       		.byte	0x1
 2923 0167 49       		.uleb128 0x49
 2924 0168 13       		.uleb128 0x13
 2925 0169 01       		.uleb128 0x1
 2926 016a 13       		.uleb128 0x13
 2927 016b 00       		.byte	0
 2928 016c 00       		.byte	0
 2929 016d 16       		.uleb128 0x16
 2930 016e 21       		.uleb128 0x21
 2931 016f 00       		.byte	0
 2932 0170 49       		.uleb128 0x49
 2933 0171 13       		.uleb128 0x13
 2934 0172 2F       		.uleb128 0x2f
 2935 0173 0B       		.uleb128 0xb
 2936 0174 00       		.byte	0
 2937 0175 00       		.byte	0
 2938 0176 00       		.byte	0
 2939              		.section	.debug_aranges,"",%progbits
 2940 0000 FC000000 		.4byte	0xfc
 2941 0004 0200     		.2byte	0x2
 2942 0006 00000000 		.4byte	.Ldebug_info0
 2943 000a 04       		.byte	0x4
 2944 000b 00       		.byte	0
 2945 000c 0000     		.2byte	0
 2946 000e 0000     		.2byte	0
 2947 0010 00000000 		.4byte	.LFB0
 2948 0014 20000000 		.4byte	.LFE0-.LFB0
 2949 0018 00000000 		.4byte	.LFB1
 2950 001c 38000000 		.4byte	.LFE1-.LFB1
 2951 0020 00000000 		.4byte	.LFB2
 2952 0024 50000000 		.4byte	.LFE2-.LFB2
 2953 0028 00000000 		.4byte	.LFB3
 2954 002c 50000000 		.4byte	.LFE3-.LFB3
 2955 0030 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 82


 2956 0034 18000000 		.4byte	.LFE4-.LFB4
 2957 0038 00000000 		.4byte	.LFB5
 2958 003c 20000000 		.4byte	.LFE5-.LFB5
 2959 0040 00000000 		.4byte	.LFB6
 2960 0044 20000000 		.4byte	.LFE6-.LFB6
 2961 0048 00000000 		.4byte	.LFB7
 2962 004c 94000000 		.4byte	.LFE7-.LFB7
 2963 0050 00000000 		.4byte	.LFB8
 2964 0054 40000000 		.4byte	.LFE8-.LFB8
 2965 0058 00000000 		.4byte	.LFB9
 2966 005c B8000000 		.4byte	.LFE9-.LFB9
 2967 0060 00000000 		.4byte	.LFB10
 2968 0064 44000000 		.4byte	.LFE10-.LFB10
 2969 0068 00000000 		.4byte	.LFB11
 2970 006c 94000000 		.4byte	.LFE11-.LFB11
 2971 0070 00000000 		.4byte	.LFB12
 2972 0074 7C000000 		.4byte	.LFE12-.LFB12
 2973 0078 00000000 		.4byte	.LFB13
 2974 007c 14000000 		.4byte	.LFE13-.LFB13
 2975 0080 00000000 		.4byte	.LFB14
 2976 0084 20000000 		.4byte	.LFE14-.LFB14
 2977 0088 00000000 		.4byte	.LFB15
 2978 008c 20000000 		.4byte	.LFE15-.LFB15
 2979 0090 00000000 		.4byte	.LFB16
 2980 0094 20000000 		.4byte	.LFE16-.LFB16
 2981 0098 00000000 		.4byte	.LFB17
 2982 009c 2C000000 		.4byte	.LFE17-.LFB17
 2983 00a0 00000000 		.4byte	.LFB18
 2984 00a4 18000000 		.4byte	.LFE18-.LFB18
 2985 00a8 00000000 		.4byte	.LFB19
 2986 00ac 34000000 		.4byte	.LFE19-.LFB19
 2987 00b0 00000000 		.4byte	.LFB20
 2988 00b4 40000000 		.4byte	.LFE20-.LFB20
 2989 00b8 00000000 		.4byte	.LFB21
 2990 00bc 40000000 		.4byte	.LFE21-.LFB21
 2991 00c0 00000000 		.4byte	.LFB22
 2992 00c4 30000000 		.4byte	.LFE22-.LFB22
 2993 00c8 00000000 		.4byte	.LFB23
 2994 00cc 44000000 		.4byte	.LFE23-.LFB23
 2995 00d0 00000000 		.4byte	.LFB24
 2996 00d4 40000000 		.4byte	.LFE24-.LFB24
 2997 00d8 00000000 		.4byte	.LFB25
 2998 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2999 00e0 00000000 		.4byte	.LFB26
 3000 00e4 3C000000 		.4byte	.LFE26-.LFB26
 3001 00e8 00000000 		.4byte	.LFB27
 3002 00ec 28000000 		.4byte	.LFE27-.LFB27
 3003 00f0 00000000 		.4byte	.LFB28
 3004 00f4 28000000 		.4byte	.LFE28-.LFB28
 3005 00f8 00000000 		.4byte	0
 3006 00fc 00000000 		.4byte	0
 3007              		.section	.debug_ranges,"",%progbits
 3008              	.Ldebug_ranges0:
 3009 0000 00000000 		.4byte	.LFB0
 3010 0004 20000000 		.4byte	.LFE0
 3011 0008 00000000 		.4byte	.LFB1
 3012 000c 38000000 		.4byte	.LFE1
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 83


 3013 0010 00000000 		.4byte	.LFB2
 3014 0014 50000000 		.4byte	.LFE2
 3015 0018 00000000 		.4byte	.LFB3
 3016 001c 50000000 		.4byte	.LFE3
 3017 0020 00000000 		.4byte	.LFB4
 3018 0024 18000000 		.4byte	.LFE4
 3019 0028 00000000 		.4byte	.LFB5
 3020 002c 20000000 		.4byte	.LFE5
 3021 0030 00000000 		.4byte	.LFB6
 3022 0034 20000000 		.4byte	.LFE6
 3023 0038 00000000 		.4byte	.LFB7
 3024 003c 94000000 		.4byte	.LFE7
 3025 0040 00000000 		.4byte	.LFB8
 3026 0044 40000000 		.4byte	.LFE8
 3027 0048 00000000 		.4byte	.LFB9
 3028 004c B8000000 		.4byte	.LFE9
 3029 0050 00000000 		.4byte	.LFB10
 3030 0054 44000000 		.4byte	.LFE10
 3031 0058 00000000 		.4byte	.LFB11
 3032 005c 94000000 		.4byte	.LFE11
 3033 0060 00000000 		.4byte	.LFB12
 3034 0064 7C000000 		.4byte	.LFE12
 3035 0068 00000000 		.4byte	.LFB13
 3036 006c 14000000 		.4byte	.LFE13
 3037 0070 00000000 		.4byte	.LFB14
 3038 0074 20000000 		.4byte	.LFE14
 3039 0078 00000000 		.4byte	.LFB15
 3040 007c 20000000 		.4byte	.LFE15
 3041 0080 00000000 		.4byte	.LFB16
 3042 0084 20000000 		.4byte	.LFE16
 3043 0088 00000000 		.4byte	.LFB17
 3044 008c 2C000000 		.4byte	.LFE17
 3045 0090 00000000 		.4byte	.LFB18
 3046 0094 18000000 		.4byte	.LFE18
 3047 0098 00000000 		.4byte	.LFB19
 3048 009c 34000000 		.4byte	.LFE19
 3049 00a0 00000000 		.4byte	.LFB20
 3050 00a4 40000000 		.4byte	.LFE20
 3051 00a8 00000000 		.4byte	.LFB21
 3052 00ac 40000000 		.4byte	.LFE21
 3053 00b0 00000000 		.4byte	.LFB22
 3054 00b4 30000000 		.4byte	.LFE22
 3055 00b8 00000000 		.4byte	.LFB23
 3056 00bc 44000000 		.4byte	.LFE23
 3057 00c0 00000000 		.4byte	.LFB24
 3058 00c4 40000000 		.4byte	.LFE24
 3059 00c8 00000000 		.4byte	.LFB25
 3060 00cc 9C000000 		.4byte	.LFE25
 3061 00d0 00000000 		.4byte	.LFB26
 3062 00d4 3C000000 		.4byte	.LFE26
 3063 00d8 00000000 		.4byte	.LFB27
 3064 00dc 28000000 		.4byte	.LFE27
 3065 00e0 00000000 		.4byte	.LFB28
 3066 00e4 28000000 		.4byte	.LFE28
 3067 00e8 00000000 		.4byte	0
 3068 00ec 00000000 		.4byte	0
 3069              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 84


 3070              	.Ldebug_line0:
 3071 0000 27030000 		.section	.debug_str,"MS",%progbits,1
 3071      02004700 
 3071      00000201 
 3071      FB0E0D00 
 3071      01010101 
 3072              	.LASF10:
 3073 0000 75696E74 		.ascii	"uint16\000"
 3073      313600
 3074              	.LASF72:
 3075 0007 55415254 		.ascii	"UART_ACS_rxBufferOverflow\000"
 3075      5F414353 
 3075      5F727842 
 3075      75666665 
 3075      724F7665 
 3076              	.LASF48:
 3077 0021 74784461 		.ascii	"txDataByte\000"
 3077      74614279 
 3077      746500
 3078              	.LASF52:
 3079 002c 55415254 		.ascii	"UART_ACS_PutString\000"
 3079      5F414353 
 3079      5F507574 
 3079      53747269 
 3079      6E6700
 3080              	.LASF53:
 3081 003f 73747269 		.ascii	"string\000"
 3081      6E6700
 3082              	.LASF36:
 3083 0046 55415254 		.ascii	"UART_ACS_GetByte\000"
 3083      5F414353 
 3083      5F476574 
 3083      42797465 
 3083      00
 3084              	.LASF7:
 3085 0057 6C6F6E67 		.ascii	"long long unsigned int\000"
 3085      206C6F6E 
 3085      6720756E 
 3085      7369676E 
 3085      65642069 
 3086              	.LASF57:
 3087 006e 55415254 		.ascii	"UART_ACS_PutCRLF\000"
 3087      5F414353 
 3087      5F507574 
 3087      43524C46 
 3087      00
 3088              	.LASF31:
 3089 007f 55415254 		.ascii	"UART_ACS_ReadRxData\000"
 3089      5F414353 
 3089      5F526561 
 3089      64527844 
 3089      61746100 
 3090              	.LASF19:
 3091 0093 55415254 		.ascii	"UART_ACS_Start\000"
 3091      5F414353 
 3091      5F537461 
 3091      727400
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 85


 3092              	.LASF68:
 3093 00a2 55415254 		.ascii	"UART_ACS_rxBuffer\000"
 3093      5F414353 
 3093      5F727842 
 3093      75666665 
 3093      7200
 3094              	.LASF6:
 3095 00b4 6C6F6E67 		.ascii	"long long int\000"
 3095      206C6F6E 
 3095      6720696E 
 3095      7400
 3096              	.LASF0:
 3097 00c2 7369676E 		.ascii	"signed char\000"
 3097      65642063 
 3097      68617200 
 3098              	.LASF40:
 3099 00ce 55415254 		.ascii	"UART_ACS_ClearRxBuffer\000"
 3099      5F414353 
 3099      5F436C65 
 3099      61725278 
 3099      42756666 
 3100              	.LASF70:
 3101 00e5 55415254 		.ascii	"UART_ACS_rxBufferWrite\000"
 3101      5F414353 
 3101      5F727842 
 3101      75666665 
 3101      72577269 
 3102              	.LASF4:
 3103 00fc 6C6F6E67 		.ascii	"long int\000"
 3103      20696E74 
 3103      00
 3104              	.LASF9:
 3105 0105 75696E74 		.ascii	"uint8\000"
 3105      3800
 3106              	.LASF21:
 3107 010b 55415254 		.ascii	"UART_ACS_Enable\000"
 3107      5F414353 
 3107      5F456E61 
 3107      626C6500 
 3108              	.LASF13:
 3109 011b 646F7562 		.ascii	"double\000"
 3109      6C6500
 3110              	.LASF42:
 3111 0122 61646472 		.ascii	"addressMode\000"
 3111      6573734D 
 3111      6F646500 
 3112              	.LASF69:
 3113 012e 55415254 		.ascii	"UART_ACS_rxBufferRead\000"
 3113      5F414353 
 3113      5F727842 
 3113      75666665 
 3113      72526561 
 3114              	.LASF11:
 3115 0144 75696E74 		.ascii	"uint32\000"
 3115      333200
 3116              	.LASF74:
 3117 014b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_ACS.c\000"
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 86


 3117      6E657261 
 3117      7465645F 
 3117      536F7572 
 3117      63655C50 
 3118              	.LASF26:
 3119 016f 636F6E74 		.ascii	"control\000"
 3119      726F6C00 
 3120              	.LASF64:
 3121 0177 55415254 		.ascii	"UART_ACS_LoadRxConfig\000"
 3121      5F414353 
 3121      5F4C6F61 
 3121      64527843 
 3121      6F6E6669 
 3122              	.LASF50:
 3123 018d 55415254 		.ascii	"UART_ACS_ReadTxStatus\000"
 3123      5F414353 
 3123      5F526561 
 3123      64547853 
 3123      74617475 
 3124              	.LASF67:
 3125 01a3 55415254 		.ascii	"UART_ACS_errorStatus\000"
 3125      5F414353 
 3125      5F657272 
 3125      6F725374 
 3125      61747573 
 3126              	.LASF61:
 3127 01b8 7265744D 		.ascii	"retMode\000"
 3127      6F646500 
 3128              	.LASF8:
 3129 01c0 756E7369 		.ascii	"unsigned int\000"
 3129      676E6564 
 3129      20696E74 
 3129      00
 3130              	.LASF22:
 3131 01cd 55415254 		.ascii	"UART_ACS_Stop\000"
 3131      5F414353 
 3131      5F53746F 
 3131      7000
 3132              	.LASF37:
 3133 01db 6C6F6345 		.ascii	"locErrorStatus\000"
 3133      72726F72 
 3133      53746174 
 3133      757300
 3134              	.LASF5:
 3135 01ea 6C6F6E67 		.ascii	"long unsigned int\000"
 3135      20756E73 
 3135      69676E65 
 3135      6420696E 
 3135      7400
 3136              	.LASF47:
 3137 01fc 55415254 		.ascii	"UART_ACS_WriteTxData\000"
 3137      5F414353 
 3137      5F577269 
 3137      74655478 
 3137      44617461 
 3138              	.LASF39:
 3139 0211 73697A65 		.ascii	"size\000"
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 87


 3139      00
 3140              	.LASF3:
 3141 0216 73686F72 		.ascii	"short unsigned int\000"
 3141      7420756E 
 3141      7369676E 
 3141      65642069 
 3141      6E7400
 3142              	.LASF54:
 3143 0229 62756649 		.ascii	"bufIndex\000"
 3143      6E646578 
 3143      00
 3144              	.LASF27:
 3145 0232 696E7453 		.ascii	"intSrc\000"
 3145      726300
 3146              	.LASF49:
 3147 0239 55415254 		.ascii	"UART_ACS_ReadControlRegister\000"
 3147      5F414353 
 3147      5F526561 
 3147      64436F6E 
 3147      74726F6C 
 3148              	.LASF30:
 3149 0256 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3149      78427566 
 3149      66657257 
 3149      72697465 
 3149      00
 3150              	.LASF17:
 3151 0267 72656733 		.ascii	"reg32\000"
 3151      3200
 3152              	.LASF62:
 3153 026d 746D7053 		.ascii	"tmpStat\000"
 3153      74617400 
 3154              	.LASF60:
 3155 0275 55415254 		.ascii	"UART_ACS_SendBreak\000"
 3155      5F414353 
 3155      5F53656E 
 3155      64427265 
 3155      616B00
 3156              	.LASF18:
 3157 0288 73697A65 		.ascii	"sizetype\000"
 3157      74797065 
 3157      00
 3158              	.LASF44:
 3159 0291 61646472 		.ascii	"address\000"
 3159      65737300 
 3160              	.LASF73:
 3161 0299 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3161      4320342E 
 3161      392E3320 
 3161      32303135 
 3161      30333033 
 3162 02cc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3162      20726576 
 3162      6973696F 
 3162      6E203232 
 3162      31323230 
 3163 02ff 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 88


 3163      66756E63 
 3163      74696F6E 
 3163      2D736563 
 3163      74696F6E 
 3164              	.LASF35:
 3165 0327 72785374 		.ascii	"rxStatus\000"
 3165      61747573 
 3165      00
 3166              	.LASF59:
 3167 0330 55415254 		.ascii	"UART_ACS_ClearTxBuffer\000"
 3167      5F414353 
 3167      5F436C65 
 3167      61725478 
 3167      42756666 
 3168              	.LASF34:
 3169 0347 55415254 		.ascii	"UART_ACS_GetChar\000"
 3169      5F414353 
 3169      5F476574 
 3169      43686172 
 3169      00
 3170              	.LASF32:
 3171 0358 55415254 		.ascii	"UART_ACS_ReadRxStatus\000"
 3171      5F414353 
 3171      5F526561 
 3171      64527853 
 3171      74617475 
 3172              	.LASF12:
 3173 036e 666C6F61 		.ascii	"float\000"
 3173      7400
 3174              	.LASF55:
 3175 0374 55415254 		.ascii	"UART_ACS_PutArray\000"
 3175      5F414353 
 3175      5F507574 
 3175      41727261 
 3175      7900
 3176              	.LASF46:
 3177 0386 55415254 		.ascii	"UART_ACS_SetTxInterruptMode\000"
 3177      5F414353 
 3177      5F536574 
 3177      5478496E 
 3177      74657272 
 3178              	.LASF25:
 3179 03a2 55415254 		.ascii	"UART_ACS_SetRxInterruptMode\000"
 3179      5F414353 
 3179      5F536574 
 3179      5278496E 
 3179      74657272 
 3180              	.LASF66:
 3181 03be 55415254 		.ascii	"UART_ACS_initVar\000"
 3181      5F414353 
 3181      5F696E69 
 3181      74566172 
 3181      00
 3182              	.LASF16:
 3183 03cf 72656738 		.ascii	"reg8\000"
 3183      00
 3184              	.LASF1:
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 89


 3185 03d4 756E7369 		.ascii	"unsigned char\000"
 3185      676E6564 
 3185      20636861 
 3185      7200
 3186              	.LASF2:
 3187 03e2 73686F72 		.ascii	"short int\000"
 3187      7420696E 
 3187      7400
 3188              	.LASF75:
 3189 03ec 433A5C55 		.ascii	"C:\\Users\\yqh\\Documents\\works\\NanoNXT\\Pass_TOC"
 3189      73657273 
 3189      5C797168 
 3189      5C446F63 
 3189      756D656E 
 3190 0419 5C332E35 		.ascii	"\\3.5.2\\nanoNxt_ICM3.cydsn\000"
 3190      2E325C6E 
 3190      616E6F4E 
 3190      78745F49 
 3190      434D332E 
 3191              	.LASF65:
 3192 0433 55415254 		.ascii	"UART_ACS_LoadTxConfig\000"
 3192      5F414353 
 3192      5F4C6F61 
 3192      64547843 
 3192      6F6E6669 
 3193              	.LASF63:
 3194 0449 55415254 		.ascii	"UART_ACS_SetTxAddressMode\000"
 3194      5F414353 
 3194      5F536574 
 3194      54784164 
 3194      64726573 
 3195              	.LASF24:
 3196 0463 55415254 		.ascii	"UART_ACS_WriteControlRegister\000"
 3196      5F414353 
 3196      5F577269 
 3196      7465436F 
 3196      6E74726F 
 3197              	.LASF56:
 3198 0481 62797465 		.ascii	"byteCount\000"
 3198      436F756E 
 3198      7400
 3199              	.LASF58:
 3200 048b 55415254 		.ascii	"UART_ACS_GetTxBufferSize\000"
 3200      5F414353 
 3200      5F476574 
 3200      54784275 
 3200      66666572 
 3201              	.LASF28:
 3202 04a4 72784461 		.ascii	"rxData\000"
 3202      746100
 3203              	.LASF20:
 3204 04ab 55415254 		.ascii	"UART_ACS_Init\000"
 3204      5F414353 
 3204      5F496E69 
 3204      7400
 3205              	.LASF43:
 3206 04b9 55415254 		.ascii	"UART_ACS_SetRxAddress1\000"
ARM GAS  C:\Users\yqh\AppData\Local\Temp\ccmEUbwg.s 			page 90


 3206      5F414353 
 3206      5F536574 
 3206      52784164 
 3206      64726573 
 3207              	.LASF45:
 3208 04d0 55415254 		.ascii	"UART_ACS_SetRxAddress2\000"
 3208      5F414353 
 3208      5F536574 
 3208      52784164 
 3208      64726573 
 3209              	.LASF15:
 3210 04e7 63686172 		.ascii	"char\000"
 3210      00
 3211              	.LASF14:
 3212 04ec 63686172 		.ascii	"char8\000"
 3212      3800
 3213              	.LASF29:
 3214 04f2 6C6F6352 		.ascii	"locRxBufferRead\000"
 3214      78427566 
 3214      66657252 
 3214      65616400 
 3215              	.LASF23:
 3216 0502 656E6162 		.ascii	"enableInterrupts\000"
 3216      6C65496E 
 3216      74657272 
 3216      75707473 
 3216      00
 3217              	.LASF33:
 3218 0513 73746174 		.ascii	"status\000"
 3218      757300
 3219              	.LASF41:
 3220 051a 55415254 		.ascii	"UART_ACS_SetRxAddressMode\000"
 3220      5F414353 
 3220      5F536574 
 3220      52784164 
 3220      64726573 
 3221              	.LASF71:
 3222 0534 55415254 		.ascii	"UART_ACS_rxBufferLoopDetect\000"
 3222      5F414353 
 3222      5F727842 
 3222      75666665 
 3222      724C6F6F 
 3223              	.LASF51:
 3224 0550 55415254 		.ascii	"UART_ACS_PutChar\000"
 3224      5F414353 
 3224      5F507574 
 3224      43686172 
 3224      00
 3225              	.LASF38:
 3226 0561 55415254 		.ascii	"UART_ACS_GetRxBufferSize\000"
 3226      5F414353 
 3226      5F476574 
 3226      52784275 
 3226      66666572 
 3227              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
