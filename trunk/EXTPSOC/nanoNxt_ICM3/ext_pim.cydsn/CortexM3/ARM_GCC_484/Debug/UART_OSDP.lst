ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_OSDP.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_OSDP_initVar
  19              		.bss
  20              		.type	UART_OSDP_initVar, %object
  21              		.size	UART_OSDP_initVar, 1
  22              	UART_OSDP_initVar:
  23 0000 00       		.space	1
  24              		.global	UART_OSDP_errorStatus
  25              		.type	UART_OSDP_errorStatus, %object
  26              		.size	UART_OSDP_errorStatus, 1
  27              	UART_OSDP_errorStatus:
  28 0001 00       		.space	1
  29              		.comm	UART_OSDP_rxBuffer,256,4
  30              		.global	UART_OSDP_rxBufferRead
  31              		.align	1
  32              		.type	UART_OSDP_rxBufferRead, %object
  33              		.size	UART_OSDP_rxBufferRead, 2
  34              	UART_OSDP_rxBufferRead:
  35 0002 0000     		.space	2
  36              		.global	UART_OSDP_rxBufferWrite
  37              		.align	1
  38              		.type	UART_OSDP_rxBufferWrite, %object
  39              		.size	UART_OSDP_rxBufferWrite, 2
  40              	UART_OSDP_rxBufferWrite:
  41 0004 0000     		.space	2
  42              		.global	UART_OSDP_rxBufferLoopDetect
  43              		.type	UART_OSDP_rxBufferLoopDetect, %object
  44              		.size	UART_OSDP_rxBufferLoopDetect, 1
  45              	UART_OSDP_rxBufferLoopDetect:
  46 0006 00       		.space	1
  47              		.global	UART_OSDP_rxBufferOverflow
  48              		.type	UART_OSDP_rxBufferOverflow, %object
  49              		.size	UART_OSDP_rxBufferOverflow, 1
  50              	UART_OSDP_rxBufferOverflow:
  51 0007 00       		.space	1
  52              		.section	.text.UART_OSDP_Start,"ax",%progbits
  53              		.align	2
  54              		.global	UART_OSDP_Start
  55              		.thumb
  56              		.thumb_func
  57              		.type	UART_OSDP_Start, %function
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 2


  58              	UART_OSDP_Start:
  59              	.LFB0:
  60              		.file 1 ".\\Generated_Source\\PSoC5\\UART_OSDP.c"
   1:.\Generated_Source\PSoC5/UART_OSDP.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_OSDP.c **** * File Name: UART_OSDP.c
   3:.\Generated_Source\PSoC5/UART_OSDP.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_OSDP.c **** *
   5:.\Generated_Source\PSoC5/UART_OSDP.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_OSDP.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_OSDP.c **** *
   8:.\Generated_Source\PSoC5/UART_OSDP.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  10:.\Generated_Source\PSoC5/UART_OSDP.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_OSDP.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_OSDP.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_OSDP.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_OSDP.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_OSDP.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  17:.\Generated_Source\PSoC5/UART_OSDP.c **** #include "UART_OSDP.h"
  18:.\Generated_Source\PSoC5/UART_OSDP.c **** #if (UART_OSDP_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART_OSDP.c ****     #include "UART_OSDP_IntClock.h"
  20:.\Generated_Source\PSoC5/UART_OSDP.c **** #endif /* End UART_OSDP_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  22:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  23:.\Generated_Source\PSoC5/UART_OSDP.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_OSDP.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART_OSDP.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  27:.\Generated_Source\PSoC5/UART_OSDP.c **** uint8 UART_OSDP_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  29:.\Generated_Source\PSoC5/UART_OSDP.c **** #if (UART_OSDP_TX_INTERRUPT_ENABLED && UART_OSDP_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART_OSDP.c ****     volatile uint8 UART_OSDP_txBuffer[UART_OSDP_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART_OSDP.c ****     volatile uint8 UART_OSDP_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 UART_OSDP_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_OSDP.c **** #endif /* (UART_OSDP_TX_INTERRUPT_ENABLED && UART_OSDP_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  35:.\Generated_Source\PSoC5/UART_OSDP.c **** #if (UART_OSDP_RX_INTERRUPT_ENABLED && (UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 UART_OSDP_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART_OSDP.c ****     volatile uint8 UART_OSDP_rxBuffer[UART_OSDP_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART_OSDP.c ****     volatile uint16 UART_OSDP_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART_OSDP.c ****     volatile uint16 UART_OSDP_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART_OSDP.c ****     volatile uint8 UART_OSDP_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART_OSDP.c ****     volatile uint8 UART_OSDP_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART_OSDP.c ****         volatile uint8 UART_OSDP_rxAddressMode = UART_OSDP_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART_OSDP.c ****         volatile uint8 UART_OSDP_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART_OSDP.c **** #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED && (UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  48:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  49:.\Generated_Source\PSoC5/UART_OSDP.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART_OSDP.c **** * Function Name: UART_OSDP_Start
  51:.\Generated_Source\PSoC5/UART_OSDP.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  53:.\Generated_Source\PSoC5/UART_OSDP.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART_OSDP.c **** *  This is the preferred method to begin component operation.
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 3


  55:.\Generated_Source\PSoC5/UART_OSDP.c **** *  UART_OSDP_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART_OSDP.c **** *  UART_OSDP_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART_OSDP.c **** *  UART_OSDP_Enable() function.
  58:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  59:.\Generated_Source\PSoC5/UART_OSDP.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  62:.\Generated_Source\PSoC5/UART_OSDP.c **** * Return:
  63:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
  64:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  65:.\Generated_Source\PSoC5/UART_OSDP.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART_OSDP.c **** *  The UART_OSDP_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART_OSDP.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART_OSDP.c **** *  and set to one (1u) the first time UART_OSDP_Start() is called. This
  69:.\Generated_Source\PSoC5/UART_OSDP.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART_OSDP.c **** *  subsequent calls to the UART_OSDP_Start() routine.
  71:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  72:.\Generated_Source\PSoC5/UART_OSDP.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART_OSDP.c **** *  No.
  74:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  75:.\Generated_Source\PSoC5/UART_OSDP.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART_OSDP.c **** void UART_OSDP_Start(void) 
  77:.\Generated_Source\PSoC5/UART_OSDP.c **** {
  61              		.loc 1 77 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/UART_OSDP.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART_OSDP.c ****     if(UART_OSDP_initVar == 0u)
  71              		.loc 1 79 0
  72 0004 054B     		ldr	r3, .L3
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74 0008 002B     		cmp	r3, #0
  75 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
  81:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_Init();
  76              		.loc 1 81 0
  77 000c FFF7FEFF 		bl	UART_OSDP_Init
  82:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_initVar = 1u;
  78              		.loc 1 82 0
  79 0010 024B     		ldr	r3, .L3
  80 0012 0122     		movs	r2, #1
  81 0014 1A70     		strb	r2, [r3]
  82              	.L2:
  83:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
  84:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  85:.\Generated_Source\PSoC5/UART_OSDP.c ****     UART_OSDP_Enable();
  83              		.loc 1 85 0
  84 0016 FFF7FEFF 		bl	UART_OSDP_Enable
  86:.\Generated_Source\PSoC5/UART_OSDP.c **** }
  85              		.loc 1 86 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 4


  86 001a 80BD     		pop	{r7, pc}
  87              	.L4:
  88              		.align	2
  89              	.L3:
  90 001c 00000000 		.word	UART_OSDP_initVar
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	UART_OSDP_Start, .-UART_OSDP_Start
  94              		.section	.text.UART_OSDP_Init,"ax",%progbits
  95              		.align	2
  96              		.global	UART_OSDP_Init
  97              		.thumb
  98              		.thumb_func
  99              		.type	UART_OSDP_Init, %function
 100              	UART_OSDP_Init:
 101              	.LFB1:
  87:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  88:.\Generated_Source\PSoC5/UART_OSDP.c **** 
  89:.\Generated_Source\PSoC5/UART_OSDP.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART_OSDP.c **** * Function Name: UART_OSDP_Init
  91:.\Generated_Source\PSoC5/UART_OSDP.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  93:.\Generated_Source\PSoC5/UART_OSDP.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART_OSDP.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART_OSDP.c **** *  dialog settings. It is not necessary to call UART_OSDP_Init() because
  96:.\Generated_Source\PSoC5/UART_OSDP.c **** *  the UART_OSDP_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART_OSDP.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART_OSDP.c **** *
  99:.\Generated_Source\PSoC5/UART_OSDP.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
 101:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 102:.\Generated_Source\PSoC5/UART_OSDP.c **** * Return:
 103:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
 104:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 105:.\Generated_Source\PSoC5/UART_OSDP.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART_OSDP.c **** void UART_OSDP_Init(void) 
 107:.\Generated_Source\PSoC5/UART_OSDP.c **** {
 102              		.loc 1 107 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if(UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 110:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART_OSDP.c ****             (void) CyIntSetVector(UART_OSDP_RX_VECT_NUM, &UART_OSDP_RXISR);
 112              		.loc 1 112 0
 113 0004 0020     		movs	r0, #0
 114 0006 0849     		ldr	r1, .L6
 115 0008 FFF7FEFF 		bl	CyIntSetVector
 113:.\Generated_Source\PSoC5/UART_OSDP.c ****             CyIntSetPriority(UART_OSDP_RX_VECT_NUM, UART_OSDP_RX_PRIOR_NUM);
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 5


 116              		.loc 1 113 0
 117 000c 0020     		movs	r0, #0
 118 000e 0721     		movs	r1, #7
 119 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_errorStatus = 0u;
 120              		.loc 1 114 0
 121 0014 054B     		ldr	r3, .L6+4
 122 0016 0022     		movs	r2, #0
 123 0018 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 117:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_SetRxAddressMode(UART_OSDP_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_SetRxAddress1(UART_OSDP_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_SetRxAddress2(UART_OSDP_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* End UART_OSDP_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 123:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXBITCTR_PERIOD_REG = UART_OSDP_RXBITCTR_INIT;
 124              		.loc 1 124 0
 125 001a 054B     		ldr	r3, .L6+8
 126 001c 7222     		movs	r2, #114
 127 001e 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXSTATUS_MASK_REG  = UART_OSDP_INIT_RX_INTERRUPTS_MASK;
 128              		.loc 1 126 0
 129 0020 044B     		ldr	r3, .L6+12
 130 0022 2022     		movs	r2, #32
 131 0024 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* End UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 129:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if(UART_OSDP_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART_OSDP.c ****             (void) CyIntSetVector(UART_OSDP_TX_VECT_NUM, &UART_OSDP_TXISR);
 133:.\Generated_Source\PSoC5/UART_OSDP.c ****             CyIntSetPriority(UART_OSDP_TX_VECT_NUM, UART_OSDP_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 136:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXBITCLKGEN_CTR_REG = UART_OSDP_BIT_CENTER;
 139:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXBITCLKTX_COMPLETE_REG = ((UART_OSDP_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC5/UART_OSDP.c ****                         UART_OSDP_NUMBER_OF_START_BIT) * UART_OSDP_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART_OSDP.c ****         #else
 142:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXBITCTR_PERIOD_REG = ((UART_OSDP_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART_OSDP.c ****                         UART_OSDP_NUMBER_OF_START_BIT) * UART_OSDP_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* End UART_OSDP_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 146:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXSTATUS_MASK_REG = UART_OSDP_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART_OSDP.c ****         #else
 150:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXSTATUS_MASK_REG = UART_OSDP_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /*End UART_OSDP_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 153:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* End UART_OSDP_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART_OSDP.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 6


 155:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if(UART_OSDP_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART_OSDP.c ****             (UART_OSDP_ReadControlRegister() & (uint8)~UART_OSDP_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART_OSDP.c ****             (uint8)(UART_OSDP_PARITY_TYPE << UART_OSDP_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* End UART_OSDP_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART_OSDP.c **** }
 132              		.loc 1 160 0
 133 0026 80BD     		pop	{r7, pc}
 134              	.L7:
 135              		.align	2
 136              	.L6:
 137 0028 00000000 		.word	UART_OSDP_RXISR
 138 002c 00000000 		.word	UART_OSDP_errorStatus
 139 0030 8B650040 		.word	1073767819
 140 0034 8A650040 		.word	1073767818
 141              		.cfi_endproc
 142              	.LFE1:
 143              		.size	UART_OSDP_Init, .-UART_OSDP_Init
 144              		.section	.text.UART_OSDP_Enable,"ax",%progbits
 145              		.align	2
 146              		.global	UART_OSDP_Enable
 147              		.thumb
 148              		.thumb_func
 149              		.type	UART_OSDP_Enable, %function
 150              	UART_OSDP_Enable:
 151              	.LFB2:
 161:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 162:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 163:.\Generated_Source\PSoC5/UART_OSDP.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART_OSDP.c **** * Function Name: UART_OSDP_Enable
 165:.\Generated_Source\PSoC5/UART_OSDP.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 167:.\Generated_Source\PSoC5/UART_OSDP.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART_OSDP.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART_OSDP.c **** *  to call UART_OSDP_Enable() because the UART_OSDP_Start() API
 170:.\Generated_Source\PSoC5/UART_OSDP.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART_OSDP.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 173:.\Generated_Source\PSoC5/UART_OSDP.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
 175:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 176:.\Generated_Source\PSoC5/UART_OSDP.c **** * Return:
 177:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
 178:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 179:.\Generated_Source\PSoC5/UART_OSDP.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART_OSDP.c **** *  UART_OSDP_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 182:.\Generated_Source\PSoC5/UART_OSDP.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_OSDP.c **** void UART_OSDP_Enable(void) 
 184:.\Generated_Source\PSoC5/UART_OSDP.c **** {
 152              		.loc 1 184 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 7


 159              		.cfi_offset 14, -4
 160 0002 82B0     		sub	sp, sp, #8
 161              		.cfi_def_cfa_offset 16
 162 0004 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART_OSDP.c ****     enableInterrupts = CyEnterCriticalSection();
 164              		.loc 1 186 0
 165 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 166 000a 0346     		mov	r3, r0
 167 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 188:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXBITCTR_CONTROL_REG |= UART_OSDP_CNTR_ENABLE;
 168              		.loc 1 190 0
 169 000e 0D4B     		ldr	r3, .L9
 170 0010 0C4A     		ldr	r2, .L9
 171 0012 1278     		ldrb	r2, [r2]
 172 0014 D2B2     		uxtb	r2, r2
 173 0016 42F02002 		orr	r2, r2, #32
 174 001a D2B2     		uxtb	r2, r2
 175 001c 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 192:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXSTATUS_ACTL_REG  |= UART_OSDP_INT_ENABLE;
 176              		.loc 1 193 0
 177 001e 0A4B     		ldr	r3, .L9+4
 178 0020 094A     		ldr	r2, .L9+4
 179 0022 1278     		ldrb	r2, [r2]
 180 0024 D2B2     		uxtb	r2, r2
 181 0026 42F01002 		orr	r2, r2, #16
 182 002a D2B2     		uxtb	r2, r2
 183 002c 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 195:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_EnableRxInt();
 184              		.loc 1 196 0
 185 002e 074B     		ldr	r3, .L9+8
 186 0030 0122     		movs	r2, #1
 187 0032 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 198:.\Generated_Source\PSoC5/UART_OSDP.c ****             #if (UART_OSDP_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART_OSDP.c ****             #endif /* (UART_OSDP_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 204:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if(UART_OSDP_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if(!UART_OSDP_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXBITCTR_CONTROL_REG |= UART_OSDP_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* End UART_OSDP_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 210:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_TXSTATUS_ACTL_REG |= UART_OSDP_INT_ENABLE;
 212:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_TX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 8


 213:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART_OSDP.c ****      #endif /* (UART_OSDP_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 218:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_IntClock_Start();  /* Enable the clock */
 220:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 222:.\Generated_Source\PSoC5/UART_OSDP.c ****     CyExitCriticalSection(enableInterrupts);
 188              		.loc 1 222 0
 189 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 190 0036 1846     		mov	r0, r3
 191 0038 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/UART_OSDP.c **** }
 192              		.loc 1 223 0
 193 003c 0837     		adds	r7, r7, #8
 194 003e BD46     		mov	sp, r7
 195              		@ sp needed
 196 0040 80BD     		pop	{r7, pc}
 197              	.L10:
 198 0042 00BF     		.align	2
 199              	.L9:
 200 0044 9B650040 		.word	1073767835
 201 0048 9A650040 		.word	1073767834
 202 004c 00E100E0 		.word	-536813312
 203              		.cfi_endproc
 204              	.LFE2:
 205              		.size	UART_OSDP_Enable, .-UART_OSDP_Enable
 206              		.section	.text.UART_OSDP_Stop,"ax",%progbits
 207              		.align	2
 208              		.global	UART_OSDP_Stop
 209              		.thumb
 210              		.thumb_func
 211              		.type	UART_OSDP_Stop, %function
 212              	UART_OSDP_Stop:
 213              	.LFB3:
 224:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 225:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 226:.\Generated_Source\PSoC5/UART_OSDP.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART_OSDP.c **** * Function Name: UART_OSDP_Stop
 228:.\Generated_Source\PSoC5/UART_OSDP.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 230:.\Generated_Source\PSoC5/UART_OSDP.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART_OSDP.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 233:.\Generated_Source\PSoC5/UART_OSDP.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
 235:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 236:.\Generated_Source\PSoC5/UART_OSDP.c **** * Return:
 237:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
 238:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 239:.\Generated_Source\PSoC5/UART_OSDP.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART_OSDP.c **** void UART_OSDP_Stop(void) 
 241:.\Generated_Source\PSoC5/UART_OSDP.c **** {
 214              		.loc 1 241 0
 215              		.cfi_startproc
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 9


 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART_OSDP.c ****     enableInterrupts = CyEnterCriticalSection();
 226              		.loc 1 243 0
 227 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 228 000a 0346     		mov	r3, r0
 229 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 245:.\Generated_Source\PSoC5/UART_OSDP.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXBITCTR_CONTROL_REG &= (uint8) ~UART_OSDP_CNTR_ENABLE;
 230              		.loc 1 247 0
 231 000e 0D4B     		ldr	r3, .L12
 232 0010 0C4A     		ldr	r2, .L12
 233 0012 1278     		ldrb	r2, [r2]
 234 0014 D2B2     		uxtb	r2, r2
 235 0016 22F02002 		bic	r2, r2, #32
 236 001a D2B2     		uxtb	r2, r2
 237 001c 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 250:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if(!UART_OSDP_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXBITCTR_CONTROL_REG &= (uint8) ~UART_OSDP_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (!UART_OSDP_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 256:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 260:.\Generated_Source\PSoC5/UART_OSDP.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXSTATUS_ACTL_REG  &= (uint8) ~UART_OSDP_INT_ENABLE;
 238              		.loc 1 262 0
 239 001e 0A4B     		ldr	r3, .L12+4
 240 0020 094A     		ldr	r2, .L12+4
 241 0022 1278     		ldrb	r2, [r2]
 242 0024 D2B2     		uxtb	r2, r2
 243 0026 22F01002 		bic	r2, r2, #16
 244 002a D2B2     		uxtb	r2, r2
 245 002c 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 264:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_DisableRxInt();
 246              		.loc 1 265 0
 247 002e 074B     		ldr	r3, .L12+8
 248 0030 0122     		movs	r2, #1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 10


 249 0032 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 269:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_TXSTATUS_ACTL_REG &= (uint8) ~UART_OSDP_INT_ENABLE;
 271:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 272:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 277:.\Generated_Source\PSoC5/UART_OSDP.c ****     CyExitCriticalSection(enableInterrupts);
 250              		.loc 1 277 0
 251 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 252 0036 1846     		mov	r0, r3
 253 0038 FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/UART_OSDP.c **** }
 254              		.loc 1 278 0
 255 003c 0837     		adds	r7, r7, #8
 256 003e BD46     		mov	sp, r7
 257              		@ sp needed
 258 0040 80BD     		pop	{r7, pc}
 259              	.L13:
 260 0042 00BF     		.align	2
 261              	.L12:
 262 0044 9B650040 		.word	1073767835
 263 0048 9A650040 		.word	1073767834
 264 004c 80E100E0 		.word	-536813184
 265              		.cfi_endproc
 266              	.LFE3:
 267              		.size	UART_OSDP_Stop, .-UART_OSDP_Stop
 268              		.section	.text.UART_OSDP_ReadControlRegister,"ax",%progbits
 269              		.align	2
 270              		.global	UART_OSDP_ReadControlRegister
 271              		.thumb
 272              		.thumb_func
 273              		.type	UART_OSDP_ReadControlRegister, %function
 274              	UART_OSDP_ReadControlRegister:
 275              	.LFB4:
 279:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 280:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 281:.\Generated_Source\PSoC5/UART_OSDP.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART_OSDP.c **** * Function Name: UART_OSDP_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART_OSDP.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 285:.\Generated_Source\PSoC5/UART_OSDP.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART_OSDP.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 288:.\Generated_Source\PSoC5/UART_OSDP.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
 290:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 291:.\Generated_Source\PSoC5/UART_OSDP.c **** * Return:
 292:.\Generated_Source\PSoC5/UART_OSDP.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 294:.\Generated_Source\PSoC5/UART_OSDP.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART_OSDP.c **** uint8 UART_OSDP_ReadControlRegister(void) 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 11


 296:.\Generated_Source\PSoC5/UART_OSDP.c **** {
 276              		.loc 1 296 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281 0000 80B4     		push	{r7}
 282              		.cfi_def_cfa_offset 4
 283              		.cfi_offset 7, -4
 284 0002 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART_OSDP.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART_OSDP.c ****     #else
 300:.\Generated_Source\PSoC5/UART_OSDP.c ****         return(UART_OSDP_CONTROL_REG);
 286              		.loc 1 300 0
 287 0004 034B     		ldr	r3, .L16
 288 0006 1B78     		ldrb	r3, [r3]
 289 0008 DBB2     		uxtb	r3, r3
 301:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART_OSDP.c **** }
 290              		.loc 1 302 0
 291 000a 1846     		mov	r0, r3
 292 000c BD46     		mov	sp, r7
 293              		@ sp needed
 294 000e 5DF8047B 		ldr	r7, [sp], #4
 295 0012 7047     		bx	lr
 296              	.L17:
 297              		.align	2
 298              	.L16:
 299 0014 79640040 		.word	1073767545
 300              		.cfi_endproc
 301              	.LFE4:
 302              		.size	UART_OSDP_ReadControlRegister, .-UART_OSDP_ReadControlRegister
 303              		.section	.text.UART_OSDP_WriteControlRegister,"ax",%progbits
 304              		.align	2
 305              		.global	UART_OSDP_WriteControlRegister
 306              		.thumb
 307              		.thumb_func
 308              		.type	UART_OSDP_WriteControlRegister, %function
 309              	UART_OSDP_WriteControlRegister:
 310              	.LFB5:
 303:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 304:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 305:.\Generated_Source\PSoC5/UART_OSDP.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART_OSDP.c **** * Function Name: UART_OSDP_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART_OSDP.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 309:.\Generated_Source\PSoC5/UART_OSDP.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART_OSDP.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 312:.\Generated_Source\PSoC5/UART_OSDP.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART_OSDP.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART_OSDP.c **** *
 315:.\Generated_Source\PSoC5/UART_OSDP.c **** * Return:
 316:.\Generated_Source\PSoC5/UART_OSDP.c **** *  None.
 317:.\Generated_Source\PSoC5/UART_OSDP.c **** *
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 12


 318:.\Generated_Source\PSoC5/UART_OSDP.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART_OSDP.c **** void  UART_OSDP_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART_OSDP.c **** {
 311              		.loc 1 320 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 8
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316 0000 80B4     		push	{r7}
 317              		.cfi_def_cfa_offset 4
 318              		.cfi_offset 7, -4
 319 0002 83B0     		sub	sp, sp, #12
 320              		.cfi_def_cfa_offset 16
 321 0004 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
 323 0006 0346     		mov	r3, r0
 324 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 324:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 326:.\Generated_Source\PSoC5/UART_OSDP.c ****     #else
 327:.\Generated_Source\PSoC5/UART_OSDP.c ****        UART_OSDP_CONTROL_REG = control;
 325              		.loc 1 327 0
 326 000a 044B     		ldr	r3, .L19
 327 000c FA79     		ldrb	r2, [r7, #7]
 328 000e 1A70     		strb	r2, [r3]
 328:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART_OSDP.c **** }
 329              		.loc 1 329 0
 330 0010 0C37     		adds	r7, r7, #12
 331 0012 BD46     		mov	sp, r7
 332              		@ sp needed
 333 0014 5DF8047B 		ldr	r7, [sp], #4
 334 0018 7047     		bx	lr
 335              	.L20:
 336 001a 00BF     		.align	2
 337              	.L19:
 338 001c 79640040 		.word	1073767545
 339              		.cfi_endproc
 340              	.LFE5:
 341              		.size	UART_OSDP_WriteControlRegister, .-UART_OSDP_WriteControlRegister
 342              		.section	.text.UART_OSDP_SetRxInterruptMode,"ax",%progbits
 343              		.align	2
 344              		.global	UART_OSDP_SetRxInterruptMode
 345              		.thumb
 346              		.thumb_func
 347              		.type	UART_OSDP_SetRxInterruptMode, %function
 348              	UART_OSDP_SetRxInterruptMode:
 349              	.LFB6:
 330:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 331:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 332:.\Generated_Source\PSoC5/UART_OSDP.c **** #if(UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 13


 336:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 337:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 340:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      UART_OSDP_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      UART_OSDP_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      UART_OSDP_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      UART_OSDP_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      UART_OSDP_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      UART_OSDP_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      UART_OSDP_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 352:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 355:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 358:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 350              		.loc 1 360 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 8
 353              		@ frame_needed = 1, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355 0000 80B4     		push	{r7}
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              		.cfi_def_cfa_offset 16
 360 0004 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 362 0006 0346     		mov	r3, r0
 363 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXSTATUS_MASK_REG  = intSrc;
 364              		.loc 1 361 0
 365 000a 044B     		ldr	r3, .L22
 366 000c FA79     		ldrb	r2, [r7, #7]
 367 000e 1A70     		strb	r2, [r3]
 362:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 368              		.loc 1 362 0
 369 0010 0C37     		adds	r7, r7, #12
 370 0012 BD46     		mov	sp, r7
 371              		@ sp needed
 372 0014 5DF8047B 		ldr	r7, [sp], #4
 373 0018 7047     		bx	lr
 374              	.L23:
 375 001a 00BF     		.align	2
 376              	.L22:
 377 001c 8A650040 		.word	1073767818
 378              		.cfi_endproc
 379              	.LFE6:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 14


 380              		.size	UART_OSDP_SetRxInterruptMode, .-UART_OSDP_SetRxInterruptMode
 381              		.section	.text.UART_OSDP_ReadRxData,"ax",%progbits
 382              		.align	2
 383              		.global	UART_OSDP_ReadRxData
 384              		.thumb
 385              		.thumb_func
 386              		.type	UART_OSDP_ReadRxData, %function
 387              	UART_OSDP_ReadRxData:
 388              	.LFB7:
 363:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 364:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 365:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_ReadRxData
 367:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 369:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 373:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 376:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 379:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 388:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 391:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 UART_OSDP_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 389              		.loc 1 393 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 8
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394 0000 80B4     		push	{r7}
 395              		.cfi_def_cfa_offset 4
 396              		.cfi_offset 7, -4
 397 0002 83B0     		sub	sp, sp, #12
 398              		.cfi_def_cfa_offset 16
 399 0004 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 396:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 398:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint16 locRxBufferRead;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 15


 399:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint16 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 401:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_DisableRxInt();
 401              		.loc 1 402 0
 402 0006 1C4B     		ldr	r3, .L31
 403 0008 0122     		movs	r2, #1
 404 000a 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 404:.\Generated_Source\PSoC5/UART_OSDP.c ****         locRxBufferRead  = UART_OSDP_rxBufferRead;
 405              		.loc 1 404 0
 406 000c 1B4B     		ldr	r3, .L31+4
 407 000e 1B88     		ldrh	r3, [r3]	@ movhi
 408 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 405:.\Generated_Source\PSoC5/UART_OSDP.c ****         locRxBufferWrite = UART_OSDP_rxBufferWrite;
 409              		.loc 1 405 0
 410 0012 1B4B     		ldr	r3, .L31+8
 411 0014 1B88     		ldrh	r3, [r3]	@ movhi
 412 0016 7B80     		strh	r3, [r7, #2]	@ movhi
 406:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 407:.\Generated_Source\PSoC5/UART_OSDP.c ****         if( (UART_OSDP_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 413              		.loc 1 407 0
 414 0018 1A4B     		ldr	r3, .L31+12
 415 001a 1B78     		ldrb	r3, [r3]
 416 001c DBB2     		uxtb	r3, r3
 417 001e 002B     		cmp	r3, #0
 418 0020 03D1     		bne	.L25
 419              		.loc 1 407 0 is_stmt 0 discriminator 1
 420 0022 BA88     		ldrh	r2, [r7, #4]
 421 0024 7B88     		ldrh	r3, [r7, #2]
 422 0026 9A42     		cmp	r2, r3
 423 0028 18D0     		beq	.L26
 424              	.L25:
 408:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 409:.\Generated_Source\PSoC5/UART_OSDP.c ****             rxData = UART_OSDP_rxBuffer[locRxBufferRead];
 425              		.loc 1 409 0 is_stmt 1
 426 002a BB88     		ldrh	r3, [r7, #4]
 427 002c 164A     		ldr	r2, .L31+16
 428 002e D35C     		ldrb	r3, [r2, r3]
 429 0030 FB71     		strb	r3, [r7, #7]
 410:.\Generated_Source\PSoC5/UART_OSDP.c ****             locRxBufferRead++;
 430              		.loc 1 410 0
 431 0032 BB88     		ldrh	r3, [r7, #4]
 432 0034 0133     		adds	r3, r3, #1
 433 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 411:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 412:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(locRxBufferRead >= UART_OSDP_RX_BUFFER_SIZE)
 434              		.loc 1 412 0
 435 0038 BB88     		ldrh	r3, [r7, #4]
 436 003a FF2B     		cmp	r3, #255
 437 003c 01D9     		bls	.L27
 413:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 414:.\Generated_Source\PSoC5/UART_OSDP.c ****                 locRxBufferRead = 0u;
 438              		.loc 1 414 0
 439 003e 0023     		movs	r3, #0
 440 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 441              	.L27:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 16


 415:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 416:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_rxBufferRead = locRxBufferRead;
 442              		.loc 1 417 0
 443 0042 0E4B     		ldr	r3, .L31+4
 444 0044 BA88     		ldrh	r2, [r7, #4]	@ movhi
 445 0046 1A80     		strh	r2, [r3]	@ movhi
 418:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 419:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(UART_OSDP_rxBufferLoopDetect != 0u)
 446              		.loc 1 419 0
 447 0048 0E4B     		ldr	r3, .L31+12
 448 004a 1B78     		ldrb	r3, [r3]
 449 004c DBB2     		uxtb	r3, r3
 450 004e 002B     		cmp	r3, #0
 451 0050 03D0     		beq	.L28
 420:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 421:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_rxBufferLoopDetect = 0u;
 452              		.loc 1 421 0
 453 0052 0C4B     		ldr	r3, .L31+12
 454 0054 0022     		movs	r2, #0
 455 0056 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(UART_OSDP_rxBufferLoopDetect != 0u)
 456              		.loc 1 419 0
 457 0058 03E0     		b	.L29
 458              	.L28:
 419:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(UART_OSDP_rxBufferLoopDetect != 0u)
 459              		.loc 1 419 0 is_stmt 0 discriminator 1
 460 005a 02E0     		b	.L29
 461              	.L26:
 422:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #if ((UART_OSDP_RX_INTERRUPT_ENABLED) && (UART_OSDP_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART_OSDP.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART_OSDP.c ****                     #if( UART_OSDP_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART_OSDP.c ****                         if((UART_OSDP_CONTROL_REG & UART_OSDP_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART_OSDP.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART_OSDP.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART_OSDP.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART_OSDP.c ****                             */
 430:.\Generated_Source\PSoC5/UART_OSDP.c ****                             UART_OSDP_RXSTATUS_MASK_REG  |= UART_OSDP_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART_OSDP.c ****                         }
 432:.\Generated_Source\PSoC5/UART_OSDP.c ****                     #else
 433:.\Generated_Source\PSoC5/UART_OSDP.c ****                         UART_OSDP_RXSTATUS_MASK_REG  |= UART_OSDP_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART_OSDP.c ****                     #endif /* end UART_OSDP_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #endif /* ((UART_OSDP_RX_INTERRUPT_ENABLED) && (UART_OSDP_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 437:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 438:.\Generated_Source\PSoC5/UART_OSDP.c ****         else
 439:.\Generated_Source\PSoC5/UART_OSDP.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART_OSDP.c ****             rxData = UART_OSDP_RXDATA_REG;
 462              		.loc 1 440 0 is_stmt 1
 463 005c 0B4B     		ldr	r3, .L31+20
 464 005e 1B78     		ldrb	r3, [r3]
 465 0060 FB71     		strb	r3, [r7, #7]
 466              	.L29:
 441:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 442:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 443:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_EnableRxInt();
 467              		.loc 1 443 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 17


 468 0062 0B4B     		ldr	r3, .L31+24
 469 0064 0122     		movs	r2, #1
 470 0066 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 445:.\Generated_Source\PSoC5/UART_OSDP.c ****     #else
 446:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 447:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART_OSDP.c ****         rxData = UART_OSDP_RXDATA_REG;
 449:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 450:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 452:.\Generated_Source\PSoC5/UART_OSDP.c ****         return(rxData);
 471              		.loc 1 452 0
 472 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 473              		.loc 1 453 0
 474 006a 1846     		mov	r0, r3
 475 006c 0C37     		adds	r7, r7, #12
 476 006e BD46     		mov	sp, r7
 477              		@ sp needed
 478 0070 5DF8047B 		ldr	r7, [sp], #4
 479 0074 7047     		bx	lr
 480              	.L32:
 481 0076 00BF     		.align	2
 482              	.L31:
 483 0078 80E100E0 		.word	-536813184
 484 007c 00000000 		.word	UART_OSDP_rxBufferRead
 485 0080 00000000 		.word	UART_OSDP_rxBufferWrite
 486 0084 00000000 		.word	UART_OSDP_rxBufferLoopDetect
 487 0088 00000000 		.word	UART_OSDP_rxBuffer
 488 008c 49640040 		.word	1073767497
 489 0090 00E100E0 		.word	-536813312
 490              		.cfi_endproc
 491              	.LFE7:
 492              		.size	UART_OSDP_ReadRxData, .-UART_OSDP_ReadRxData
 493              		.section	.text.UART_OSDP_ReadRxStatus,"ax",%progbits
 494              		.align	2
 495              		.global	UART_OSDP_ReadRxStatus
 496              		.thumb
 497              		.thumb_func
 498              		.type	UART_OSDP_ReadRxStatus, %function
 499              	UART_OSDP_ReadRxStatus:
 500              	.LFB8:
 454:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 455:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 456:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 460:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 464:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 467:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 18


 468:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 470:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 476:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 484:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 UART_OSDP_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 501              		.loc 1 486 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 83B0     		sub	sp, sp, #12
 510              		.cfi_def_cfa_offset 16
 511 0004 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 489:.\Generated_Source\PSoC5/UART_OSDP.c ****         status = UART_OSDP_RXSTATUS_REG & UART_OSDP_RX_HW_MASK;
 513              		.loc 1 489 0
 514 0006 0C4B     		ldr	r3, .L36
 515 0008 1B78     		ldrb	r3, [r3]
 516 000a DBB2     		uxtb	r3, r3
 517 000c 03F07F03 		and	r3, r3, #127
 518 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 491:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(UART_OSDP_rxBufferOverflow != 0u)
 519              		.loc 1 492 0
 520 0012 0A4B     		ldr	r3, .L36+4
 521 0014 1B78     		ldrb	r3, [r3]
 522 0016 DBB2     		uxtb	r3, r3
 523 0018 002B     		cmp	r3, #0
 524 001a 06D0     		beq	.L34
 493:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 494:.\Generated_Source\PSoC5/UART_OSDP.c ****             status |= UART_OSDP_RX_STS_SOFT_BUFF_OVER;
 525              		.loc 1 494 0
 526 001c FB79     		ldrb	r3, [r7, #7]
 527 001e 63F07F03 		orn	r3, r3, #127
 528 0022 FB71     		strb	r3, [r7, #7]
 495:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_rxBufferOverflow = 0u;
 529              		.loc 1 495 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 19


 530 0024 054B     		ldr	r3, .L36+4
 531 0026 0022     		movs	r2, #0
 532 0028 1A70     		strb	r2, [r3]
 533              	.L34:
 496:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 497:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 499:.\Generated_Source\PSoC5/UART_OSDP.c ****         return(status);
 534              		.loc 1 499 0
 535 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 536              		.loc 1 500 0
 537 002c 1846     		mov	r0, r3
 538 002e 0C37     		adds	r7, r7, #12
 539 0030 BD46     		mov	sp, r7
 540              		@ sp needed
 541 0032 5DF8047B 		ldr	r7, [sp], #4
 542 0036 7047     		bx	lr
 543              	.L37:
 544              		.align	2
 545              	.L36:
 546 0038 6A650040 		.word	1073767786
 547 003c 00000000 		.word	UART_OSDP_rxBufferOverflow
 548              		.cfi_endproc
 549              	.LFE8:
 550              		.size	UART_OSDP_ReadRxStatus, .-UART_OSDP_ReadRxStatus
 551              		.section	.text.UART_OSDP_GetChar,"ax",%progbits
 552              		.align	2
 553              		.global	UART_OSDP_GetChar
 554              		.thumb
 555              		.thumb_func
 556              		.type	UART_OSDP_GetChar, %function
 557              	UART_OSDP_GetChar:
 558              	.LFB9:
 501:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 502:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 503:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_GetChar
 505:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 507:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Returns the last received byte of data. UART_OSDP_GetChar() is
 509:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 512:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 515:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 519:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferRead - cyclic index for read from rxBuffer,
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 20


 524:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 528:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 531:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 UART_OSDP_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 559              		.loc 1 533 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564 0000 80B4     		push	{r7}
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 7, -4
 567 0002 83B0     		sub	sp, sp, #12
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 rxData = 0u;
 571              		.loc 1 534 0
 572 0006 0023     		movs	r3, #0
 573 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 537:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint16 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint16 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 541:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_DisableRxInt();
 574              		.loc 1 542 0
 575 000a 234B     		ldr	r3, .L45
 576 000c 0122     		movs	r2, #1
 577 000e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 544:.\Generated_Source\PSoC5/UART_OSDP.c ****         locRxBufferRead  = UART_OSDP_rxBufferRead;
 578              		.loc 1 544 0
 579 0010 224B     		ldr	r3, .L45+4
 580 0012 1B88     		ldrh	r3, [r3]	@ movhi
 581 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 545:.\Generated_Source\PSoC5/UART_OSDP.c ****         locRxBufferWrite = UART_OSDP_rxBufferWrite;
 582              		.loc 1 545 0
 583 0016 224B     		ldr	r3, .L45+8
 584 0018 1B88     		ldrh	r3, [r3]	@ movhi
 585 001a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 547:.\Generated_Source\PSoC5/UART_OSDP.c ****         if( (UART_OSDP_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 586              		.loc 1 547 0
 587 001c 214B     		ldr	r3, .L45+12
 588 001e 1B78     		ldrb	r3, [r3]
 589 0020 DBB2     		uxtb	r3, r3
 590 0022 002B     		cmp	r3, #0
 591 0024 03D1     		bne	.L39
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 21


 592              		.loc 1 547 0 is_stmt 0 discriminator 1
 593 0026 BA88     		ldrh	r2, [r7, #4]
 594 0028 7B88     		ldrh	r3, [r7, #2]
 595 002a 9A42     		cmp	r2, r3
 596 002c 18D0     		beq	.L40
 597              	.L39:
 548:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 549:.\Generated_Source\PSoC5/UART_OSDP.c ****             rxData = UART_OSDP_rxBuffer[locRxBufferRead];
 598              		.loc 1 549 0 is_stmt 1
 599 002e BB88     		ldrh	r3, [r7, #4]
 600 0030 1D4A     		ldr	r2, .L45+16
 601 0032 D35C     		ldrb	r3, [r2, r3]
 602 0034 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/UART_OSDP.c ****             locRxBufferRead++;
 603              		.loc 1 550 0
 604 0036 BB88     		ldrh	r3, [r7, #4]
 605 0038 0133     		adds	r3, r3, #1
 606 003a BB80     		strh	r3, [r7, #4]	@ movhi
 551:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(locRxBufferRead >= UART_OSDP_RX_BUFFER_SIZE)
 607              		.loc 1 551 0
 608 003c BB88     		ldrh	r3, [r7, #4]
 609 003e FF2B     		cmp	r3, #255
 610 0040 01D9     		bls	.L41
 552:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 553:.\Generated_Source\PSoC5/UART_OSDP.c ****                 locRxBufferRead = 0u;
 611              		.loc 1 553 0
 612 0042 0023     		movs	r3, #0
 613 0044 BB80     		strh	r3, [r7, #4]	@ movhi
 614              	.L41:
 554:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 555:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_rxBufferRead = locRxBufferRead;
 615              		.loc 1 556 0
 616 0046 154B     		ldr	r3, .L45+4
 617 0048 BA88     		ldrh	r2, [r7, #4]	@ movhi
 618 004a 1A80     		strh	r2, [r3]	@ movhi
 557:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 558:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(UART_OSDP_rxBufferLoopDetect != 0u)
 619              		.loc 1 558 0
 620 004c 154B     		ldr	r3, .L45+12
 621 004e 1B78     		ldrb	r3, [r3]
 622 0050 DBB2     		uxtb	r3, r3
 623 0052 002B     		cmp	r3, #0
 624 0054 03D0     		beq	.L42
 559:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 560:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_rxBufferLoopDetect = 0u;
 625              		.loc 1 560 0
 626 0056 134B     		ldr	r3, .L45+12
 627 0058 0022     		movs	r2, #0
 628 005a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(UART_OSDP_rxBufferLoopDetect != 0u)
 629              		.loc 1 558 0
 630 005c 12E0     		b	.L43
 631              	.L42:
 558:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(UART_OSDP_rxBufferLoopDetect != 0u)
 632              		.loc 1 558 0 is_stmt 0 discriminator 1
 633 005e 11E0     		b	.L43
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 22


 634              	.L40:
 561:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #if( (UART_OSDP_RX_INTERRUPT_ENABLED) && (UART_OSDP_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART_OSDP.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART_OSDP.c ****                     #if( UART_OSDP_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART_OSDP.c ****                         if((UART_OSDP_CONTROL_REG & UART_OSDP_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART_OSDP.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART_OSDP.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART_OSDP.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART_OSDP.c ****                             */
 569:.\Generated_Source\PSoC5/UART_OSDP.c ****                             UART_OSDP_RXSTATUS_MASK_REG |= UART_OSDP_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART_OSDP.c ****                         }
 571:.\Generated_Source\PSoC5/UART_OSDP.c ****                     #else
 572:.\Generated_Source\PSoC5/UART_OSDP.c ****                         UART_OSDP_RXSTATUS_MASK_REG |= UART_OSDP_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART_OSDP.c ****                     #endif /* end UART_OSDP_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #endif /* UART_OSDP_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 576:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 577:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 578:.\Generated_Source\PSoC5/UART_OSDP.c ****         else
 579:.\Generated_Source\PSoC5/UART_OSDP.c ****         {   rxStatus = UART_OSDP_RXSTATUS_REG;
 635              		.loc 1 579 0 is_stmt 1
 636 0060 124B     		ldr	r3, .L45+20
 637 0062 1B78     		ldrb	r3, [r3]
 638 0064 7B70     		strb	r3, [r7, #1]
 580:.\Generated_Source\PSoC5/UART_OSDP.c ****             if((rxStatus & UART_OSDP_RX_STS_FIFO_NOTEMPTY) != 0u)
 639              		.loc 1 580 0
 640 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 641 0068 03F02003 		and	r3, r3, #32
 642 006c 002B     		cmp	r3, #0
 643 006e 09D0     		beq	.L43
 581:.\Generated_Source\PSoC5/UART_OSDP.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART_OSDP.c ****                 rxData = UART_OSDP_RXDATA_REG;
 644              		.loc 1 582 0
 645 0070 0F4B     		ldr	r3, .L45+24
 646 0072 1B78     		ldrb	r3, [r3]
 647 0074 FB71     		strb	r3, [r7, #7]
 583:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART_OSDP.c ****                 if((rxStatus & (UART_OSDP_RX_STS_BREAK | UART_OSDP_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART_OSDP.c ****                                 UART_OSDP_RX_STS_STOP_ERROR | UART_OSDP_RX_STS_OVERRUN)) != 0u)
 648              		.loc 1 585 0
 649 0076 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 650 0078 03F01E03 		and	r3, r3, #30
 584:.\Generated_Source\PSoC5/UART_OSDP.c ****                 if((rxStatus & (UART_OSDP_RX_STS_BREAK | UART_OSDP_RX_STS_PAR_ERROR |
 651              		.loc 1 584 0
 652 007c 002B     		cmp	r3, #0
 653 007e 01D0     		beq	.L43
 586:.\Generated_Source\PSoC5/UART_OSDP.c ****                 {
 587:.\Generated_Source\PSoC5/UART_OSDP.c ****                     rxData = 0u;
 654              		.loc 1 587 0
 655 0080 0023     		movs	r3, #0
 656 0082 FB71     		strb	r3, [r7, #7]
 657              	.L43:
 588:.\Generated_Source\PSoC5/UART_OSDP.c ****                 }
 589:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 590:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 591:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 592:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_EnableRxInt();
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 23


 658              		.loc 1 592 0
 659 0084 0B4B     		ldr	r3, .L45+28
 660 0086 0122     		movs	r2, #1
 661 0088 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 594:.\Generated_Source\PSoC5/UART_OSDP.c ****     #else
 595:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 596:.\Generated_Source\PSoC5/UART_OSDP.c ****         rxStatus =UART_OSDP_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/UART_OSDP.c ****         if((rxStatus & UART_OSDP_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 599:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART_OSDP.c ****             rxData = UART_OSDP_RXDATA_REG;
 601:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 602:.\Generated_Source\PSoC5/UART_OSDP.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART_OSDP.c ****             if((rxStatus & (UART_OSDP_RX_STS_BREAK | UART_OSDP_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART_OSDP.c ****                             UART_OSDP_RX_STS_STOP_ERROR | UART_OSDP_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 606:.\Generated_Source\PSoC5/UART_OSDP.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 608:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 609:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 611:.\Generated_Source\PSoC5/UART_OSDP.c ****         return(rxData);
 662              		.loc 1 611 0
 663 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 664              		.loc 1 612 0
 665 008c 1846     		mov	r0, r3
 666 008e 0C37     		adds	r7, r7, #12
 667 0090 BD46     		mov	sp, r7
 668              		@ sp needed
 669 0092 5DF8047B 		ldr	r7, [sp], #4
 670 0096 7047     		bx	lr
 671              	.L46:
 672              		.align	2
 673              	.L45:
 674 0098 80E100E0 		.word	-536813184
 675 009c 00000000 		.word	UART_OSDP_rxBufferRead
 676 00a0 00000000 		.word	UART_OSDP_rxBufferWrite
 677 00a4 00000000 		.word	UART_OSDP_rxBufferLoopDetect
 678 00a8 00000000 		.word	UART_OSDP_rxBuffer
 679 00ac 6A650040 		.word	1073767786
 680 00b0 49640040 		.word	1073767497
 681 00b4 00E100E0 		.word	-536813312
 682              		.cfi_endproc
 683              	.LFE9:
 684              		.size	UART_OSDP_GetChar, .-UART_OSDP_GetChar
 685              		.section	.text.UART_OSDP_GetByte,"ax",%progbits
 686              		.align	2
 687              		.global	UART_OSDP_GetByte
 688              		.thumb
 689              		.thumb_func
 690              		.type	UART_OSDP_GetByte, %function
 691              	UART_OSDP_GetByte:
 692              	.LFB10:
 613:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 614:.\Generated_Source\PSoC5/UART_OSDP.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 24


 615:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_GetByte
 617:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 619:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 623:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 626:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 630:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 633:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint16 UART_OSDP_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 693              		.loc 1 635 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 8
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0000 90B5     		push	{r4, r7, lr}
 698              		.cfi_def_cfa_offset 12
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 83B0     		sub	sp, sp, #12
 703              		.cfi_def_cfa_offset 24
 704 0004 00AF     		add	r7, sp, #0
 705              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/UART_OSDP.c ****         
 637:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_DisableRxInt();
 706              		.loc 1 640 0
 707 0006 0C4B     		ldr	r3, .L49
 708 0008 0122     		movs	r2, #1
 709 000a 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC5/UART_OSDP.c ****         locErrorStatus = (uint16)UART_OSDP_errorStatus;
 710              		.loc 1 641 0
 711 000c 0B4B     		ldr	r3, .L49+4
 712 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 713 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_errorStatus = 0u;
 714              		.loc 1 642 0
 715 0012 0A4B     		ldr	r3, .L49+4
 716 0014 0022     		movs	r2, #0
 717 0016 1A70     		strb	r2, [r3]
 643:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_EnableRxInt();
 718              		.loc 1 643 0
 719 0018 094B     		ldr	r3, .L49+8
 720 001a 0122     		movs	r2, #1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 25


 721 001c 1A60     		str	r2, [r3]
 644:.\Generated_Source\PSoC5/UART_OSDP.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_OSDP_ReadRxData() );
 722              		.loc 1 644 0
 723 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 724 0020 1B02     		lsls	r3, r3, #8
 725 0022 9CB2     		uxth	r4, r3
 726 0024 FFF7FEFF 		bl	UART_OSDP_ReadRxData
 727 0028 0346     		mov	r3, r0
 728 002a 2343     		orrs	r3, r3, r4
 729 002c 9BB2     		uxth	r3, r3
 645:.\Generated_Source\PSoC5/UART_OSDP.c ****     #else
 646:.\Generated_Source\PSoC5/UART_OSDP.c ****         return ( ((uint16)UART_OSDP_ReadRxStatus() << 8u) | UART_OSDP_ReadRxData() );
 647:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* UART_OSDP_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART_OSDP.c ****         
 649:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 730              		.loc 1 649 0
 731 002e 1846     		mov	r0, r3
 732 0030 0C37     		adds	r7, r7, #12
 733 0032 BD46     		mov	sp, r7
 734              		@ sp needed
 735 0034 90BD     		pop	{r4, r7, pc}
 736              	.L50:
 737 0036 00BF     		.align	2
 738              	.L49:
 739 0038 80E100E0 		.word	-536813184
 740 003c 00000000 		.word	UART_OSDP_errorStatus
 741 0040 00E100E0 		.word	-536813312
 742              		.cfi_endproc
 743              	.LFE10:
 744              		.size	UART_OSDP_GetByte, .-UART_OSDP_GetByte
 745              		.section	.text.UART_OSDP_GetRxBufferSize,"ax",%progbits
 746              		.align	2
 747              		.global	UART_OSDP_GetRxBufferSize
 748              		.thumb
 749              		.thumb_func
 750              		.type	UART_OSDP_GetRxBufferSize, %function
 751              	UART_OSDP_GetRxBufferSize:
 752              	.LFB11:
 650:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 651:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 652:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 656:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 664:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 667:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  uint16: Number of bytes in the RX buffer. 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 26


 669:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 671:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 676:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 679:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 682:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint16 UART_OSDP_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                             
 685:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 753              		.loc 1 685 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 8
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758 0000 80B4     		push	{r7}
 759              		.cfi_def_cfa_offset 4
 760              		.cfi_offset 7, -4
 761 0002 83B0     		sub	sp, sp, #12
 762              		.cfi_def_cfa_offset 16
 763 0004 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint16 size;
 687:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 688:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 690:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_DisableRxInt();
 765              		.loc 1 691 0
 766 0006 1E4B     		ldr	r3, .L58
 767 0008 0122     		movs	r2, #1
 768 000a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 693:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(UART_OSDP_rxBufferRead == UART_OSDP_rxBufferWrite)
 769              		.loc 1 693 0
 770 000c 1D4B     		ldr	r3, .L58+4
 771 000e 1B88     		ldrh	r3, [r3]	@ movhi
 772 0010 9AB2     		uxth	r2, r3
 773 0012 1D4B     		ldr	r3, .L58+8
 774 0014 1B88     		ldrh	r3, [r3]	@ movhi
 775 0016 9BB2     		uxth	r3, r3
 776 0018 9A42     		cmp	r2, r3
 777 001a 0BD1     		bne	.L52
 694:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 695:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(UART_OSDP_rxBufferLoopDetect != 0u)
 778              		.loc 1 695 0
 779 001c 1B4B     		ldr	r3, .L58+12
 780 001e 1B78     		ldrb	r3, [r3]
 781 0020 DBB2     		uxtb	r3, r3
 782 0022 002B     		cmp	r3, #0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 27


 783 0024 03D0     		beq	.L53
 696:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 697:.\Generated_Source\PSoC5/UART_OSDP.c ****                 size = UART_OSDP_RX_BUFFER_SIZE;
 784              		.loc 1 697 0
 785 0026 4FF48073 		mov	r3, #256
 786 002a FB80     		strh	r3, [r7, #6]	@ movhi
 787 002c 1EE0     		b	.L55
 788              	.L53:
 698:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 699:.\Generated_Source\PSoC5/UART_OSDP.c ****             else
 700:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 701:.\Generated_Source\PSoC5/UART_OSDP.c ****                 size = 0u;
 789              		.loc 1 701 0
 790 002e 0023     		movs	r3, #0
 791 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 792 0032 1BE0     		b	.L55
 793              	.L52:
 702:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 703:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 704:.\Generated_Source\PSoC5/UART_OSDP.c ****         else if(UART_OSDP_rxBufferRead < UART_OSDP_rxBufferWrite)
 794              		.loc 1 704 0
 795 0034 134B     		ldr	r3, .L58+4
 796 0036 1B88     		ldrh	r3, [r3]	@ movhi
 797 0038 9AB2     		uxth	r2, r3
 798 003a 134B     		ldr	r3, .L58+8
 799 003c 1B88     		ldrh	r3, [r3]	@ movhi
 800 003e 9BB2     		uxth	r3, r3
 801 0040 9A42     		cmp	r2, r3
 802 0042 08D2     		bcs	.L56
 705:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 706:.\Generated_Source\PSoC5/UART_OSDP.c ****             size = (UART_OSDP_rxBufferWrite - UART_OSDP_rxBufferRead);
 803              		.loc 1 706 0
 804 0044 104B     		ldr	r3, .L58+8
 805 0046 1B88     		ldrh	r3, [r3]	@ movhi
 806 0048 9AB2     		uxth	r2, r3
 807 004a 0E4B     		ldr	r3, .L58+4
 808 004c 1B88     		ldrh	r3, [r3]	@ movhi
 809 004e 9BB2     		uxth	r3, r3
 810 0050 D31A     		subs	r3, r2, r3
 811 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 812 0054 0AE0     		b	.L55
 813              	.L56:
 707:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 708:.\Generated_Source\PSoC5/UART_OSDP.c ****         else
 709:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 710:.\Generated_Source\PSoC5/UART_OSDP.c ****             size = (UART_OSDP_RX_BUFFER_SIZE - UART_OSDP_rxBufferRead) + UART_OSDP_rxBufferWrite;
 814              		.loc 1 710 0
 815 0056 0C4B     		ldr	r3, .L58+8
 816 0058 1B88     		ldrh	r3, [r3]	@ movhi
 817 005a 9AB2     		uxth	r2, r3
 818 005c 094B     		ldr	r3, .L58+4
 819 005e 1B88     		ldrh	r3, [r3]	@ movhi
 820 0060 9BB2     		uxth	r3, r3
 821 0062 D31A     		subs	r3, r2, r3
 822 0064 9BB2     		uxth	r3, r3
 823 0066 03F58073 		add	r3, r3, #256
 824 006a FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 28


 825              	.L55:
 711:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 712:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 713:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_EnableRxInt();
 826              		.loc 1 713 0
 827 006c 084B     		ldr	r3, .L58+16
 828 006e 0122     		movs	r2, #1
 829 0070 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 715:.\Generated_Source\PSoC5/UART_OSDP.c ****     #else
 716:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 717:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART_OSDP.c ****         size = ((UART_OSDP_RXSTATUS_REG & UART_OSDP_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 720:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 722:.\Generated_Source\PSoC5/UART_OSDP.c ****         return(size);
 830              		.loc 1 722 0
 831 0072 FB88     		ldrh	r3, [r7, #6]
 723:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 832              		.loc 1 723 0
 833 0074 1846     		mov	r0, r3
 834 0076 0C37     		adds	r7, r7, #12
 835 0078 BD46     		mov	sp, r7
 836              		@ sp needed
 837 007a 5DF8047B 		ldr	r7, [sp], #4
 838 007e 7047     		bx	lr
 839              	.L59:
 840              		.align	2
 841              	.L58:
 842 0080 80E100E0 		.word	-536813184
 843 0084 00000000 		.word	UART_OSDP_rxBufferRead
 844 0088 00000000 		.word	UART_OSDP_rxBufferWrite
 845 008c 00000000 		.word	UART_OSDP_rxBufferLoopDetect
 846 0090 00E100E0 		.word	-536813312
 847              		.cfi_endproc
 848              	.LFE11:
 849              		.size	UART_OSDP_GetRxBufferSize, .-UART_OSDP_GetRxBufferSize
 850              		.section	.text.UART_OSDP_ClearRxBuffer,"ax",%progbits
 851              		.align	2
 852              		.global	UART_OSDP_ClearRxBuffer
 853              		.thumb
 854              		.thumb_func
 855              		.type	UART_OSDP_ClearRxBuffer, %function
 856              	UART_OSDP_ClearRxBuffer:
 857              	.LFB12:
 724:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 725:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 726:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 730:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 733:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 29


 735:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 736:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 739:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 745:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 748:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 753:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 756:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 858              		.loc 1 758 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 8
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 7, -8
 865              		.cfi_offset 14, -4
 866 0002 82B0     		sub	sp, sp, #8
 867              		.cfi_def_cfa_offset 16
 868 0004 00AF     		add	r7, sp, #0
 869              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 761:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART_OSDP.c ****         enableInterrupts = CyEnterCriticalSection();
 870              		.loc 1 762 0
 871 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 872 000a 0346     		mov	r3, r0
 873 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXDATA_AUX_CTL_REG |= (uint8)  UART_OSDP_RX_FIFO_CLR;
 874              		.loc 1 763 0
 875 000e 144B     		ldr	r3, .L61
 876 0010 134A     		ldr	r2, .L61
 877 0012 1278     		ldrb	r2, [r2]
 878 0014 D2B2     		uxtb	r2, r2
 879 0016 42F00102 		orr	r2, r2, #1
 880 001a D2B2     		uxtb	r2, r2
 881 001c 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXDATA_AUX_CTL_REG &= (uint8) ~UART_OSDP_RX_FIFO_CLR;
 882              		.loc 1 764 0
 883 001e 104B     		ldr	r3, .L61
 884 0020 0F4A     		ldr	r2, .L61
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 30


 885 0022 1278     		ldrb	r2, [r2]
 886 0024 D2B2     		uxtb	r2, r2
 887 0026 22F00102 		bic	r2, r2, #1
 888 002a D2B2     		uxtb	r2, r2
 889 002c 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/UART_OSDP.c ****         CyExitCriticalSection(enableInterrupts);
 890              		.loc 1 765 0
 891 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 892 0030 1846     		mov	r0, r3
 893 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 767:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 769:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_DisableRxInt();
 894              		.loc 1 770 0
 895 0036 0B4B     		ldr	r3, .L61+4
 896 0038 0122     		movs	r2, #1
 897 003a 1A60     		str	r2, [r3]
 771:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 772:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_rxBufferRead = 0u;
 898              		.loc 1 772 0
 899 003c 0A4B     		ldr	r3, .L61+8
 900 003e 0022     		movs	r2, #0
 901 0040 1A80     		strh	r2, [r3]	@ movhi
 773:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_rxBufferWrite = 0u;
 902              		.loc 1 773 0
 903 0042 0A4B     		ldr	r3, .L61+12
 904 0044 0022     		movs	r2, #0
 905 0046 1A80     		strh	r2, [r3]	@ movhi
 774:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_rxBufferLoopDetect = 0u;
 906              		.loc 1 774 0
 907 0048 094B     		ldr	r3, .L61+16
 908 004a 0022     		movs	r2, #0
 909 004c 1A70     		strb	r2, [r3]
 775:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_rxBufferOverflow = 0u;
 910              		.loc 1 775 0
 911 004e 094B     		ldr	r3, .L61+20
 912 0050 0022     		movs	r2, #0
 913 0052 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 777:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_EnableRxInt();
 914              		.loc 1 777 0
 915 0054 084B     		ldr	r3, .L61+24
 916 0056 0122     		movs	r2, #1
 917 0058 1A60     		str	r2, [r3]
 778:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 779:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 781:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 918              		.loc 1 781 0
 919 005a 0837     		adds	r7, r7, #8
 920 005c BD46     		mov	sp, r7
 921              		@ sp needed
 922 005e 80BD     		pop	{r7, pc}
 923              	.L62:
 924              		.align	2
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 31


 925              	.L61:
 926 0060 99640040 		.word	1073767577
 927 0064 80E100E0 		.word	-536813184
 928 0068 00000000 		.word	UART_OSDP_rxBufferRead
 929 006c 00000000 		.word	UART_OSDP_rxBufferWrite
 930 0070 00000000 		.word	UART_OSDP_rxBufferLoopDetect
 931 0074 00000000 		.word	UART_OSDP_rxBufferOverflow
 932 0078 00E100E0 		.word	-536813312
 933              		.cfi_endproc
 934              	.LFE12:
 935              		.size	UART_OSDP_ClearRxBuffer, .-UART_OSDP_ClearRxBuffer
 936              		.section	.text.UART_OSDP_SetRxAddressMode,"ax",%progbits
 937              		.align	2
 938              		.global	UART_OSDP_SetRxAddressMode
 939              		.thumb
 940              		.thumb_func
 941              		.type	UART_OSDP_SetRxAddressMode, %function
 942              	UART_OSDP_SetRxAddressMode:
 943              	.LFB13:
 782:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 783:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 784:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 788:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 792:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART_OSDP.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART_OSDP.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART_OSDP.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART_OSDP.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 804:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 807:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 812:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                         
 815:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 944              		.loc 1 815 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 8
 947              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 32


 948              		@ link register save eliminated.
 949 0000 80B4     		push	{r7}
 950              		.cfi_def_cfa_offset 4
 951              		.cfi_offset 7, -4
 952 0002 83B0     		sub	sp, sp, #12
 953              		.cfi_def_cfa_offset 16
 954 0004 00AF     		add	r7, sp, #0
 955              		.cfi_def_cfa_register 7
 956 0006 0346     		mov	r3, r0
 957 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if(UART_OSDP_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART_OSDP.c ****             #if(UART_OSDP_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART_OSDP.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART_OSDP.c ****                 {
 820:.\Generated_Source\PSoC5/UART_OSDP.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART_OSDP.c ****                 }
 822:.\Generated_Source\PSoC5/UART_OSDP.c ****             #else /* UART_OSDP_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART_OSDP.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART_OSDP.c ****                 tmpCtrl = UART_OSDP_CONTROL_REG & (uint8)~UART_OSDP_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART_OSDP.c ****                 tmpCtrl |= (uint8)(addressMode << UART_OSDP_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 828:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #if(UART_OSDP_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART_OSDP.c ****                    (UART_OSDP_RXBUFFERSIZE > UART_OSDP_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART_OSDP.c ****                     UART_OSDP_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART_OSDP.c ****                     UART_OSDP_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #endif /* End UART_OSDP_RXBUFFERSIZE > UART_OSDP_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART_OSDP.c ****             #endif /* End UART_OSDP_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART_OSDP.c ****         #else /* UART_OSDP_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 837:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 839:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* End UART_OSDP_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 958              		.loc 1 840 0
 959 000a 0C37     		adds	r7, r7, #12
 960 000c BD46     		mov	sp, r7
 961              		@ sp needed
 962 000e 5DF8047B 		ldr	r7, [sp], #4
 963 0012 7047     		bx	lr
 964              		.cfi_endproc
 965              	.LFE13:
 966              		.size	UART_OSDP_SetRxAddressMode, .-UART_OSDP_SetRxAddressMode
 967              		.section	.text.UART_OSDP_SetRxAddress1,"ax",%progbits
 968              		.align	2
 969              		.global	UART_OSDP_SetRxAddress1
 970              		.thumb
 971              		.thumb_func
 972              		.type	UART_OSDP_SetRxAddress1, %function
 973              	UART_OSDP_SetRxAddress1:
 974              	.LFB14:
 841:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 842:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 843:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 33


 846:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 847:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 850:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 853:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 856:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 975              		.loc 1 858 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 8
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979              		@ link register save eliminated.
 980 0000 80B4     		push	{r7}
 981              		.cfi_def_cfa_offset 4
 982              		.cfi_offset 7, -4
 983 0002 83B0     		sub	sp, sp, #12
 984              		.cfi_def_cfa_offset 16
 985 0004 00AF     		add	r7, sp, #0
 986              		.cfi_def_cfa_register 7
 987 0006 0346     		mov	r3, r0
 988 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXADDRESS1_REG = address;
 989              		.loc 1 859 0
 990 000a 044B     		ldr	r3, .L65
 991 000c FA79     		ldrb	r2, [r7, #7]
 992 000e 1A70     		strb	r2, [r3]
 860:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 993              		.loc 1 860 0
 994 0010 0C37     		adds	r7, r7, #12
 995 0012 BD46     		mov	sp, r7
 996              		@ sp needed
 997 0014 5DF8047B 		ldr	r7, [sp], #4
 998 0018 7047     		bx	lr
 999              	.L66:
 1000 001a 00BF     		.align	2
 1001              	.L65:
 1002 001c 29640040 		.word	1073767465
 1003              		.cfi_endproc
 1004              	.LFE14:
 1005              		.size	UART_OSDP_SetRxAddress1, .-UART_OSDP_SetRxAddress1
 1006              		.section	.text.UART_OSDP_SetRxAddress2,"ax",%progbits
 1007              		.align	2
 1008              		.global	UART_OSDP_SetRxAddress2
 1009              		.thumb
 1010              		.thumb_func
 1011              		.type	UART_OSDP_SetRxAddress2, %function
 1012              	UART_OSDP_SetRxAddress2:
 1013              	.LFB15:
 861:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 862:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 863:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 34


 864:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 867:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 870:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 873:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 876:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1014              		.loc 1 878 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 8
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 1019 0000 80B4     		push	{r7}
 1020              		.cfi_def_cfa_offset 4
 1021              		.cfi_offset 7, -4
 1022 0002 83B0     		sub	sp, sp, #12
 1023              		.cfi_def_cfa_offset 16
 1024 0004 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 1026 0006 0346     		mov	r3, r0
 1027 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXADDRESS2_REG = address;
 1028              		.loc 1 879 0
 1029 000a 044B     		ldr	r3, .L68
 1030 000c FA79     		ldrb	r2, [r7, #7]
 1031 000e 1A70     		strb	r2, [r3]
 880:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1032              		.loc 1 880 0
 1033 0010 0C37     		adds	r7, r7, #12
 1034 0012 BD46     		mov	sp, r7
 1035              		@ sp needed
 1036 0014 5DF8047B 		ldr	r7, [sp], #4
 1037 0018 7047     		bx	lr
 1038              	.L69:
 1039 001a 00BF     		.align	2
 1040              	.L68:
 1041 001c 39640040 		.word	1073767481
 1042              		.cfi_endproc
 1043              	.LFE15:
 1044              		.size	UART_OSDP_SetRxAddress2, .-UART_OSDP_SetRxAddress2
 1045              		.section	.text.UART_OSDP_SetTxInterruptMode,"ax",%progbits
 1046              		.align	2
 1047              		.global	UART_OSDP_SetTxInterruptMode
 1048              		.thumb
 1049              		.thumb_func
 1050              		.type	UART_OSDP_SetTxInterruptMode, %function
 1051              	UART_OSDP_SetTxInterruptMode:
 1052              	.LFB16:
 881:.\Generated_Source\PSoC5/UART_OSDP.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 35


 882:.\Generated_Source\PSoC5/UART_OSDP.c **** #endif  /* UART_OSDP_RX_ENABLED || UART_OSDP_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 884:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 885:.\Generated_Source\PSoC5/UART_OSDP.c **** #if( (UART_OSDP_TX_ENABLED) || (UART_OSDP_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 890:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 894:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 901:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 904:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 907:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1053              		.loc 1 909 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 8
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058 0000 80B4     		push	{r7}
 1059              		.cfi_def_cfa_offset 4
 1060              		.cfi_offset 7, -4
 1061 0002 83B0     		sub	sp, sp, #12
 1062              		.cfi_def_cfa_offset 16
 1063 0004 00AF     		add	r7, sp, #0
 1064              		.cfi_def_cfa_register 7
 1065 0006 0346     		mov	r3, r0
 1066 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_TXSTATUS_MASK_REG = intSrc;
 1067              		.loc 1 910 0
 1068 000a 044B     		ldr	r3, .L71
 1069 000c FA79     		ldrb	r2, [r7, #7]
 1070 000e 1A70     		strb	r2, [r3]
 911:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1071              		.loc 1 911 0
 1072 0010 0C37     		adds	r7, r7, #12
 1073 0012 BD46     		mov	sp, r7
 1074              		@ sp needed
 1075 0014 5DF8047B 		ldr	r7, [sp], #4
 1076 0018 7047     		bx	lr
 1077              	.L72:
 1078 001a 00BF     		.align	2
 1079              	.L71:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 36


 1080 001c 8A650040 		.word	1073767818
 1081              		.cfi_endproc
 1082              	.LFE16:
 1083              		.size	UART_OSDP_SetTxInterruptMode, .-UART_OSDP_SetTxInterruptMode
 1084              		.section	.text.UART_OSDP_WriteTxData,"ax",%progbits
 1085              		.align	2
 1086              		.global	UART_OSDP_WriteTxData
 1087              		.thumb
 1088              		.thumb_func
 1089              		.type	UART_OSDP_WriteTxData, %function
 1090              	UART_OSDP_WriteTxData:
 1091              	.LFB17:
 912:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 913:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 914:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_WriteTxData
 916:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 918:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 923:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 926:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART_OSDP.c ****     * None.
 928:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 929:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 938:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 941:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1092              		.loc 1 943 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 8
 1095              		@ frame_needed = 1, uses_anonymous_args = 0
 1096              		@ link register save eliminated.
 1097 0000 80B4     		push	{r7}
 1098              		.cfi_def_cfa_offset 4
 1099              		.cfi_offset 7, -4
 1100 0002 83B0     		sub	sp, sp, #12
 1101              		.cfi_def_cfa_offset 16
 1102 0004 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
 1104 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 37


 1105 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(UART_OSDP_initVar != 0u)
 1106              		.loc 1 945 0
 1107 000a 064B     		ldr	r3, .L75
 1108 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1109 000e 002B     		cmp	r3, #0
 1110 0010 02D0     		beq	.L73
 946:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
 947:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if (UART_OSDP_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 949:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 952:.\Generated_Source\PSoC5/UART_OSDP.c ****             if( (UART_OSDP_txBufferRead == UART_OSDP_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/UART_OSDP.c ****                 ((UART_OSDP_TXSTATUS_REG & UART_OSDP_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 955:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 958:.\Generated_Source\PSoC5/UART_OSDP.c ****             else
 959:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
 960:.\Generated_Source\PSoC5/UART_OSDP.c ****                 if(UART_OSDP_txBufferWrite >= UART_OSDP_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART_OSDP.c ****                 {
 962:.\Generated_Source\PSoC5/UART_OSDP.c ****                     UART_OSDP_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART_OSDP.c ****                 }
 964:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 965:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_txBuffer[UART_OSDP_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 967:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
 970:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 971:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 973:.\Generated_Source\PSoC5/UART_OSDP.c ****         #else
 974:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 975:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXDATA_REG = txDataByte;
 1111              		.loc 1 976 0
 1112 0012 054B     		ldr	r3, .L75+4
 1113 0014 FA79     		ldrb	r2, [r7, #7]
 1114 0016 1A70     		strb	r2, [r3]
 1115              	.L73:
 977:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 978:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /*(UART_OSDP_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
 980:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1116              		.loc 1 980 0
 1117 0018 0C37     		adds	r7, r7, #12
 1118 001a BD46     		mov	sp, r7
 1119              		@ sp needed
 1120 001c 5DF8047B 		ldr	r7, [sp], #4
 1121 0020 7047     		bx	lr
 1122              	.L76:
 1123 0022 00BF     		.align	2
 1124              	.L75:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 38


 1125 0024 00000000 		.word	UART_OSDP_initVar
 1126 0028 59640040 		.word	1073767513
 1127              		.cfi_endproc
 1128              	.LFE17:
 1129              		.size	UART_OSDP_WriteTxData, .-UART_OSDP_WriteTxData
 1130              		.section	.text.UART_OSDP_ReadTxStatus,"ax",%progbits
 1131              		.align	2
 1132              		.global	UART_OSDP_ReadTxStatus
 1133              		.thumb
 1134              		.thumb_func
 1135              		.type	UART_OSDP_ReadTxStatus, %function
 1136              	UART_OSDP_ReadTxStatus:
 1137              	.LFB18:
 981:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 982:.\Generated_Source\PSoC5/UART_OSDP.c **** 
 983:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 987:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 990:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 993:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
 996:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1002:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 UART_OSDP_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1138              		.loc 1 1004 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 1143 0000 80B4     		push	{r7}
 1144              		.cfi_def_cfa_offset 4
 1145              		.cfi_offset 7, -4
 1146 0002 00AF     		add	r7, sp, #0
 1147              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/UART_OSDP.c ****         return(UART_OSDP_TXSTATUS_REG);
 1148              		.loc 1 1005 0
 1149 0004 034B     		ldr	r3, .L79
 1150 0006 1B78     		ldrb	r3, [r3]
 1151 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1152              		.loc 1 1006 0
 1153 000a 1846     		mov	r0, r3
 1154 000c BD46     		mov	sp, r7
 1155              		@ sp needed
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 39


 1156 000e 5DF8047B 		ldr	r7, [sp], #4
 1157 0012 7047     		bx	lr
 1158              	.L80:
 1159              		.align	2
 1160              	.L79:
 1161 0014 6A650040 		.word	1073767786
 1162              		.cfi_endproc
 1163              	.LFE18:
 1164              		.size	UART_OSDP_ReadTxStatus, .-UART_OSDP_ReadTxStatus
 1165              		.section	.text.UART_OSDP_PutChar,"ax",%progbits
 1166              		.align	2
 1167              		.global	UART_OSDP_PutChar
 1168              		.thumb
 1169              		.thumb_func
 1170              		.type	UART_OSDP_PutChar, %function
 1171              	UART_OSDP_PutChar:
 1172              	.LFB19:
1007:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1008:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1009:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_PutChar
1011:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1013:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1018:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1021:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1024:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1034:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1037:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1040:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1173              		.loc 1 1042 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 8
 1176              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 40


 1177              		@ link register save eliminated.
 1178 0000 80B4     		push	{r7}
 1179              		.cfi_def_cfa_offset 4
 1180              		.cfi_offset 7, -4
 1181 0002 83B0     		sub	sp, sp, #12
 1182              		.cfi_def_cfa_offset 16
 1183 0004 00AF     		add	r7, sp, #0
 1184              		.cfi_def_cfa_register 7
 1185 0006 0346     		mov	r3, r0
 1186 0008 FB71     		strb	r3, [r7, #7]
1043:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART_OSDP.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART_OSDP.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART_OSDP.c ****         */
1048:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1051:.\Generated_Source\PSoC5/UART_OSDP.c ****         do
1052:.\Generated_Source\PSoC5/UART_OSDP.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1054:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if ((UART_OSDP_TX_BUFFER_SIZE > UART_OSDP_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_TX_BUFFER_SIZE > UART_OSDP_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1059:.\Generated_Source\PSoC5/UART_OSDP.c ****             locTxBufferWrite = UART_OSDP_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART_OSDP.c ****             locTxBufferRead  = UART_OSDP_txBufferRead;
1061:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1062:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if ((UART_OSDP_TX_BUFFER_SIZE > UART_OSDP_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_TX_BUFFER_SIZE > UART_OSDP_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1067:.\Generated_Source\PSoC5/UART_OSDP.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART_OSDP.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART_OSDP.c ****                                 (uint8)(UART_OSDP_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1071:.\Generated_Source\PSoC5/UART_OSDP.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/UART_OSDP.c ****             ((UART_OSDP_TXSTATUS_REG & UART_OSDP_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1074:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1077:.\Generated_Source\PSoC5/UART_OSDP.c ****         else
1078:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1079:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(locTxBufferWrite >= UART_OSDP_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1081:.\Generated_Source\PSoC5/UART_OSDP.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1083:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART_OSDP.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1087:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if ((UART_OSDP_TX_BUFFER_SIZE > UART_OSDP_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_DisableTxInt();
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 41


1090:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_TX_BUFFER_SIZE > UART_OSDP_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1092:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1094:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if ((UART_OSDP_TX_BUFFER_SIZE > UART_OSDP_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* (UART_OSDP_TX_BUFFER_SIZE > UART_OSDP_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1098:.\Generated_Source\PSoC5/UART_OSDP.c ****             if(0u != (UART_OSDP_TXSTATUS_REG & UART_OSDP_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1100:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1103:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1104:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1105:.\Generated_Source\PSoC5/UART_OSDP.c ****     #else
1106:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1107:.\Generated_Source\PSoC5/UART_OSDP.c ****         while((UART_OSDP_TXSTATUS_REG & UART_OSDP_TX_STS_FIFO_FULL) != 0u)
 1187              		.loc 1 1107 0
 1188 000a 00BF     		nop
 1189              	.L82:
 1190              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1191 000c 074B     		ldr	r3, .L83
 1192 000e 1B78     		ldrb	r3, [r3]
 1193 0010 DBB2     		uxtb	r3, r3
 1194 0012 03F02003 		and	r3, r3, #32
 1195 0016 002B     		cmp	r3, #0
 1196 0018 F8D1     		bne	.L82
1108:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1109:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1111:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1112:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_TXDATA_REG = txDataByte;
 1197              		.loc 1 1113 0 is_stmt 1
 1198 001a 054B     		ldr	r3, .L83+4
 1199 001c FA79     		ldrb	r2, [r7, #7]
 1200 001e 1A70     		strb	r2, [r3]
1114:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1115:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* UART_OSDP_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1201              		.loc 1 1116 0
 1202 0020 0C37     		adds	r7, r7, #12
 1203 0022 BD46     		mov	sp, r7
 1204              		@ sp needed
 1205 0024 5DF8047B 		ldr	r7, [sp], #4
 1206 0028 7047     		bx	lr
 1207              	.L84:
 1208 002a 00BF     		.align	2
 1209              	.L83:
 1210 002c 6A650040 		.word	1073767786
 1211 0030 59640040 		.word	1073767513
 1212              		.cfi_endproc
 1213              	.LFE19:
 1214              		.size	UART_OSDP_PutChar, .-UART_OSDP_PutChar
 1215              		.section	.text.UART_OSDP_PutString,"ax",%progbits
 1216              		.align	2
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 42


 1217              		.global	UART_OSDP_PutString
 1218              		.thumb
 1219              		.thumb_func
 1220              		.type	UART_OSDP_PutString, %function
 1221              	UART_OSDP_PutString:
 1222              	.LFB20:
1117:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1118:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1119:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_PutString
1121:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1123:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1126:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1129:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1132:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1136:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1139:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1144:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1223              		.loc 1 1146 0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 16
 1226              		@ frame_needed = 1, uses_anonymous_args = 0
 1227 0000 80B5     		push	{r7, lr}
 1228              		.cfi_def_cfa_offset 8
 1229              		.cfi_offset 7, -8
 1230              		.cfi_offset 14, -4
 1231 0002 84B0     		sub	sp, sp, #16
 1232              		.cfi_def_cfa_offset 24
 1233 0004 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 1235 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint16 bufIndex = 0u;
 1236              		.loc 1 1147 0
 1237 0008 0023     		movs	r3, #0
 1238 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1149:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(UART_OSDP_initVar != 0u)
 1239              		.loc 1 1150 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 43


 1240 000c 0B4B     		ldr	r3, .L89
 1241 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1242 0010 002B     		cmp	r3, #0
 1243 0012 10D0     		beq	.L85
1151:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1152:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART_OSDP.c ****             while(string[bufIndex] != (char8) 0)
 1244              		.loc 1 1153 0
 1245 0014 09E0     		b	.L87
 1246              	.L88:
1154:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1155:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_PutChar((uint8)string[bufIndex]);
 1247              		.loc 1 1155 0
 1248 0016 FB89     		ldrh	r3, [r7, #14]
 1249 0018 7A68     		ldr	r2, [r7, #4]
 1250 001a 1344     		add	r3, r3, r2
 1251 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1252 001e 1846     		mov	r0, r3
 1253 0020 FFF7FEFF 		bl	UART_OSDP_PutChar
1156:.\Generated_Source\PSoC5/UART_OSDP.c ****                 bufIndex++;
 1254              		.loc 1 1156 0
 1255 0024 FB89     		ldrh	r3, [r7, #14]
 1256 0026 0133     		adds	r3, r3, #1
 1257 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1258              	.L87:
1153:.\Generated_Source\PSoC5/UART_OSDP.c ****             while(string[bufIndex] != (char8) 0)
 1259              		.loc 1 1153 0 discriminator 1
 1260 002a FB89     		ldrh	r3, [r7, #14]
 1261 002c 7A68     		ldr	r2, [r7, #4]
 1262 002e 1344     		add	r3, r3, r2
 1263 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1264 0032 002B     		cmp	r3, #0
 1265 0034 EFD1     		bne	.L88
 1266              	.L85:
1157:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1158:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1159:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1267              		.loc 1 1159 0
 1268 0036 1037     		adds	r7, r7, #16
 1269 0038 BD46     		mov	sp, r7
 1270              		@ sp needed
 1271 003a 80BD     		pop	{r7, pc}
 1272              	.L90:
 1273              		.align	2
 1274              	.L89:
 1275 003c 00000000 		.word	UART_OSDP_initVar
 1276              		.cfi_endproc
 1277              	.LFE20:
 1278              		.size	UART_OSDP_PutString, .-UART_OSDP_PutString
 1279              		.section	.text.UART_OSDP_PutArray,"ax",%progbits
 1280              		.align	2
 1281              		.global	UART_OSDP_PutArray
 1282              		.thumb
 1283              		.thumb_func
 1284              		.type	UART_OSDP_PutArray, %function
 1285              	UART_OSDP_PutArray:
 1286              	.LFB21:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 44


1160:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1161:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1162:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_PutArray
1164:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1166:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1170:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART_OSDP.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1175:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1178:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1182:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1185:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1190:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1287              		.loc 1 1193 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 16
 1290              		@ frame_needed = 1, uses_anonymous_args = 0
 1291 0000 80B5     		push	{r7, lr}
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 84B0     		sub	sp, sp, #16
 1296              		.cfi_def_cfa_offset 24
 1297 0004 00AF     		add	r7, sp, #0
 1298              		.cfi_def_cfa_register 7
 1299 0006 7860     		str	r0, [r7, #4]
 1300 0008 0B46     		mov	r3, r1
 1301 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 bufIndex = 0u;
 1302              		.loc 1 1194 0
 1303 000c 0023     		movs	r3, #0
 1304 000e FB73     		strb	r3, [r7, #15]
1195:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1196:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(UART_OSDP_initVar != 0u)
 1305              		.loc 1 1197 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 45


 1306 0010 0A4B     		ldr	r3, .L95
 1307 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1308 0014 002B     		cmp	r3, #0
 1309 0016 0ED0     		beq	.L91
1198:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1199:.\Generated_Source\PSoC5/UART_OSDP.c ****             while(bufIndex < byteCount)
 1310              		.loc 1 1199 0
 1311 0018 09E0     		b	.L93
 1312              	.L94:
1200:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1201:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_PutChar(string[bufIndex]);
 1313              		.loc 1 1201 0
 1314 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1315 001c 7A68     		ldr	r2, [r7, #4]
 1316 001e 1344     		add	r3, r3, r2
 1317 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1318 0022 1846     		mov	r0, r3
 1319 0024 FFF7FEFF 		bl	UART_OSDP_PutChar
1202:.\Generated_Source\PSoC5/UART_OSDP.c ****                 bufIndex++;
 1320              		.loc 1 1202 0
 1321 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1322 002a 0133     		adds	r3, r3, #1
 1323 002c FB73     		strb	r3, [r7, #15]
 1324              	.L93:
1199:.\Generated_Source\PSoC5/UART_OSDP.c ****             while(bufIndex < byteCount)
 1325              		.loc 1 1199 0 discriminator 1
 1326 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1327 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1328 0032 9A42     		cmp	r2, r3
 1329 0034 F1D3     		bcc	.L94
 1330              	.L91:
1203:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1204:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1205:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1331              		.loc 1 1205 0
 1332 0036 1037     		adds	r7, r7, #16
 1333 0038 BD46     		mov	sp, r7
 1334              		@ sp needed
 1335 003a 80BD     		pop	{r7, pc}
 1336              	.L96:
 1337              		.align	2
 1338              	.L95:
 1339 003c 00000000 		.word	UART_OSDP_initVar
 1340              		.cfi_endproc
 1341              	.LFE21:
 1342              		.size	UART_OSDP_PutArray, .-UART_OSDP_PutArray
 1343              		.section	.text.UART_OSDP_PutCRLF,"ax",%progbits
 1344              		.align	2
 1345              		.global	UART_OSDP_PutCRLF
 1346              		.thumb
 1347              		.thumb_func
 1348              		.type	UART_OSDP_PutCRLF, %function
 1349              	UART_OSDP_PutCRLF:
 1350              	.LFB22:
1206:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1207:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1208:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 46


1209:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_PutCRLF
1210:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1212:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1216:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1219:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1222:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1226:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1229:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1351              		.loc 1 1231 0
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 8
 1354              		@ frame_needed = 1, uses_anonymous_args = 0
 1355 0000 80B5     		push	{r7, lr}
 1356              		.cfi_def_cfa_offset 8
 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 82B0     		sub	sp, sp, #8
 1360              		.cfi_def_cfa_offset 16
 1361 0004 00AF     		add	r7, sp, #0
 1362              		.cfi_def_cfa_register 7
 1363 0006 0346     		mov	r3, r0
 1364 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(UART_OSDP_initVar != 0u)
 1365              		.loc 1 1233 0
 1366 000a 084B     		ldr	r3, .L99
 1367 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1368 000e 002B     		cmp	r3, #0
 1369 0010 09D0     		beq	.L97
1234:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1235:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_PutChar(txDataByte);
 1370              		.loc 1 1235 0
 1371 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1372 0014 1846     		mov	r0, r3
 1373 0016 FFF7FEFF 		bl	UART_OSDP_PutChar
1236:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_PutChar(0x0Du);
 1374              		.loc 1 1236 0
 1375 001a 0D20     		movs	r0, #13
 1376 001c FFF7FEFF 		bl	UART_OSDP_PutChar
1237:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_PutChar(0x0Au);
 1377              		.loc 1 1237 0
 1378 0020 0A20     		movs	r0, #10
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 47


 1379 0022 FFF7FEFF 		bl	UART_OSDP_PutChar
 1380              	.L97:
1238:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1239:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1381              		.loc 1 1239 0
 1382 0026 0837     		adds	r7, r7, #8
 1383 0028 BD46     		mov	sp, r7
 1384              		@ sp needed
 1385 002a 80BD     		pop	{r7, pc}
 1386              	.L100:
 1387              		.align	2
 1388              	.L99:
 1389 002c 00000000 		.word	UART_OSDP_initVar
 1390              		.cfi_endproc
 1391              	.LFE22:
 1392              		.size	UART_OSDP_PutCRLF, .-UART_OSDP_PutCRLF
 1393              		.section	.text.UART_OSDP_GetTxBufferSize,"ax",%progbits
 1394              		.align	2
 1395              		.global	UART_OSDP_GetTxBufferSize
 1396              		.thumb
 1397              		.thumb_func
 1398              		.type	UART_OSDP_GetTxBufferSize, %function
 1399              	UART_OSDP_GetTxBufferSize:
 1400              	.LFB23:
1240:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1241:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1242:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1246:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART_OSDP.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1255:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1258:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1262:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1266:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1269:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1272:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 48


1273:.\Generated_Source\PSoC5/UART_OSDP.c ****     uint8 UART_OSDP_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                             
1275:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1401              		.loc 1 1275 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 8
 1404              		@ frame_needed = 1, uses_anonymous_args = 0
 1405              		@ link register save eliminated.
 1406 0000 80B4     		push	{r7}
 1407              		.cfi_def_cfa_offset 4
 1408              		.cfi_offset 7, -4
 1409 0002 83B0     		sub	sp, sp, #12
 1410              		.cfi_def_cfa_offset 16
 1411 0004 00AF     		add	r7, sp, #0
 1412              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1278:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1280:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1283:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(UART_OSDP_txBufferRead == UART_OSDP_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1285:.\Generated_Source\PSoC5/UART_OSDP.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1287:.\Generated_Source\PSoC5/UART_OSDP.c ****         else if(UART_OSDP_txBufferRead < UART_OSDP_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1289:.\Generated_Source\PSoC5/UART_OSDP.c ****             size = (UART_OSDP_txBufferWrite - UART_OSDP_txBufferRead);
1290:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1291:.\Generated_Source\PSoC5/UART_OSDP.c ****         else
1292:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1293:.\Generated_Source\PSoC5/UART_OSDP.c ****             size = (UART_OSDP_TX_BUFFER_SIZE - UART_OSDP_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART_OSDP.c ****                     UART_OSDP_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1296:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1297:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1299:.\Generated_Source\PSoC5/UART_OSDP.c ****     #else
1300:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1301:.\Generated_Source\PSoC5/UART_OSDP.c ****         size = UART_OSDP_TXSTATUS_REG;
 1413              		.loc 1 1301 0
 1414 0006 0E4B     		ldr	r3, .L106
 1415 0008 1B78     		ldrb	r3, [r3]
 1416 000a FB71     		strb	r3, [r7, #7]
1302:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1303:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART_OSDP.c ****         if((size & UART_OSDP_TX_STS_FIFO_FULL) != 0u)
 1417              		.loc 1 1304 0
 1418 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1419 000e 03F02003 		and	r3, r3, #32
 1420 0012 002B     		cmp	r3, #0
 1421 0014 02D0     		beq	.L102
1305:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1306:.\Generated_Source\PSoC5/UART_OSDP.c ****             size = UART_OSDP_FIFO_LENGTH;
 1422              		.loc 1 1306 0
 1423 0016 0423     		movs	r3, #4
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 49


 1424 0018 FB71     		strb	r3, [r7, #7]
 1425 001a 09E0     		b	.L103
 1426              	.L102:
1307:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1308:.\Generated_Source\PSoC5/UART_OSDP.c ****         else if((size & UART_OSDP_TX_STS_FIFO_EMPTY) != 0u)
 1427              		.loc 1 1308 0
 1428 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1429 001e 03F00203 		and	r3, r3, #2
 1430 0022 002B     		cmp	r3, #0
 1431 0024 02D0     		beq	.L104
1309:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1310:.\Generated_Source\PSoC5/UART_OSDP.c ****             size = 0u;
 1432              		.loc 1 1310 0
 1433 0026 0023     		movs	r3, #0
 1434 0028 FB71     		strb	r3, [r7, #7]
 1435 002a 01E0     		b	.L103
 1436              	.L104:
1311:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1312:.\Generated_Source\PSoC5/UART_OSDP.c ****         else
1313:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1314:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART_OSDP.c ****             size = 1u;
 1437              		.loc 1 1315 0
 1438 002c 0123     		movs	r3, #1
 1439 002e FB71     		strb	r3, [r7, #7]
 1440              	.L103:
1316:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1317:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1318:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1320:.\Generated_Source\PSoC5/UART_OSDP.c ****     return(size);
 1441              		.loc 1 1320 0
 1442 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1443              		.loc 1 1321 0
 1444 0032 1846     		mov	r0, r3
 1445 0034 0C37     		adds	r7, r7, #12
 1446 0036 BD46     		mov	sp, r7
 1447              		@ sp needed
 1448 0038 5DF8047B 		ldr	r7, [sp], #4
 1449 003c 7047     		bx	lr
 1450              	.L107:
 1451 003e 00BF     		.align	2
 1452              	.L106:
 1453 0040 6A650040 		.word	1073767786
 1454              		.cfi_endproc
 1455              	.LFE23:
 1456              		.size	UART_OSDP_GetTxBufferSize, .-UART_OSDP_GetTxBufferSize
 1457              		.section	.text.UART_OSDP_ClearTxBuffer,"ax",%progbits
 1458              		.align	2
 1459              		.global	UART_OSDP_ClearTxBuffer
 1460              		.thumb
 1461              		.thumb_func
 1462              		.type	UART_OSDP_ClearTxBuffer, %function
 1463              	UART_OSDP_ClearTxBuffer:
 1464              	.LFB24:
1322:.\Generated_Source\PSoC5/UART_OSDP.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 50


1323:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1324:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1328:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1331:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1334:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1337:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1341:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1344:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1349:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1353:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1465              		.loc 1 1355 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 8
 1468              		@ frame_needed = 1, uses_anonymous_args = 0
 1469 0000 80B5     		push	{r7, lr}
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 7, -8
 1472              		.cfi_offset 14, -4
 1473 0002 82B0     		sub	sp, sp, #8
 1474              		.cfi_def_cfa_offset 16
 1475 0004 00AF     		add	r7, sp, #0
 1476              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/UART_OSDP.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1358:.\Generated_Source\PSoC5/UART_OSDP.c ****         enableInterrupts = CyEnterCriticalSection();
 1477              		.loc 1 1358 0
 1478 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1479 000a 0346     		mov	r3, r0
 1480 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_TXDATA_AUX_CTL_REG |= (uint8)  UART_OSDP_TX_FIFO_CLR;
 1481              		.loc 1 1360 0
 1482 000e 0B4B     		ldr	r3, .L109
 1483 0010 0A4A     		ldr	r2, .L109
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 51


 1484 0012 1278     		ldrb	r2, [r2]
 1485 0014 D2B2     		uxtb	r2, r2
 1486 0016 42F00202 		orr	r2, r2, #2
 1487 001a D2B2     		uxtb	r2, r2
 1488 001c 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_TXDATA_AUX_CTL_REG &= (uint8) ~UART_OSDP_TX_FIFO_CLR;
 1489              		.loc 1 1361 0
 1490 001e 074B     		ldr	r3, .L109
 1491 0020 064A     		ldr	r2, .L109
 1492 0022 1278     		ldrb	r2, [r2]
 1493 0024 D2B2     		uxtb	r2, r2
 1494 0026 22F00202 		bic	r2, r2, #2
 1495 002a D2B2     		uxtb	r2, r2
 1496 002c 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART_OSDP.c ****         CyExitCriticalSection(enableInterrupts);
 1497              		.loc 1 1362 0
 1498 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1499 0030 1846     		mov	r0, r3
 1500 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1364:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1366:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1369:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1372:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1375:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1501              		.loc 1 1376 0
 1502 0036 0837     		adds	r7, r7, #8
 1503 0038 BD46     		mov	sp, r7
 1504              		@ sp needed
 1505 003a 80BD     		pop	{r7, pc}
 1506              	.L110:
 1507              		.align	2
 1508              	.L109:
 1509 003c 99640040 		.word	1073767577
 1510              		.cfi_endproc
 1511              	.LFE24:
 1512              		.size	UART_OSDP_ClearTxBuffer, .-UART_OSDP_ClearTxBuffer
 1513              		.section	.text.UART_OSDP_SendBreak,"ax",%progbits
 1514              		.align	2
 1515              		.global	UART_OSDP_SendBreak
 1516              		.thumb
 1517              		.thumb_func
 1518              		.type	UART_OSDP_SendBreak, %function
 1519              	UART_OSDP_SendBreak:
 1520              	.LFB25:
1377:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1378:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1379:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_SendBreak
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 52


1381:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1383:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1386:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART_OSDP.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART_OSDP.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART_OSDP.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART_OSDP.c ****     *   UART_OSDP_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      UART_OSDP_SEND_BREAK and UART_OSDP_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART_OSDP.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1398:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1401:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  UART_OSDP_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1406:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1409:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART_OSDP.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART_OSDP.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     When interrupt appear with UART_OSDP_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART_OSDP.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1432:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  The UART_OSDP_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  communication can continue.
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 53


1438:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1439:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1521              		.loc 1 1441 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 16
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525 0000 80B5     		push	{r7, lr}
 1526              		.cfi_def_cfa_offset 8
 1527              		.cfi_offset 7, -8
 1528              		.cfi_offset 14, -4
 1529 0002 84B0     		sub	sp, sp, #16
 1530              		.cfi_def_cfa_offset 24
 1531 0004 00AF     		add	r7, sp, #0
 1532              		.cfi_def_cfa_register 7
 1533 0006 0346     		mov	r3, r0
 1534 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1443:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(UART_OSDP_initVar != 0u)
 1535              		.loc 1 1444 0
 1536 000a 214B     		ldr	r3, .L119
 1537 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 000e 002B     		cmp	r3, #0
 1539 0010 3BD0     		beq	.L111
 1540              	.LBB2:
1445:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1446:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART_OSDP.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART_OSDP.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1450:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if(UART_OSDP_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1452:.\Generated_Source\PSoC5/UART_OSDP.c ****             if( (retMode == UART_OSDP_SEND_BREAK) ||
 1541              		.loc 1 1452 0
 1542 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1543 0014 002B     		cmp	r3, #0
 1544 0016 02D0     		beq	.L113
 1545              		.loc 1 1452 0 is_stmt 0 discriminator 1
 1546 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1547 001a 032B     		cmp	r3, #3
 1548 001c 13D1     		bne	.L114
 1549              	.L113:
1453:.\Generated_Source\PSoC5/UART_OSDP.c ****                 (retMode == UART_OSDP_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1455:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_WriteControlRegister(UART_OSDP_ReadControlRegister() |
 1550              		.loc 1 1456 0 is_stmt 1
 1551 001e FFF7FEFF 		bl	UART_OSDP_ReadControlRegister
 1552 0022 0346     		mov	r3, r0
 1553 0024 43F00203 		orr	r3, r3, #2
 1554 0028 DBB2     		uxtb	r3, r3
 1555 002a 1846     		mov	r0, r3
 1556 002c FFF7FEFF 		bl	UART_OSDP_WriteControlRegister
1457:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                       UART_OSDP_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /* Send zeros */
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 54


1459:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_TXDATA_REG = 0u;
 1557              		.loc 1 1459 0
 1558 0030 184B     		ldr	r3, .L119+4
 1559 0032 0022     		movs	r2, #0
 1560 0034 1A70     		strb	r2, [r3]
 1561              	.L115:
1460:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1461:.\Generated_Source\PSoC5/UART_OSDP.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART_OSDP.c ****                 {
1463:.\Generated_Source\PSoC5/UART_OSDP.c ****                     tmpStat = UART_OSDP_TXSTATUS_REG;
 1562              		.loc 1 1463 0 discriminator 1
 1563 0036 184B     		ldr	r3, .L119+8
 1564 0038 1B78     		ldrb	r3, [r3]
 1565 003a FB73     		strb	r3, [r7, #15]
1464:.\Generated_Source\PSoC5/UART_OSDP.c ****                 }
1465:.\Generated_Source\PSoC5/UART_OSDP.c ****                 while((tmpStat & UART_OSDP_TX_STS_FIFO_EMPTY) != 0u);
 1566              		.loc 1 1465 0 discriminator 1
 1567 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1568 003e 03F00203 		and	r3, r3, #2
 1569 0042 002B     		cmp	r3, #0
 1570 0044 F7D1     		bne	.L115
 1571              	.L114:
1466:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1467:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1468:.\Generated_Source\PSoC5/UART_OSDP.c ****             if( (retMode == UART_OSDP_WAIT_FOR_COMPLETE_REINIT) ||
 1572              		.loc 1 1468 0
 1573 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1574 0048 012B     		cmp	r3, #1
 1575 004a 02D0     		beq	.L116
 1576              		.loc 1 1468 0 is_stmt 0 discriminator 1
 1577 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1578 004e 032B     		cmp	r3, #3
 1579 0050 09D1     		bne	.L117
 1580              	.L116:
1469:.\Generated_Source\PSoC5/UART_OSDP.c ****                 (retMode == UART_OSDP_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1471:.\Generated_Source\PSoC5/UART_OSDP.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART_OSDP.c ****                 {
1473:.\Generated_Source\PSoC5/UART_OSDP.c ****                     tmpStat = UART_OSDP_TXSTATUS_REG;
 1581              		.loc 1 1473 0 is_stmt 1 discriminator 1
 1582 0052 114B     		ldr	r3, .L119+8
 1583 0054 1B78     		ldrb	r3, [r3]
 1584 0056 FB73     		strb	r3, [r7, #15]
1474:.\Generated_Source\PSoC5/UART_OSDP.c ****                 }
1475:.\Generated_Source\PSoC5/UART_OSDP.c ****                 while(((uint8)~tmpStat & UART_OSDP_TX_STS_COMPLETE) != 0u);
 1585              		.loc 1 1475 0 discriminator 1
 1586 0058 FB7B     		ldrb	r3, [r7, #15]
 1587 005a DB43     		mvns	r3, r3
 1588 005c DBB2     		uxtb	r3, r3
 1589 005e 03F00103 		and	r3, r3, #1
 1590 0062 002B     		cmp	r3, #0
 1591 0064 F5D1     		bne	.L116
 1592              	.L117:
1476:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1477:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1478:.\Generated_Source\PSoC5/UART_OSDP.c ****             if( (retMode == UART_OSDP_WAIT_FOR_COMPLETE_REINIT) ||
 1593              		.loc 1 1478 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 55


 1594 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1595 0068 012B     		cmp	r3, #1
 1596 006a 05D0     		beq	.L118
 1597              		.loc 1 1478 0 is_stmt 0 discriminator 1
 1598 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1599 006e 022B     		cmp	r3, #2
 1600 0070 02D0     		beq	.L118
1479:.\Generated_Source\PSoC5/UART_OSDP.c ****                 (retMode == UART_OSDP_REINIT) ||
 1601              		.loc 1 1479 0 is_stmt 1
 1602 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1603 0074 032B     		cmp	r3, #3
 1604 0076 08D1     		bne	.L111
 1605              	.L118:
1480:.\Generated_Source\PSoC5/UART_OSDP.c ****                 (retMode == UART_OSDP_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1482:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_WriteControlRegister(UART_OSDP_ReadControlRegister() &
 1606              		.loc 1 1482 0
 1607 0078 FFF7FEFF 		bl	UART_OSDP_ReadControlRegister
 1608 007c 0346     		mov	r3, r0
 1609 007e 23F00203 		bic	r3, r3, #2
 1610 0082 DBB2     		uxtb	r3, r3
 1611 0084 1846     		mov	r0, r3
 1612 0086 FFF7FEFF 		bl	UART_OSDP_WriteControlRegister
 1613              	.L111:
 1614              	.LBE2:
1483:.\Generated_Source\PSoC5/UART_OSDP.c ****                                               (uint8)~UART_OSDP_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1485:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1486:.\Generated_Source\PSoC5/UART_OSDP.c ****         #else /* UART_OSDP_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1488:.\Generated_Source\PSoC5/UART_OSDP.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1490:.\Generated_Source\PSoC5/UART_OSDP.c ****             if( (retMode == UART_OSDP_SEND_BREAK) ||
1491:.\Generated_Source\PSoC5/UART_OSDP.c ****                 (retMode == UART_OSDP_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1493:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #if( (UART_OSDP_PARITY_TYPE != UART_OSDP__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART_OSDP.c ****                                     (UART_OSDP_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART_OSDP.c ****                     UART_OSDP_WriteControlRegister(UART_OSDP_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                           UART_OSDP_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #endif /* End UART_OSDP_PARITY_TYPE != UART_OSDP__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1500:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #if(UART_OSDP_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART_OSDP.c ****                     txPeriod = UART_OSDP_TXBITCLKTX_COMPLETE_REG;
1502:.\Generated_Source\PSoC5/UART_OSDP.c ****                     UART_OSDP_TXBITCLKTX_COMPLETE_REG = UART_OSDP_TXBITCTR_BREAKBITS;
1503:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #else
1504:.\Generated_Source\PSoC5/UART_OSDP.c ****                     txPeriod = UART_OSDP_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART_OSDP.c ****                     UART_OSDP_TXBITCTR_PERIOD_REG = UART_OSDP_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART_OSDP.c ****                 #endif /* End UART_OSDP_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1508:.\Generated_Source\PSoC5/UART_OSDP.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_TXDATA_REG = 0u;
1510:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1511:.\Generated_Source\PSoC5/UART_OSDP.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART_OSDP.c ****                 {
1513:.\Generated_Source\PSoC5/UART_OSDP.c ****                     tmpStat = UART_OSDP_TXSTATUS_REG;
1514:.\Generated_Source\PSoC5/UART_OSDP.c ****                 }
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 56


1515:.\Generated_Source\PSoC5/UART_OSDP.c ****                 while((tmpStat & UART_OSDP_TX_STS_FIFO_EMPTY) != 0u);
1516:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1517:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1518:.\Generated_Source\PSoC5/UART_OSDP.c ****             if( (retMode == UART_OSDP_WAIT_FOR_COMPLETE_REINIT) ||
1519:.\Generated_Source\PSoC5/UART_OSDP.c ****                 (retMode == UART_OSDP_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1521:.\Generated_Source\PSoC5/UART_OSDP.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART_OSDP.c ****                 {
1523:.\Generated_Source\PSoC5/UART_OSDP.c ****                     tmpStat = UART_OSDP_TXSTATUS_REG;
1524:.\Generated_Source\PSoC5/UART_OSDP.c ****                 }
1525:.\Generated_Source\PSoC5/UART_OSDP.c ****                 while(((uint8)~tmpStat & UART_OSDP_TX_STS_COMPLETE) != 0u);
1526:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1527:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1528:.\Generated_Source\PSoC5/UART_OSDP.c ****             if( (retMode == UART_OSDP_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART_OSDP.c ****                 (retMode == UART_OSDP_REINIT) ||
1530:.\Generated_Source\PSoC5/UART_OSDP.c ****                 (retMode == UART_OSDP_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART_OSDP.c ****             {
1532:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1533:.\Generated_Source\PSoC5/UART_OSDP.c ****             #if(UART_OSDP_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_TXBITCLKTX_COMPLETE_REG = txPeriod;
1535:.\Generated_Source\PSoC5/UART_OSDP.c ****             #else
1536:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART_OSDP.c ****             #endif /* End UART_OSDP_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1539:.\Generated_Source\PSoC5/UART_OSDP.c ****             #if( (UART_OSDP_PARITY_TYPE != UART_OSDP__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART_OSDP.c ****                  (UART_OSDP_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART_OSDP.c ****                 UART_OSDP_WriteControlRegister(UART_OSDP_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                       (uint8) ~UART_OSDP_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART_OSDP.c ****             #endif /* End UART_OSDP_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART_OSDP.c ****             }
1545:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif    /* End UART_OSDP_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1547:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1615              		.loc 1 1547 0
 1616 008a 1037     		adds	r7, r7, #16
 1617 008c BD46     		mov	sp, r7
 1618              		@ sp needed
 1619 008e 80BD     		pop	{r7, pc}
 1620              	.L120:
 1621              		.align	2
 1622              	.L119:
 1623 0090 00000000 		.word	UART_OSDP_initVar
 1624 0094 59640040 		.word	1073767513
 1625 0098 6A650040 		.word	1073767786
 1626              		.cfi_endproc
 1627              	.LFE25:
 1628              		.size	UART_OSDP_SendBreak, .-UART_OSDP_SendBreak
 1629              		.section	.text.UART_OSDP_SetTxAddressMode,"ax",%progbits
 1630              		.align	2
 1631              		.global	UART_OSDP_SetTxAddressMode
 1632              		.thumb
 1633              		.thumb_func
 1634              		.type	UART_OSDP_SetTxAddressMode, %function
 1635              	UART_OSDP_SetTxAddressMode:
 1636              	.LFB26:
1548:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1549:.\Generated_Source\PSoC5/UART_OSDP.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 57


1550:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1554:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1557:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART_OSDP.c ****     *       UART_OSDP_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART_OSDP.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART_OSDP.c ****     *       UART_OSDP_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART_OSDP.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1564:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1567:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  This function sets and clears UART_OSDP_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1571:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1637              		.loc 1 1573 0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 8
 1640              		@ frame_needed = 1, uses_anonymous_args = 0
 1641 0000 80B5     		push	{r7, lr}
 1642              		.cfi_def_cfa_offset 8
 1643              		.cfi_offset 7, -8
 1644              		.cfi_offset 14, -4
 1645 0002 82B0     		sub	sp, sp, #8
 1646              		.cfi_def_cfa_offset 16
 1647 0004 00AF     		add	r7, sp, #0
 1648              		.cfi_def_cfa_register 7
 1649 0006 0346     		mov	r3, r0
 1650 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/UART_OSDP.c ****         if(addressMode != 0u)
 1651              		.loc 1 1575 0
 1652 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1653 000c 002B     		cmp	r3, #0
 1654 000e 09D0     		beq	.L122
1576:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1577:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if( UART_OSDP_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_WriteControlRegister(UART_OSDP_ReadControlRegister() |
 1655              		.loc 1 1578 0
 1656 0010 FFF7FEFF 		bl	UART_OSDP_ReadControlRegister
 1657 0014 0346     		mov	r3, r0
 1658 0016 43F00403 		orr	r3, r3, #4
 1659 001a DBB2     		uxtb	r3, r3
 1660 001c 1846     		mov	r0, r3
 1661 001e FFF7FEFF 		bl	UART_OSDP_WriteControlRegister
 1662 0022 08E0     		b	.L121
 1663              	.L122:
1579:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                   UART_OSDP_CTRL_MARK);
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 58


1580:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* End UART_OSDP_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1582:.\Generated_Source\PSoC5/UART_OSDP.c ****         else
1583:.\Generated_Source\PSoC5/UART_OSDP.c ****         {
1584:.\Generated_Source\PSoC5/UART_OSDP.c ****         #if( UART_OSDP_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/UART_OSDP.c ****             UART_OSDP_WriteControlRegister(UART_OSDP_ReadControlRegister() &
 1664              		.loc 1 1585 0
 1665 0024 FFF7FEFF 		bl	UART_OSDP_ReadControlRegister
 1666 0028 0346     		mov	r3, r0
 1667 002a 23F00403 		bic	r3, r3, #4
 1668 002e DBB2     		uxtb	r3, r3
 1669 0030 1846     		mov	r0, r3
 1670 0032 FFF7FEFF 		bl	UART_OSDP_WriteControlRegister
 1671              	.L121:
1586:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                   (uint8) ~UART_OSDP_CTRL_MARK);
1587:.\Generated_Source\PSoC5/UART_OSDP.c ****         #endif /* End UART_OSDP_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/UART_OSDP.c ****         }
1589:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1672              		.loc 1 1589 0
 1673 0036 0837     		adds	r7, r7, #8
 1674 0038 BD46     		mov	sp, r7
 1675              		@ sp needed
 1676 003a 80BD     		pop	{r7, pc}
 1677              		.cfi_endproc
 1678              	.LFE26:
 1679              		.size	UART_OSDP_SetTxAddressMode, .-UART_OSDP_SetTxAddressMode
 1680              		.section	.text.UART_OSDP_LoadRxConfig,"ax",%progbits
 1681              		.align	2
 1682              		.global	UART_OSDP_LoadRxConfig
 1683              		.thumb
 1684              		.thumb_func
 1685              		.type	UART_OSDP_LoadRxConfig, %function
 1686              	UART_OSDP_LoadRxConfig:
 1687              	.LFB27:
1590:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1591:.\Generated_Source\PSoC5/UART_OSDP.c **** #endif  /* EndUART_OSDP_TX_ENABLED */
1592:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1593:.\Generated_Source\PSoC5/UART_OSDP.c **** #if(UART_OSDP_HD_ENABLED)
1594:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1595:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1596:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1597:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_LoadRxConfig
1598:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1599:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1600:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1601:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Loads the receiver configuration in half duplex mode. After calling this
1602:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  function, the UART is ready to receive data.
1603:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1604:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1605:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1606:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1607:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1608:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1609:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1610:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Side Effects:
1611:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1612:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  transaction is complete and it is safe to unload the transmitter
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 59


1613:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  configuration.
1614:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1615:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1616:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_LoadRxConfig(void) 
1617:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1688              		.loc 1 1617 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 0000 80B5     		push	{r7, lr}
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
1618:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_WriteControlRegister(UART_OSDP_ReadControlRegister() &
 1698              		.loc 1 1618 0
 1699 0004 FFF7FEFF 		bl	UART_OSDP_ReadControlRegister
 1700 0008 0346     		mov	r3, r0
 1701 000a 23F00103 		bic	r3, r3, #1
 1702 000e DBB2     		uxtb	r3, r3
 1703 0010 1846     		mov	r0, r3
 1704 0012 FFF7FEFF 		bl	UART_OSDP_WriteControlRegister
1619:.\Generated_Source\PSoC5/UART_OSDP.c ****                                                 (uint8)~UART_OSDP_CTRL_HD_SEND);
1620:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXBITCTR_PERIOD_REG = UART_OSDP_HD_RXBITCTR_INIT;
 1705              		.loc 1 1620 0
 1706 0016 034B     		ldr	r3, .L125
 1707 0018 7222     		movs	r2, #114
 1708 001a 1A70     		strb	r2, [r3]
1621:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1622:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_INTERRUPT_ENABLED)
1623:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Enable RX interrupt after set RX configuration */
1624:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_SetRxInterruptMode(UART_OSDP_INIT_RX_INTERRUPTS_MASK);
 1709              		.loc 1 1624 0
 1710 001c 2020     		movs	r0, #32
 1711 001e FFF7FEFF 		bl	UART_OSDP_SetRxInterruptMode
1625:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
1626:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1712              		.loc 1 1626 0
 1713 0022 80BD     		pop	{r7, pc}
 1714              	.L126:
 1715              		.align	2
 1716              	.L125:
 1717 0024 8B650040 		.word	1073767819
 1718              		.cfi_endproc
 1719              	.LFE27:
 1720              		.size	UART_OSDP_LoadRxConfig, .-UART_OSDP_LoadRxConfig
 1721              		.section	.text.UART_OSDP_LoadTxConfig,"ax",%progbits
 1722              		.align	2
 1723              		.global	UART_OSDP_LoadTxConfig
 1724              		.thumb
 1725              		.thumb_func
 1726              		.type	UART_OSDP_LoadTxConfig, %function
 1727              	UART_OSDP_LoadTxConfig:
 1728              	.LFB28:
1627:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1628:.\Generated_Source\PSoC5/UART_OSDP.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 60


1629:.\Generated_Source\PSoC5/UART_OSDP.c ****     /*******************************************************************************
1630:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Function Name: UART_OSDP_LoadTxConfig
1631:.\Generated_Source\PSoC5/UART_OSDP.c ****     ********************************************************************************
1632:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1633:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Summary:
1634:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Loads the transmitter configuration in half duplex mode. After calling this
1635:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  function, the UART is ready to transmit data.
1636:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1637:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Parameters:
1638:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1639:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1640:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Return:
1641:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  None.
1642:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1643:.\Generated_Source\PSoC5/UART_OSDP.c ****     * Side Effects:
1644:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1645:.\Generated_Source\PSoC5/UART_OSDP.c ****     *  transaction is complete and it is safe to unload the receiver configuration.
1646:.\Generated_Source\PSoC5/UART_OSDP.c ****     *
1647:.\Generated_Source\PSoC5/UART_OSDP.c ****     *******************************************************************************/
1648:.\Generated_Source\PSoC5/UART_OSDP.c ****     void UART_OSDP_LoadTxConfig(void) 
1649:.\Generated_Source\PSoC5/UART_OSDP.c ****     {
 1729              		.loc 1 1649 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 1, uses_anonymous_args = 0
 1733 0000 80B5     		push	{r7, lr}
 1734              		.cfi_def_cfa_offset 8
 1735              		.cfi_offset 7, -8
 1736              		.cfi_offset 14, -4
 1737 0002 00AF     		add	r7, sp, #0
 1738              		.cfi_def_cfa_register 7
1650:.\Generated_Source\PSoC5/UART_OSDP.c ****     #if (UART_OSDP_RX_INTERRUPT_ENABLED)
1651:.\Generated_Source\PSoC5/UART_OSDP.c ****         /* Disable RX interrupts before set TX configuration */
1652:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_SetRxInterruptMode(0u);
 1739              		.loc 1 1652 0
 1740 0004 0020     		movs	r0, #0
 1741 0006 FFF7FEFF 		bl	UART_OSDP_SetRxInterruptMode
1653:.\Generated_Source\PSoC5/UART_OSDP.c ****     #endif /* (UART_OSDP_RX_INTERRUPT_ENABLED) */
1654:.\Generated_Source\PSoC5/UART_OSDP.c **** 
1655:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_WriteControlRegister(UART_OSDP_ReadControlRegister() | UART_OSDP_CTRL_HD_SEND);
 1742              		.loc 1 1655 0
 1743 000a FFF7FEFF 		bl	UART_OSDP_ReadControlRegister
 1744 000e 0346     		mov	r3, r0
 1745 0010 43F00103 		orr	r3, r3, #1
 1746 0014 DBB2     		uxtb	r3, r3
 1747 0016 1846     		mov	r0, r3
 1748 0018 FFF7FEFF 		bl	UART_OSDP_WriteControlRegister
1656:.\Generated_Source\PSoC5/UART_OSDP.c ****         UART_OSDP_RXBITCTR_PERIOD_REG = UART_OSDP_HD_TXBITCTR_INIT;
 1749              		.loc 1 1656 0
 1750 001c 014B     		ldr	r3, .L128
 1751 001e 6F22     		movs	r2, #111
 1752 0020 1A70     		strb	r2, [r3]
1657:.\Generated_Source\PSoC5/UART_OSDP.c ****     }
 1753              		.loc 1 1657 0
 1754 0022 80BD     		pop	{r7, pc}
 1755              	.L129:
 1756              		.align	2
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 61


 1757              	.L128:
 1758 0024 8B650040 		.word	1073767819
 1759              		.cfi_endproc
 1760              	.LFE28:
 1761              		.size	UART_OSDP_LoadTxConfig, .-UART_OSDP_LoadTxConfig
 1762              		.text
 1763              	.Letext0:
 1764              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1765              		.section	.debug_info,"",%progbits
 1766              	.Ldebug_info0:
 1767 0000 FA050000 		.4byte	0x5fa
 1768 0004 0400     		.2byte	0x4
 1769 0006 00000000 		.4byte	.Ldebug_abbrev0
 1770 000a 04       		.byte	0x4
 1771 000b 01       		.uleb128 0x1
 1772 000c F4020000 		.4byte	.LASF73
 1773 0010 01       		.byte	0x1
 1774 0011 BE020000 		.4byte	.LASF74
 1775 0015 07000000 		.4byte	.LASF75
 1776 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1777 001d 00000000 		.4byte	0
 1778 0021 00000000 		.4byte	.Ldebug_line0
 1779 0025 02       		.uleb128 0x2
 1780 0026 01       		.byte	0x1
 1781 0027 06       		.byte	0x6
 1782 0028 ED000000 		.4byte	.LASF0
 1783 002c 02       		.uleb128 0x2
 1784 002d 01       		.byte	0x1
 1785 002e 08       		.byte	0x8
 1786 002f C2030000 		.4byte	.LASF1
 1787 0033 02       		.uleb128 0x2
 1788 0034 02       		.byte	0x2
 1789 0035 05       		.byte	0x5
 1790 0036 D0030000 		.4byte	.LASF2
 1791 003a 02       		.uleb128 0x2
 1792 003b 02       		.byte	0x2
 1793 003c 07       		.byte	0x7
 1794 003d 41020000 		.4byte	.LASF3
 1795 0041 02       		.uleb128 0x2
 1796 0042 04       		.byte	0x4
 1797 0043 05       		.byte	0x5
 1798 0044 5B010000 		.4byte	.LASF4
 1799 0048 02       		.uleb128 0x2
 1800 0049 04       		.byte	0x4
 1801 004a 07       		.byte	0x7
 1802 004b ED010000 		.4byte	.LASF5
 1803 004f 02       		.uleb128 0x2
 1804 0050 08       		.byte	0x8
 1805 0051 05       		.byte	0x5
 1806 0052 DF000000 		.4byte	.LASF6
 1807 0056 02       		.uleb128 0x2
 1808 0057 08       		.byte	0x8
 1809 0058 07       		.byte	0x7
 1810 0059 9C000000 		.4byte	.LASF7
 1811 005d 03       		.uleb128 0x3
 1812 005e 04       		.byte	0x4
 1813 005f 05       		.byte	0x5
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 62


 1814 0060 696E7400 		.ascii	"int\000"
 1815 0064 02       		.uleb128 0x2
 1816 0065 04       		.byte	0x4
 1817 0066 07       		.byte	0x7
 1818 0067 AE010000 		.4byte	.LASF8
 1819 006b 04       		.uleb128 0x4
 1820 006c 64010000 		.4byte	.LASF9
 1821 0070 02       		.byte	0x2
 1822 0071 B3       		.byte	0xb3
 1823 0072 2C000000 		.4byte	0x2c
 1824 0076 04       		.uleb128 0x4
 1825 0077 00000000 		.4byte	.LASF10
 1826 007b 02       		.byte	0x2
 1827 007c B4       		.byte	0xb4
 1828 007d 3A000000 		.4byte	0x3a
 1829 0081 04       		.uleb128 0x4
 1830 0082 7D010000 		.4byte	.LASF11
 1831 0086 02       		.byte	0x2
 1832 0087 B5       		.byte	0xb5
 1833 0088 48000000 		.4byte	0x48
 1834 008c 02       		.uleb128 0x2
 1835 008d 04       		.byte	0x4
 1836 008e 04       		.byte	0x4
 1837 008f A4030000 		.4byte	.LASF12
 1838 0093 02       		.uleb128 0x2
 1839 0094 08       		.byte	0x8
 1840 0095 04       		.byte	0x4
 1841 0096 6A010000 		.4byte	.LASF13
 1842 009a 04       		.uleb128 0x4
 1843 009b 5D040000 		.4byte	.LASF14
 1844 009f 02       		.byte	0x2
 1845 00a0 C4       		.byte	0xc4
 1846 00a1 A5000000 		.4byte	0xa5
 1847 00a5 02       		.uleb128 0x2
 1848 00a6 01       		.byte	0x1
 1849 00a7 08       		.byte	0x8
 1850 00a8 58040000 		.4byte	.LASF15
 1851 00ac 05       		.uleb128 0x5
 1852 00ad BD030000 		.4byte	.LASF16
 1853 00b1 02       		.byte	0x2
 1854 00b2 5D01     		.2byte	0x15d
 1855 00b4 B8000000 		.4byte	0xb8
 1856 00b8 06       		.uleb128 0x6
 1857 00b9 6B000000 		.4byte	0x6b
 1858 00bd 06       		.uleb128 0x6
 1859 00be 76000000 		.4byte	0x76
 1860 00c2 05       		.uleb128 0x5
 1861 00c3 B8020000 		.4byte	.LASF17
 1862 00c7 02       		.byte	0x2
 1863 00c8 5F01     		.2byte	0x15f
 1864 00ca CE000000 		.4byte	0xce
 1865 00ce 06       		.uleb128 0x6
 1866 00cf 81000000 		.4byte	0x81
 1867 00d3 02       		.uleb128 0x2
 1868 00d4 04       		.byte	0x4
 1869 00d5 07       		.byte	0x7
 1870 00d6 E3020000 		.4byte	.LASF18
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 63


 1871 00da 07       		.uleb128 0x7
 1872 00db 90040000 		.4byte	.LASF19
 1873 00df 01       		.byte	0x1
 1874 00e0 4C       		.byte	0x4c
 1875 00e1 00000000 		.4byte	.LFB0
 1876 00e5 20000000 		.4byte	.LFE0-.LFB0
 1877 00e9 01       		.uleb128 0x1
 1878 00ea 9C       		.byte	0x9c
 1879 00eb 07       		.uleb128 0x7
 1880 00ec BB010000 		.4byte	.LASF20
 1881 00f0 01       		.byte	0x1
 1882 00f1 6A       		.byte	0x6a
 1883 00f2 00000000 		.4byte	.LFB1
 1884 00f6 38000000 		.4byte	.LFE1-.LFB1
 1885 00fa 01       		.uleb128 0x1
 1886 00fb 9C       		.byte	0x9c
 1887 00fc 08       		.uleb128 0x8
 1888 00fd 8E050000 		.4byte	.LASF21
 1889 0101 01       		.byte	0x1
 1890 0102 B7       		.byte	0xb7
 1891 0103 00000000 		.4byte	.LFB2
 1892 0107 50000000 		.4byte	.LFE2-.LFB2
 1893 010b 01       		.uleb128 0x1
 1894 010c 9C       		.byte	0x9c
 1895 010d 20010000 		.4byte	0x120
 1896 0111 09       		.uleb128 0x9
 1897 0112 CA040000 		.4byte	.LASF23
 1898 0116 01       		.byte	0x1
 1899 0117 B9       		.byte	0xb9
 1900 0118 6B000000 		.4byte	0x6b
 1901 011c 02       		.uleb128 0x2
 1902 011d 91       		.byte	0x91
 1903 011e 77       		.sleb128 -9
 1904 011f 00       		.byte	0
 1905 0120 08       		.uleb128 0x8
 1906 0121 50050000 		.4byte	.LASF22
 1907 0125 01       		.byte	0x1
 1908 0126 F0       		.byte	0xf0
 1909 0127 00000000 		.4byte	.LFB3
 1910 012b 50000000 		.4byte	.LFE3-.LFB3
 1911 012f 01       		.uleb128 0x1
 1912 0130 9C       		.byte	0x9c
 1913 0131 44010000 		.4byte	0x144
 1914 0135 09       		.uleb128 0x9
 1915 0136 CA040000 		.4byte	.LASF23
 1916 013a 01       		.byte	0x1
 1917 013b F2       		.byte	0xf2
 1918 013c 6B000000 		.4byte	0x6b
 1919 0140 02       		.uleb128 0x2
 1920 0141 91       		.byte	0x91
 1921 0142 77       		.sleb128 -9
 1922 0143 00       		.byte	0
 1923 0144 0A       		.uleb128 0xa
 1924 0145 83020000 		.4byte	.LASF49
 1925 0149 01       		.byte	0x1
 1926 014a 2701     		.2byte	0x127
 1927 014c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 64


 1928 0150 00000000 		.4byte	.LFB4
 1929 0154 18000000 		.4byte	.LFE4-.LFB4
 1930 0158 01       		.uleb128 0x1
 1931 0159 9C       		.byte	0x9c
 1932 015a 0B       		.uleb128 0xb
 1933 015b 5D020000 		.4byte	.LASF24
 1934 015f 01       		.byte	0x1
 1935 0160 3F01     		.2byte	0x13f
 1936 0162 00000000 		.4byte	.LFB5
 1937 0166 20000000 		.4byte	.LFE5-.LFB5
 1938 016a 01       		.uleb128 0x1
 1939 016b 9C       		.byte	0x9c
 1940 016c 80010000 		.4byte	0x180
 1941 0170 0C       		.uleb128 0xc
 1942 0171 84010000 		.4byte	.LASF26
 1943 0175 01       		.byte	0x1
 1944 0176 3F01     		.2byte	0x13f
 1945 0178 6B000000 		.4byte	0x6b
 1946 017c 02       		.uleb128 0x2
 1947 017d 91       		.byte	0x91
 1948 017e 77       		.sleb128 -9
 1949 017f 00       		.byte	0
 1950 0180 0B       		.uleb128 0xb
 1951 0181 12040000 		.4byte	.LASF25
 1952 0185 01       		.byte	0x1
 1953 0186 6701     		.2byte	0x167
 1954 0188 00000000 		.4byte	.LFB6
 1955 018c 20000000 		.4byte	.LFE6-.LFB6
 1956 0190 01       		.uleb128 0x1
 1957 0191 9C       		.byte	0x9c
 1958 0192 A6010000 		.4byte	0x1a6
 1959 0196 0C       		.uleb128 0xc
 1960 0197 7C020000 		.4byte	.LASF27
 1961 019b 01       		.byte	0x1
 1962 019c 6701     		.2byte	0x167
 1963 019e 6B000000 		.4byte	0x6b
 1964 01a2 02       		.uleb128 0x2
 1965 01a3 91       		.byte	0x91
 1966 01a4 77       		.sleb128 -9
 1967 01a5 00       		.byte	0
 1968 01a6 0D       		.uleb128 0xd
 1969 01a7 F9000000 		.4byte	.LASF31
 1970 01ab 01       		.byte	0x1
 1971 01ac 8801     		.2byte	0x188
 1972 01ae 6B000000 		.4byte	0x6b
 1973 01b2 00000000 		.4byte	.LFB7
 1974 01b6 94000000 		.4byte	.LFE7-.LFB7
 1975 01ba 01       		.uleb128 0x1
 1976 01bb 9C       		.byte	0x9c
 1977 01bc EE010000 		.4byte	0x1ee
 1978 01c0 0E       		.uleb128 0xe
 1979 01c1 39040000 		.4byte	.LASF28
 1980 01c5 01       		.byte	0x1
 1981 01c6 8A01     		.2byte	0x18a
 1982 01c8 6B000000 		.4byte	0x6b
 1983 01cc 02       		.uleb128 0x2
 1984 01cd 91       		.byte	0x91
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 65


 1985 01ce 77       		.sleb128 -9
 1986 01cf 0E       		.uleb128 0xe
 1987 01d0 B2040000 		.4byte	.LASF29
 1988 01d4 01       		.byte	0x1
 1989 01d5 8E01     		.2byte	0x18e
 1990 01d7 76000000 		.4byte	0x76
 1991 01db 02       		.uleb128 0x2
 1992 01dc 91       		.byte	0x91
 1993 01dd 74       		.sleb128 -12
 1994 01de 0E       		.uleb128 0xe
 1995 01df 70030000 		.4byte	.LASF30
 1996 01e3 01       		.byte	0x1
 1997 01e4 8F01     		.2byte	0x18f
 1998 01e6 76000000 		.4byte	0x76
 1999 01ea 02       		.uleb128 0x2
 2000 01eb 91       		.byte	0x91
 2001 01ec 72       		.sleb128 -14
 2002 01ed 00       		.byte	0
 2003 01ee 0D       		.uleb128 0xd
 2004 01ef 63040000 		.4byte	.LASF32
 2005 01f3 01       		.byte	0x1
 2006 01f4 E501     		.2byte	0x1e5
 2007 01f6 6B000000 		.4byte	0x6b
 2008 01fa 00000000 		.4byte	.LFB8
 2009 01fe 40000000 		.4byte	.LFE8-.LFB8
 2010 0202 01       		.uleb128 0x1
 2011 0203 9C       		.byte	0x9c
 2012 0204 18020000 		.4byte	0x218
 2013 0208 0E       		.uleb128 0xe
 2014 0209 F1040000 		.4byte	.LASF33
 2015 020d 01       		.byte	0x1
 2016 020e E701     		.2byte	0x1e7
 2017 0210 6B000000 		.4byte	0x6b
 2018 0214 02       		.uleb128 0x2
 2019 0215 91       		.byte	0x91
 2020 0216 77       		.sleb128 -9
 2021 0217 00       		.byte	0
 2022 0218 0D       		.uleb128 0xd
 2023 0219 5F050000 		.4byte	.LASF34
 2024 021d 01       		.byte	0x1
 2025 021e 1402     		.2byte	0x214
 2026 0220 6B000000 		.4byte	0x6b
 2027 0224 00000000 		.4byte	.LFB9
 2028 0228 B8000000 		.4byte	.LFE9-.LFB9
 2029 022c 01       		.uleb128 0x1
 2030 022d 9C       		.byte	0x9c
 2031 022e 6F020000 		.4byte	0x26f
 2032 0232 0E       		.uleb128 0xe
 2033 0233 39040000 		.4byte	.LASF28
 2034 0237 01       		.byte	0x1
 2035 0238 1602     		.2byte	0x216
 2036 023a 6B000000 		.4byte	0x6b
 2037 023e 02       		.uleb128 0x2
 2038 023f 91       		.byte	0x91
 2039 0240 77       		.sleb128 -9
 2040 0241 0E       		.uleb128 0xe
 2041 0242 81030000 		.4byte	.LASF35
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 66


 2042 0246 01       		.byte	0x1
 2043 0247 1702     		.2byte	0x217
 2044 0249 6B000000 		.4byte	0x6b
 2045 024d 02       		.uleb128 0x2
 2046 024e 91       		.byte	0x91
 2047 024f 71       		.sleb128 -15
 2048 0250 0E       		.uleb128 0xe
 2049 0251 B2040000 		.4byte	.LASF29
 2050 0255 01       		.byte	0x1
 2051 0256 1A02     		.2byte	0x21a
 2052 0258 76000000 		.4byte	0x76
 2053 025c 02       		.uleb128 0x2
 2054 025d 91       		.byte	0x91
 2055 025e 74       		.sleb128 -12
 2056 025f 0E       		.uleb128 0xe
 2057 0260 70030000 		.4byte	.LASF30
 2058 0264 01       		.byte	0x1
 2059 0265 1B02     		.2byte	0x21b
 2060 0267 76000000 		.4byte	0x76
 2061 026b 02       		.uleb128 0x2
 2062 026c 91       		.byte	0x91
 2063 026d 72       		.sleb128 -14
 2064 026e 00       		.byte	0
 2065 026f 0F       		.uleb128 0xf
 2066 0270 0F050000 		.4byte	.LASF36
 2067 0274 01       		.byte	0x1
 2068 0275 7A02     		.2byte	0x27a
 2069 0277 76000000 		.4byte	0x76
 2070 027b 00000000 		.4byte	.LFB10
 2071 027f 44000000 		.4byte	.LFE10-.LFB10
 2072 0283 01       		.uleb128 0x1
 2073 0284 9C       		.byte	0x9c
 2074 0285 99020000 		.4byte	0x299
 2075 0289 0E       		.uleb128 0xe
 2076 028a CA010000 		.4byte	.LASF37
 2077 028e 01       		.byte	0x1
 2078 028f 7E02     		.2byte	0x27e
 2079 0291 76000000 		.4byte	0x76
 2080 0295 02       		.uleb128 0x2
 2081 0296 91       		.byte	0x91
 2082 0297 6E       		.sleb128 -18
 2083 0298 00       		.byte	0
 2084 0299 0D       		.uleb128 0xd
 2085 029a 8A030000 		.4byte	.LASF38
 2086 029e 01       		.byte	0x1
 2087 029f AB02     		.2byte	0x2ab
 2088 02a1 76000000 		.4byte	0x76
 2089 02a5 00000000 		.4byte	.LFB11
 2090 02a9 94000000 		.4byte	.LFE11-.LFB11
 2091 02ad 01       		.uleb128 0x1
 2092 02ae 9C       		.byte	0x9c
 2093 02af C3020000 		.4byte	0x2c3
 2094 02b3 0E       		.uleb128 0xe
 2095 02b4 3C020000 		.4byte	.LASF39
 2096 02b8 01       		.byte	0x1
 2097 02b9 AE02     		.2byte	0x2ae
 2098 02bb 76000000 		.4byte	0x76
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 67


 2099 02bf 02       		.uleb128 0x2
 2100 02c0 91       		.byte	0x91
 2101 02c1 76       		.sleb128 -10
 2102 02c2 00       		.byte	0
 2103 02c3 10       		.uleb128 0x10
 2104 02c4 7D000000 		.4byte	.LASF40
 2105 02c8 01       		.byte	0x1
 2106 02c9 F502     		.2byte	0x2f5
 2107 02cb 00000000 		.4byte	.LFB12
 2108 02cf 7C000000 		.4byte	.LFE12-.LFB12
 2109 02d3 01       		.uleb128 0x1
 2110 02d4 9C       		.byte	0x9c
 2111 02d5 E9020000 		.4byte	0x2e9
 2112 02d9 0E       		.uleb128 0xe
 2113 02da CA040000 		.4byte	.LASF23
 2114 02de 01       		.byte	0x1
 2115 02df F702     		.2byte	0x2f7
 2116 02e1 6B000000 		.4byte	0x6b
 2117 02e5 02       		.uleb128 0x2
 2118 02e6 91       		.byte	0x91
 2119 02e7 77       		.sleb128 -9
 2120 02e8 00       		.byte	0
 2121 02e9 0B       		.uleb128 0xb
 2122 02ea F7030000 		.4byte	.LASF41
 2123 02ee 01       		.byte	0x1
 2124 02ef 2D03     		.2byte	0x32d
 2125 02f1 00000000 		.4byte	.LFB13
 2126 02f5 14000000 		.4byte	.LFE13-.LFB13
 2127 02f9 01       		.uleb128 0x1
 2128 02fa 9C       		.byte	0x9c
 2129 02fb 0F030000 		.4byte	0x30f
 2130 02ff 0C       		.uleb128 0xc
 2131 0300 71010000 		.4byte	.LASF42
 2132 0304 01       		.byte	0x1
 2133 0305 2D03     		.2byte	0x32d
 2134 0307 6B000000 		.4byte	0x6b
 2135 030b 02       		.uleb128 0x2
 2136 030c 91       		.byte	0x91
 2137 030d 77       		.sleb128 -9
 2138 030e 00       		.byte	0
 2139 030f 0B       		.uleb128 0xb
 2140 0310 38050000 		.4byte	.LASF43
 2141 0314 01       		.byte	0x1
 2142 0315 5903     		.2byte	0x359
 2143 0317 00000000 		.4byte	.LFB14
 2144 031b 20000000 		.4byte	.LFE14-.LFB14
 2145 031f 01       		.uleb128 0x1
 2146 0320 9C       		.byte	0x9c
 2147 0321 35030000 		.4byte	0x335
 2148 0325 0C       		.uleb128 0xc
 2149 0326 EC020000 		.4byte	.LASF44
 2150 032a 01       		.byte	0x1
 2151 032b 5903     		.2byte	0x359
 2152 032d 6B000000 		.4byte	0x6b
 2153 0331 02       		.uleb128 0x2
 2154 0332 91       		.byte	0x91
 2155 0333 77       		.sleb128 -9
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 68


 2156 0334 00       		.byte	0
 2157 0335 0B       		.uleb128 0xb
 2158 0336 C7000000 		.4byte	.LASF45
 2159 033a 01       		.byte	0x1
 2160 033b 6D03     		.2byte	0x36d
 2161 033d 00000000 		.4byte	.LFB15
 2162 0341 20000000 		.4byte	.LFE15-.LFB15
 2163 0345 01       		.uleb128 0x1
 2164 0346 9C       		.byte	0x9c
 2165 0347 5B030000 		.4byte	0x35b
 2166 034b 0C       		.uleb128 0xc
 2167 034c EC020000 		.4byte	.LASF44
 2168 0350 01       		.byte	0x1
 2169 0351 6D03     		.2byte	0x36d
 2170 0353 6B000000 		.4byte	0x6b
 2171 0357 02       		.uleb128 0x2
 2172 0358 91       		.byte	0x91
 2173 0359 77       		.sleb128 -9
 2174 035a 00       		.byte	0
 2175 035b 0B       		.uleb128 0xb
 2176 035c DA030000 		.4byte	.LASF46
 2177 0360 01       		.byte	0x1
 2178 0361 8C03     		.2byte	0x38c
 2179 0363 00000000 		.4byte	.LFB16
 2180 0367 20000000 		.4byte	.LFE16-.LFB16
 2181 036b 01       		.uleb128 0x1
 2182 036c 9C       		.byte	0x9c
 2183 036d 81030000 		.4byte	0x381
 2184 0371 0C       		.uleb128 0xc
 2185 0372 7C020000 		.4byte	.LASF27
 2186 0376 01       		.byte	0x1
 2187 0377 8C03     		.2byte	0x38c
 2188 0379 6B000000 		.4byte	0x6b
 2189 037d 02       		.uleb128 0x2
 2190 037e 91       		.byte	0x91
 2191 037f 77       		.sleb128 -9
 2192 0380 00       		.byte	0
 2193 0381 0B       		.uleb128 0xb
 2194 0382 DB040000 		.4byte	.LASF47
 2195 0386 01       		.byte	0x1
 2196 0387 AE03     		.2byte	0x3ae
 2197 0389 00000000 		.4byte	.LFB17
 2198 038d 2C000000 		.4byte	.LFE17-.LFB17
 2199 0391 01       		.uleb128 0x1
 2200 0392 9C       		.byte	0x9c
 2201 0393 A7030000 		.4byte	0x3a7
 2202 0397 0C       		.uleb128 0xc
 2203 0398 72000000 		.4byte	.LASF48
 2204 039c 01       		.byte	0x1
 2205 039d AE03     		.2byte	0x3ae
 2206 039f 6B000000 		.4byte	0x6b
 2207 03a3 02       		.uleb128 0x2
 2208 03a4 91       		.byte	0x91
 2209 03a5 77       		.sleb128 -9
 2210 03a6 00       		.byte	0
 2211 03a7 0A       		.uleb128 0xa
 2212 03a8 21050000 		.4byte	.LASF50
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 69


 2213 03ac 01       		.byte	0x1
 2214 03ad EB03     		.2byte	0x3eb
 2215 03af 6B000000 		.4byte	0x6b
 2216 03b3 00000000 		.4byte	.LFB18
 2217 03b7 18000000 		.4byte	.LFE18-.LFB18
 2218 03bb 01       		.uleb128 0x1
 2219 03bc 9C       		.byte	0x9c
 2220 03bd 0B       		.uleb128 0xb
 2221 03be FF010000 		.4byte	.LASF51
 2222 03c2 01       		.byte	0x1
 2223 03c3 1104     		.2byte	0x411
 2224 03c5 00000000 		.4byte	.LFB19
 2225 03c9 34000000 		.4byte	.LFE19-.LFB19
 2226 03cd 01       		.uleb128 0x1
 2227 03ce 9C       		.byte	0x9c
 2228 03cf E3030000 		.4byte	0x3e3
 2229 03d3 0C       		.uleb128 0xc
 2230 03d4 72000000 		.4byte	.LASF48
 2231 03d8 01       		.byte	0x1
 2232 03d9 1104     		.2byte	0x411
 2233 03db 6B000000 		.4byte	0x6b
 2234 03df 02       		.uleb128 0x2
 2235 03e0 91       		.byte	0x91
 2236 03e1 77       		.sleb128 -9
 2237 03e2 00       		.byte	0
 2238 03e3 10       		.uleb128 0x10
 2239 03e4 D9010000 		.4byte	.LASF52
 2240 03e8 01       		.byte	0x1
 2241 03e9 7904     		.2byte	0x479
 2242 03eb 00000000 		.4byte	.LFB20
 2243 03ef 40000000 		.4byte	.LFE20-.LFB20
 2244 03f3 01       		.uleb128 0x1
 2245 03f4 9C       		.byte	0x9c
 2246 03f5 18040000 		.4byte	0x418
 2247 03f9 0C       		.uleb128 0xc
 2248 03fa 95000000 		.4byte	.LASF53
 2249 03fe 01       		.byte	0x1
 2250 03ff 7904     		.2byte	0x479
 2251 0401 18040000 		.4byte	0x418
 2252 0405 02       		.uleb128 0x2
 2253 0406 91       		.byte	0x91
 2254 0407 6C       		.sleb128 -20
 2255 0408 0E       		.uleb128 0xe
 2256 0409 54020000 		.4byte	.LASF54
 2257 040d 01       		.byte	0x1
 2258 040e 7B04     		.2byte	0x47b
 2259 0410 76000000 		.4byte	0x76
 2260 0414 02       		.uleb128 0x2
 2261 0415 91       		.byte	0x91
 2262 0416 76       		.sleb128 -10
 2263 0417 00       		.byte	0
 2264 0418 11       		.uleb128 0x11
 2265 0419 04       		.byte	0x4
 2266 041a 1E040000 		.4byte	0x41e
 2267 041e 12       		.uleb128 0x12
 2268 041f 9A000000 		.4byte	0x9a
 2269 0423 10       		.uleb128 0x10
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 70


 2270 0424 29020000 		.4byte	.LASF55
 2271 0428 01       		.byte	0x1
 2272 0429 A704     		.2byte	0x4a7
 2273 042b 00000000 		.4byte	.LFB21
 2274 042f 40000000 		.4byte	.LFE21-.LFB21
 2275 0433 01       		.uleb128 0x1
 2276 0434 9C       		.byte	0x9c
 2277 0435 67040000 		.4byte	0x467
 2278 0439 0C       		.uleb128 0xc
 2279 043a 95000000 		.4byte	.LASF53
 2280 043e 01       		.byte	0x1
 2281 043f A704     		.2byte	0x4a7
 2282 0441 67040000 		.4byte	0x467
 2283 0445 02       		.uleb128 0x2
 2284 0446 91       		.byte	0x91
 2285 0447 6C       		.sleb128 -20
 2286 0448 0C       		.uleb128 0xc
 2287 0449 2F040000 		.4byte	.LASF56
 2288 044d 01       		.byte	0x1
 2289 044e A704     		.2byte	0x4a7
 2290 0450 6B000000 		.4byte	0x6b
 2291 0454 02       		.uleb128 0x2
 2292 0455 91       		.byte	0x91
 2293 0456 6B       		.sleb128 -21
 2294 0457 0E       		.uleb128 0xe
 2295 0458 54020000 		.4byte	.LASF54
 2296 045c 01       		.byte	0x1
 2297 045d AA04     		.2byte	0x4aa
 2298 045f 6B000000 		.4byte	0x6b
 2299 0463 02       		.uleb128 0x2
 2300 0464 91       		.byte	0x91
 2301 0465 77       		.sleb128 -9
 2302 0466 00       		.byte	0
 2303 0467 11       		.uleb128 0x11
 2304 0468 04       		.byte	0x4
 2305 0469 6D040000 		.4byte	0x46d
 2306 046d 12       		.uleb128 0x12
 2307 046e 6B000000 		.4byte	0x6b
 2308 0472 10       		.uleb128 0x10
 2309 0473 A0040000 		.4byte	.LASF57
 2310 0477 01       		.byte	0x1
 2311 0478 CE04     		.2byte	0x4ce
 2312 047a 00000000 		.4byte	.LFB22
 2313 047e 30000000 		.4byte	.LFE22-.LFB22
 2314 0482 01       		.uleb128 0x1
 2315 0483 9C       		.byte	0x9c
 2316 0484 98040000 		.4byte	0x498
 2317 0488 0C       		.uleb128 0xc
 2318 0489 72000000 		.4byte	.LASF48
 2319 048d 01       		.byte	0x1
 2320 048e CE04     		.2byte	0x4ce
 2321 0490 6B000000 		.4byte	0x6b
 2322 0494 02       		.uleb128 0x2
 2323 0495 91       		.byte	0x91
 2324 0496 77       		.sleb128 -9
 2325 0497 00       		.byte	0
 2326 0498 0D       		.uleb128 0xd
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 71


 2327 0499 94010000 		.4byte	.LASF58
 2328 049d 01       		.byte	0x1
 2329 049e F904     		.2byte	0x4f9
 2330 04a0 6B000000 		.4byte	0x6b
 2331 04a4 00000000 		.4byte	.LFB23
 2332 04a8 44000000 		.4byte	.LFE23-.LFB23
 2333 04ac 01       		.uleb128 0x1
 2334 04ad 9C       		.byte	0x9c
 2335 04ae C2040000 		.4byte	0x4c2
 2336 04b2 0E       		.uleb128 0xe
 2337 04b3 3C020000 		.4byte	.LASF39
 2338 04b7 01       		.byte	0x1
 2339 04b8 FC04     		.2byte	0x4fc
 2340 04ba 6B000000 		.4byte	0x6b
 2341 04be 02       		.uleb128 0x2
 2342 04bf 91       		.byte	0x91
 2343 04c0 77       		.sleb128 -9
 2344 04c1 00       		.byte	0
 2345 04c2 10       		.uleb128 0x10
 2346 04c3 40040000 		.4byte	.LASF59
 2347 04c7 01       		.byte	0x1
 2348 04c8 4A05     		.2byte	0x54a
 2349 04ca 00000000 		.4byte	.LFB24
 2350 04ce 40000000 		.4byte	.LFE24-.LFB24
 2351 04d2 01       		.uleb128 0x1
 2352 04d3 9C       		.byte	0x9c
 2353 04d4 E8040000 		.4byte	0x4e8
 2354 04d8 0E       		.uleb128 0xe
 2355 04d9 CA040000 		.4byte	.LASF23
 2356 04dd 01       		.byte	0x1
 2357 04de 4C05     		.2byte	0x54c
 2358 04e0 6B000000 		.4byte	0x6b
 2359 04e4 02       		.uleb128 0x2
 2360 04e5 91       		.byte	0x91
 2361 04e6 77       		.sleb128 -9
 2362 04e7 00       		.byte	0
 2363 04e8 10       		.uleb128 0x10
 2364 04e9 B3000000 		.4byte	.LASF60
 2365 04ed 01       		.byte	0x1
 2366 04ee A005     		.2byte	0x5a0
 2367 04f0 00000000 		.4byte	.LFB25
 2368 04f4 9C000000 		.4byte	.LFE25-.LFB25
 2369 04f8 01       		.uleb128 0x1
 2370 04f9 9C       		.byte	0x9c
 2371 04fa 27050000 		.4byte	0x527
 2372 04fe 0C       		.uleb128 0xc
 2373 04ff 8C010000 		.4byte	.LASF61
 2374 0503 01       		.byte	0x1
 2375 0504 A005     		.2byte	0x5a0
 2376 0506 6B000000 		.4byte	0x6b
 2377 050a 02       		.uleb128 0x2
 2378 050b 91       		.byte	0x91
 2379 050c 6F       		.sleb128 -17
 2380 050d 13       		.uleb128 0x13
 2381 050e 12000000 		.4byte	.LBB2
 2382 0512 78000000 		.4byte	.LBE2-.LBB2
 2383 0516 0E       		.uleb128 0xe
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 72


 2384 0517 C2040000 		.4byte	.LASF62
 2385 051b 01       		.byte	0x1
 2386 051c A805     		.2byte	0x5a8
 2387 051e 6B000000 		.4byte	0x6b
 2388 0522 02       		.uleb128 0x2
 2389 0523 91       		.byte	0x91
 2390 0524 77       		.sleb128 -9
 2391 0525 00       		.byte	0
 2392 0526 00       		.byte	0
 2393 0527 10       		.uleb128 0x10
 2394 0528 40010000 		.4byte	.LASF63
 2395 052c 01       		.byte	0x1
 2396 052d 2406     		.2byte	0x624
 2397 052f 00000000 		.4byte	.LFB26
 2398 0533 3C000000 		.4byte	.LFE26-.LFB26
 2399 0537 01       		.uleb128 0x1
 2400 0538 9C       		.byte	0x9c
 2401 0539 4D050000 		.4byte	0x54d
 2402 053d 0C       		.uleb128 0xc
 2403 053e 71010000 		.4byte	.LASF42
 2404 0542 01       		.byte	0x1
 2405 0543 2406     		.2byte	0x624
 2406 0545 6B000000 		.4byte	0x6b
 2407 0549 02       		.uleb128 0x2
 2408 054a 91       		.byte	0x91
 2409 054b 77       		.sleb128 -9
 2410 054c 00       		.byte	0
 2411 054d 14       		.uleb128 0x14
 2412 054e 0E010000 		.4byte	.LASF64
 2413 0552 01       		.byte	0x1
 2414 0553 5006     		.2byte	0x650
 2415 0555 00000000 		.4byte	.LFB27
 2416 0559 28000000 		.4byte	.LFE27-.LFB27
 2417 055d 01       		.uleb128 0x1
 2418 055e 9C       		.byte	0x9c
 2419 055f 14       		.uleb128 0x14
 2420 0560 F8040000 		.4byte	.LASF65
 2421 0564 01       		.byte	0x1
 2422 0565 7006     		.2byte	0x670
 2423 0567 00000000 		.4byte	.LFB28
 2424 056b 28000000 		.4byte	.LFE28-.LFB28
 2425 056f 01       		.uleb128 0x1
 2426 0570 9C       		.byte	0x9c
 2427 0571 15       		.uleb128 0x15
 2428 0572 60000000 		.4byte	.LASF66
 2429 0576 01       		.byte	0x1
 2430 0577 1B       		.byte	0x1b
 2431 0578 6B000000 		.4byte	0x6b
 2432 057c 05       		.uleb128 0x5
 2433 057d 03       		.byte	0x3
 2434 057e 00000000 		.4byte	UART_OSDP_initVar
 2435 0582 15       		.uleb128 0x15
 2436 0583 7A040000 		.4byte	.LASF67
 2437 0587 01       		.byte	0x1
 2438 0588 24       		.byte	0x24
 2439 0589 6B000000 		.4byte	0x6b
 2440 058d 05       		.uleb128 0x5
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 73


 2441 058e 03       		.byte	0x3
 2442 058f 00000000 		.4byte	UART_OSDP_errorStatus
 2443 0593 16       		.uleb128 0x16
 2444 0594 6B000000 		.4byte	0x6b
 2445 0598 A3050000 		.4byte	0x5a3
 2446 059c 17       		.uleb128 0x17
 2447 059d D3000000 		.4byte	0xd3
 2448 05a1 FF       		.byte	0xff
 2449 05a2 00       		.byte	0
 2450 05a3 15       		.uleb128 0x15
 2451 05a4 AA030000 		.4byte	.LASF68
 2452 05a8 01       		.byte	0x1
 2453 05a9 25       		.byte	0x25
 2454 05aa B4050000 		.4byte	0x5b4
 2455 05ae 05       		.uleb128 0x5
 2456 05af 03       		.byte	0x3
 2457 05b0 00000000 		.4byte	UART_OSDP_rxBuffer
 2458 05b4 06       		.uleb128 0x6
 2459 05b5 93050000 		.4byte	0x593
 2460 05b9 15       		.uleb128 0x15
 2461 05ba A1020000 		.4byte	.LASF69
 2462 05be 01       		.byte	0x1
 2463 05bf 26       		.byte	0x26
 2464 05c0 BD000000 		.4byte	0xbd
 2465 05c4 05       		.uleb128 0x5
 2466 05c5 03       		.byte	0x3
 2467 05c6 00000000 		.4byte	UART_OSDP_rxBufferRead
 2468 05ca 15       		.uleb128 0x15
 2469 05cb 11020000 		.4byte	.LASF70
 2470 05cf 01       		.byte	0x1
 2471 05d0 27       		.byte	0x27
 2472 05d1 BD000000 		.4byte	0xbd
 2473 05d5 05       		.uleb128 0x5
 2474 05d6 03       		.byte	0x3
 2475 05d7 00000000 		.4byte	UART_OSDP_rxBufferWrite
 2476 05db 15       		.uleb128 0x15
 2477 05dc 71050000 		.4byte	.LASF71
 2478 05e0 01       		.byte	0x1
 2479 05e1 28       		.byte	0x28
 2480 05e2 B8000000 		.4byte	0xb8
 2481 05e6 05       		.uleb128 0x5
 2482 05e7 03       		.byte	0x3
 2483 05e8 00000000 		.4byte	UART_OSDP_rxBufferLoopDetect
 2484 05ec 15       		.uleb128 0x15
 2485 05ed 25010000 		.4byte	.LASF72
 2486 05f1 01       		.byte	0x1
 2487 05f2 29       		.byte	0x29
 2488 05f3 B8000000 		.4byte	0xb8
 2489 05f7 05       		.uleb128 0x5
 2490 05f8 03       		.byte	0x3
 2491 05f9 00000000 		.4byte	UART_OSDP_rxBufferOverflow
 2492 05fd 00       		.byte	0
 2493              		.section	.debug_abbrev,"",%progbits
 2494              	.Ldebug_abbrev0:
 2495 0000 01       		.uleb128 0x1
 2496 0001 11       		.uleb128 0x11
 2497 0002 01       		.byte	0x1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 74


 2498 0003 25       		.uleb128 0x25
 2499 0004 0E       		.uleb128 0xe
 2500 0005 13       		.uleb128 0x13
 2501 0006 0B       		.uleb128 0xb
 2502 0007 03       		.uleb128 0x3
 2503 0008 0E       		.uleb128 0xe
 2504 0009 1B       		.uleb128 0x1b
 2505 000a 0E       		.uleb128 0xe
 2506 000b 55       		.uleb128 0x55
 2507 000c 17       		.uleb128 0x17
 2508 000d 11       		.uleb128 0x11
 2509 000e 01       		.uleb128 0x1
 2510 000f 10       		.uleb128 0x10
 2511 0010 17       		.uleb128 0x17
 2512 0011 00       		.byte	0
 2513 0012 00       		.byte	0
 2514 0013 02       		.uleb128 0x2
 2515 0014 24       		.uleb128 0x24
 2516 0015 00       		.byte	0
 2517 0016 0B       		.uleb128 0xb
 2518 0017 0B       		.uleb128 0xb
 2519 0018 3E       		.uleb128 0x3e
 2520 0019 0B       		.uleb128 0xb
 2521 001a 03       		.uleb128 0x3
 2522 001b 0E       		.uleb128 0xe
 2523 001c 00       		.byte	0
 2524 001d 00       		.byte	0
 2525 001e 03       		.uleb128 0x3
 2526 001f 24       		.uleb128 0x24
 2527 0020 00       		.byte	0
 2528 0021 0B       		.uleb128 0xb
 2529 0022 0B       		.uleb128 0xb
 2530 0023 3E       		.uleb128 0x3e
 2531 0024 0B       		.uleb128 0xb
 2532 0025 03       		.uleb128 0x3
 2533 0026 08       		.uleb128 0x8
 2534 0027 00       		.byte	0
 2535 0028 00       		.byte	0
 2536 0029 04       		.uleb128 0x4
 2537 002a 16       		.uleb128 0x16
 2538 002b 00       		.byte	0
 2539 002c 03       		.uleb128 0x3
 2540 002d 0E       		.uleb128 0xe
 2541 002e 3A       		.uleb128 0x3a
 2542 002f 0B       		.uleb128 0xb
 2543 0030 3B       		.uleb128 0x3b
 2544 0031 0B       		.uleb128 0xb
 2545 0032 49       		.uleb128 0x49
 2546 0033 13       		.uleb128 0x13
 2547 0034 00       		.byte	0
 2548 0035 00       		.byte	0
 2549 0036 05       		.uleb128 0x5
 2550 0037 16       		.uleb128 0x16
 2551 0038 00       		.byte	0
 2552 0039 03       		.uleb128 0x3
 2553 003a 0E       		.uleb128 0xe
 2554 003b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 75


 2555 003c 0B       		.uleb128 0xb
 2556 003d 3B       		.uleb128 0x3b
 2557 003e 05       		.uleb128 0x5
 2558 003f 49       		.uleb128 0x49
 2559 0040 13       		.uleb128 0x13
 2560 0041 00       		.byte	0
 2561 0042 00       		.byte	0
 2562 0043 06       		.uleb128 0x6
 2563 0044 35       		.uleb128 0x35
 2564 0045 00       		.byte	0
 2565 0046 49       		.uleb128 0x49
 2566 0047 13       		.uleb128 0x13
 2567 0048 00       		.byte	0
 2568 0049 00       		.byte	0
 2569 004a 07       		.uleb128 0x7
 2570 004b 2E       		.uleb128 0x2e
 2571 004c 00       		.byte	0
 2572 004d 3F       		.uleb128 0x3f
 2573 004e 19       		.uleb128 0x19
 2574 004f 03       		.uleb128 0x3
 2575 0050 0E       		.uleb128 0xe
 2576 0051 3A       		.uleb128 0x3a
 2577 0052 0B       		.uleb128 0xb
 2578 0053 3B       		.uleb128 0x3b
 2579 0054 0B       		.uleb128 0xb
 2580 0055 27       		.uleb128 0x27
 2581 0056 19       		.uleb128 0x19
 2582 0057 11       		.uleb128 0x11
 2583 0058 01       		.uleb128 0x1
 2584 0059 12       		.uleb128 0x12
 2585 005a 06       		.uleb128 0x6
 2586 005b 40       		.uleb128 0x40
 2587 005c 18       		.uleb128 0x18
 2588 005d 9642     		.uleb128 0x2116
 2589 005f 19       		.uleb128 0x19
 2590 0060 00       		.byte	0
 2591 0061 00       		.byte	0
 2592 0062 08       		.uleb128 0x8
 2593 0063 2E       		.uleb128 0x2e
 2594 0064 01       		.byte	0x1
 2595 0065 3F       		.uleb128 0x3f
 2596 0066 19       		.uleb128 0x19
 2597 0067 03       		.uleb128 0x3
 2598 0068 0E       		.uleb128 0xe
 2599 0069 3A       		.uleb128 0x3a
 2600 006a 0B       		.uleb128 0xb
 2601 006b 3B       		.uleb128 0x3b
 2602 006c 0B       		.uleb128 0xb
 2603 006d 27       		.uleb128 0x27
 2604 006e 19       		.uleb128 0x19
 2605 006f 11       		.uleb128 0x11
 2606 0070 01       		.uleb128 0x1
 2607 0071 12       		.uleb128 0x12
 2608 0072 06       		.uleb128 0x6
 2609 0073 40       		.uleb128 0x40
 2610 0074 18       		.uleb128 0x18
 2611 0075 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 76


 2612 0077 19       		.uleb128 0x19
 2613 0078 01       		.uleb128 0x1
 2614 0079 13       		.uleb128 0x13
 2615 007a 00       		.byte	0
 2616 007b 00       		.byte	0
 2617 007c 09       		.uleb128 0x9
 2618 007d 34       		.uleb128 0x34
 2619 007e 00       		.byte	0
 2620 007f 03       		.uleb128 0x3
 2621 0080 0E       		.uleb128 0xe
 2622 0081 3A       		.uleb128 0x3a
 2623 0082 0B       		.uleb128 0xb
 2624 0083 3B       		.uleb128 0x3b
 2625 0084 0B       		.uleb128 0xb
 2626 0085 49       		.uleb128 0x49
 2627 0086 13       		.uleb128 0x13
 2628 0087 02       		.uleb128 0x2
 2629 0088 18       		.uleb128 0x18
 2630 0089 00       		.byte	0
 2631 008a 00       		.byte	0
 2632 008b 0A       		.uleb128 0xa
 2633 008c 2E       		.uleb128 0x2e
 2634 008d 00       		.byte	0
 2635 008e 3F       		.uleb128 0x3f
 2636 008f 19       		.uleb128 0x19
 2637 0090 03       		.uleb128 0x3
 2638 0091 0E       		.uleb128 0xe
 2639 0092 3A       		.uleb128 0x3a
 2640 0093 0B       		.uleb128 0xb
 2641 0094 3B       		.uleb128 0x3b
 2642 0095 05       		.uleb128 0x5
 2643 0096 27       		.uleb128 0x27
 2644 0097 19       		.uleb128 0x19
 2645 0098 49       		.uleb128 0x49
 2646 0099 13       		.uleb128 0x13
 2647 009a 11       		.uleb128 0x11
 2648 009b 01       		.uleb128 0x1
 2649 009c 12       		.uleb128 0x12
 2650 009d 06       		.uleb128 0x6
 2651 009e 40       		.uleb128 0x40
 2652 009f 18       		.uleb128 0x18
 2653 00a0 9742     		.uleb128 0x2117
 2654 00a2 19       		.uleb128 0x19
 2655 00a3 00       		.byte	0
 2656 00a4 00       		.byte	0
 2657 00a5 0B       		.uleb128 0xb
 2658 00a6 2E       		.uleb128 0x2e
 2659 00a7 01       		.byte	0x1
 2660 00a8 3F       		.uleb128 0x3f
 2661 00a9 19       		.uleb128 0x19
 2662 00aa 03       		.uleb128 0x3
 2663 00ab 0E       		.uleb128 0xe
 2664 00ac 3A       		.uleb128 0x3a
 2665 00ad 0B       		.uleb128 0xb
 2666 00ae 3B       		.uleb128 0x3b
 2667 00af 05       		.uleb128 0x5
 2668 00b0 27       		.uleb128 0x27
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 77


 2669 00b1 19       		.uleb128 0x19
 2670 00b2 11       		.uleb128 0x11
 2671 00b3 01       		.uleb128 0x1
 2672 00b4 12       		.uleb128 0x12
 2673 00b5 06       		.uleb128 0x6
 2674 00b6 40       		.uleb128 0x40
 2675 00b7 18       		.uleb128 0x18
 2676 00b8 9742     		.uleb128 0x2117
 2677 00ba 19       		.uleb128 0x19
 2678 00bb 01       		.uleb128 0x1
 2679 00bc 13       		.uleb128 0x13
 2680 00bd 00       		.byte	0
 2681 00be 00       		.byte	0
 2682 00bf 0C       		.uleb128 0xc
 2683 00c0 05       		.uleb128 0x5
 2684 00c1 00       		.byte	0
 2685 00c2 03       		.uleb128 0x3
 2686 00c3 0E       		.uleb128 0xe
 2687 00c4 3A       		.uleb128 0x3a
 2688 00c5 0B       		.uleb128 0xb
 2689 00c6 3B       		.uleb128 0x3b
 2690 00c7 05       		.uleb128 0x5
 2691 00c8 49       		.uleb128 0x49
 2692 00c9 13       		.uleb128 0x13
 2693 00ca 02       		.uleb128 0x2
 2694 00cb 18       		.uleb128 0x18
 2695 00cc 00       		.byte	0
 2696 00cd 00       		.byte	0
 2697 00ce 0D       		.uleb128 0xd
 2698 00cf 2E       		.uleb128 0x2e
 2699 00d0 01       		.byte	0x1
 2700 00d1 3F       		.uleb128 0x3f
 2701 00d2 19       		.uleb128 0x19
 2702 00d3 03       		.uleb128 0x3
 2703 00d4 0E       		.uleb128 0xe
 2704 00d5 3A       		.uleb128 0x3a
 2705 00d6 0B       		.uleb128 0xb
 2706 00d7 3B       		.uleb128 0x3b
 2707 00d8 05       		.uleb128 0x5
 2708 00d9 27       		.uleb128 0x27
 2709 00da 19       		.uleb128 0x19
 2710 00db 49       		.uleb128 0x49
 2711 00dc 13       		.uleb128 0x13
 2712 00dd 11       		.uleb128 0x11
 2713 00de 01       		.uleb128 0x1
 2714 00df 12       		.uleb128 0x12
 2715 00e0 06       		.uleb128 0x6
 2716 00e1 40       		.uleb128 0x40
 2717 00e2 18       		.uleb128 0x18
 2718 00e3 9742     		.uleb128 0x2117
 2719 00e5 19       		.uleb128 0x19
 2720 00e6 01       		.uleb128 0x1
 2721 00e7 13       		.uleb128 0x13
 2722 00e8 00       		.byte	0
 2723 00e9 00       		.byte	0
 2724 00ea 0E       		.uleb128 0xe
 2725 00eb 34       		.uleb128 0x34
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 78


 2726 00ec 00       		.byte	0
 2727 00ed 03       		.uleb128 0x3
 2728 00ee 0E       		.uleb128 0xe
 2729 00ef 3A       		.uleb128 0x3a
 2730 00f0 0B       		.uleb128 0xb
 2731 00f1 3B       		.uleb128 0x3b
 2732 00f2 05       		.uleb128 0x5
 2733 00f3 49       		.uleb128 0x49
 2734 00f4 13       		.uleb128 0x13
 2735 00f5 02       		.uleb128 0x2
 2736 00f6 18       		.uleb128 0x18
 2737 00f7 00       		.byte	0
 2738 00f8 00       		.byte	0
 2739 00f9 0F       		.uleb128 0xf
 2740 00fa 2E       		.uleb128 0x2e
 2741 00fb 01       		.byte	0x1
 2742 00fc 3F       		.uleb128 0x3f
 2743 00fd 19       		.uleb128 0x19
 2744 00fe 03       		.uleb128 0x3
 2745 00ff 0E       		.uleb128 0xe
 2746 0100 3A       		.uleb128 0x3a
 2747 0101 0B       		.uleb128 0xb
 2748 0102 3B       		.uleb128 0x3b
 2749 0103 05       		.uleb128 0x5
 2750 0104 27       		.uleb128 0x27
 2751 0105 19       		.uleb128 0x19
 2752 0106 49       		.uleb128 0x49
 2753 0107 13       		.uleb128 0x13
 2754 0108 11       		.uleb128 0x11
 2755 0109 01       		.uleb128 0x1
 2756 010a 12       		.uleb128 0x12
 2757 010b 06       		.uleb128 0x6
 2758 010c 40       		.uleb128 0x40
 2759 010d 18       		.uleb128 0x18
 2760 010e 9642     		.uleb128 0x2116
 2761 0110 19       		.uleb128 0x19
 2762 0111 01       		.uleb128 0x1
 2763 0112 13       		.uleb128 0x13
 2764 0113 00       		.byte	0
 2765 0114 00       		.byte	0
 2766 0115 10       		.uleb128 0x10
 2767 0116 2E       		.uleb128 0x2e
 2768 0117 01       		.byte	0x1
 2769 0118 3F       		.uleb128 0x3f
 2770 0119 19       		.uleb128 0x19
 2771 011a 03       		.uleb128 0x3
 2772 011b 0E       		.uleb128 0xe
 2773 011c 3A       		.uleb128 0x3a
 2774 011d 0B       		.uleb128 0xb
 2775 011e 3B       		.uleb128 0x3b
 2776 011f 05       		.uleb128 0x5
 2777 0120 27       		.uleb128 0x27
 2778 0121 19       		.uleb128 0x19
 2779 0122 11       		.uleb128 0x11
 2780 0123 01       		.uleb128 0x1
 2781 0124 12       		.uleb128 0x12
 2782 0125 06       		.uleb128 0x6
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 79


 2783 0126 40       		.uleb128 0x40
 2784 0127 18       		.uleb128 0x18
 2785 0128 9642     		.uleb128 0x2116
 2786 012a 19       		.uleb128 0x19
 2787 012b 01       		.uleb128 0x1
 2788 012c 13       		.uleb128 0x13
 2789 012d 00       		.byte	0
 2790 012e 00       		.byte	0
 2791 012f 11       		.uleb128 0x11
 2792 0130 0F       		.uleb128 0xf
 2793 0131 00       		.byte	0
 2794 0132 0B       		.uleb128 0xb
 2795 0133 0B       		.uleb128 0xb
 2796 0134 49       		.uleb128 0x49
 2797 0135 13       		.uleb128 0x13
 2798 0136 00       		.byte	0
 2799 0137 00       		.byte	0
 2800 0138 12       		.uleb128 0x12
 2801 0139 26       		.uleb128 0x26
 2802 013a 00       		.byte	0
 2803 013b 49       		.uleb128 0x49
 2804 013c 13       		.uleb128 0x13
 2805 013d 00       		.byte	0
 2806 013e 00       		.byte	0
 2807 013f 13       		.uleb128 0x13
 2808 0140 0B       		.uleb128 0xb
 2809 0141 01       		.byte	0x1
 2810 0142 11       		.uleb128 0x11
 2811 0143 01       		.uleb128 0x1
 2812 0144 12       		.uleb128 0x12
 2813 0145 06       		.uleb128 0x6
 2814 0146 00       		.byte	0
 2815 0147 00       		.byte	0
 2816 0148 14       		.uleb128 0x14
 2817 0149 2E       		.uleb128 0x2e
 2818 014a 00       		.byte	0
 2819 014b 3F       		.uleb128 0x3f
 2820 014c 19       		.uleb128 0x19
 2821 014d 03       		.uleb128 0x3
 2822 014e 0E       		.uleb128 0xe
 2823 014f 3A       		.uleb128 0x3a
 2824 0150 0B       		.uleb128 0xb
 2825 0151 3B       		.uleb128 0x3b
 2826 0152 05       		.uleb128 0x5
 2827 0153 27       		.uleb128 0x27
 2828 0154 19       		.uleb128 0x19
 2829 0155 11       		.uleb128 0x11
 2830 0156 01       		.uleb128 0x1
 2831 0157 12       		.uleb128 0x12
 2832 0158 06       		.uleb128 0x6
 2833 0159 40       		.uleb128 0x40
 2834 015a 18       		.uleb128 0x18
 2835 015b 9642     		.uleb128 0x2116
 2836 015d 19       		.uleb128 0x19
 2837 015e 00       		.byte	0
 2838 015f 00       		.byte	0
 2839 0160 15       		.uleb128 0x15
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 80


 2840 0161 34       		.uleb128 0x34
 2841 0162 00       		.byte	0
 2842 0163 03       		.uleb128 0x3
 2843 0164 0E       		.uleb128 0xe
 2844 0165 3A       		.uleb128 0x3a
 2845 0166 0B       		.uleb128 0xb
 2846 0167 3B       		.uleb128 0x3b
 2847 0168 0B       		.uleb128 0xb
 2848 0169 49       		.uleb128 0x49
 2849 016a 13       		.uleb128 0x13
 2850 016b 3F       		.uleb128 0x3f
 2851 016c 19       		.uleb128 0x19
 2852 016d 02       		.uleb128 0x2
 2853 016e 18       		.uleb128 0x18
 2854 016f 00       		.byte	0
 2855 0170 00       		.byte	0
 2856 0171 16       		.uleb128 0x16
 2857 0172 01       		.uleb128 0x1
 2858 0173 01       		.byte	0x1
 2859 0174 49       		.uleb128 0x49
 2860 0175 13       		.uleb128 0x13
 2861 0176 01       		.uleb128 0x1
 2862 0177 13       		.uleb128 0x13
 2863 0178 00       		.byte	0
 2864 0179 00       		.byte	0
 2865 017a 17       		.uleb128 0x17
 2866 017b 21       		.uleb128 0x21
 2867 017c 00       		.byte	0
 2868 017d 49       		.uleb128 0x49
 2869 017e 13       		.uleb128 0x13
 2870 017f 2F       		.uleb128 0x2f
 2871 0180 0B       		.uleb128 0xb
 2872 0181 00       		.byte	0
 2873 0182 00       		.byte	0
 2874 0183 00       		.byte	0
 2875              		.section	.debug_aranges,"",%progbits
 2876 0000 FC000000 		.4byte	0xfc
 2877 0004 0200     		.2byte	0x2
 2878 0006 00000000 		.4byte	.Ldebug_info0
 2879 000a 04       		.byte	0x4
 2880 000b 00       		.byte	0
 2881 000c 0000     		.2byte	0
 2882 000e 0000     		.2byte	0
 2883 0010 00000000 		.4byte	.LFB0
 2884 0014 20000000 		.4byte	.LFE0-.LFB0
 2885 0018 00000000 		.4byte	.LFB1
 2886 001c 38000000 		.4byte	.LFE1-.LFB1
 2887 0020 00000000 		.4byte	.LFB2
 2888 0024 50000000 		.4byte	.LFE2-.LFB2
 2889 0028 00000000 		.4byte	.LFB3
 2890 002c 50000000 		.4byte	.LFE3-.LFB3
 2891 0030 00000000 		.4byte	.LFB4
 2892 0034 18000000 		.4byte	.LFE4-.LFB4
 2893 0038 00000000 		.4byte	.LFB5
 2894 003c 20000000 		.4byte	.LFE5-.LFB5
 2895 0040 00000000 		.4byte	.LFB6
 2896 0044 20000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 81


 2897 0048 00000000 		.4byte	.LFB7
 2898 004c 94000000 		.4byte	.LFE7-.LFB7
 2899 0050 00000000 		.4byte	.LFB8
 2900 0054 40000000 		.4byte	.LFE8-.LFB8
 2901 0058 00000000 		.4byte	.LFB9
 2902 005c B8000000 		.4byte	.LFE9-.LFB9
 2903 0060 00000000 		.4byte	.LFB10
 2904 0064 44000000 		.4byte	.LFE10-.LFB10
 2905 0068 00000000 		.4byte	.LFB11
 2906 006c 94000000 		.4byte	.LFE11-.LFB11
 2907 0070 00000000 		.4byte	.LFB12
 2908 0074 7C000000 		.4byte	.LFE12-.LFB12
 2909 0078 00000000 		.4byte	.LFB13
 2910 007c 14000000 		.4byte	.LFE13-.LFB13
 2911 0080 00000000 		.4byte	.LFB14
 2912 0084 20000000 		.4byte	.LFE14-.LFB14
 2913 0088 00000000 		.4byte	.LFB15
 2914 008c 20000000 		.4byte	.LFE15-.LFB15
 2915 0090 00000000 		.4byte	.LFB16
 2916 0094 20000000 		.4byte	.LFE16-.LFB16
 2917 0098 00000000 		.4byte	.LFB17
 2918 009c 2C000000 		.4byte	.LFE17-.LFB17
 2919 00a0 00000000 		.4byte	.LFB18
 2920 00a4 18000000 		.4byte	.LFE18-.LFB18
 2921 00a8 00000000 		.4byte	.LFB19
 2922 00ac 34000000 		.4byte	.LFE19-.LFB19
 2923 00b0 00000000 		.4byte	.LFB20
 2924 00b4 40000000 		.4byte	.LFE20-.LFB20
 2925 00b8 00000000 		.4byte	.LFB21
 2926 00bc 40000000 		.4byte	.LFE21-.LFB21
 2927 00c0 00000000 		.4byte	.LFB22
 2928 00c4 30000000 		.4byte	.LFE22-.LFB22
 2929 00c8 00000000 		.4byte	.LFB23
 2930 00cc 44000000 		.4byte	.LFE23-.LFB23
 2931 00d0 00000000 		.4byte	.LFB24
 2932 00d4 40000000 		.4byte	.LFE24-.LFB24
 2933 00d8 00000000 		.4byte	.LFB25
 2934 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2935 00e0 00000000 		.4byte	.LFB26
 2936 00e4 3C000000 		.4byte	.LFE26-.LFB26
 2937 00e8 00000000 		.4byte	.LFB27
 2938 00ec 28000000 		.4byte	.LFE27-.LFB27
 2939 00f0 00000000 		.4byte	.LFB28
 2940 00f4 28000000 		.4byte	.LFE28-.LFB28
 2941 00f8 00000000 		.4byte	0
 2942 00fc 00000000 		.4byte	0
 2943              		.section	.debug_ranges,"",%progbits
 2944              	.Ldebug_ranges0:
 2945 0000 00000000 		.4byte	.LFB0
 2946 0004 20000000 		.4byte	.LFE0
 2947 0008 00000000 		.4byte	.LFB1
 2948 000c 38000000 		.4byte	.LFE1
 2949 0010 00000000 		.4byte	.LFB2
 2950 0014 50000000 		.4byte	.LFE2
 2951 0018 00000000 		.4byte	.LFB3
 2952 001c 50000000 		.4byte	.LFE3
 2953 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 82


 2954 0024 18000000 		.4byte	.LFE4
 2955 0028 00000000 		.4byte	.LFB5
 2956 002c 20000000 		.4byte	.LFE5
 2957 0030 00000000 		.4byte	.LFB6
 2958 0034 20000000 		.4byte	.LFE6
 2959 0038 00000000 		.4byte	.LFB7
 2960 003c 94000000 		.4byte	.LFE7
 2961 0040 00000000 		.4byte	.LFB8
 2962 0044 40000000 		.4byte	.LFE8
 2963 0048 00000000 		.4byte	.LFB9
 2964 004c B8000000 		.4byte	.LFE9
 2965 0050 00000000 		.4byte	.LFB10
 2966 0054 44000000 		.4byte	.LFE10
 2967 0058 00000000 		.4byte	.LFB11
 2968 005c 94000000 		.4byte	.LFE11
 2969 0060 00000000 		.4byte	.LFB12
 2970 0064 7C000000 		.4byte	.LFE12
 2971 0068 00000000 		.4byte	.LFB13
 2972 006c 14000000 		.4byte	.LFE13
 2973 0070 00000000 		.4byte	.LFB14
 2974 0074 20000000 		.4byte	.LFE14
 2975 0078 00000000 		.4byte	.LFB15
 2976 007c 20000000 		.4byte	.LFE15
 2977 0080 00000000 		.4byte	.LFB16
 2978 0084 20000000 		.4byte	.LFE16
 2979 0088 00000000 		.4byte	.LFB17
 2980 008c 2C000000 		.4byte	.LFE17
 2981 0090 00000000 		.4byte	.LFB18
 2982 0094 18000000 		.4byte	.LFE18
 2983 0098 00000000 		.4byte	.LFB19
 2984 009c 34000000 		.4byte	.LFE19
 2985 00a0 00000000 		.4byte	.LFB20
 2986 00a4 40000000 		.4byte	.LFE20
 2987 00a8 00000000 		.4byte	.LFB21
 2988 00ac 40000000 		.4byte	.LFE21
 2989 00b0 00000000 		.4byte	.LFB22
 2990 00b4 30000000 		.4byte	.LFE22
 2991 00b8 00000000 		.4byte	.LFB23
 2992 00bc 44000000 		.4byte	.LFE23
 2993 00c0 00000000 		.4byte	.LFB24
 2994 00c4 40000000 		.4byte	.LFE24
 2995 00c8 00000000 		.4byte	.LFB25
 2996 00cc 9C000000 		.4byte	.LFE25
 2997 00d0 00000000 		.4byte	.LFB26
 2998 00d4 3C000000 		.4byte	.LFE26
 2999 00d8 00000000 		.4byte	.LFB27
 3000 00dc 28000000 		.4byte	.LFE27
 3001 00e0 00000000 		.4byte	.LFB28
 3002 00e4 28000000 		.4byte	.LFE28
 3003 00e8 00000000 		.4byte	0
 3004 00ec 00000000 		.4byte	0
 3005              		.section	.debug_line,"",%progbits
 3006              	.Ldebug_line0:
 3007 0000 3E030000 		.section	.debug_str,"MS",%progbits,1
 3007      02004800 
 3007      00000201 
 3007      FB0E0D00 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 83


 3007      01010101 
 3008              	.LASF10:
 3009 0000 75696E74 		.ascii	"uint16\000"
 3009      313600
 3010              	.LASF75:
 3011 0007 433A5C55 		.ascii	"C:\\Users\\Yiquing\\Documents\\works\\NanoNXT\\osdp"
 3011      73657273 
 3011      5C596971 
 3011      75696E67 
 3011      5C446F63 
 3012 0034 20746573 		.ascii	" testing\\YQ\\nanoNxt_ICM3\\nanoNxt_ICM3.cydsn\000"
 3012      74696E67 
 3012      5C59515C 
 3012      6E616E6F 
 3012      4E78745F 
 3013              	.LASF66:
 3014 0060 55415254 		.ascii	"UART_OSDP_initVar\000"
 3014      5F4F5344 
 3014      505F696E 
 3014      69745661 
 3014      7200
 3015              	.LASF48:
 3016 0072 74784461 		.ascii	"txDataByte\000"
 3016      74614279 
 3016      746500
 3017              	.LASF40:
 3018 007d 55415254 		.ascii	"UART_OSDP_ClearRxBuffer\000"
 3018      5F4F5344 
 3018      505F436C 
 3018      65617252 
 3018      78427566 
 3019              	.LASF53:
 3020 0095 73747269 		.ascii	"string\000"
 3020      6E6700
 3021              	.LASF7:
 3022 009c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3022      206C6F6E 
 3022      6720756E 
 3022      7369676E 
 3022      65642069 
 3023              	.LASF60:
 3024 00b3 55415254 		.ascii	"UART_OSDP_SendBreak\000"
 3024      5F4F5344 
 3024      505F5365 
 3024      6E644272 
 3024      65616B00 
 3025              	.LASF45:
 3026 00c7 55415254 		.ascii	"UART_OSDP_SetRxAddress2\000"
 3026      5F4F5344 
 3026      505F5365 
 3026      74527841 
 3026      64647265 
 3027              	.LASF6:
 3028 00df 6C6F6E67 		.ascii	"long long int\000"
 3028      206C6F6E 
 3028      6720696E 
 3028      7400
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 84


 3029              	.LASF0:
 3030 00ed 7369676E 		.ascii	"signed char\000"
 3030      65642063 
 3030      68617200 
 3031              	.LASF31:
 3032 00f9 55415254 		.ascii	"UART_OSDP_ReadRxData\000"
 3032      5F4F5344 
 3032      505F5265 
 3032      61645278 
 3032      44617461 
 3033              	.LASF64:
 3034 010e 55415254 		.ascii	"UART_OSDP_LoadRxConfig\000"
 3034      5F4F5344 
 3034      505F4C6F 
 3034      61645278 
 3034      436F6E66 
 3035              	.LASF72:
 3036 0125 55415254 		.ascii	"UART_OSDP_rxBufferOverflow\000"
 3036      5F4F5344 
 3036      505F7278 
 3036      42756666 
 3036      65724F76 
 3037              	.LASF63:
 3038 0140 55415254 		.ascii	"UART_OSDP_SetTxAddressMode\000"
 3038      5F4F5344 
 3038      505F5365 
 3038      74547841 
 3038      64647265 
 3039              	.LASF4:
 3040 015b 6C6F6E67 		.ascii	"long int\000"
 3040      20696E74 
 3040      00
 3041              	.LASF9:
 3042 0164 75696E74 		.ascii	"uint8\000"
 3042      3800
 3043              	.LASF13:
 3044 016a 646F7562 		.ascii	"double\000"
 3044      6C6500
 3045              	.LASF42:
 3046 0171 61646472 		.ascii	"addressMode\000"
 3046      6573734D 
 3046      6F646500 
 3047              	.LASF11:
 3048 017d 75696E74 		.ascii	"uint32\000"
 3048      333200
 3049              	.LASF26:
 3050 0184 636F6E74 		.ascii	"control\000"
 3050      726F6C00 
 3051              	.LASF61:
 3052 018c 7265744D 		.ascii	"retMode\000"
 3052      6F646500 
 3053              	.LASF58:
 3054 0194 55415254 		.ascii	"UART_OSDP_GetTxBufferSize\000"
 3054      5F4F5344 
 3054      505F4765 
 3054      74547842 
 3054      75666665 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 85


 3055              	.LASF8:
 3056 01ae 756E7369 		.ascii	"unsigned int\000"
 3056      676E6564 
 3056      20696E74 
 3056      00
 3057              	.LASF20:
 3058 01bb 55415254 		.ascii	"UART_OSDP_Init\000"
 3058      5F4F5344 
 3058      505F496E 
 3058      697400
 3059              	.LASF37:
 3060 01ca 6C6F6345 		.ascii	"locErrorStatus\000"
 3060      72726F72 
 3060      53746174 
 3060      757300
 3061              	.LASF52:
 3062 01d9 55415254 		.ascii	"UART_OSDP_PutString\000"
 3062      5F4F5344 
 3062      505F5075 
 3062      74537472 
 3062      696E6700 
 3063              	.LASF5:
 3064 01ed 6C6F6E67 		.ascii	"long unsigned int\000"
 3064      20756E73 
 3064      69676E65 
 3064      6420696E 
 3064      7400
 3065              	.LASF51:
 3066 01ff 55415254 		.ascii	"UART_OSDP_PutChar\000"
 3066      5F4F5344 
 3066      505F5075 
 3066      74436861 
 3066      7200
 3067              	.LASF70:
 3068 0211 55415254 		.ascii	"UART_OSDP_rxBufferWrite\000"
 3068      5F4F5344 
 3068      505F7278 
 3068      42756666 
 3068      65725772 
 3069              	.LASF55:
 3070 0229 55415254 		.ascii	"UART_OSDP_PutArray\000"
 3070      5F4F5344 
 3070      505F5075 
 3070      74417272 
 3070      617900
 3071              	.LASF39:
 3072 023c 73697A65 		.ascii	"size\000"
 3072      00
 3073              	.LASF3:
 3074 0241 73686F72 		.ascii	"short unsigned int\000"
 3074      7420756E 
 3074      7369676E 
 3074      65642069 
 3074      6E7400
 3075              	.LASF54:
 3076 0254 62756649 		.ascii	"bufIndex\000"
 3076      6E646578 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 86


 3076      00
 3077              	.LASF24:
 3078 025d 55415254 		.ascii	"UART_OSDP_WriteControlRegister\000"
 3078      5F4F5344 
 3078      505F5772 
 3078      69746543 
 3078      6F6E7472 
 3079              	.LASF27:
 3080 027c 696E7453 		.ascii	"intSrc\000"
 3080      726300
 3081              	.LASF49:
 3082 0283 55415254 		.ascii	"UART_OSDP_ReadControlRegister\000"
 3082      5F4F5344 
 3082      505F5265 
 3082      6164436F 
 3082      6E74726F 
 3083              	.LASF69:
 3084 02a1 55415254 		.ascii	"UART_OSDP_rxBufferRead\000"
 3084      5F4F5344 
 3084      505F7278 
 3084      42756666 
 3084      65725265 
 3085              	.LASF17:
 3086 02b8 72656733 		.ascii	"reg32\000"
 3086      3200
 3087              	.LASF74:
 3088 02be 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_OSDP.c\000"
 3088      6E657261 
 3088      7465645F 
 3088      536F7572 
 3088      63655C50 
 3089              	.LASF18:
 3090 02e3 73697A65 		.ascii	"sizetype\000"
 3090      74797065 
 3090      00
 3091              	.LASF44:
 3092 02ec 61646472 		.ascii	"address\000"
 3092      65737300 
 3093              	.LASF73:
 3094 02f4 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3094      4320342E 
 3094      382E3420 
 3094      32303134 
 3094      30353236 
 3095 0327 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 3095      20726576 
 3095      6973696F 
 3095      6E203231 
 3095      31333538 
 3096 035a 30202D66 		.ascii	"0 -ffunction-sections\000"
 3096      66756E63 
 3096      74696F6E 
 3096      2D736563 
 3096      74696F6E 
 3097              	.LASF30:
 3098 0370 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3098      78427566 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 87


 3098      66657257 
 3098      72697465 
 3098      00
 3099              	.LASF35:
 3100 0381 72785374 		.ascii	"rxStatus\000"
 3100      61747573 
 3100      00
 3101              	.LASF38:
 3102 038a 55415254 		.ascii	"UART_OSDP_GetRxBufferSize\000"
 3102      5F4F5344 
 3102      505F4765 
 3102      74527842 
 3102      75666665 
 3103              	.LASF12:
 3104 03a4 666C6F61 		.ascii	"float\000"
 3104      7400
 3105              	.LASF68:
 3106 03aa 55415254 		.ascii	"UART_OSDP_rxBuffer\000"
 3106      5F4F5344 
 3106      505F7278 
 3106      42756666 
 3106      657200
 3107              	.LASF16:
 3108 03bd 72656738 		.ascii	"reg8\000"
 3108      00
 3109              	.LASF1:
 3110 03c2 756E7369 		.ascii	"unsigned char\000"
 3110      676E6564 
 3110      20636861 
 3110      7200
 3111              	.LASF2:
 3112 03d0 73686F72 		.ascii	"short int\000"
 3112      7420696E 
 3112      7400
 3113              	.LASF46:
 3114 03da 55415254 		.ascii	"UART_OSDP_SetTxInterruptMode\000"
 3114      5F4F5344 
 3114      505F5365 
 3114      74547849 
 3114      6E746572 
 3115              	.LASF41:
 3116 03f7 55415254 		.ascii	"UART_OSDP_SetRxAddressMode\000"
 3116      5F4F5344 
 3116      505F5365 
 3116      74527841 
 3116      64647265 
 3117              	.LASF25:
 3118 0412 55415254 		.ascii	"UART_OSDP_SetRxInterruptMode\000"
 3118      5F4F5344 
 3118      505F5365 
 3118      74527849 
 3118      6E746572 
 3119              	.LASF56:
 3120 042f 62797465 		.ascii	"byteCount\000"
 3120      436F756E 
 3120      7400
 3121              	.LASF28:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 88


 3122 0439 72784461 		.ascii	"rxData\000"
 3122      746100
 3123              	.LASF59:
 3124 0440 55415254 		.ascii	"UART_OSDP_ClearTxBuffer\000"
 3124      5F4F5344 
 3124      505F436C 
 3124      65617254 
 3124      78427566 
 3125              	.LASF15:
 3126 0458 63686172 		.ascii	"char\000"
 3126      00
 3127              	.LASF14:
 3128 045d 63686172 		.ascii	"char8\000"
 3128      3800
 3129              	.LASF32:
 3130 0463 55415254 		.ascii	"UART_OSDP_ReadRxStatus\000"
 3130      5F4F5344 
 3130      505F5265 
 3130      61645278 
 3130      53746174 
 3131              	.LASF67:
 3132 047a 55415254 		.ascii	"UART_OSDP_errorStatus\000"
 3132      5F4F5344 
 3132      505F6572 
 3132      726F7253 
 3132      74617475 
 3133              	.LASF19:
 3134 0490 55415254 		.ascii	"UART_OSDP_Start\000"
 3134      5F4F5344 
 3134      505F5374 
 3134      61727400 
 3135              	.LASF57:
 3136 04a0 55415254 		.ascii	"UART_OSDP_PutCRLF\000"
 3136      5F4F5344 
 3136      505F5075 
 3136      7443524C 
 3136      4600
 3137              	.LASF29:
 3138 04b2 6C6F6352 		.ascii	"locRxBufferRead\000"
 3138      78427566 
 3138      66657252 
 3138      65616400 
 3139              	.LASF62:
 3140 04c2 746D7053 		.ascii	"tmpStat\000"
 3140      74617400 
 3141              	.LASF23:
 3142 04ca 656E6162 		.ascii	"enableInterrupts\000"
 3142      6C65496E 
 3142      74657272 
 3142      75707473 
 3142      00
 3143              	.LASF47:
 3144 04db 55415254 		.ascii	"UART_OSDP_WriteTxData\000"
 3144      5F4F5344 
 3144      505F5772 
 3144      69746554 
 3144      78446174 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccWusXJ6.s 			page 89


 3145              	.LASF33:
 3146 04f1 73746174 		.ascii	"status\000"
 3146      757300
 3147              	.LASF65:
 3148 04f8 55415254 		.ascii	"UART_OSDP_LoadTxConfig\000"
 3148      5F4F5344 
 3148      505F4C6F 
 3148      61645478 
 3148      436F6E66 
 3149              	.LASF36:
 3150 050f 55415254 		.ascii	"UART_OSDP_GetByte\000"
 3150      5F4F5344 
 3150      505F4765 
 3150      74427974 
 3150      6500
 3151              	.LASF50:
 3152 0521 55415254 		.ascii	"UART_OSDP_ReadTxStatus\000"
 3152      5F4F5344 
 3152      505F5265 
 3152      61645478 
 3152      53746174 
 3153              	.LASF43:
 3154 0538 55415254 		.ascii	"UART_OSDP_SetRxAddress1\000"
 3154      5F4F5344 
 3154      505F5365 
 3154      74527841 
 3154      64647265 
 3155              	.LASF22:
 3156 0550 55415254 		.ascii	"UART_OSDP_Stop\000"
 3156      5F4F5344 
 3156      505F5374 
 3156      6F7000
 3157              	.LASF34:
 3158 055f 55415254 		.ascii	"UART_OSDP_GetChar\000"
 3158      5F4F5344 
 3158      505F4765 
 3158      74436861 
 3158      7200
 3159              	.LASF71:
 3160 0571 55415254 		.ascii	"UART_OSDP_rxBufferLoopDetect\000"
 3160      5F4F5344 
 3160      505F7278 
 3160      42756666 
 3160      65724C6F 
 3161              	.LASF21:
 3162 058e 55415254 		.ascii	"UART_OSDP_Enable\000"
 3162      5F4F5344 
 3162      505F456E 
 3162      61626C65 
 3162      00
 3163              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
