ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Clock_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Clock_1_StartEx,"ax",%progbits
  20              		.align	2
  21              		.global	Clock_1_StartEx
  22              		.code	16
  23              		.thumb_func
  24              		.type	Clock_1_StartEx, %function
  25              	Clock_1_StartEx:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\Clock_1.c"
   1:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Clock_1.c **** * File Name: Clock_1.c
   3:Generated_Source\PSoC4/Clock_1.c **** * Version 2.20
   4:Generated_Source\PSoC4/Clock_1.c **** *
   5:Generated_Source\PSoC4/Clock_1.c **** *  Description:
   6:Generated_Source\PSoC4/Clock_1.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:Generated_Source\PSoC4/Clock_1.c **** *
   8:Generated_Source\PSoC4/Clock_1.c **** *  Note:
   9:Generated_Source\PSoC4/Clock_1.c **** *   Documentation of the API's in this file is located in the
  10:Generated_Source\PSoC4/Clock_1.c **** *   System Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/Clock_1.c **** *
  12:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Clock_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Clock_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Clock_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Clock_1.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Clock_1.c **** 
  19:Generated_Source\PSoC4/Clock_1.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/Clock_1.c **** #include "Clock_1.h"
  21:Generated_Source\PSoC4/Clock_1.c **** 
  22:Generated_Source\PSoC4/Clock_1.c **** #if defined CYREG_PERI_DIV_CMD
  23:Generated_Source\PSoC4/Clock_1.c **** 
  24:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_StartEx
  26:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Clock_1.c **** *
  28:Generated_Source\PSoC4/Clock_1.c **** * Summary:
  29:Generated_Source\PSoC4/Clock_1.c **** *  Starts the clock, aligned to the specified running clock.
  30:Generated_Source\PSoC4/Clock_1.c **** *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 2


  31:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  32:Generated_Source\PSoC4/Clock_1.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
  33:Generated_Source\PSoC4/Clock_1.c **** *    clock is started.
  34:Generated_Source\PSoC4/Clock_1.c **** *
  35:Generated_Source\PSoC4/Clock_1.c **** * Returns:
  36:Generated_Source\PSoC4/Clock_1.c **** *  None
  37:Generated_Source\PSoC4/Clock_1.c **** *
  38:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/Clock_1.c **** void Clock_1_StartEx(uint32 alignClkDiv)
  40:Generated_Source\PSoC4/Clock_1.c **** {
  28              		.loc 1 40 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  41:Generated_Source\PSoC4/Clock_1.c ****     /* Make sure any previous start command has finished. */
  42:Generated_Source\PSoC4/Clock_1.c ****     while((Clock_1_CMD_REG & Clock_1_CMD_ENABLE_MASK) != 0u)
  34              		.loc 1 42 0
  35 0000 044A     		ldr	r2, .L5
  36              	.L2:
  37              		.loc 1 42 0 is_stmt 0 discriminator 1
  38 0002 1368     		ldr	r3, [r2]
  39 0004 002B     		cmp	r3, #0
  40 0006 FCDB     		blt	.L2
  43:Generated_Source\PSoC4/Clock_1.c ****     {
  44:Generated_Source\PSoC4/Clock_1.c ****     }
  45:Generated_Source\PSoC4/Clock_1.c ****     
  46:Generated_Source\PSoC4/Clock_1.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_CMD_REG =
  48:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
  49:Generated_Source\PSoC4/Clock_1.c ****         (alignClkDiv << Clock_1_CMD_PA_DIV_SHIFT) |
  41              		.loc 1 49 0 is_stmt 1
  42 0008 034B     		ldr	r3, .L5+4
  43 000a 0002     		lsls	r0, r0, #8
  44              	.LVL1:
  45 000c 1843     		orrs	r0, r3
  47:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
  46              		.loc 1 47 0
  47 000e 014B     		ldr	r3, .L5
  50:Generated_Source\PSoC4/Clock_1.c ****         (uint32)Clock_1_CMD_ENABLE_MASK;
  51:Generated_Source\PSoC4/Clock_1.c **** }
  48              		.loc 1 51 0
  49              		@ sp needed
  47:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
  50              		.loc 1 47 0
  51 0010 1860     		str	r0, [r3]
  52              		.loc 1 51 0
  53 0012 7047     		bx	lr
  54              	.L6:
  55              		.align	2
  56              	.L5:
  57 0014 00000140 		.word	1073807360
  58 0018 40000080 		.word	-2147483584
  59              		.cfi_endproc
  60              	.LFE0:
  61              		.size	Clock_1_StartEx, .-Clock_1_StartEx
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 3


  62              		.section	.text.Clock_1_Stop,"ax",%progbits
  63              		.align	2
  64              		.global	Clock_1_Stop
  65              		.code	16
  66              		.thumb_func
  67              		.type	Clock_1_Stop, %function
  68              	Clock_1_Stop:
  69              	.LFB1:
  52:Generated_Source\PSoC4/Clock_1.c **** 
  53:Generated_Source\PSoC4/Clock_1.c **** #else
  54:Generated_Source\PSoC4/Clock_1.c **** 
  55:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  56:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_Start
  57:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  58:Generated_Source\PSoC4/Clock_1.c **** *
  59:Generated_Source\PSoC4/Clock_1.c **** * Summary:
  60:Generated_Source\PSoC4/Clock_1.c **** *  Starts the clock.
  61:Generated_Source\PSoC4/Clock_1.c **** *
  62:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  63:Generated_Source\PSoC4/Clock_1.c **** *  None
  64:Generated_Source\PSoC4/Clock_1.c **** *
  65:Generated_Source\PSoC4/Clock_1.c **** * Returns:
  66:Generated_Source\PSoC4/Clock_1.c **** *  None
  67:Generated_Source\PSoC4/Clock_1.c **** *
  68:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  69:Generated_Source\PSoC4/Clock_1.c **** 
  70:Generated_Source\PSoC4/Clock_1.c **** void Clock_1_Start(void)
  71:Generated_Source\PSoC4/Clock_1.c **** {
  72:Generated_Source\PSoC4/Clock_1.c ****     /* Set the bit to enable the clock. */
  73:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_ENABLE_REG |= Clock_1__ENABLE_MASK;
  74:Generated_Source\PSoC4/Clock_1.c **** }
  75:Generated_Source\PSoC4/Clock_1.c **** 
  76:Generated_Source\PSoC4/Clock_1.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:Generated_Source\PSoC4/Clock_1.c **** 
  78:Generated_Source\PSoC4/Clock_1.c **** 
  79:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_Stop
  81:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  82:Generated_Source\PSoC4/Clock_1.c **** *
  83:Generated_Source\PSoC4/Clock_1.c **** * Summary:
  84:Generated_Source\PSoC4/Clock_1.c **** *  Stops the clock and returns immediately. This API does not require the
  85:Generated_Source\PSoC4/Clock_1.c **** *  source clock to be running but may return before the hardware is actually
  86:Generated_Source\PSoC4/Clock_1.c **** *  disabled.
  87:Generated_Source\PSoC4/Clock_1.c **** *
  88:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  89:Generated_Source\PSoC4/Clock_1.c **** *  None
  90:Generated_Source\PSoC4/Clock_1.c **** *
  91:Generated_Source\PSoC4/Clock_1.c **** * Returns:
  92:Generated_Source\PSoC4/Clock_1.c **** *  None
  93:Generated_Source\PSoC4/Clock_1.c **** *
  94:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/Clock_1.c **** void Clock_1_Stop(void)
  96:Generated_Source\PSoC4/Clock_1.c **** {
  70              		.loc 1 96 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 4


  74              		@ link register save eliminated.
  97:Generated_Source\PSoC4/Clock_1.c **** #if defined CYREG_PERI_DIV_CMD
  98:Generated_Source\PSoC4/Clock_1.c **** 
  99:Generated_Source\PSoC4/Clock_1.c ****     /* Make sure any previous start command has finished. */
 100:Generated_Source\PSoC4/Clock_1.c ****     while((Clock_1_CMD_REG & Clock_1_CMD_ENABLE_MASK) != 0u)
  75              		.loc 1 100 0
  76 0000 034A     		ldr	r2, .L10
  77              	.L8:
  78              		.loc 1 100 0 is_stmt 0 discriminator 1
  79 0002 1368     		ldr	r3, [r2]
  80 0004 002B     		cmp	r3, #0
  81 0006 FCDB     		blt	.L8
 101:Generated_Source\PSoC4/Clock_1.c ****     {
 102:Generated_Source\PSoC4/Clock_1.c ****     }
 103:Generated_Source\PSoC4/Clock_1.c ****     
 104:Generated_Source\PSoC4/Clock_1.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_CMD_REG =
  82              		.loc 1 105 0 is_stmt 1
  83 0008 024A     		ldr	r2, .L10+4
  84 000a 014B     		ldr	r3, .L10
 106:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
 107:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1_CMD_DISABLE_MASK);
 108:Generated_Source\PSoC4/Clock_1.c **** 
 109:Generated_Source\PSoC4/Clock_1.c **** #else
 110:Generated_Source\PSoC4/Clock_1.c **** 
 111:Generated_Source\PSoC4/Clock_1.c ****     /* Clear the bit to disable the clock. */
 112:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_ENABLE_REG &= (uint32)(~Clock_1__ENABLE_MASK);
 113:Generated_Source\PSoC4/Clock_1.c ****     
 114:Generated_Source\PSoC4/Clock_1.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:Generated_Source\PSoC4/Clock_1.c **** }
  85              		.loc 1 115 0
  86              		@ sp needed
 105:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
  87              		.loc 1 105 0
  88 000c 1A60     		str	r2, [r3]
  89              		.loc 1 115 0
  90 000e 7047     		bx	lr
  91              	.L11:
  92              		.align	2
  93              	.L10:
  94 0010 00000140 		.word	1073807360
  95 0014 40000040 		.word	1073741888
  96              		.cfi_endproc
  97              	.LFE1:
  98              		.size	Clock_1_Stop, .-Clock_1_Stop
  99              		.section	.text.Clock_1_SetFractionalDividerRegister,"ax",%progbits
 100              		.align	2
 101              		.global	Clock_1_SetFractionalDividerRegister
 102              		.code	16
 103              		.thumb_func
 104              		.type	Clock_1_SetFractionalDividerRegister, %function
 105              	Clock_1_SetFractionalDividerRegister:
 106              	.LFB2:
 116:Generated_Source\PSoC4/Clock_1.c **** 
 117:Generated_Source\PSoC4/Clock_1.c **** 
 118:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_SetFractionalDividerRegister
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 5


 120:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 121:Generated_Source\PSoC4/Clock_1.c **** *
 122:Generated_Source\PSoC4/Clock_1.c **** * Summary:
 123:Generated_Source\PSoC4/Clock_1.c **** *  Modifies the clock divider and the fractional divider.
 124:Generated_Source\PSoC4/Clock_1.c **** *
 125:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 126:Generated_Source\PSoC4/Clock_1.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:Generated_Source\PSoC4/Clock_1.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:Generated_Source\PSoC4/Clock_1.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:Generated_Source\PSoC4/Clock_1.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:Generated_Source\PSoC4/Clock_1.c **** * Returns:
 131:Generated_Source\PSoC4/Clock_1.c **** *  None
 132:Generated_Source\PSoC4/Clock_1.c **** *
 133:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/Clock_1.c **** void Clock_1_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:Generated_Source\PSoC4/Clock_1.c **** {
 107              		.loc 1 135 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL2:
 112 0000 10B5     		push	{r4, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 136:Generated_Source\PSoC4/Clock_1.c ****     uint32 maskVal;
 137:Generated_Source\PSoC4/Clock_1.c ****     uint32 regVal;
 138:Generated_Source\PSoC4/Clock_1.c ****     
 139:Generated_Source\PSoC4/Clock_1.c **** #if defined (Clock_1__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:Generated_Source\PSoC4/Clock_1.c ****     
 141:Generated_Source\PSoC4/Clock_1.c **** 	/* get all but divider bits */
 142:Generated_Source\PSoC4/Clock_1.c ****     maskVal = Clock_1_DIV_REG & 
 143:Generated_Source\PSoC4/Clock_1.c ****                     (uint32)(~(uint32)(Clock_1_DIV_INT_MASK | Clock_1_DIV_FRAC_MASK)); 
 144:Generated_Source\PSoC4/Clock_1.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:Generated_Source\PSoC4/Clock_1.c ****     regVal = maskVal |
 116              		.loc 1 145 0
 117 0002 FF24     		movs	r4, #255
 118 0004 C900     		lsls	r1, r1, #3
 119              	.LVL3:
 120 0006 2140     		ands	r1, r4
 121 0008 0002     		lsls	r0, r0, #8
 122              	.LVL4:
 123 000a 0843     		orrs	r0, r1
 124 000c 0721     		movs	r1, #7
 142:Generated_Source\PSoC4/Clock_1.c ****                     (uint32)(~(uint32)(Clock_1_DIV_INT_MASK | Clock_1_DIV_FRAC_MASK)); 
 125              		.loc 1 142 0
 126 000e 034A     		ldr	r2, .L13
 146:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkDivider <<  Clock_1_DIV_INT_SHIFT) & Clock_1_DIV_INT_MASK) |
 147:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkFractional << Clock_1_DIV_FRAC_SHIFT) & Clock_1_DIV_FRAC_MASK);
 148:Generated_Source\PSoC4/Clock_1.c ****     
 149:Generated_Source\PSoC4/Clock_1.c **** #else
 150:Generated_Source\PSoC4/Clock_1.c ****     /* get all but integer divider bits */
 151:Generated_Source\PSoC4/Clock_1.c ****     maskVal = Clock_1_DIV_REG & (uint32)(~(uint32)Clock_1__DIVIDER_MASK);
 152:Generated_Source\PSoC4/Clock_1.c ****     /* combine mask and new divider val into 32-bit value */
 153:Generated_Source\PSoC4/Clock_1.c ****     regVal = clkDivider | maskVal;
 154:Generated_Source\PSoC4/Clock_1.c ****     
 155:Generated_Source\PSoC4/Clock_1.c **** #endif /* Clock_1__FRAC_MASK || CYREG_PERI_DIV_CMD */
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 6


 156:Generated_Source\PSoC4/Clock_1.c **** 
 157:Generated_Source\PSoC4/Clock_1.c ****     Clock_1_DIV_REG = regVal;
 158:Generated_Source\PSoC4/Clock_1.c **** }
 127              		.loc 1 158 0
 128              		@ sp needed
 142:Generated_Source\PSoC4/Clock_1.c ****                     (uint32)(~(uint32)(Clock_1_DIV_INT_MASK | Clock_1_DIV_FRAC_MASK)); 
 129              		.loc 1 142 0
 130 0010 1368     		ldr	r3, [r2]
 131              	.LVL5:
 145:Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkDivider <<  Clock_1_DIV_INT_SHIFT) & Clock_1_DIV_INT_MASK) |
 132              		.loc 1 145 0
 133 0012 0B40     		ands	r3, r1
 134              	.LVL6:
 135 0014 1843     		orrs	r0, r3
 136              	.LVL7:
 157:Generated_Source\PSoC4/Clock_1.c **** }
 137              		.loc 1 157 0
 138 0016 1060     		str	r0, [r2]
 139              		.loc 1 158 0
 140 0018 10BD     		pop	{r4, pc}
 141              	.L14:
 142 001a C046     		.align	2
 143              	.L13:
 144 001c 00030140 		.word	1073808128
 145              		.cfi_endproc
 146              	.LFE2:
 147              		.size	Clock_1_SetFractionalDividerRegister, .-Clock_1_SetFractionalDividerRegister
 148              		.section	.text.Clock_1_GetDividerRegister,"ax",%progbits
 149              		.align	2
 150              		.global	Clock_1_GetDividerRegister
 151              		.code	16
 152              		.thumb_func
 153              		.type	Clock_1_GetDividerRegister, %function
 154              	Clock_1_GetDividerRegister:
 155              	.LFB3:
 159:Generated_Source\PSoC4/Clock_1.c **** 
 160:Generated_Source\PSoC4/Clock_1.c **** 
 161:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 162:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_GetDividerRegister
 163:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 164:Generated_Source\PSoC4/Clock_1.c **** *
 165:Generated_Source\PSoC4/Clock_1.c **** * Summary:
 166:Generated_Source\PSoC4/Clock_1.c **** *  Gets the clock divider register value.
 167:Generated_Source\PSoC4/Clock_1.c **** *
 168:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 169:Generated_Source\PSoC4/Clock_1.c **** *  None
 170:Generated_Source\PSoC4/Clock_1.c **** *
 171:Generated_Source\PSoC4/Clock_1.c **** * Returns:
 172:Generated_Source\PSoC4/Clock_1.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:Generated_Source\PSoC4/Clock_1.c **** *  divide by 2, the return value will be 1.
 174:Generated_Source\PSoC4/Clock_1.c **** *
 175:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
 176:Generated_Source\PSoC4/Clock_1.c **** uint16 Clock_1_GetDividerRegister(void)
 177:Generated_Source\PSoC4/Clock_1.c **** {
 156              		.loc 1 177 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 7


 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 178:Generated_Source\PSoC4/Clock_1.c ****     return (uint16)((Clock_1_DIV_REG & Clock_1_DIV_INT_MASK)
 161              		.loc 1 178 0
 162 0000 024B     		ldr	r3, .L16
 179:Generated_Source\PSoC4/Clock_1.c ****         >> Clock_1_DIV_INT_SHIFT);
 180:Generated_Source\PSoC4/Clock_1.c **** }
 163              		.loc 1 180 0
 164              		@ sp needed
 178:Generated_Source\PSoC4/Clock_1.c ****     return (uint16)((Clock_1_DIV_REG & Clock_1_DIV_INT_MASK)
 165              		.loc 1 178 0
 166 0002 1868     		ldr	r0, [r3]
 167 0004 000A     		lsrs	r0, r0, #8
 168 0006 80B2     		uxth	r0, r0
 169              		.loc 1 180 0
 170 0008 7047     		bx	lr
 171              	.L17:
 172 000a C046     		.align	2
 173              	.L16:
 174 000c 00030140 		.word	1073808128
 175              		.cfi_endproc
 176              	.LFE3:
 177              		.size	Clock_1_GetDividerRegister, .-Clock_1_GetDividerRegister
 178              		.section	.text.Clock_1_GetFractionalDividerRegister,"ax",%progbits
 179              		.align	2
 180              		.global	Clock_1_GetFractionalDividerRegister
 181              		.code	16
 182              		.thumb_func
 183              		.type	Clock_1_GetFractionalDividerRegister, %function
 184              	Clock_1_GetFractionalDividerRegister:
 185              	.LFB4:
 181:Generated_Source\PSoC4/Clock_1.c **** 
 182:Generated_Source\PSoC4/Clock_1.c **** 
 183:Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 184:Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_GetFractionalDividerRegister
 185:Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 186:Generated_Source\PSoC4/Clock_1.c **** *
 187:Generated_Source\PSoC4/Clock_1.c **** * Summary:
 188:Generated_Source\PSoC4/Clock_1.c **** *  Gets the clock fractional divider register value.
 189:Generated_Source\PSoC4/Clock_1.c **** *
 190:Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 191:Generated_Source\PSoC4/Clock_1.c **** *  None
 192:Generated_Source\PSoC4/Clock_1.c **** *
 193:Generated_Source\PSoC4/Clock_1.c **** * Returns:
 194:Generated_Source\PSoC4/Clock_1.c **** *  Fractional Divide value of the clock
 195:Generated_Source\PSoC4/Clock_1.c **** *  0 if the fractional divider is not in use.
 196:Generated_Source\PSoC4/Clock_1.c **** *
 197:Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
 198:Generated_Source\PSoC4/Clock_1.c **** uint8 Clock_1_GetFractionalDividerRegister(void)
 199:Generated_Source\PSoC4/Clock_1.c **** {
 186              		.loc 1 199 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 200:Generated_Source\PSoC4/Clock_1.c **** #if defined (Clock_1__FRAC_MASK)
 201:Generated_Source\PSoC4/Clock_1.c ****     /* return fractional divider bits */
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 8


 202:Generated_Source\PSoC4/Clock_1.c ****     return (uint8)((Clock_1_DIV_REG & Clock_1_DIV_FRAC_MASK)
 203:Generated_Source\PSoC4/Clock_1.c ****         >> Clock_1_DIV_FRAC_SHIFT);
 204:Generated_Source\PSoC4/Clock_1.c **** #else
 205:Generated_Source\PSoC4/Clock_1.c ****     return 0u;
 206:Generated_Source\PSoC4/Clock_1.c **** #endif /* Clock_1__FRAC_MASK */
 207:Generated_Source\PSoC4/Clock_1.c **** }
 191              		.loc 1 207 0
 192 0000 0020     		movs	r0, #0
 193              		@ sp needed
 194 0002 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE4:
 197              		.size	Clock_1_GetFractionalDividerRegister, .-Clock_1_GetFractionalDividerRegister
 198              		.text
 199              	.Letext0:
 200              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 201              		.section	.debug_info,"",%progbits
 202              	.Ldebug_info0:
 203 0000 62010000 		.4byte	0x162
 204 0004 0400     		.2byte	0x4
 205 0006 00000000 		.4byte	.Ldebug_abbrev0
 206 000a 04       		.byte	0x4
 207 000b 01       		.uleb128 0x1
 208 000c 6B000000 		.4byte	.LASF25
 209 0010 0C       		.byte	0xc
 210 0011 E9010000 		.4byte	.LASF26
 211 0015 04010000 		.4byte	.LASF27
 212 0019 00000000 		.4byte	.Ldebug_ranges0+0
 213 001d 00000000 		.4byte	0
 214 0021 00000000 		.4byte	.Ldebug_line0
 215 0025 02       		.uleb128 0x2
 216 0026 01       		.byte	0x1
 217 0027 06       		.byte	0x6
 218 0028 0A020000 		.4byte	.LASF0
 219 002c 02       		.uleb128 0x2
 220 002d 01       		.byte	0x1
 221 002e 08       		.byte	0x8
 222 002f 38000000 		.4byte	.LASF1
 223 0033 02       		.uleb128 0x2
 224 0034 02       		.byte	0x2
 225 0035 05       		.byte	0x5
 226 0036 AB010000 		.4byte	.LASF2
 227 003a 02       		.uleb128 0x2
 228 003b 02       		.byte	0x2
 229 003c 07       		.byte	0x7
 230 003d 58000000 		.4byte	.LASF3
 231 0041 02       		.uleb128 0x2
 232 0042 04       		.byte	0x4
 233 0043 05       		.byte	0x5
 234 0044 E0010000 		.4byte	.LASF4
 235 0048 02       		.uleb128 0x2
 236 0049 04       		.byte	0x4
 237 004a 07       		.byte	0x7
 238 004b 46000000 		.4byte	.LASF5
 239 004f 02       		.uleb128 0x2
 240 0050 08       		.byte	0x8
 241 0051 05       		.byte	0x5
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 9


 242 0052 98010000 		.4byte	.LASF6
 243 0056 02       		.uleb128 0x2
 244 0057 08       		.byte	0x8
 245 0058 07       		.byte	0x7
 246 0059 5C010000 		.4byte	.LASF7
 247 005d 03       		.uleb128 0x3
 248 005e 04       		.byte	0x4
 249 005f 05       		.byte	0x5
 250 0060 696E7400 		.ascii	"int\000"
 251 0064 02       		.uleb128 0x2
 252 0065 04       		.byte	0x4
 253 0066 07       		.byte	0x7
 254 0067 4F010000 		.4byte	.LASF8
 255 006b 04       		.uleb128 0x4
 256 006c B5010000 		.4byte	.LASF9
 257 0070 02       		.byte	0x2
 258 0071 D201     		.2byte	0x1d2
 259 0073 2C000000 		.4byte	0x2c
 260 0077 04       		.uleb128 0x4
 261 0078 41010000 		.4byte	.LASF10
 262 007c 02       		.byte	0x2
 263 007d D301     		.2byte	0x1d3
 264 007f 3A000000 		.4byte	0x3a
 265 0083 04       		.uleb128 0x4
 266 0084 48010000 		.4byte	.LASF11
 267 0088 02       		.byte	0x2
 268 0089 D401     		.2byte	0x1d4
 269 008b 48000000 		.4byte	0x48
 270 008f 02       		.uleb128 0x2
 271 0090 04       		.byte	0x4
 272 0091 04       		.byte	0x4
 273 0092 15000000 		.4byte	.LASF12
 274 0096 02       		.uleb128 0x2
 275 0097 08       		.byte	0x8
 276 0098 04       		.byte	0x4
 277 0099 0E000000 		.4byte	.LASF13
 278 009d 02       		.uleb128 0x2
 279 009e 01       		.byte	0x1
 280 009f 08       		.byte	0x8
 281 00a0 A6010000 		.4byte	.LASF14
 282 00a4 04       		.uleb128 0x4
 283 00a5 00000000 		.4byte	.LASF15
 284 00a9 02       		.byte	0x2
 285 00aa 7E02     		.2byte	0x27e
 286 00ac B0000000 		.4byte	0xb0
 287 00b0 05       		.uleb128 0x5
 288 00b1 83000000 		.4byte	0x83
 289 00b5 06       		.uleb128 0x6
 290 00b6 1B000000 		.4byte	.LASF16
 291 00ba 01       		.byte	0x1
 292 00bb 27       		.byte	0x27
 293 00bc 00000000 		.4byte	.LFB0
 294 00c0 1C000000 		.4byte	.LFE0-.LFB0
 295 00c4 01       		.uleb128 0x1
 296 00c5 9C       		.byte	0x9c
 297 00c6 DA000000 		.4byte	0xda
 298 00ca 07       		.uleb128 0x7
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 10


 299 00cb 27010000 		.4byte	.LASF18
 300 00cf 01       		.byte	0x1
 301 00d0 27       		.byte	0x27
 302 00d1 83000000 		.4byte	0x83
 303 00d5 00000000 		.4byte	.LLST0
 304 00d9 00       		.byte	0
 305 00da 08       		.uleb128 0x8
 306 00db 2B000000 		.4byte	.LASF28
 307 00df 01       		.byte	0x1
 308 00e0 5F       		.byte	0x5f
 309 00e1 00000000 		.4byte	.LFB1
 310 00e5 18000000 		.4byte	.LFE1-.LFB1
 311 00e9 01       		.uleb128 0x1
 312 00ea 9C       		.byte	0x9c
 313 00eb 06       		.uleb128 0x6
 314 00ec BB010000 		.4byte	.LASF17
 315 00f0 01       		.byte	0x1
 316 00f1 86       		.byte	0x86
 317 00f2 00000000 		.4byte	.LFB2
 318 00f6 20000000 		.4byte	.LFE2-.LFB2
 319 00fa 01       		.uleb128 0x1
 320 00fb 9C       		.byte	0x9c
 321 00fc 3B010000 		.4byte	0x13b
 322 0100 07       		.uleb128 0x7
 323 0101 F9000000 		.4byte	.LASF19
 324 0105 01       		.byte	0x1
 325 0106 86       		.byte	0x86
 326 0107 77000000 		.4byte	0x77
 327 010b 21000000 		.4byte	.LLST1
 328 010f 07       		.uleb128 0x7
 329 0110 33010000 		.4byte	.LASF20
 330 0114 01       		.byte	0x1
 331 0115 86       		.byte	0x86
 332 0116 6B000000 		.4byte	0x6b
 333 011a 42000000 		.4byte	.LLST2
 334 011e 09       		.uleb128 0x9
 335 011f 06000000 		.4byte	.LASF21
 336 0123 01       		.byte	0x1
 337 0124 88       		.byte	0x88
 338 0125 83000000 		.4byte	0x83
 339 0129 63000000 		.4byte	.LLST3
 340 012d 0A       		.uleb128 0xa
 341 012e 20010000 		.4byte	.LASF22
 342 0132 01       		.byte	0x1
 343 0133 89       		.byte	0x89
 344 0134 83000000 		.4byte	0x83
 345 0138 01       		.uleb128 0x1
 346 0139 50       		.byte	0x50
 347 013a 00       		.byte	0
 348 013b 0B       		.uleb128 0xb
 349 013c 16020000 		.4byte	.LASF23
 350 0140 01       		.byte	0x1
 351 0141 B0       		.byte	0xb0
 352 0142 77000000 		.4byte	0x77
 353 0146 00000000 		.4byte	.LFB3
 354 014a 10000000 		.4byte	.LFE3-.LFB3
 355 014e 01       		.uleb128 0x1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 11


 356 014f 9C       		.byte	0x9c
 357 0150 0B       		.uleb128 0xb
 358 0151 73010000 		.4byte	.LASF24
 359 0155 01       		.byte	0x1
 360 0156 C6       		.byte	0xc6
 361 0157 6B000000 		.4byte	0x6b
 362 015b 00000000 		.4byte	.LFB4
 363 015f 04000000 		.4byte	.LFE4-.LFB4
 364 0163 01       		.uleb128 0x1
 365 0164 9C       		.byte	0x9c
 366 0165 00       		.byte	0
 367              		.section	.debug_abbrev,"",%progbits
 368              	.Ldebug_abbrev0:
 369 0000 01       		.uleb128 0x1
 370 0001 11       		.uleb128 0x11
 371 0002 01       		.byte	0x1
 372 0003 25       		.uleb128 0x25
 373 0004 0E       		.uleb128 0xe
 374 0005 13       		.uleb128 0x13
 375 0006 0B       		.uleb128 0xb
 376 0007 03       		.uleb128 0x3
 377 0008 0E       		.uleb128 0xe
 378 0009 1B       		.uleb128 0x1b
 379 000a 0E       		.uleb128 0xe
 380 000b 55       		.uleb128 0x55
 381 000c 17       		.uleb128 0x17
 382 000d 11       		.uleb128 0x11
 383 000e 01       		.uleb128 0x1
 384 000f 10       		.uleb128 0x10
 385 0010 17       		.uleb128 0x17
 386 0011 00       		.byte	0
 387 0012 00       		.byte	0
 388 0013 02       		.uleb128 0x2
 389 0014 24       		.uleb128 0x24
 390 0015 00       		.byte	0
 391 0016 0B       		.uleb128 0xb
 392 0017 0B       		.uleb128 0xb
 393 0018 3E       		.uleb128 0x3e
 394 0019 0B       		.uleb128 0xb
 395 001a 03       		.uleb128 0x3
 396 001b 0E       		.uleb128 0xe
 397 001c 00       		.byte	0
 398 001d 00       		.byte	0
 399 001e 03       		.uleb128 0x3
 400 001f 24       		.uleb128 0x24
 401 0020 00       		.byte	0
 402 0021 0B       		.uleb128 0xb
 403 0022 0B       		.uleb128 0xb
 404 0023 3E       		.uleb128 0x3e
 405 0024 0B       		.uleb128 0xb
 406 0025 03       		.uleb128 0x3
 407 0026 08       		.uleb128 0x8
 408 0027 00       		.byte	0
 409 0028 00       		.byte	0
 410 0029 04       		.uleb128 0x4
 411 002a 16       		.uleb128 0x16
 412 002b 00       		.byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 12


 413 002c 03       		.uleb128 0x3
 414 002d 0E       		.uleb128 0xe
 415 002e 3A       		.uleb128 0x3a
 416 002f 0B       		.uleb128 0xb
 417 0030 3B       		.uleb128 0x3b
 418 0031 05       		.uleb128 0x5
 419 0032 49       		.uleb128 0x49
 420 0033 13       		.uleb128 0x13
 421 0034 00       		.byte	0
 422 0035 00       		.byte	0
 423 0036 05       		.uleb128 0x5
 424 0037 35       		.uleb128 0x35
 425 0038 00       		.byte	0
 426 0039 49       		.uleb128 0x49
 427 003a 13       		.uleb128 0x13
 428 003b 00       		.byte	0
 429 003c 00       		.byte	0
 430 003d 06       		.uleb128 0x6
 431 003e 2E       		.uleb128 0x2e
 432 003f 01       		.byte	0x1
 433 0040 3F       		.uleb128 0x3f
 434 0041 19       		.uleb128 0x19
 435 0042 03       		.uleb128 0x3
 436 0043 0E       		.uleb128 0xe
 437 0044 3A       		.uleb128 0x3a
 438 0045 0B       		.uleb128 0xb
 439 0046 3B       		.uleb128 0x3b
 440 0047 0B       		.uleb128 0xb
 441 0048 27       		.uleb128 0x27
 442 0049 19       		.uleb128 0x19
 443 004a 11       		.uleb128 0x11
 444 004b 01       		.uleb128 0x1
 445 004c 12       		.uleb128 0x12
 446 004d 06       		.uleb128 0x6
 447 004e 40       		.uleb128 0x40
 448 004f 18       		.uleb128 0x18
 449 0050 9742     		.uleb128 0x2117
 450 0052 19       		.uleb128 0x19
 451 0053 01       		.uleb128 0x1
 452 0054 13       		.uleb128 0x13
 453 0055 00       		.byte	0
 454 0056 00       		.byte	0
 455 0057 07       		.uleb128 0x7
 456 0058 05       		.uleb128 0x5
 457 0059 00       		.byte	0
 458 005a 03       		.uleb128 0x3
 459 005b 0E       		.uleb128 0xe
 460 005c 3A       		.uleb128 0x3a
 461 005d 0B       		.uleb128 0xb
 462 005e 3B       		.uleb128 0x3b
 463 005f 0B       		.uleb128 0xb
 464 0060 49       		.uleb128 0x49
 465 0061 13       		.uleb128 0x13
 466 0062 02       		.uleb128 0x2
 467 0063 17       		.uleb128 0x17
 468 0064 00       		.byte	0
 469 0065 00       		.byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 13


 470 0066 08       		.uleb128 0x8
 471 0067 2E       		.uleb128 0x2e
 472 0068 00       		.byte	0
 473 0069 3F       		.uleb128 0x3f
 474 006a 19       		.uleb128 0x19
 475 006b 03       		.uleb128 0x3
 476 006c 0E       		.uleb128 0xe
 477 006d 3A       		.uleb128 0x3a
 478 006e 0B       		.uleb128 0xb
 479 006f 3B       		.uleb128 0x3b
 480 0070 0B       		.uleb128 0xb
 481 0071 27       		.uleb128 0x27
 482 0072 19       		.uleb128 0x19
 483 0073 11       		.uleb128 0x11
 484 0074 01       		.uleb128 0x1
 485 0075 12       		.uleb128 0x12
 486 0076 06       		.uleb128 0x6
 487 0077 40       		.uleb128 0x40
 488 0078 18       		.uleb128 0x18
 489 0079 9742     		.uleb128 0x2117
 490 007b 19       		.uleb128 0x19
 491 007c 00       		.byte	0
 492 007d 00       		.byte	0
 493 007e 09       		.uleb128 0x9
 494 007f 34       		.uleb128 0x34
 495 0080 00       		.byte	0
 496 0081 03       		.uleb128 0x3
 497 0082 0E       		.uleb128 0xe
 498 0083 3A       		.uleb128 0x3a
 499 0084 0B       		.uleb128 0xb
 500 0085 3B       		.uleb128 0x3b
 501 0086 0B       		.uleb128 0xb
 502 0087 49       		.uleb128 0x49
 503 0088 13       		.uleb128 0x13
 504 0089 02       		.uleb128 0x2
 505 008a 17       		.uleb128 0x17
 506 008b 00       		.byte	0
 507 008c 00       		.byte	0
 508 008d 0A       		.uleb128 0xa
 509 008e 34       		.uleb128 0x34
 510 008f 00       		.byte	0
 511 0090 03       		.uleb128 0x3
 512 0091 0E       		.uleb128 0xe
 513 0092 3A       		.uleb128 0x3a
 514 0093 0B       		.uleb128 0xb
 515 0094 3B       		.uleb128 0x3b
 516 0095 0B       		.uleb128 0xb
 517 0096 49       		.uleb128 0x49
 518 0097 13       		.uleb128 0x13
 519 0098 02       		.uleb128 0x2
 520 0099 18       		.uleb128 0x18
 521 009a 00       		.byte	0
 522 009b 00       		.byte	0
 523 009c 0B       		.uleb128 0xb
 524 009d 2E       		.uleb128 0x2e
 525 009e 00       		.byte	0
 526 009f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 14


 527 00a0 19       		.uleb128 0x19
 528 00a1 03       		.uleb128 0x3
 529 00a2 0E       		.uleb128 0xe
 530 00a3 3A       		.uleb128 0x3a
 531 00a4 0B       		.uleb128 0xb
 532 00a5 3B       		.uleb128 0x3b
 533 00a6 0B       		.uleb128 0xb
 534 00a7 27       		.uleb128 0x27
 535 00a8 19       		.uleb128 0x19
 536 00a9 49       		.uleb128 0x49
 537 00aa 13       		.uleb128 0x13
 538 00ab 11       		.uleb128 0x11
 539 00ac 01       		.uleb128 0x1
 540 00ad 12       		.uleb128 0x12
 541 00ae 06       		.uleb128 0x6
 542 00af 40       		.uleb128 0x40
 543 00b0 18       		.uleb128 0x18
 544 00b1 9742     		.uleb128 0x2117
 545 00b3 19       		.uleb128 0x19
 546 00b4 00       		.byte	0
 547 00b5 00       		.byte	0
 548 00b6 00       		.byte	0
 549              		.section	.debug_loc,"",%progbits
 550              	.Ldebug_loc0:
 551              	.LLST0:
 552 0000 00000000 		.4byte	.LVL0
 553 0004 0C000000 		.4byte	.LVL1
 554 0008 0100     		.2byte	0x1
 555 000a 50       		.byte	0x50
 556 000b 0C000000 		.4byte	.LVL1
 557 000f 1C000000 		.4byte	.LFE0
 558 0013 0400     		.2byte	0x4
 559 0015 F3       		.byte	0xf3
 560 0016 01       		.uleb128 0x1
 561 0017 50       		.byte	0x50
 562 0018 9F       		.byte	0x9f
 563 0019 00000000 		.4byte	0
 564 001d 00000000 		.4byte	0
 565              	.LLST1:
 566 0021 00000000 		.4byte	.LVL2
 567 0025 0A000000 		.4byte	.LVL4
 568 0029 0100     		.2byte	0x1
 569 002b 50       		.byte	0x50
 570 002c 0A000000 		.4byte	.LVL4
 571 0030 20000000 		.4byte	.LFE2
 572 0034 0400     		.2byte	0x4
 573 0036 F3       		.byte	0xf3
 574 0037 01       		.uleb128 0x1
 575 0038 50       		.byte	0x50
 576 0039 9F       		.byte	0x9f
 577 003a 00000000 		.4byte	0
 578 003e 00000000 		.4byte	0
 579              	.LLST2:
 580 0042 00000000 		.4byte	.LVL2
 581 0046 06000000 		.4byte	.LVL3
 582 004a 0100     		.2byte	0x1
 583 004c 51       		.byte	0x51
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 15


 584 004d 06000000 		.4byte	.LVL3
 585 0051 20000000 		.4byte	.LFE2
 586 0055 0400     		.2byte	0x4
 587 0057 F3       		.byte	0xf3
 588 0058 01       		.uleb128 0x1
 589 0059 51       		.byte	0x51
 590 005a 9F       		.byte	0x9f
 591 005b 00000000 		.4byte	0
 592 005f 00000000 		.4byte	0
 593              	.LLST3:
 594 0063 12000000 		.4byte	.LVL5
 595 0067 14000000 		.4byte	.LVL6
 596 006b 0500     		.2byte	0x5
 597 006d 73       		.byte	0x73
 598 006e 00       		.sleb128 0
 599 006f 37       		.byte	0x37
 600 0070 1A       		.byte	0x1a
 601 0071 9F       		.byte	0x9f
 602 0072 14000000 		.4byte	.LVL6
 603 0076 20000000 		.4byte	.LFE2
 604 007a 0100     		.2byte	0x1
 605 007c 53       		.byte	0x53
 606 007d 00000000 		.4byte	0
 607 0081 00000000 		.4byte	0
 608              		.section	.debug_aranges,"",%progbits
 609 0000 3C000000 		.4byte	0x3c
 610 0004 0200     		.2byte	0x2
 611 0006 00000000 		.4byte	.Ldebug_info0
 612 000a 04       		.byte	0x4
 613 000b 00       		.byte	0
 614 000c 0000     		.2byte	0
 615 000e 0000     		.2byte	0
 616 0010 00000000 		.4byte	.LFB0
 617 0014 1C000000 		.4byte	.LFE0-.LFB0
 618 0018 00000000 		.4byte	.LFB1
 619 001c 18000000 		.4byte	.LFE1-.LFB1
 620 0020 00000000 		.4byte	.LFB2
 621 0024 20000000 		.4byte	.LFE2-.LFB2
 622 0028 00000000 		.4byte	.LFB3
 623 002c 10000000 		.4byte	.LFE3-.LFB3
 624 0030 00000000 		.4byte	.LFB4
 625 0034 04000000 		.4byte	.LFE4-.LFB4
 626 0038 00000000 		.4byte	0
 627 003c 00000000 		.4byte	0
 628              		.section	.debug_ranges,"",%progbits
 629              	.Ldebug_ranges0:
 630 0000 00000000 		.4byte	.LFB0
 631 0004 1C000000 		.4byte	.LFE0
 632 0008 00000000 		.4byte	.LFB1
 633 000c 18000000 		.4byte	.LFE1
 634 0010 00000000 		.4byte	.LFB2
 635 0014 20000000 		.4byte	.LFE2
 636 0018 00000000 		.4byte	.LFB3
 637 001c 10000000 		.4byte	.LFE3
 638 0020 00000000 		.4byte	.LFB4
 639 0024 04000000 		.4byte	.LFE4
 640 0028 00000000 		.4byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 16


 641 002c 00000000 		.4byte	0
 642              		.section	.debug_line,"",%progbits
 643              	.Ldebug_line0:
 644 0000 CC000000 		.section	.debug_str,"MS",%progbits,1
 644      02004400 
 644      00000201 
 644      FB0E0D00 
 644      01010101 
 645              	.LASF15:
 646 0000 72656733 		.ascii	"reg32\000"
 646      3200
 647              	.LASF21:
 648 0006 6D61736B 		.ascii	"maskVal\000"
 648      56616C00 
 649              	.LASF13:
 650 000e 646F7562 		.ascii	"double\000"
 650      6C6500
 651              	.LASF12:
 652 0015 666C6F61 		.ascii	"float\000"
 652      7400
 653              	.LASF16:
 654 001b 436C6F63 		.ascii	"Clock_1_StartEx\000"
 654      6B5F315F 
 654      53746172 
 654      74457800 
 655              	.LASF28:
 656 002b 436C6F63 		.ascii	"Clock_1_Stop\000"
 656      6B5F315F 
 656      53746F70 
 656      00
 657              	.LASF1:
 658 0038 756E7369 		.ascii	"unsigned char\000"
 658      676E6564 
 658      20636861 
 658      7200
 659              	.LASF5:
 660 0046 6C6F6E67 		.ascii	"long unsigned int\000"
 660      20756E73 
 660      69676E65 
 660      6420696E 
 660      7400
 661              	.LASF3:
 662 0058 73686F72 		.ascii	"short unsigned int\000"
 662      7420756E 
 662      7369676E 
 662      65642069 
 662      6E7400
 663              	.LASF25:
 664 006b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 664      43313120 
 664      352E342E 
 664      31203230 
 664      31363036 
 665 009e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 665      20726576 
 665      6973696F 
 665      6E203233 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 17


 665      37373135 
 666 00d1 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 666      66756E63 
 666      74696F6E 
 666      2D736563 
 666      74696F6E 
 667              	.LASF19:
 668 00f9 636C6B44 		.ascii	"clkDivider\000"
 668      69766964 
 668      657200
 669              	.LASF27:
 670 0104 443A5C65 		.ascii	"D:\\ext\\EXTPSOC\\camera.cydsn\000"
 670      78745C45 
 670      58545053 
 670      4F435C63 
 670      616D6572 
 671              	.LASF22:
 672 0120 72656756 		.ascii	"regVal\000"
 672      616C00
 673              	.LASF18:
 674 0127 616C6967 		.ascii	"alignClkDiv\000"
 674      6E436C6B 
 674      44697600 
 675              	.LASF20:
 676 0133 636C6B46 		.ascii	"clkFractional\000"
 676      72616374 
 676      696F6E61 
 676      6C00
 677              	.LASF10:
 678 0141 75696E74 		.ascii	"uint16\000"
 678      313600
 679              	.LASF11:
 680 0148 75696E74 		.ascii	"uint32\000"
 680      333200
 681              	.LASF8:
 682 014f 756E7369 		.ascii	"unsigned int\000"
 682      676E6564 
 682      20696E74 
 682      00
 683              	.LASF7:
 684 015c 6C6F6E67 		.ascii	"long long unsigned int\000"
 684      206C6F6E 
 684      6720756E 
 684      7369676E 
 684      65642069 
 685              	.LASF24:
 686 0173 436C6F63 		.ascii	"Clock_1_GetFractionalDividerRegister\000"
 686      6B5F315F 
 686      47657446 
 686      72616374 
 686      696F6E61 
 687              	.LASF6:
 688 0198 6C6F6E67 		.ascii	"long long int\000"
 688      206C6F6E 
 688      6720696E 
 688      7400
 689              	.LASF14:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\cceMO0Pm.s 			page 18


 690 01a6 63686172 		.ascii	"char\000"
 690      00
 691              	.LASF2:
 692 01ab 73686F72 		.ascii	"short int\000"
 692      7420696E 
 692      7400
 693              	.LASF9:
 694 01b5 75696E74 		.ascii	"uint8\000"
 694      3800
 695              	.LASF17:
 696 01bb 436C6F63 		.ascii	"Clock_1_SetFractionalDividerRegister\000"
 696      6B5F315F 
 696      53657446 
 696      72616374 
 696      696F6E61 
 697              	.LASF4:
 698 01e0 6C6F6E67 		.ascii	"long int\000"
 698      20696E74 
 698      00
 699              	.LASF26:
 700 01e9 47656E65 		.ascii	"Generated_Source\\PSoC4\\Clock_1.c\000"
 700      72617465 
 700      645F536F 
 700      75726365 
 700      5C50536F 
 701              	.LASF0:
 702 020a 7369676E 		.ascii	"signed char\000"
 702      65642063 
 702      68617200 
 703              	.LASF23:
 704 0216 436C6F63 		.ascii	"Clock_1_GetDividerRegister\000"
 704      6B5F315F 
 704      47657444 
 704      69766964 
 704      65725265 
 705              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
