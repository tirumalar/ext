ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Start,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Start
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Start, %function
  25              	ADC_Start:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 64 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  38              		.loc 1 66 0
  39 0002 2C4C     		ldr	r4, .L11
  40 0004 2378     		ldrb	r3, [r4]
  41 0006 002B     		cmp	r3, #0
  42 0008 11D0     		beq	.L10
  43              	.L2:
  44              	.LBB10:
  45              	.LBB11:
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 3


  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 4


 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 5


 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 6


 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 7


 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
  46              		.loc 1 332 0
  47 000a 2B4B     		ldr	r3, .L11+4
  48 000c 1B68     		ldr	r3, [r3]
  49 000e 002B     		cmp	r3, #0
  50 0010 0CDB     		blt	.L1
  51              	.LBB12:
  52              	.LBB13:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
  53              		.loc 1 336 0
  54 0012 2A4A     		ldr	r2, .L11+8
  55              	.L7:
  56 0014 1368     		ldr	r3, [r2]
  57 0016 002B     		cmp	r3, #0
  58 0018 FCDB     		blt	.L7
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 8


 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
  59              		.loc 1 342 0
  60 001a 8021     		movs	r1, #128
  61 001c 264A     		ldr	r2, .L11+4
  62 001e 0906     		lsls	r1, r1, #24
  63 0020 1368     		ldr	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
  64              		.loc 1 345 0
  65 0022 0A20     		movs	r0, #10
 342:Generated_Source\PSoC4/ADC.c ****         
  66              		.loc 1 342 0
  67 0024 0B43     		orrs	r3, r1
  68 0026 1360     		str	r3, [r2]
  69              		.loc 1 345 0
  70 0028 FFF7FEFF 		bl	CyDelayUs
  71              	.LVL0:
  72              	.L1:
  73              	.LBE13:
  74              	.LBE12:
  75              	.LBE11:
  76              	.LBE10:
  72:Generated_Source\PSoC4/ADC.c **** 
  77              		.loc 1 72 0
  78              		@ sp needed
  79 002c 70BD     		pop	{r4, r5, r6, pc}
  80              	.L10:
  81              	.LBB14:
  82              	.LBB15:
 172:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  83              		.loc 1 172 0
  84 002e 0221     		movs	r1, #2
  85 0030 1020     		movs	r0, #16
  86 0032 FFF7FEFF 		bl	CyIntSetPriority
  87              	.LVL1:
 173:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
  88              		.loc 1 173 0
  89 0036 2249     		ldr	r1, .L11+12
  90 0038 1020     		movs	r0, #16
  91 003a FFF7FEFF 		bl	CyIntSetVector
  92              	.LVL2:
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  93              		.loc 1 177 0
  94 003e 0122     		movs	r2, #1
  95 0040 204B     		ldr	r3, .L11+16
  96 0042 1A60     		str	r2, [r3]
 180:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
  97              		.loc 1 180 0
  98 0044 204B     		ldr	r3, .L11+20
  99 0046 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 100              		.loc 1 178 0
 101 0048 002B     		cmp	r3, #0
 102 004a 30DB     		blt	.L6
 103 004c 1F4B     		ldr	r3, .L11+24
 104              	.L3:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 9


 105 004e 1A4A     		ldr	r2, .L11+4
 190:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 106              		.loc 1 190 0
 107 0050 8020     		movs	r0, #128
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 108              		.loc 1 178 0
 109 0052 1168     		ldr	r1, [r2]
 190:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 110              		.loc 1 190 0
 111 0054 4002     		lsls	r0, r0, #9
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 112              		.loc 1 178 0
 113 0056 0B43     		orrs	r3, r1
 114 0058 1360     		str	r3, [r2]
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 115              		.loc 1 182 0
 116 005a 1D4A     		ldr	r2, .L11+28
 117 005c 1D4B     		ldr	r3, .L11+32
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 118              		.loc 1 185 0
 119 005e 1E49     		ldr	r1, .L11+36
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 120              		.loc 1 182 0
 121 0060 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 122              		.loc 1 183 0
 123 0062 1E4A     		ldr	r2, .L11+40
 124 0064 1E4B     		ldr	r3, .L11+44
 125 0066 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 126              		.loc 1 184 0
 127 0068 0023     		movs	r3, #0
 128 006a 1E4A     		ldr	r2, .L11+48
 129 006c 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 130              		.loc 1 185 0
 131 006e 1E4A     		ldr	r2, .L11+52
 132 0070 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     
 133              		.loc 1 186 0
 134 0072 1E49     		ldr	r1, .L11+56
 135 0074 0A60     		str	r2, [r1]
 190:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 136              		.loc 1 190 0
 137 0076 1E49     		ldr	r1, .L11+60
 138 0078 0A68     		ldr	r2, [r1]
 139 007a 0243     		orrs	r2, r0
 140 007c 0A60     		str	r2, [r1]
 199:Generated_Source\PSoC4/ADC.c **** 
 141              		.loc 1 199 0
 142 007e 0121     		movs	r1, #1
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 143              		.loc 1 197 0
 144 0080 1C4A     		ldr	r2, .L11+64
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 145              		.loc 1 206 0
 146 0082 1D48     		ldr	r0, .L11+68
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 10


 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 147              		.loc 1 197 0
 148 0084 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 149              		.loc 1 198 0
 150 0086 1D4A     		ldr	r2, .L11+72
 151 0088 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c **** 
 152              		.loc 1 199 0
 153 008a 1D4A     		ldr	r2, .L11+76
 154 008c 1160     		str	r1, [r2]
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 155              		.loc 1 206 0
 156 008e 0568     		ldr	r5, [r0]
 157              	.LVL3:
 158 0090 1C4A     		ldr	r2, .L11+80
 159 0092 2A40     		ands	r2, r5
 221:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 160              		.loc 1 221 0
 161 0094 8025     		movs	r5, #128
 162              	.LVL4:
 163 0096 AD05     		lsls	r5, r5, #22
 164 0098 2A43     		orrs	r2, r5
 165              	.LVL5:
 226:Generated_Source\PSoC4/ADC.c **** 
 166              		.loc 1 226 0
 167 009a 0260     		str	r2, [r0]
 168              	.LVL6:
 253:Generated_Source\PSoC4/ADC.c **** 
 169              		.loc 1 253 0
 170 009c 1A4A     		ldr	r2, .L11+84
 171 009e 1360     		str	r3, [r2]
 172              	.LVL7:
 298:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 173              		.loc 1 298 0
 174 00a0 1A4A     		ldr	r2, .L11+88
 175              	.LBE15:
 176              	.LBE14:
  69:Generated_Source\PSoC4/ADC.c ****     }
 177              		.loc 1 69 0
 178 00a2 2170     		strb	r1, [r4]
 179              	.LBB17:
 180              	.LBB16:
 298:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 181              		.loc 1 298 0
 182 00a4 1380     		strh	r3, [r2]
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 183              		.loc 1 311 0
 184 00a6 1A4A     		ldr	r2, .L11+92
 185 00a8 1A4B     		ldr	r3, .L11+96
 186 00aa 1A60     		str	r2, [r3]
 187              	.LVL8:
 188 00ac ADE7     		b	.L2
 189              	.LVL9:
 190              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 191              		.loc 1 178 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 11


 192 00ae 1A4B     		ldr	r3, .L11+100
 193 00b0 CDE7     		b	.L3
 194              	.L12:
 195 00b2 C046     		.align	2
 196              	.L11:
 197 00b4 00000000 		.word	.LANCHOR0
 198 00b8 00003A40 		.word	1077542912
 199 00bc 08023A40 		.word	1077543432
 200 00c0 00000000 		.word	ADC_ISR
 201 00c4 20003A40 		.word	1077542944
 202 00c8 80033A40 		.word	1077543808
 203 00cc 70020053 		.word	1392509552
 204 00d0 CC000080 		.word	-2147483444
 205 00d4 04003A40 		.word	1077542916
 206 00d8 10003A40 		.word	1077542928
 207 00dc 0000FF07 		.word	134152192
 208 00e0 18003A40 		.word	1077542936
 209 00e4 1C003A40 		.word	1077542940
 210 00e8 02000200 		.word	131074
 211 00ec 14003A40 		.word	1077542932
 212 00f0 00033A40 		.word	1077543680
 213 00f4 28023A40 		.word	1077543464
 214 00f8 30003A40 		.word	1077542960
 215 00fc 38023A40 		.word	1077543480
 216 0100 18023A40 		.word	1077543448
 217 0104 FEFFFFDF 		.word	-536870914
 218 0108 80003A40 		.word	1077543040
 219 010c 00000000 		.word	ADC_offset
 220 0110 3E180000 		.word	6206
 221 0114 00000000 		.word	ADC_countsPer10Volt
 222 0118 70021053 		.word	1393558128
 223              	.LBE16:
 224              	.LBE17:
 225              		.cfi_endproc
 226              	.LFE1:
 227              		.size	ADC_Start, .-ADC_Start
 228              		.section	.text.ADC_Init,"ax",%progbits
 229              		.align	2
 230              		.global	ADC_Init
 231              		.code	16
 232              		.thumb_func
 233              		.type	ADC_Init, %function
 234              	ADC_Init:
 235              	.LFB2:
  95:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
 236              		.loc 1 95 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 10B5     		push	{r4, lr}
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 4, -8
 243              		.cfi_offset 14, -4
 172:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 244              		.loc 1 172 0
 245 0002 0221     		movs	r1, #2
 246 0004 1020     		movs	r0, #16
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 12


 247 0006 FFF7FEFF 		bl	CyIntSetPriority
 248              	.LVL10:
 173:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 249              		.loc 1 173 0
 250 000a 1E49     		ldr	r1, .L16
 251 000c 1020     		movs	r0, #16
 252 000e FFF7FEFF 		bl	CyIntSetVector
 253              	.LVL11:
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 254              		.loc 1 177 0
 255 0012 0122     		movs	r2, #1
 256 0014 1C4B     		ldr	r3, .L16+4
 257 0016 1A60     		str	r2, [r3]
 180:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 258              		.loc 1 180 0
 259 0018 1C4B     		ldr	r3, .L16+8
 260 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 261              		.loc 1 178 0
 262 001c 002B     		cmp	r3, #0
 263 001e 2FDB     		blt	.L15
 264 0020 1B49     		ldr	r1, .L16+12
 265              	.L14:
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 266              		.loc 1 178 0 is_stmt 0 discriminator 4
 267 0022 1C4A     		ldr	r2, .L16+16
 190:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 268              		.loc 1 190 0 is_stmt 1 discriminator 4
 269 0024 8020     		movs	r0, #128
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 270              		.loc 1 178 0 discriminator 4
 271 0026 1368     		ldr	r3, [r2]
 190:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 272              		.loc 1 190 0 discriminator 4
 273 0028 4002     		lsls	r0, r0, #9
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 274              		.loc 1 178 0 discriminator 4
 275 002a 0B43     		orrs	r3, r1
 276 002c 1360     		str	r3, [r2]
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 277              		.loc 1 182 0 discriminator 4
 278 002e 1A4A     		ldr	r2, .L16+20
 279 0030 1A4B     		ldr	r3, .L16+24
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 280              		.loc 1 185 0 discriminator 4
 281 0032 1B49     		ldr	r1, .L16+28
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 282              		.loc 1 182 0 discriminator 4
 283 0034 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 284              		.loc 1 183 0 discriminator 4
 285 0036 1B4A     		ldr	r2, .L16+32
 286 0038 1B4B     		ldr	r3, .L16+36
 314:Generated_Source\PSoC4/ADC.c **** 
 287              		.loc 1 314 0 discriminator 4
 288              		@ sp needed
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 13


 289              		.loc 1 183 0 discriminator 4
 290 003a 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 291              		.loc 1 184 0 discriminator 4
 292 003c 0023     		movs	r3, #0
 293 003e 1B4A     		ldr	r2, .L16+40
 294 0040 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 295              		.loc 1 185 0 discriminator 4
 296 0042 1B4A     		ldr	r2, .L16+44
 297 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     
 298              		.loc 1 186 0 discriminator 4
 299 0046 1B49     		ldr	r1, .L16+48
 300 0048 0A60     		str	r2, [r1]
 190:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 301              		.loc 1 190 0 discriminator 4
 302 004a 1B49     		ldr	r1, .L16+52
 303 004c 0A68     		ldr	r2, [r1]
 304 004e 0243     		orrs	r2, r0
 305 0050 0A60     		str	r2, [r1]
 199:Generated_Source\PSoC4/ADC.c **** 
 306              		.loc 1 199 0 discriminator 4
 307 0052 0121     		movs	r1, #1
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 308              		.loc 1 197 0 discriminator 4
 309 0054 194A     		ldr	r2, .L16+56
 310 0056 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 311              		.loc 1 198 0 discriminator 4
 312 0058 194A     		ldr	r2, .L16+60
 313 005a 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c **** 
 314              		.loc 1 199 0 discriminator 4
 315 005c 194A     		ldr	r2, .L16+64
 316 005e 1160     		str	r1, [r2]
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 317              		.loc 1 206 0 discriminator 4
 318 0060 1949     		ldr	r1, .L16+68
 319 0062 1A4A     		ldr	r2, .L16+72
 320 0064 0868     		ldr	r0, [r1]
 321              	.LVL12:
 322 0066 0240     		ands	r2, r0
 221:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 323              		.loc 1 221 0 discriminator 4
 324 0068 8020     		movs	r0, #128
 325              	.LVL13:
 326 006a 8005     		lsls	r0, r0, #22
 327 006c 0243     		orrs	r2, r0
 328              	.LVL14:
 226:Generated_Source\PSoC4/ADC.c **** 
 329              		.loc 1 226 0 discriminator 4
 330 006e 0A60     		str	r2, [r1]
 331              	.LVL15:
 253:Generated_Source\PSoC4/ADC.c **** 
 332              		.loc 1 253 0 discriminator 4
 333 0070 174A     		ldr	r2, .L16+76
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 14


 334 0072 1360     		str	r3, [r2]
 335              	.LVL16:
 298:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 336              		.loc 1 298 0 discriminator 4
 337 0074 174A     		ldr	r2, .L16+80
 338 0076 1380     		strh	r3, [r2]
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 339              		.loc 1 311 0 discriminator 4
 340 0078 174A     		ldr	r2, .L16+84
 341 007a 184B     		ldr	r3, .L16+88
 342 007c 1A60     		str	r2, [r3]
 343              	.LVL17:
 314:Generated_Source\PSoC4/ADC.c **** 
 344              		.loc 1 314 0 discriminator 4
 345 007e 10BD     		pop	{r4, pc}
 346              	.LVL18:
 347              	.L15:
 178:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 348              		.loc 1 178 0
 349 0080 1749     		ldr	r1, .L16+92
 350 0082 CEE7     		b	.L14
 351              	.L17:
 352              		.align	2
 353              	.L16:
 354 0084 00000000 		.word	ADC_ISR
 355 0088 20003A40 		.word	1077542944
 356 008c 80033A40 		.word	1077543808
 357 0090 70020053 		.word	1392509552
 358 0094 00003A40 		.word	1077542912
 359 0098 CC000080 		.word	-2147483444
 360 009c 04003A40 		.word	1077542916
 361 00a0 10003A40 		.word	1077542928
 362 00a4 0000FF07 		.word	134152192
 363 00a8 18003A40 		.word	1077542936
 364 00ac 1C003A40 		.word	1077542940
 365 00b0 02000200 		.word	131074
 366 00b4 14003A40 		.word	1077542932
 367 00b8 00033A40 		.word	1077543680
 368 00bc 28023A40 		.word	1077543464
 369 00c0 38023A40 		.word	1077543480
 370 00c4 18023A40 		.word	1077543448
 371 00c8 30003A40 		.word	1077542960
 372 00cc FEFFFFDF 		.word	-536870914
 373 00d0 80003A40 		.word	1077543040
 374 00d4 00000000 		.word	ADC_offset
 375 00d8 3E180000 		.word	6206
 376 00dc 00000000 		.word	ADC_countsPer10Volt
 377 00e0 70021053 		.word	1393558128
 378              		.cfi_endproc
 379              	.LFE2:
 380              		.size	ADC_Init, .-ADC_Init
 381              		.section	.text.ADC_Enable,"ax",%progbits
 382              		.align	2
 383              		.global	ADC_Enable
 384              		.code	16
 385              		.thumb_func
 386              		.type	ADC_Enable, %function
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 15


 387              	ADC_Enable:
 388              	.LFB3:
 331:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 389              		.loc 1 331 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 332:Generated_Source\PSoC4/ADC.c ****     {
 393              		.loc 1 332 0
 394 0000 094B     		ldr	r3, .L23
 331:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 395              		.loc 1 331 0
 396 0002 10B5     		push	{r4, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 4, -8
 399              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     {
 400              		.loc 1 332 0
 401 0004 1B68     		ldr	r3, [r3]
 402 0006 002B     		cmp	r3, #0
 403 0008 0CDB     		blt	.L18
 404              	.LBB20:
 405              	.LBB21:
 336:Generated_Source\PSoC4/ADC.c ****             {
 406              		.loc 1 336 0
 407 000a 084A     		ldr	r2, .L23+4
 408              	.L21:
 409 000c 1368     		ldr	r3, [r2]
 410 000e 002B     		cmp	r3, #0
 411 0010 FCDB     		blt	.L21
 342:Generated_Source\PSoC4/ADC.c ****         
 412              		.loc 1 342 0
 413 0012 8021     		movs	r1, #128
 414 0014 044A     		ldr	r2, .L23
 415 0016 0906     		lsls	r1, r1, #24
 416 0018 1368     		ldr	r3, [r2]
 417              		.loc 1 345 0
 418 001a 0A20     		movs	r0, #10
 342:Generated_Source\PSoC4/ADC.c ****         
 419              		.loc 1 342 0
 420 001c 0B43     		orrs	r3, r1
 421 001e 1360     		str	r3, [r2]
 422              		.loc 1 345 0
 423 0020 FFF7FEFF 		bl	CyDelayUs
 424              	.LVL19:
 425              	.L18:
 426              	.LBE21:
 427              	.LBE20:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 428              		.loc 1 347 0
 429              		@ sp needed
 430 0024 10BD     		pop	{r4, pc}
 431              	.L24:
 432 0026 C046     		.align	2
 433              	.L23:
 434 0028 00003A40 		.word	1077542912
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 16


 435 002c 08023A40 		.word	1077543432
 436              		.cfi_endproc
 437              	.LFE3:
 438              		.size	ADC_Enable, .-ADC_Enable
 439              		.section	.text.ADC_Stop,"ax",%progbits
 440              		.align	2
 441              		.global	ADC_Stop
 442              		.code	16
 443              		.thumb_func
 444              		.type	ADC_Stop, %function
 445              	ADC_Stop:
 446              	.LFB4:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 447              		.loc 1 366 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 452              		.loc 1 367 0
 453 0000 024A     		ldr	r2, .L26
 368:Generated_Source\PSoC4/ADC.c **** }
 454              		.loc 1 368 0
 455              		@ sp needed
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 456              		.loc 1 367 0
 457 0002 1368     		ldr	r3, [r2]
 458 0004 5B00     		lsls	r3, r3, #1
 459 0006 5B08     		lsrs	r3, r3, #1
 460 0008 1360     		str	r3, [r2]
 461              		.loc 1 368 0
 462 000a 7047     		bx	lr
 463              	.L27:
 464              		.align	2
 465              	.L26:
 466 000c 00003A40 		.word	1077542912
 467              		.cfi_endproc
 468              	.LFE4:
 469              		.size	ADC_Stop, .-ADC_Stop
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 17


 470              		.section	.text.ADC_StartConvert,"ax",%progbits
 471              		.align	2
 472              		.global	ADC_StartConvert
 473              		.code	16
 474              		.thumb_func
 475              		.type	ADC_StartConvert, %function
 476              	ADC_StartConvert:
 477              	.LFB5:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 478              		.loc 1 392 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 483              		.loc 1 394 0
 484 0000 8021     		movs	r1, #128
 485 0002 034A     		ldr	r2, .L29
 486 0004 4902     		lsls	r1, r1, #9
 487 0006 1368     		ldr	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 488              		.loc 1 399 0
 489              		@ sp needed
 394:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 490              		.loc 1 394 0
 491 0008 0B43     		orrs	r3, r1
 492 000a 1360     		str	r3, [r2]
 493              		.loc 1 399 0
 494 000c 7047     		bx	lr
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 18


 495              	.L30:
 496 000e C046     		.align	2
 497              	.L29:
 498 0010 04003A40 		.word	1077542916
 499              		.cfi_endproc
 500              	.LFE5:
 501              		.size	ADC_StartConvert, .-ADC_StartConvert
 502              		.section	.text.ADC_StopConvert,"ax",%progbits
 503              		.align	2
 504              		.global	ADC_StopConvert
 505              		.code	16
 506              		.thumb_func
 507              		.type	ADC_StopConvert, %function
 508              	ADC_StopConvert:
 509              	.LFB6:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 510              		.loc 1 417 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 515              		.loc 1 419 0
 516 0000 024A     		ldr	r2, .L32
 517 0002 034B     		ldr	r3, .L32+4
 518 0004 1168     		ldr	r1, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 519              		.loc 1 421 0
 520              		@ sp needed
 419:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 521              		.loc 1 419 0
 522 0006 0B40     		ands	r3, r1
 523 0008 1360     		str	r3, [r2]
 524              		.loc 1 421 0
 525 000a 7047     		bx	lr
 526              	.L33:
 527              		.align	2
 528              	.L32:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 19


 529 000c 04003A40 		.word	1077542916
 530 0010 FFFFFEFF 		.word	-65537
 531              		.cfi_endproc
 532              	.LFE6:
 533              		.size	ADC_StopConvert, .-ADC_StopConvert
 534              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 535              		.align	2
 536              		.global	ADC_IsEndConversion
 537              		.code	16
 538              		.thumb_func
 539              		.type	ADC_IsEndConversion, %function
 540              	ADC_IsEndConversion:
 541              	.LFB7:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 542              		.loc 1 451 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547              	.LVL20:
 548              		.loc 1 451 0
 549 0000 0300     		movs	r3, r0
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 550              		.loc 1 452 0
 551 0002 0020     		movs	r0, #0
 552              	.LVL21:
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 20


 553              		.loc 1 454 0
 554 0004 9A07     		lsls	r2, r3, #30
 555 0006 0AD0     		beq	.L41
 556 0008 9B07     		lsls	r3, r3, #30
 557 000a 09D5     		bpl	.L47
 558              	.LVL22:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 559              		.loc 1 459 0 discriminator 2
 560 000c 0122     		movs	r2, #1
 458:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 561              		.loc 1 458 0 discriminator 2
 562 000e 0749     		ldr	r1, .L48
 563              	.LVL23:
 564              	.L43:
 565 0010 0B68     		ldr	r3, [r1]
 566              	.LVL24:
 567              		.loc 1 459 0 discriminator 2
 568 0012 1A42     		tst	r2, r3
 569 0014 FCD0     		beq	.L43
 570              	.LVL25:
 571              	.L37:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 572              		.loc 1 464 0
 573 0016 0122     		movs	r2, #1
 574 0018 0120     		movs	r0, #1
 575              	.LVL26:
 576 001a 044B     		ldr	r3, .L48
 577 001c 1A60     		str	r2, [r3]
 578              	.LVL27:
 579              	.L41:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 21


 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 580              		.loc 1 486 0
 581              		@ sp needed
 582 001e 7047     		bx	lr
 583              	.LVL28:
 584              	.L47:
 458:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 585              		.loc 1 458 0
 586 0020 024B     		ldr	r3, .L48
 587 0022 0130     		adds	r0, r0, #1
 588 0024 1B68     		ldr	r3, [r3]
 589 0026 1840     		ands	r0, r3
 590              	.LVL29:
 459:Generated_Source\PSoC4/ADC.c **** 
 591              		.loc 1 459 0
 592 0028 F9D0     		beq	.L41
 593 002a F4E7     		b	.L37
 594              	.L49:
 595              		.align	2
 596              	.L48:
 597 002c 10023A40 		.word	1077543440
 598              		.cfi_endproc
 599              	.LFE7:
 600              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 601              		.section	.text.ADC_GetResult16,"ax",%progbits
 602              		.align	2
 603              		.global	ADC_GetResult16
 604              		.code	16
 605              		.thumb_func
 606              		.type	ADC_GetResult16, %function
 607              	ADC_GetResult16:
 608              	.LFB8:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 609              		.loc 1 505 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 22


 613              	.LVL30:
 614 0000 10B5     		push	{r4, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 4, -8
 617              		.cfi_offset 14, -4
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 618              		.loc 1 509 0
 619 0002 0028     		cmp	r0, #0
 620 0004 03D1     		bne	.L54
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 621              		.loc 1 513 0
 622 0006 044B     		ldr	r3, .L55
 623 0008 1868     		ldr	r0, [r3]
 624              	.LVL31:
 625 000a 00B2     		sxth	r0, r0
 626              	.LVL32:
 627              	.L53:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 526:Generated_Source\PSoC4/ADC.c **** }
 628              		.loc 1 526 0
 629              		@ sp needed
 630 000c 10BD     		pop	{r4, pc}
 631              	.LVL33:
 632              	.L54:
 509:Generated_Source\PSoC4/ADC.c **** 
 633              		.loc 1 509 0 discriminator 1
 634 000e 0020     		movs	r0, #0
 635              	.LVL34:
 636 0010 FFF7FEFF 		bl	CyHalt
 637              	.LVL35:
 638 0014 0020     		movs	r0, #0
 639 0016 F9E7     		b	.L53
 640              	.L56:
 641              		.align	2
 642              	.L55:
 643 0018 80013A40 		.word	1077543296
 644              		.cfi_endproc
 645              	.LFE8:
 646              		.size	ADC_GetResult16, .-ADC_GetResult16
 647              		.section	.text.ADC_SetChanMask,"ax",%progbits
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 23


 648              		.align	2
 649              		.global	ADC_SetChanMask
 650              		.code	16
 651              		.thumb_func
 652              		.type	ADC_SetChanMask, %function
 653              	ADC_SetChanMask:
 654              	.LFB9:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 655              		.loc 1 550 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 660              	.LVL36:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 661              		.loc 1 551 0
 662 0000 0123     		movs	r3, #1
 663 0002 1840     		ands	r0, r3
 664              	.LVL37:
 665 0004 014B     		ldr	r3, .L58
 552:Generated_Source\PSoC4/ADC.c **** }
 666              		.loc 1 552 0
 667              		@ sp needed
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 668              		.loc 1 551 0
 669 0006 1860     		str	r0, [r3]
 670              		.loc 1 552 0
 671 0008 7047     		bx	lr
 672              	.L59:
 673 000a C046     		.align	2
 674              	.L58:
 675 000c 20003A40 		.word	1077542944
 676              		.cfi_endproc
 677              	.LFE9:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 24


 678              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 679              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 680              		.align	2
 681              		.global	ADC_SetLowLimit
 682              		.code	16
 683              		.thumb_func
 684              		.type	ADC_SetLowLimit, %function
 685              	ADC_SetLowLimit:
 686              	.LFB10:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 687              		.loc 1 594 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692              	.LVL38:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 25


 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 693              		.loc 1 595 0
 694 0000 054A     		ldr	r2, .L61
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 695              		.loc 1 596 0
 696 0002 0004     		lsls	r0, r0, #16
 697              	.LVL39:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 698              		.loc 1 595 0
 699 0004 1368     		ldr	r3, [r2]
 700              		.loc 1 596 0
 701 0006 000C     		lsrs	r0, r0, #16
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 702              		.loc 1 595 0
 703 0008 1B0C     		lsrs	r3, r3, #16
 704 000a 1B04     		lsls	r3, r3, #16
 705 000c 1360     		str	r3, [r2]
 706              		.loc 1 596 0
 707 000e 1368     		ldr	r3, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 708              		.loc 1 597 0
 709              		@ sp needed
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 710              		.loc 1 596 0
 711 0010 1843     		orrs	r0, r3
 712 0012 1060     		str	r0, [r2]
 713              		.loc 1 597 0
 714 0014 7047     		bx	lr
 715              	.L62:
 716 0016 C046     		.align	2
 717              	.L61:
 718 0018 18003A40 		.word	1077542936
 719              		.cfi_endproc
 720              	.LFE10:
 721              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 722              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 723              		.align	2
 724              		.global	ADC_SetHighLimit
 725              		.code	16
 726              		.thumb_func
 727              		.type	ADC_SetHighLimit, %function
 728              	ADC_SetHighLimit:
 729              	.LFB11:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 26


 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 730              		.loc 1 615 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735              	.LVL40:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 736              		.loc 1 616 0
 737 0000 044A     		ldr	r2, .L64
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 738              		.loc 1 617 0
 739 0002 0004     		lsls	r0, r0, #16
 740              	.LVL41:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 741              		.loc 1 616 0
 742 0004 1368     		ldr	r3, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 743              		.loc 1 618 0
 744              		@ sp needed
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 745              		.loc 1 616 0
 746 0006 1B04     		lsls	r3, r3, #16
 747 0008 1B0C     		lsrs	r3, r3, #16
 748 000a 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 749              		.loc 1 617 0
 750 000c 1368     		ldr	r3, [r2]
 751 000e 1843     		orrs	r0, r3
 752 0010 1060     		str	r0, [r2]
 753              		.loc 1 618 0
 754 0012 7047     		bx	lr
 755              	.L65:
 756              		.align	2
 757              	.L64:
 758 0014 18003A40 		.word	1077542936
 759              		.cfi_endproc
 760              	.LFE11:
 761              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 762              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 763              		.align	2
 764              		.global	ADC_SetLimitMask
 765              		.code	16
 766              		.thumb_func
 767              		.type	ADC_SetLimitMask, %function
 768              	ADC_SetLimitMask:
 769              	.LFB12:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 27


 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 770              		.loc 1 639 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775              	.LVL42:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 776              		.loc 1 640 0
 777 0000 0123     		movs	r3, #1
 778 0002 1840     		ands	r0, r3
 779              	.LVL43:
 780 0004 014B     		ldr	r3, .L67
 641:Generated_Source\PSoC4/ADC.c **** }
 781              		.loc 1 641 0
 782              		@ sp needed
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 783              		.loc 1 640 0
 784 0006 1860     		str	r0, [r3]
 785              		.loc 1 641 0
 786 0008 7047     		bx	lr
 787              	.L68:
 788 000a C046     		.align	2
 789              	.L67:
 790 000c 38023A40 		.word	1077543480
 791              		.cfi_endproc
 792              	.LFE12:
 793              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 794              		.section	.text.ADC_SetSatMask,"ax",%progbits
 795              		.align	2
 796              		.global	ADC_SetSatMask
 797              		.code	16
 798              		.thumb_func
 799              		.type	ADC_SetSatMask, %function
 800              	ADC_SetSatMask:
 801              	.LFB13:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 28


 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 802              		.loc 1 662 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807              	.LVL44:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 808              		.loc 1 663 0
 809 0000 0123     		movs	r3, #1
 810 0002 1840     		ands	r0, r3
 811              	.LVL45:
 812 0004 014B     		ldr	r3, .L70
 664:Generated_Source\PSoC4/ADC.c **** }
 813              		.loc 1 664 0
 814              		@ sp needed
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 815              		.loc 1 663 0
 816 0006 1860     		str	r0, [r3]
 817              		.loc 1 664 0
 818 0008 7047     		bx	lr
 819              	.L71:
 820 000a C046     		.align	2
 821              	.L70:
 822 000c 28023A40 		.word	1077543464
 823              		.cfi_endproc
 824              	.LFE13:
 825              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 826              		.section	.text.ADC_SetOffset,"ax",%progbits
 827              		.align	2
 828              		.global	ADC_SetOffset
 829              		.code	16
 830              		.thumb_func
 831              		.type	ADC_SetOffset, %function
 832              	ADC_SetOffset:
 833              	.LFB14:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 29


 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 834              		.loc 1 690 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              	.LVL46:
 839 0000 70B5     		push	{r4, r5, r6, lr}
 840              		.cfi_def_cfa_offset 16
 841              		.cfi_offset 4, -16
 842              		.cfi_offset 5, -12
 843              		.cfi_offset 6, -8
 844              		.cfi_offset 14, -4
 845              		.loc 1 690 0
 846 0002 0400     		movs	r4, r0
 847 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 848              		.loc 1 692 0
 849 0006 0028     		cmp	r0, #0
 850 0008 02D0     		beq	.L73
 851              		.loc 1 692 0 is_stmt 0 discriminator 1
 852 000a 0020     		movs	r0, #0
 853              	.LVL47:
 854 000c FFF7FEFF 		bl	CyHalt
 855              	.LVL48:
 856              	.L73:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 857              		.loc 1 694 0 is_stmt 1
 858 0010 014B     		ldr	r3, .L77
 859 0012 6400     		lsls	r4, r4, #1
 860              	.LVL49:
 861 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 862              		.loc 1 695 0
 863              		@ sp needed
 864 0016 70BD     		pop	{r4, r5, r6, pc}
 865              	.L78:
 866              		.align	2
 867              	.L77:
 868 0018 00000000 		.word	ADC_offset
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 30


 869              		.cfi_endproc
 870              	.LFE14:
 871              		.size	ADC_SetOffset, .-ADC_SetOffset
 872              		.section	.text.ADC_SetGain,"ax",%progbits
 873              		.align	2
 874              		.global	ADC_SetGain
 875              		.code	16
 876              		.thumb_func
 877              		.type	ADC_SetGain, %function
 878              	ADC_SetGain:
 879              	.LFB15:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 880              		.loc 1 724 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              	.LVL50:
 885 0000 70B5     		push	{r4, r5, r6, lr}
 886              		.cfi_def_cfa_offset 16
 887              		.cfi_offset 4, -16
 888              		.cfi_offset 5, -12
 889              		.cfi_offset 6, -8
 890              		.cfi_offset 14, -4
 891              		.loc 1 724 0
 892 0002 0400     		movs	r4, r0
 893 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 894              		.loc 1 726 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 31


 895 0006 0028     		cmp	r0, #0
 896 0008 02D0     		beq	.L80
 897              		.loc 1 726 0 is_stmt 0 discriminator 1
 898 000a 0020     		movs	r0, #0
 899              	.LVL51:
 900 000c FFF7FEFF 		bl	CyHalt
 901              	.LVL52:
 902              	.L80:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 903              		.loc 1 728 0 is_stmt 1
 904 0010 014B     		ldr	r3, .L84
 905 0012 A400     		lsls	r4, r4, #2
 906              	.LVL53:
 907 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 908              		.loc 1 729 0
 909              		@ sp needed
 910              	.LVL54:
 911 0016 70BD     		pop	{r4, r5, r6, pc}
 912              	.L85:
 913              		.align	2
 914              	.L84:
 915 0018 00000000 		.word	ADC_countsPer10Volt
 916              		.cfi_endproc
 917              	.LFE15:
 918              		.size	ADC_SetGain, .-ADC_SetGain
 919              		.global	__aeabi_idiv
 920              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 921              		.align	2
 922              		.global	ADC_CountsTo_mVolts
 923              		.code	16
 924              		.thumb_func
 925              		.type	ADC_CountsTo_mVolts, %function
 926              	ADC_CountsTo_mVolts:
 927              	.LFB16:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 32


 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 928              		.loc 1 757 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              	.LVL55:
 933 0000 70B5     		push	{r4, r5, r6, lr}
 934              		.cfi_def_cfa_offset 16
 935              		.cfi_offset 4, -16
 936              		.cfi_offset 5, -12
 937              		.cfi_offset 6, -8
 938              		.cfi_offset 14, -4
 939              		.loc 1 757 0
 940 0002 0500     		movs	r5, r0
 941 0004 0C00     		movs	r4, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 942              		.loc 1 761 0
 943 0006 0028     		cmp	r0, #0
 944 0008 1CD1     		bne	.L93
 945              	.LVL56:
 946              	.L87:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 947              		.loc 1 772 0
 948 000a 104A     		ldr	r2, .L94
 949 000c 6B00     		lsls	r3, r5, #1
 950 000e 995A     		ldrh	r1, [r3, r2]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 951              		.loc 1 774 0
 952 0010 0F48     		ldr	r0, .L94+4
 772:Generated_Source\PSoC4/ADC.c **** 
 953              		.loc 1 772 0
 954 0012 611A     		subs	r1, r4, r1
 955 0014 09B2     		sxth	r1, r1
 956              	.LVL57:
 957              		.loc 1 774 0
 958 0016 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 33


 959              		.loc 1 775 0
 960 0018 0029     		cmp	r1, #0
 961 001a 0BDD     		ble	.L88
 962              		.loc 1 775 0 is_stmt 0 discriminator 1
 963 001c 0D49     		ldr	r1, .L94+8
 964              	.LVL58:
 965 001e AD00     		lsls	r5, r5, #2
 966              	.LVL59:
 967 0020 4A59     		ldr	r2, [r1, r5]
 968 0022 D30F     		lsrs	r3, r2, #31
 969 0024 9A18     		adds	r2, r3, r2
 970 0026 5310     		asrs	r3, r2, #1
 971              	.L89:
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 972              		.loc 1 776 0 is_stmt 1
 973 0028 4959     		ldr	r1, [r1, r5]
 974              	.LVL60:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 975              		.loc 1 778 0
 976 002a 1818     		adds	r0, r3, r0
 977              	.LVL61:
 978 002c FFF7FEFF 		bl	__aeabi_idiv
 979              	.LVL62:
 779:Generated_Source\PSoC4/ADC.c ****     }
 980              		.loc 1 779 0
 981              		@ sp needed
 778:Generated_Source\PSoC4/ADC.c ****     }
 982              		.loc 1 778 0
 983 0030 00B2     		sxth	r0, r0
 984              		.loc 1 779 0
 985 0032 70BD     		pop	{r4, r5, r6, pc}
 986              	.LVL63:
 987              	.L88:
 775:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 988              		.loc 1 775 0 discriminator 2
 989 0034 0749     		ldr	r1, .L94+8
 990              	.LVL64:
 991 0036 AD00     		lsls	r5, r5, #2
 992              	.LVL65:
 993 0038 4A59     		ldr	r2, [r1, r5]
 994 003a D30F     		lsrs	r3, r2, #31
 995 003c 9A18     		adds	r2, r3, r2
 996 003e 5210     		asrs	r2, r2, #1
 997 0040 5342     		rsbs	r3, r2, #0
 998 0042 F1E7     		b	.L89
 999              	.LVL66:
 1000              	.L93:
 761:Generated_Source\PSoC4/ADC.c **** 
 1001              		.loc 1 761 0 discriminator 1
 1002 0044 0020     		movs	r0, #0
 1003              	.LVL67:
 1004 0046 FFF7FEFF 		bl	CyHalt
 1005              	.LVL68:
 1006 004a DEE7     		b	.L87
 1007              	.L95:
 1008              		.align	2
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 34


 1009              	.L94:
 1010 004c 00000000 		.word	ADC_offset
 1011 0050 10270000 		.word	10000
 1012 0054 00000000 		.word	ADC_countsPer10Volt
 1013              		.cfi_endproc
 1014              	.LFE16:
 1015              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1016              		.global	__aeabi_lmul
 1017              		.global	__aeabi_ldivmod
 1018              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1019              		.align	2
 1020              		.global	ADC_CountsTo_uVolts
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	ADC_CountsTo_uVolts, %function
 1024              	ADC_CountsTo_uVolts:
 1025              	.LFB17:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1026              		.loc 1 811 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              	.LVL69:
 1031 0000 70B5     		push	{r4, r5, r6, lr}
 1032              		.cfi_def_cfa_offset 16
 1033              		.cfi_offset 4, -16
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 35


 1034              		.cfi_offset 5, -12
 1035              		.cfi_offset 6, -8
 1036              		.cfi_offset 14, -4
 1037              		.loc 1 811 0
 1038 0002 0500     		movs	r5, r0
 1039 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1040              		.loc 1 815 0
 1041 0006 0028     		cmp	r0, #0
 1042 0008 02D0     		beq	.L97
 1043              		.loc 1 815 0 is_stmt 0 discriminator 1
 1044 000a 0020     		movs	r0, #0
 1045              	.LVL70:
 1046 000c FFF7FEFF 		bl	CyHalt
 1047              	.LVL71:
 1048              	.L97:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1049              		.loc 1 826 0 is_stmt 1
 1050 0010 084B     		ldr	r3, .L101
 1051 0012 6A00     		lsls	r2, r5, #1
 1052 0014 D05A     		ldrh	r0, [r2, r3]
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1053              		.loc 1 828 0
 1054 0016 084B     		ldr	r3, .L101+4
 826:Generated_Source\PSoC4/ADC.c **** 
 1055              		.loc 1 826 0
 1056 0018 241A     		subs	r4, r4, r0
 1057              	.LVL72:
 1058              		.loc 1 828 0
 1059 001a AD00     		lsls	r5, r5, #2
 1060              	.LVL73:
 1061 001c ED58     		ldr	r5, [r5, r3]
 1062              	.LVL74:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1063              		.loc 1 830 0
 1064 001e 20B2     		sxth	r0, r4
 1065 0020 064A     		ldr	r2, .L101+8
 1066 0022 0023     		movs	r3, #0
 1067 0024 C117     		asrs	r1, r0, #31
 1068 0026 FFF7FEFF 		bl	__aeabi_lmul
 1069              	.LVL75:
 1070 002a EB17     		asrs	r3, r5, #31
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 36


 1071 002c 2A00     		movs	r2, r5
 1072 002e FFF7FEFF 		bl	__aeabi_ldivmod
 1073              	.LVL76:
 831:Generated_Source\PSoC4/ADC.c ****     }
 1074              		.loc 1 831 0
 1075              		@ sp needed
 1076              	.LVL77:
 1077 0032 70BD     		pop	{r4, r5, r6, pc}
 1078              	.L102:
 1079              		.align	2
 1080              	.L101:
 1081 0034 00000000 		.word	ADC_offset
 1082 0038 00000000 		.word	ADC_countsPer10Volt
 1083 003c 80969800 		.word	10000000
 1084              		.cfi_endproc
 1085              	.LFE17:
 1086              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1087              		.global	__aeabi_i2f
 1088              		.global	__aeabi_fmul
 1089              		.global	__aeabi_fdiv
 1090              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1091              		.align	2
 1092              		.global	ADC_CountsTo_Volts
 1093              		.code	16
 1094              		.thumb_func
 1095              		.type	ADC_CountsTo_Volts, %function
 1096              	ADC_CountsTo_Volts:
 1097              	.LFB18:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1098              		.loc 1 856 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 0
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 37


 1102              	.LVL78:
 1103 0000 70B5     		push	{r4, r5, r6, lr}
 1104              		.cfi_def_cfa_offset 16
 1105              		.cfi_offset 4, -16
 1106              		.cfi_offset 5, -12
 1107              		.cfi_offset 6, -8
 1108              		.cfi_offset 14, -4
 1109              		.loc 1 856 0
 1110 0002 0500     		movs	r5, r0
 1111 0004 0C00     		movs	r4, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1112              		.loc 1 860 0
 1113 0006 0028     		cmp	r0, #0
 1114 0008 02D0     		beq	.L104
 1115              		.loc 1 860 0 is_stmt 0 discriminator 1
 1116 000a 0020     		movs	r0, #0
 1117              	.LVL79:
 1118 000c FFF7FEFF 		bl	CyHalt
 1119              	.LVL80:
 1120              	.L104:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1121              		.loc 1 871 0 is_stmt 1
 1122 0010 0A4B     		ldr	r3, .L108
 1123 0012 6A00     		lsls	r2, r5, #1
 1124 0014 D05A     		ldrh	r0, [r2, r3]
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1125              		.loc 1 873 0
 1126 0016 0A4B     		ldr	r3, .L108+4
 871:Generated_Source\PSoC4/ADC.c **** 
 1127              		.loc 1 871 0
 1128 0018 241A     		subs	r4, r4, r0
 1129              	.LVL81:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1130              		.loc 1 875 0
 1131 001a 20B2     		sxth	r0, r4
 873:Generated_Source\PSoC4/ADC.c **** 
 1132              		.loc 1 873 0
 1133 001c AD00     		lsls	r5, r5, #2
 1134              	.LVL82:
 1135 001e ED58     		ldr	r5, [r5, r3]
 1136              	.LVL83:
 1137              		.loc 1 875 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 38


 1138 0020 FFF7FEFF 		bl	__aeabi_i2f
 1139              	.LVL84:
 1140 0024 0749     		ldr	r1, .L108+8
 1141 0026 FFF7FEFF 		bl	__aeabi_fmul
 1142              	.LVL85:
 1143 002a 041C     		adds	r4, r0, #0
 1144              	.LVL86:
 1145 002c 2800     		movs	r0, r5
 1146 002e FFF7FEFF 		bl	__aeabi_i2f
 1147              	.LVL87:
 1148 0032 011C     		adds	r1, r0, #0
 1149 0034 201C     		adds	r0, r4, #0
 1150 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1151              	.LVL88:
 876:Generated_Source\PSoC4/ADC.c ****     }
 1152              		.loc 1 876 0
 1153              		@ sp needed
 1154 003a 70BD     		pop	{r4, r5, r6, pc}
 1155              	.L109:
 1156              		.align	2
 1157              	.L108:
 1158 003c 00000000 		.word	ADC_offset
 1159 0040 00000000 		.word	ADC_countsPer10Volt
 1160 0044 00002041 		.word	1092616192
 1161              		.cfi_endproc
 1162              	.LFE18:
 1163              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1164              		.comm	ADC_countsPer10Volt,4,4
 1165              		.comm	ADC_offset,2,4
 1166              		.global	ADC_initVar
 1167              		.bss
 1168              		.set	.LANCHOR0,. + 0
 1169              		.type	ADC_initVar, %object
 1170              		.size	ADC_initVar, 1
 1171              	ADC_initVar:
 1172 0000 00       		.space	1
 1173              		.text
 1174              	.Letext0:
 1175              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1176              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1177              		.section	.debug_info,"",%progbits
 1178              	.Ldebug_info0:
 1179 0000 06060000 		.4byte	0x606
 1180 0004 0400     		.2byte	0x4
 1181 0006 00000000 		.4byte	.Ldebug_abbrev0
 1182 000a 04       		.byte	0x4
 1183 000b 01       		.uleb128 0x1
 1184 000c 5A000000 		.4byte	.LASF62
 1185 0010 0C       		.byte	0xc
 1186 0011 A4020000 		.4byte	.LASF63
 1187 0015 68010000 		.4byte	.LASF64
 1188 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1189 001d 00000000 		.4byte	0
 1190 0021 00000000 		.4byte	.Ldebug_line0
 1191 0025 02       		.uleb128 0x2
 1192 0026 08       		.byte	0x8
 1193 0027 07       		.byte	0x7
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 39


 1194 0028 32000000 		.4byte	.LASF0
 1195 002c 02       		.uleb128 0x2
 1196 002d 04       		.byte	0x4
 1197 002e 04       		.byte	0x4
 1198 002f CD020000 		.4byte	.LASF1
 1199 0033 02       		.uleb128 0x2
 1200 0034 08       		.byte	0x8
 1201 0035 05       		.byte	0x5
 1202 0036 E8000000 		.4byte	.LASF2
 1203 003a 03       		.uleb128 0x3
 1204 003b 04       		.byte	0x4
 1205 003c 05       		.byte	0x5
 1206 003d 696E7400 		.ascii	"int\000"
 1207 0041 02       		.uleb128 0x2
 1208 0042 02       		.byte	0x2
 1209 0043 05       		.byte	0x5
 1210 0044 21030000 		.4byte	.LASF3
 1211 0048 02       		.uleb128 0x2
 1212 0049 01       		.byte	0x1
 1213 004a 06       		.byte	0x6
 1214 004b F6000000 		.4byte	.LASF4
 1215 004f 02       		.uleb128 0x2
 1216 0050 01       		.byte	0x1
 1217 0051 08       		.byte	0x8
 1218 0052 08030000 		.4byte	.LASF5
 1219 0056 02       		.uleb128 0x2
 1220 0057 02       		.byte	0x2
 1221 0058 07       		.byte	0x7
 1222 0059 F3010000 		.4byte	.LASF6
 1223 005d 02       		.uleb128 0x2
 1224 005e 04       		.byte	0x4
 1225 005f 05       		.byte	0x5
 1226 0060 19010000 		.4byte	.LASF7
 1227 0064 02       		.uleb128 0x2
 1228 0065 04       		.byte	0x4
 1229 0066 07       		.byte	0x7
 1230 0067 C2010000 		.4byte	.LASF8
 1231 006b 02       		.uleb128 0x2
 1232 006c 04       		.byte	0x4
 1233 006d 07       		.byte	0x7
 1234 006e AE010000 		.4byte	.LASF9
 1235 0072 04       		.uleb128 0x4
 1236 0073 4A010000 		.4byte	.LASF10
 1237 0077 02       		.byte	0x2
 1238 0078 D201     		.2byte	0x1d2
 1239 007a 4F000000 		.4byte	0x4f
 1240 007e 04       		.uleb128 0x4
 1241 007f 00000000 		.4byte	.LASF11
 1242 0083 02       		.byte	0x2
 1243 0084 D301     		.2byte	0x1d3
 1244 0086 56000000 		.4byte	0x56
 1245 008a 04       		.uleb128 0x4
 1246 008b 61010000 		.4byte	.LASF12
 1247 008f 02       		.byte	0x2
 1248 0090 D401     		.2byte	0x1d4
 1249 0092 64000000 		.4byte	0x64
 1250 0096 04       		.uleb128 0x4
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 40


 1251 0097 73030000 		.4byte	.LASF13
 1252 009b 02       		.byte	0x2
 1253 009c D601     		.2byte	0x1d6
 1254 009e 41000000 		.4byte	0x41
 1255 00a2 04       		.uleb128 0x4
 1256 00a3 09010000 		.4byte	.LASF14
 1257 00a7 02       		.byte	0x2
 1258 00a8 D701     		.2byte	0x1d7
 1259 00aa 5D000000 		.4byte	0x5d
 1260 00ae 04       		.uleb128 0x4
 1261 00af 32020000 		.4byte	.LASF15
 1262 00b3 02       		.byte	0x2
 1263 00b4 D801     		.2byte	0x1d8
 1264 00b6 2C000000 		.4byte	0x2c
 1265 00ba 02       		.uleb128 0x2
 1266 00bb 08       		.byte	0x8
 1267 00bc 04       		.byte	0x4
 1268 00bd 5A010000 		.4byte	.LASF16
 1269 00c1 04       		.uleb128 0x4
 1270 00c2 7D020000 		.4byte	.LASF17
 1271 00c6 02       		.byte	0x2
 1272 00c7 DD01     		.2byte	0x1dd
 1273 00c9 33000000 		.4byte	0x33
 1274 00cd 02       		.uleb128 0x2
 1275 00ce 01       		.byte	0x1
 1276 00cf 08       		.byte	0x8
 1277 00d0 3F030000 		.4byte	.LASF18
 1278 00d4 04       		.uleb128 0x4
 1279 00d5 2C020000 		.4byte	.LASF19
 1280 00d9 02       		.byte	0x2
 1281 00da 7E02     		.2byte	0x27e
 1282 00dc E0000000 		.4byte	0xe0
 1283 00e0 05       		.uleb128 0x5
 1284 00e1 8A000000 		.4byte	0x8a
 1285 00e5 02       		.uleb128 0x2
 1286 00e6 08       		.byte	0x8
 1287 00e7 04       		.byte	0x4
 1288 00e8 4C020000 		.4byte	.LASF20
 1289 00ec 02       		.uleb128 0x2
 1290 00ed 04       		.byte	0x4
 1291 00ee 07       		.byte	0x7
 1292 00ef 3A020000 		.4byte	.LASF21
 1293 00f3 06       		.uleb128 0x6
 1294 00f4 68030000 		.4byte	.LASF65
 1295 00f8 01       		.byte	0x1
 1296 00f9 4A01     		.2byte	0x14a
 1297 00fb 01       		.byte	0x1
 1298 00fc 07       		.uleb128 0x7
 1299 00fd 29000000 		.4byte	.LASF66
 1300 0101 01       		.byte	0x1
 1301 0102 5E       		.byte	0x5e
 1302 0103 01       		.byte	0x1
 1303 0104 2A010000 		.4byte	0x12a
 1304 0108 08       		.uleb128 0x8
 1305 0109 34030000 		.4byte	.LASF22
 1306 010d 01       		.byte	0x1
 1307 010e 60       		.byte	0x60
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 41


 1308 010f 8A000000 		.4byte	0x8a
 1309 0113 08       		.uleb128 0x8
 1310 0114 E9010000 		.4byte	.LASF23
 1311 0118 01       		.byte	0x1
 1312 0119 61       		.byte	0x61
 1313 011a 8A000000 		.4byte	0x8a
 1314 011e 08       		.uleb128 0x8
 1315 011f 0F000000 		.4byte	.LASF24
 1316 0123 01       		.byte	0x1
 1317 0124 62       		.byte	0x62
 1318 0125 A2000000 		.4byte	0xa2
 1319 0129 00       		.byte	0
 1320 012a 09       		.uleb128 0x9
 1321 012b 0F010000 		.4byte	.LASF34
 1322 012f 01       		.byte	0x1
 1323 0130 3F       		.byte	0x3f
 1324 0131 00000000 		.4byte	.LFB1
 1325 0135 1C010000 		.4byte	.LFE1-.LFB1
 1326 0139 01       		.uleb128 0x1
 1327 013a 9C       		.byte	0x9c
 1328 013b BB010000 		.4byte	0x1bb
 1329 013f 0A       		.uleb128 0xa
 1330 0140 F3000000 		.4byte	0xf3
 1331 0144 0A000000 		.4byte	.LBB10
 1332 0148 22000000 		.4byte	.LBE10-.LBB10
 1333 014c 01       		.byte	0x1
 1334 014d 47       		.byte	0x47
 1335 014e 62010000 		.4byte	0x162
 1336 0152 0B       		.uleb128 0xb
 1337 0153 2C000000 		.4byte	.LVL0
 1338 0157 DD050000 		.4byte	0x5dd
 1339 015b 0C       		.uleb128 0xc
 1340 015c 01       		.uleb128 0x1
 1341 015d 50       		.byte	0x50
 1342 015e 01       		.uleb128 0x1
 1343 015f 3A       		.byte	0x3a
 1344 0160 00       		.byte	0
 1345 0161 00       		.byte	0
 1346 0162 0D       		.uleb128 0xd
 1347 0163 FC000000 		.4byte	0xfc
 1348 0167 2E000000 		.4byte	.LBB14
 1349 016b 00000000 		.4byte	.Ldebug_ranges0+0
 1350 016f 01       		.byte	0x1
 1351 0170 44       		.byte	0x44
 1352 0171 0E       		.uleb128 0xe
 1353 0172 00000000 		.4byte	.Ldebug_ranges0+0
 1354 0176 0F       		.uleb128 0xf
 1355 0177 08010000 		.4byte	0x108
 1356 017b 00000000 		.4byte	.LLST0
 1357 017f 0F       		.uleb128 0xf
 1358 0180 13010000 		.4byte	0x113
 1359 0184 14000000 		.4byte	.LLST1
 1360 0188 0F       		.uleb128 0xf
 1361 0189 1E010000 		.4byte	0x11e
 1362 018d 44000000 		.4byte	.LLST2
 1363 0191 10       		.uleb128 0x10
 1364 0192 36000000 		.4byte	.LVL1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 42


 1365 0196 E8050000 		.4byte	0x5e8
 1366 019a A9010000 		.4byte	0x1a9
 1367 019e 0C       		.uleb128 0xc
 1368 019f 01       		.uleb128 0x1
 1369 01a0 50       		.byte	0x50
 1370 01a1 01       		.uleb128 0x1
 1371 01a2 40       		.byte	0x40
 1372 01a3 0C       		.uleb128 0xc
 1373 01a4 01       		.uleb128 0x1
 1374 01a5 51       		.byte	0x51
 1375 01a6 01       		.uleb128 0x1
 1376 01a7 32       		.byte	0x32
 1377 01a8 00       		.byte	0
 1378 01a9 0B       		.uleb128 0xb
 1379 01aa 3E000000 		.4byte	.LVL2
 1380 01ae F3050000 		.4byte	0x5f3
 1381 01b2 0C       		.uleb128 0xc
 1382 01b3 01       		.uleb128 0x1
 1383 01b4 50       		.byte	0x50
 1384 01b5 01       		.uleb128 0x1
 1385 01b6 40       		.byte	0x40
 1386 01b7 00       		.byte	0
 1387 01b8 00       		.byte	0
 1388 01b9 00       		.byte	0
 1389 01ba 00       		.byte	0
 1390 01bb 11       		.uleb128 0x11
 1391 01bc FC000000 		.4byte	0xfc
 1392 01c0 00000000 		.4byte	.LFB2
 1393 01c4 E4000000 		.4byte	.LFE2-.LFB2
 1394 01c8 01       		.uleb128 0x1
 1395 01c9 9C       		.byte	0x9c
 1396 01ca 11020000 		.4byte	0x211
 1397 01ce 0F       		.uleb128 0xf
 1398 01cf 08010000 		.4byte	0x108
 1399 01d3 5A000000 		.4byte	.LLST3
 1400 01d7 0F       		.uleb128 0xf
 1401 01d8 13010000 		.4byte	0x113
 1402 01dc 7A000000 		.4byte	.LLST4
 1403 01e0 0F       		.uleb128 0xf
 1404 01e1 1E010000 		.4byte	0x11e
 1405 01e5 AA000000 		.4byte	.LLST5
 1406 01e9 10       		.uleb128 0x10
 1407 01ea 0A000000 		.4byte	.LVL10
 1408 01ee E8050000 		.4byte	0x5e8
 1409 01f2 01020000 		.4byte	0x201
 1410 01f6 0C       		.uleb128 0xc
 1411 01f7 01       		.uleb128 0x1
 1412 01f8 50       		.byte	0x50
 1413 01f9 01       		.uleb128 0x1
 1414 01fa 40       		.byte	0x40
 1415 01fb 0C       		.uleb128 0xc
 1416 01fc 01       		.uleb128 0x1
 1417 01fd 51       		.byte	0x51
 1418 01fe 01       		.uleb128 0x1
 1419 01ff 32       		.byte	0x32
 1420 0200 00       		.byte	0
 1421 0201 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 43


 1422 0202 12000000 		.4byte	.LVL11
 1423 0206 F3050000 		.4byte	0x5f3
 1424 020a 0C       		.uleb128 0xc
 1425 020b 01       		.uleb128 0x1
 1426 020c 50       		.byte	0x50
 1427 020d 01       		.uleb128 0x1
 1428 020e 40       		.byte	0x40
 1429 020f 00       		.byte	0
 1430 0210 00       		.byte	0
 1431 0211 11       		.uleb128 0x11
 1432 0212 F3000000 		.4byte	0xf3
 1433 0216 00000000 		.4byte	.LFB3
 1434 021a 30000000 		.4byte	.LFE3-.LFB3
 1435 021e 01       		.uleb128 0x1
 1436 021f 9C       		.byte	0x9c
 1437 0220 34020000 		.4byte	0x234
 1438 0224 0B       		.uleb128 0xb
 1439 0225 24000000 		.4byte	.LVL19
 1440 0229 DD050000 		.4byte	0x5dd
 1441 022d 0C       		.uleb128 0xc
 1442 022e 01       		.uleb128 0x1
 1443 022f 50       		.byte	0x50
 1444 0230 01       		.uleb128 0x1
 1445 0231 3A       		.byte	0x3a
 1446 0232 00       		.byte	0
 1447 0233 00       		.byte	0
 1448 0234 12       		.uleb128 0x12
 1449 0235 2B030000 		.4byte	.LASF25
 1450 0239 01       		.byte	0x1
 1451 023a 6D01     		.2byte	0x16d
 1452 023c 00000000 		.4byte	.LFB4
 1453 0240 10000000 		.4byte	.LFE4-.LFB4
 1454 0244 01       		.uleb128 0x1
 1455 0245 9C       		.byte	0x9c
 1456 0246 12       		.uleb128 0x12
 1457 0247 49000000 		.4byte	.LASF26
 1458 024b 01       		.byte	0x1
 1459 024c 8701     		.2byte	0x187
 1460 024e 00000000 		.4byte	.LFB5
 1461 0252 14000000 		.4byte	.LFE5-.LFB5
 1462 0256 01       		.uleb128 0x1
 1463 0257 9C       		.byte	0x9c
 1464 0258 12       		.uleb128 0x12
 1465 0259 15020000 		.4byte	.LASF27
 1466 025d 01       		.byte	0x1
 1467 025e A001     		.2byte	0x1a0
 1468 0260 00000000 		.4byte	.LFB6
 1469 0264 14000000 		.4byte	.LFE6-.LFB6
 1470 0268 01       		.uleb128 0x1
 1471 0269 9C       		.byte	0x9c
 1472 026a 13       		.uleb128 0x13
 1473 026b 69020000 		.4byte	.LASF28
 1474 026f 01       		.byte	0x1
 1475 0270 C201     		.2byte	0x1c2
 1476 0272 8A000000 		.4byte	0x8a
 1477 0276 00000000 		.4byte	.LFB7
 1478 027a 30000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 44


 1479 027e 01       		.uleb128 0x1
 1480 027f 9C       		.byte	0x9c
 1481 0280 A5020000 		.4byte	0x2a5
 1482 0284 14       		.uleb128 0x14
 1483 0285 95010000 		.4byte	.LASF30
 1484 0289 01       		.byte	0x1
 1485 028a C201     		.2byte	0x1c2
 1486 028c 8A000000 		.4byte	0x8a
 1487 0290 C0000000 		.4byte	.LLST6
 1488 0294 15       		.uleb128 0x15
 1489 0295 02010000 		.4byte	.LASF32
 1490 0299 01       		.byte	0x1
 1491 029a C401     		.2byte	0x1c4
 1492 029c 8A000000 		.4byte	0x8a
 1493 02a0 EC000000 		.4byte	.LLST7
 1494 02a4 00       		.byte	0
 1495 02a5 13       		.uleb128 0x13
 1496 02a6 8E030000 		.4byte	.LASF29
 1497 02aa 01       		.byte	0x1
 1498 02ab F801     		.2byte	0x1f8
 1499 02ad 96000000 		.4byte	0x96
 1500 02b1 00000000 		.4byte	.LFB8
 1501 02b5 1C000000 		.4byte	.LFE8-.LFB8
 1502 02b9 01       		.uleb128 0x1
 1503 02ba 9C       		.byte	0x9c
 1504 02bb EF020000 		.4byte	0x2ef
 1505 02bf 14       		.uleb128 0x14
 1506 02c0 3A030000 		.4byte	.LASF31
 1507 02c4 01       		.byte	0x1
 1508 02c5 F801     		.2byte	0x1f8
 1509 02c7 8A000000 		.4byte	0x8a
 1510 02cb 31010000 		.4byte	.LLST8
 1511 02cf 15       		.uleb128 0x15
 1512 02d0 87030000 		.4byte	.LASF33
 1513 02d4 01       		.byte	0x1
 1514 02d5 FA01     		.2byte	0x1fa
 1515 02d7 8A000000 		.4byte	0x8a
 1516 02db 6B010000 		.4byte	.LLST9
 1517 02df 0B       		.uleb128 0xb
 1518 02e0 14000000 		.4byte	.LVL35
 1519 02e4 FE050000 		.4byte	0x5fe
 1520 02e8 0C       		.uleb128 0xc
 1521 02e9 01       		.uleb128 0x1
 1522 02ea 50       		.byte	0x50
 1523 02eb 01       		.uleb128 0x1
 1524 02ec 30       		.byte	0x30
 1525 02ed 00       		.byte	0
 1526 02ee 00       		.byte	0
 1527 02ef 16       		.uleb128 0x16
 1528 02f0 94020000 		.4byte	.LASF35
 1529 02f4 01       		.byte	0x1
 1530 02f5 2502     		.2byte	0x225
 1531 02f7 00000000 		.4byte	.LFB9
 1532 02fb 10000000 		.4byte	.LFE9-.LFB9
 1533 02ff 01       		.uleb128 0x1
 1534 0300 9C       		.byte	0x9c
 1535 0301 16030000 		.4byte	0x316
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 45


 1536 0305 14       		.uleb128 0x14
 1537 0306 84010000 		.4byte	.LASF36
 1538 030a 01       		.byte	0x1
 1539 030b 2502     		.2byte	0x225
 1540 030d 8A000000 		.4byte	0x8a
 1541 0311 84010000 		.4byte	.LLST10
 1542 0315 00       		.byte	0
 1543 0316 16       		.uleb128 0x16
 1544 0317 F1020000 		.4byte	.LASF37
 1545 031b 01       		.byte	0x1
 1546 031c 5102     		.2byte	0x251
 1547 031e 00000000 		.4byte	.LFB10
 1548 0322 1C000000 		.4byte	.LFE10-.LFB10
 1549 0326 01       		.uleb128 0x1
 1550 0327 9C       		.byte	0x9c
 1551 0328 3D030000 		.4byte	0x33d
 1552 032c 14       		.uleb128 0x14
 1553 032d 43020000 		.4byte	.LASF38
 1554 0331 01       		.byte	0x1
 1555 0332 5102     		.2byte	0x251
 1556 0334 8A000000 		.4byte	0x8a
 1557 0338 A5010000 		.4byte	.LLST11
 1558 033c 00       		.byte	0
 1559 033d 16       		.uleb128 0x16
 1560 033e 58020000 		.4byte	.LASF39
 1561 0342 01       		.byte	0x1
 1562 0343 6602     		.2byte	0x266
 1563 0345 00000000 		.4byte	.LFB11
 1564 0349 18000000 		.4byte	.LFE11-.LFB11
 1565 034d 01       		.uleb128 0x1
 1566 034e 9C       		.byte	0x9c
 1567 034f 64030000 		.4byte	0x364
 1568 0353 14       		.uleb128 0x14
 1569 0354 D3020000 		.4byte	.LASF40
 1570 0358 01       		.byte	0x1
 1571 0359 6602     		.2byte	0x266
 1572 035b 8A000000 		.4byte	0x8a
 1573 035f C6010000 		.4byte	.LLST12
 1574 0363 00       		.byte	0
 1575 0364 16       		.uleb128 0x16
 1576 0365 9D010000 		.4byte	.LASF41
 1577 0369 01       		.byte	0x1
 1578 036a 7E02     		.2byte	0x27e
 1579 036c 00000000 		.4byte	.LFB12
 1580 0370 10000000 		.4byte	.LFE12-.LFB12
 1581 0374 01       		.uleb128 0x1
 1582 0375 9C       		.byte	0x9c
 1583 0376 8B030000 		.4byte	0x38b
 1584 037a 14       		.uleb128 0x14
 1585 037b 84010000 		.4byte	.LASF36
 1586 037f 01       		.byte	0x1
 1587 0380 7E02     		.2byte	0x27e
 1588 0382 8A000000 		.4byte	0x8a
 1589 0386 E7010000 		.4byte	.LLST13
 1590 038a 00       		.byte	0
 1591 038b 16       		.uleb128 0x16
 1592 038c D4010000 		.4byte	.LASF42
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 46


 1593 0390 01       		.byte	0x1
 1594 0391 9502     		.2byte	0x295
 1595 0393 00000000 		.4byte	.LFB13
 1596 0397 10000000 		.4byte	.LFE13-.LFB13
 1597 039b 01       		.uleb128 0x1
 1598 039c 9C       		.byte	0x9c
 1599 039d B2030000 		.4byte	0x3b2
 1600 03a1 14       		.uleb128 0x14
 1601 03a2 84010000 		.4byte	.LASF36
 1602 03a6 01       		.byte	0x1
 1603 03a7 9502     		.2byte	0x295
 1604 03a9 8A000000 		.4byte	0x8a
 1605 03ad 08020000 		.4byte	.LLST14
 1606 03b1 00       		.byte	0
 1607 03b2 16       		.uleb128 0x16
 1608 03b3 79030000 		.4byte	.LASF43
 1609 03b7 01       		.byte	0x1
 1610 03b8 B102     		.2byte	0x2b1
 1611 03ba 00000000 		.4byte	.LFB14
 1612 03be 1C000000 		.4byte	.LFE14-.LFB14
 1613 03c2 01       		.uleb128 0x1
 1614 03c3 9C       		.byte	0x9c
 1615 03c4 F8030000 		.4byte	0x3f8
 1616 03c8 14       		.uleb128 0x14
 1617 03c9 3A030000 		.4byte	.LASF31
 1618 03cd 01       		.byte	0x1
 1619 03ce B102     		.2byte	0x2b1
 1620 03d0 8A000000 		.4byte	0x8a
 1621 03d4 29020000 		.4byte	.LLST15
 1622 03d8 14       		.uleb128 0x14
 1623 03d9 57030000 		.4byte	.LASF44
 1624 03dd 01       		.byte	0x1
 1625 03de B102     		.2byte	0x2b1
 1626 03e0 96000000 		.4byte	0x96
 1627 03e4 55020000 		.4byte	.LLST16
 1628 03e8 0B       		.uleb128 0xb
 1629 03e9 10000000 		.4byte	.LVL48
 1630 03ed FE050000 		.4byte	0x5fe
 1631 03f1 0C       		.uleb128 0xc
 1632 03f2 01       		.uleb128 0x1
 1633 03f3 50       		.byte	0x50
 1634 03f4 01       		.uleb128 0x1
 1635 03f5 30       		.byte	0x30
 1636 03f6 00       		.byte	0
 1637 03f7 00       		.byte	0
 1638 03f8 16       		.uleb128 0x16
 1639 03f9 C1020000 		.4byte	.LASF45
 1640 03fd 01       		.byte	0x1
 1641 03fe D302     		.2byte	0x2d3
 1642 0400 00000000 		.4byte	.LFB15
 1643 0404 1C000000 		.4byte	.LFE15-.LFB15
 1644 0408 01       		.uleb128 0x1
 1645 0409 9C       		.byte	0x9c
 1646 040a 3E040000 		.4byte	0x43e
 1647 040e 14       		.uleb128 0x14
 1648 040f 3A030000 		.4byte	.LASF31
 1649 0413 01       		.byte	0x1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 47


 1650 0414 D302     		.2byte	0x2d3
 1651 0416 8A000000 		.4byte	0x8a
 1652 041a 76020000 		.4byte	.LLST17
 1653 041e 14       		.uleb128 0x14
 1654 041f 07000000 		.4byte	.LASF46
 1655 0423 01       		.byte	0x1
 1656 0424 D302     		.2byte	0x2d3
 1657 0426 A2000000 		.4byte	0xa2
 1658 042a A2020000 		.4byte	.LLST18
 1659 042e 0B       		.uleb128 0xb
 1660 042f 10000000 		.4byte	.LVL52
 1661 0433 FE050000 		.4byte	0x5fe
 1662 0437 0C       		.uleb128 0xc
 1663 0438 01       		.uleb128 0x1
 1664 0439 50       		.byte	0x50
 1665 043a 01       		.uleb128 0x1
 1666 043b 30       		.byte	0x30
 1667 043c 00       		.byte	0
 1668 043d 00       		.byte	0
 1669 043e 17       		.uleb128 0x17
 1670 043f DD020000 		.4byte	.LASF47
 1671 0443 01       		.byte	0x1
 1672 0444 F402     		.2byte	0x2f4
 1673 0446 96000000 		.4byte	0x96
 1674 044a 00000000 		.4byte	.LFB16
 1675 044e 58000000 		.4byte	.LFE16-.LFB16
 1676 0452 01       		.uleb128 0x1
 1677 0453 9C       		.byte	0x9c
 1678 0454 98040000 		.4byte	0x498
 1679 0458 14       		.uleb128 0x14
 1680 0459 3A030000 		.4byte	.LASF31
 1681 045d 01       		.byte	0x1
 1682 045e F402     		.2byte	0x2f4
 1683 0460 8A000000 		.4byte	0x8a
 1684 0464 D2020000 		.4byte	.LLST19
 1685 0468 14       		.uleb128 0x14
 1686 0469 5E030000 		.4byte	.LASF48
 1687 046d 01       		.byte	0x1
 1688 046e F402     		.2byte	0x2f4
 1689 0470 96000000 		.4byte	0x96
 1690 0474 2D030000 		.4byte	.LLST20
 1691 0478 15       		.uleb128 0x15
 1692 0479 25020000 		.4byte	.LASF49
 1693 047d 01       		.byte	0x1
 1694 047e F602     		.2byte	0x2f6
 1695 0480 96000000 		.4byte	0x96
 1696 0484 7D030000 		.4byte	.LLST21
 1697 0488 0B       		.uleb128 0xb
 1698 0489 4A000000 		.4byte	.LVL68
 1699 048d FE050000 		.4byte	0x5fe
 1700 0491 0C       		.uleb128 0xc
 1701 0492 01       		.uleb128 0x1
 1702 0493 50       		.byte	0x50
 1703 0494 01       		.uleb128 0x1
 1704 0495 30       		.byte	0x30
 1705 0496 00       		.byte	0
 1706 0497 00       		.byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 48


 1707 0498 17       		.uleb128 0x17
 1708 0499 22010000 		.4byte	.LASF50
 1709 049d 01       		.byte	0x1
 1710 049e 2A03     		.2byte	0x32a
 1711 04a0 A2000000 		.4byte	0xa2
 1712 04a4 00000000 		.4byte	.LFB17
 1713 04a8 40000000 		.4byte	.LFE17-.LFB17
 1714 04ac 01       		.uleb128 0x1
 1715 04ad 9C       		.byte	0x9c
 1716 04ae F2040000 		.4byte	0x4f2
 1717 04b2 14       		.uleb128 0x14
 1718 04b3 3A030000 		.4byte	.LASF31
 1719 04b7 01       		.byte	0x1
 1720 04b8 2A03     		.2byte	0x32a
 1721 04ba 8A000000 		.4byte	0x8a
 1722 04be 98030000 		.4byte	.LLST22
 1723 04c2 14       		.uleb128 0x14
 1724 04c3 5E030000 		.4byte	.LASF48
 1725 04c7 01       		.byte	0x1
 1726 04c8 2A03     		.2byte	0x32a
 1727 04ca 96000000 		.4byte	0x96
 1728 04ce C4030000 		.4byte	.LLST23
 1729 04d2 15       		.uleb128 0x15
 1730 04d3 BB010000 		.4byte	.LASF51
 1731 04d7 01       		.byte	0x1
 1732 04d8 2C03     		.2byte	0x32c
 1733 04da C1000000 		.4byte	0xc1
 1734 04de F0030000 		.4byte	.LLST24
 1735 04e2 0B       		.uleb128 0xb
 1736 04e3 10000000 		.4byte	.LVL71
 1737 04e7 FE050000 		.4byte	0x5fe
 1738 04eb 0C       		.uleb128 0xc
 1739 04ec 01       		.uleb128 0x1
 1740 04ed 50       		.byte	0x50
 1741 04ee 01       		.uleb128 0x1
 1742 04ef 30       		.byte	0x30
 1743 04f0 00       		.byte	0
 1744 04f1 00       		.byte	0
 1745 04f2 17       		.uleb128 0x17
 1746 04f3 16000000 		.4byte	.LASF52
 1747 04f7 01       		.byte	0x1
 1748 04f8 5703     		.2byte	0x357
 1749 04fa AE000000 		.4byte	0xae
 1750 04fe 00000000 		.4byte	.LFB18
 1751 0502 48000000 		.4byte	.LFE18-.LFB18
 1752 0506 01       		.uleb128 0x1
 1753 0507 9C       		.byte	0x9c
 1754 0508 4C050000 		.4byte	0x54c
 1755 050c 14       		.uleb128 0x14
 1756 050d 3A030000 		.4byte	.LASF31
 1757 0511 01       		.byte	0x1
 1758 0512 5703     		.2byte	0x357
 1759 0514 8A000000 		.4byte	0x8a
 1760 0518 1C040000 		.4byte	.LLST25
 1761 051c 14       		.uleb128 0x14
 1762 051d 5E030000 		.4byte	.LASF48
 1763 0521 01       		.byte	0x1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 49


 1764 0522 5703     		.2byte	0x357
 1765 0524 96000000 		.4byte	0x96
 1766 0528 48040000 		.4byte	.LLST26
 1767 052c 15       		.uleb128 0x15
 1768 052d E3010000 		.4byte	.LASF53
 1769 0531 01       		.byte	0x1
 1770 0532 5903     		.2byte	0x359
 1771 0534 AE000000 		.4byte	0xae
 1772 0538 74040000 		.4byte	.LLST27
 1773 053c 0B       		.uleb128 0xb
 1774 053d 10000000 		.4byte	.LVL80
 1775 0541 FE050000 		.4byte	0x5fe
 1776 0545 0C       		.uleb128 0xc
 1777 0546 01       		.uleb128 0x1
 1778 0547 50       		.byte	0x50
 1779 0548 01       		.uleb128 0x1
 1780 0549 30       		.byte	0x30
 1781 054a 00       		.byte	0
 1782 054b 00       		.byte	0
 1783 054c 18       		.uleb128 0x18
 1784 054d 5C050000 		.4byte	0x55c
 1785 0551 5C050000 		.4byte	0x55c
 1786 0555 19       		.uleb128 0x19
 1787 0556 EC000000 		.4byte	0xec
 1788 055a 00       		.byte	0
 1789 055b 00       		.byte	0
 1790 055c 1A       		.uleb128 0x1a
 1791 055d 8A000000 		.4byte	0x8a
 1792 0561 1B       		.uleb128 0x1b
 1793 0562 44030000 		.4byte	.LASF54
 1794 0566 01       		.byte	0x1
 1795 0567 21       		.byte	0x21
 1796 0568 71050000 		.4byte	0x571
 1797 056c 04       		.byte	0x4
 1798 056d 00       		.byte	0
 1799 056e 00       		.byte	0
 1800 056f 00       		.byte	0
 1801 0570 00       		.byte	0
 1802 0571 1A       		.uleb128 0x1a
 1803 0572 4C050000 		.4byte	0x54c
 1804 0576 1C       		.uleb128 0x1c
 1805 0577 89010000 		.4byte	.LASF55
 1806 057b 01       		.byte	0x1
 1807 057c 18       		.byte	0x18
 1808 057d 72000000 		.4byte	0x72
 1809 0581 05       		.uleb128 0x5
 1810 0582 03       		.byte	0x3
 1811 0583 00000000 		.4byte	ADC_initVar
 1812 0587 18       		.uleb128 0x18
 1813 0588 97050000 		.4byte	0x597
 1814 058c 97050000 		.4byte	0x597
 1815 0590 19       		.uleb128 0x19
 1816 0591 EC000000 		.4byte	0xec
 1817 0595 00       		.byte	0
 1818 0596 00       		.byte	0
 1819 0597 05       		.uleb128 0x5
 1820 0598 96000000 		.4byte	0x96
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 50


 1821 059c 1C       		.uleb128 0x1c
 1822 059d 16030000 		.4byte	.LASF56
 1823 05a1 01       		.byte	0x1
 1824 05a2 19       		.byte	0x19
 1825 05a3 AD050000 		.4byte	0x5ad
 1826 05a7 05       		.uleb128 0x5
 1827 05a8 03       		.byte	0x3
 1828 05a9 00000000 		.4byte	ADC_offset
 1829 05ad 05       		.uleb128 0x5
 1830 05ae 87050000 		.4byte	0x587
 1831 05b2 18       		.uleb128 0x18
 1832 05b3 C2050000 		.4byte	0x5c2
 1833 05b7 C2050000 		.4byte	0x5c2
 1834 05bb 19       		.uleb128 0x19
 1835 05bc EC000000 		.4byte	0xec
 1836 05c0 00       		.byte	0
 1837 05c1 00       		.byte	0
 1838 05c2 05       		.uleb128 0x5
 1839 05c3 A2000000 		.4byte	0xa2
 1840 05c7 1C       		.uleb128 0x1c
 1841 05c8 36010000 		.4byte	.LASF57
 1842 05cc 01       		.byte	0x1
 1843 05cd 1A       		.byte	0x1a
 1844 05ce D8050000 		.4byte	0x5d8
 1845 05d2 05       		.uleb128 0x5
 1846 05d3 03       		.byte	0x3
 1847 05d4 00000000 		.4byte	ADC_countsPer10Volt
 1848 05d8 05       		.uleb128 0x5
 1849 05d9 B2050000 		.4byte	0x5b2
 1850 05dd 1D       		.uleb128 0x1d
 1851 05de 50010000 		.4byte	.LASF58
 1852 05e2 50010000 		.4byte	.LASF58
 1853 05e6 03       		.byte	0x3
 1854 05e7 DA       		.byte	0xda
 1855 05e8 1D       		.uleb128 0x1d
 1856 05e9 83020000 		.4byte	.LASF59
 1857 05ed 83020000 		.4byte	.LASF59
 1858 05f1 03       		.byte	0x3
 1859 05f2 C0       		.byte	0xc0
 1860 05f3 1D       		.uleb128 0x1d
 1861 05f4 06020000 		.4byte	.LASF60
 1862 05f8 06020000 		.4byte	.LASF60
 1863 05fc 03       		.byte	0x3
 1864 05fd BD       		.byte	0xbd
 1865 05fe 1D       		.uleb128 0x1d
 1866 05ff 01030000 		.4byte	.LASF61
 1867 0603 01030000 		.4byte	.LASF61
 1868 0607 03       		.byte	0x3
 1869 0608 E7       		.byte	0xe7
 1870 0609 00       		.byte	0
 1871              		.section	.debug_abbrev,"",%progbits
 1872              	.Ldebug_abbrev0:
 1873 0000 01       		.uleb128 0x1
 1874 0001 11       		.uleb128 0x11
 1875 0002 01       		.byte	0x1
 1876 0003 25       		.uleb128 0x25
 1877 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 51


 1878 0005 13       		.uleb128 0x13
 1879 0006 0B       		.uleb128 0xb
 1880 0007 03       		.uleb128 0x3
 1881 0008 0E       		.uleb128 0xe
 1882 0009 1B       		.uleb128 0x1b
 1883 000a 0E       		.uleb128 0xe
 1884 000b 55       		.uleb128 0x55
 1885 000c 17       		.uleb128 0x17
 1886 000d 11       		.uleb128 0x11
 1887 000e 01       		.uleb128 0x1
 1888 000f 10       		.uleb128 0x10
 1889 0010 17       		.uleb128 0x17
 1890 0011 00       		.byte	0
 1891 0012 00       		.byte	0
 1892 0013 02       		.uleb128 0x2
 1893 0014 24       		.uleb128 0x24
 1894 0015 00       		.byte	0
 1895 0016 0B       		.uleb128 0xb
 1896 0017 0B       		.uleb128 0xb
 1897 0018 3E       		.uleb128 0x3e
 1898 0019 0B       		.uleb128 0xb
 1899 001a 03       		.uleb128 0x3
 1900 001b 0E       		.uleb128 0xe
 1901 001c 00       		.byte	0
 1902 001d 00       		.byte	0
 1903 001e 03       		.uleb128 0x3
 1904 001f 24       		.uleb128 0x24
 1905 0020 00       		.byte	0
 1906 0021 0B       		.uleb128 0xb
 1907 0022 0B       		.uleb128 0xb
 1908 0023 3E       		.uleb128 0x3e
 1909 0024 0B       		.uleb128 0xb
 1910 0025 03       		.uleb128 0x3
 1911 0026 08       		.uleb128 0x8
 1912 0027 00       		.byte	0
 1913 0028 00       		.byte	0
 1914 0029 04       		.uleb128 0x4
 1915 002a 16       		.uleb128 0x16
 1916 002b 00       		.byte	0
 1917 002c 03       		.uleb128 0x3
 1918 002d 0E       		.uleb128 0xe
 1919 002e 3A       		.uleb128 0x3a
 1920 002f 0B       		.uleb128 0xb
 1921 0030 3B       		.uleb128 0x3b
 1922 0031 05       		.uleb128 0x5
 1923 0032 49       		.uleb128 0x49
 1924 0033 13       		.uleb128 0x13
 1925 0034 00       		.byte	0
 1926 0035 00       		.byte	0
 1927 0036 05       		.uleb128 0x5
 1928 0037 35       		.uleb128 0x35
 1929 0038 00       		.byte	0
 1930 0039 49       		.uleb128 0x49
 1931 003a 13       		.uleb128 0x13
 1932 003b 00       		.byte	0
 1933 003c 00       		.byte	0
 1934 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 52


 1935 003e 2E       		.uleb128 0x2e
 1936 003f 00       		.byte	0
 1937 0040 3F       		.uleb128 0x3f
 1938 0041 19       		.uleb128 0x19
 1939 0042 03       		.uleb128 0x3
 1940 0043 0E       		.uleb128 0xe
 1941 0044 3A       		.uleb128 0x3a
 1942 0045 0B       		.uleb128 0xb
 1943 0046 3B       		.uleb128 0x3b
 1944 0047 05       		.uleb128 0x5
 1945 0048 27       		.uleb128 0x27
 1946 0049 19       		.uleb128 0x19
 1947 004a 20       		.uleb128 0x20
 1948 004b 0B       		.uleb128 0xb
 1949 004c 00       		.byte	0
 1950 004d 00       		.byte	0
 1951 004e 07       		.uleb128 0x7
 1952 004f 2E       		.uleb128 0x2e
 1953 0050 01       		.byte	0x1
 1954 0051 3F       		.uleb128 0x3f
 1955 0052 19       		.uleb128 0x19
 1956 0053 03       		.uleb128 0x3
 1957 0054 0E       		.uleb128 0xe
 1958 0055 3A       		.uleb128 0x3a
 1959 0056 0B       		.uleb128 0xb
 1960 0057 3B       		.uleb128 0x3b
 1961 0058 0B       		.uleb128 0xb
 1962 0059 27       		.uleb128 0x27
 1963 005a 19       		.uleb128 0x19
 1964 005b 20       		.uleb128 0x20
 1965 005c 0B       		.uleb128 0xb
 1966 005d 01       		.uleb128 0x1
 1967 005e 13       		.uleb128 0x13
 1968 005f 00       		.byte	0
 1969 0060 00       		.byte	0
 1970 0061 08       		.uleb128 0x8
 1971 0062 34       		.uleb128 0x34
 1972 0063 00       		.byte	0
 1973 0064 03       		.uleb128 0x3
 1974 0065 0E       		.uleb128 0xe
 1975 0066 3A       		.uleb128 0x3a
 1976 0067 0B       		.uleb128 0xb
 1977 0068 3B       		.uleb128 0x3b
 1978 0069 0B       		.uleb128 0xb
 1979 006a 49       		.uleb128 0x49
 1980 006b 13       		.uleb128 0x13
 1981 006c 00       		.byte	0
 1982 006d 00       		.byte	0
 1983 006e 09       		.uleb128 0x9
 1984 006f 2E       		.uleb128 0x2e
 1985 0070 01       		.byte	0x1
 1986 0071 3F       		.uleb128 0x3f
 1987 0072 19       		.uleb128 0x19
 1988 0073 03       		.uleb128 0x3
 1989 0074 0E       		.uleb128 0xe
 1990 0075 3A       		.uleb128 0x3a
 1991 0076 0B       		.uleb128 0xb
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 53


 1992 0077 3B       		.uleb128 0x3b
 1993 0078 0B       		.uleb128 0xb
 1994 0079 27       		.uleb128 0x27
 1995 007a 19       		.uleb128 0x19
 1996 007b 11       		.uleb128 0x11
 1997 007c 01       		.uleb128 0x1
 1998 007d 12       		.uleb128 0x12
 1999 007e 06       		.uleb128 0x6
 2000 007f 40       		.uleb128 0x40
 2001 0080 18       		.uleb128 0x18
 2002 0081 9742     		.uleb128 0x2117
 2003 0083 19       		.uleb128 0x19
 2004 0084 01       		.uleb128 0x1
 2005 0085 13       		.uleb128 0x13
 2006 0086 00       		.byte	0
 2007 0087 00       		.byte	0
 2008 0088 0A       		.uleb128 0xa
 2009 0089 1D       		.uleb128 0x1d
 2010 008a 01       		.byte	0x1
 2011 008b 31       		.uleb128 0x31
 2012 008c 13       		.uleb128 0x13
 2013 008d 11       		.uleb128 0x11
 2014 008e 01       		.uleb128 0x1
 2015 008f 12       		.uleb128 0x12
 2016 0090 06       		.uleb128 0x6
 2017 0091 58       		.uleb128 0x58
 2018 0092 0B       		.uleb128 0xb
 2019 0093 59       		.uleb128 0x59
 2020 0094 0B       		.uleb128 0xb
 2021 0095 01       		.uleb128 0x1
 2022 0096 13       		.uleb128 0x13
 2023 0097 00       		.byte	0
 2024 0098 00       		.byte	0
 2025 0099 0B       		.uleb128 0xb
 2026 009a 898201   		.uleb128 0x4109
 2027 009d 01       		.byte	0x1
 2028 009e 11       		.uleb128 0x11
 2029 009f 01       		.uleb128 0x1
 2030 00a0 31       		.uleb128 0x31
 2031 00a1 13       		.uleb128 0x13
 2032 00a2 00       		.byte	0
 2033 00a3 00       		.byte	0
 2034 00a4 0C       		.uleb128 0xc
 2035 00a5 8A8201   		.uleb128 0x410a
 2036 00a8 00       		.byte	0
 2037 00a9 02       		.uleb128 0x2
 2038 00aa 18       		.uleb128 0x18
 2039 00ab 9142     		.uleb128 0x2111
 2040 00ad 18       		.uleb128 0x18
 2041 00ae 00       		.byte	0
 2042 00af 00       		.byte	0
 2043 00b0 0D       		.uleb128 0xd
 2044 00b1 1D       		.uleb128 0x1d
 2045 00b2 01       		.byte	0x1
 2046 00b3 31       		.uleb128 0x31
 2047 00b4 13       		.uleb128 0x13
 2048 00b5 52       		.uleb128 0x52
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 54


 2049 00b6 01       		.uleb128 0x1
 2050 00b7 55       		.uleb128 0x55
 2051 00b8 17       		.uleb128 0x17
 2052 00b9 58       		.uleb128 0x58
 2053 00ba 0B       		.uleb128 0xb
 2054 00bb 59       		.uleb128 0x59
 2055 00bc 0B       		.uleb128 0xb
 2056 00bd 00       		.byte	0
 2057 00be 00       		.byte	0
 2058 00bf 0E       		.uleb128 0xe
 2059 00c0 0B       		.uleb128 0xb
 2060 00c1 01       		.byte	0x1
 2061 00c2 55       		.uleb128 0x55
 2062 00c3 17       		.uleb128 0x17
 2063 00c4 00       		.byte	0
 2064 00c5 00       		.byte	0
 2065 00c6 0F       		.uleb128 0xf
 2066 00c7 34       		.uleb128 0x34
 2067 00c8 00       		.byte	0
 2068 00c9 31       		.uleb128 0x31
 2069 00ca 13       		.uleb128 0x13
 2070 00cb 02       		.uleb128 0x2
 2071 00cc 17       		.uleb128 0x17
 2072 00cd 00       		.byte	0
 2073 00ce 00       		.byte	0
 2074 00cf 10       		.uleb128 0x10
 2075 00d0 898201   		.uleb128 0x4109
 2076 00d3 01       		.byte	0x1
 2077 00d4 11       		.uleb128 0x11
 2078 00d5 01       		.uleb128 0x1
 2079 00d6 31       		.uleb128 0x31
 2080 00d7 13       		.uleb128 0x13
 2081 00d8 01       		.uleb128 0x1
 2082 00d9 13       		.uleb128 0x13
 2083 00da 00       		.byte	0
 2084 00db 00       		.byte	0
 2085 00dc 11       		.uleb128 0x11
 2086 00dd 2E       		.uleb128 0x2e
 2087 00de 01       		.byte	0x1
 2088 00df 31       		.uleb128 0x31
 2089 00e0 13       		.uleb128 0x13
 2090 00e1 11       		.uleb128 0x11
 2091 00e2 01       		.uleb128 0x1
 2092 00e3 12       		.uleb128 0x12
 2093 00e4 06       		.uleb128 0x6
 2094 00e5 40       		.uleb128 0x40
 2095 00e6 18       		.uleb128 0x18
 2096 00e7 9742     		.uleb128 0x2117
 2097 00e9 19       		.uleb128 0x19
 2098 00ea 01       		.uleb128 0x1
 2099 00eb 13       		.uleb128 0x13
 2100 00ec 00       		.byte	0
 2101 00ed 00       		.byte	0
 2102 00ee 12       		.uleb128 0x12
 2103 00ef 2E       		.uleb128 0x2e
 2104 00f0 00       		.byte	0
 2105 00f1 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 55


 2106 00f2 19       		.uleb128 0x19
 2107 00f3 03       		.uleb128 0x3
 2108 00f4 0E       		.uleb128 0xe
 2109 00f5 3A       		.uleb128 0x3a
 2110 00f6 0B       		.uleb128 0xb
 2111 00f7 3B       		.uleb128 0x3b
 2112 00f8 05       		.uleb128 0x5
 2113 00f9 27       		.uleb128 0x27
 2114 00fa 19       		.uleb128 0x19
 2115 00fb 11       		.uleb128 0x11
 2116 00fc 01       		.uleb128 0x1
 2117 00fd 12       		.uleb128 0x12
 2118 00fe 06       		.uleb128 0x6
 2119 00ff 40       		.uleb128 0x40
 2120 0100 18       		.uleb128 0x18
 2121 0101 9742     		.uleb128 0x2117
 2122 0103 19       		.uleb128 0x19
 2123 0104 00       		.byte	0
 2124 0105 00       		.byte	0
 2125 0106 13       		.uleb128 0x13
 2126 0107 2E       		.uleb128 0x2e
 2127 0108 01       		.byte	0x1
 2128 0109 3F       		.uleb128 0x3f
 2129 010a 19       		.uleb128 0x19
 2130 010b 03       		.uleb128 0x3
 2131 010c 0E       		.uleb128 0xe
 2132 010d 3A       		.uleb128 0x3a
 2133 010e 0B       		.uleb128 0xb
 2134 010f 3B       		.uleb128 0x3b
 2135 0110 05       		.uleb128 0x5
 2136 0111 27       		.uleb128 0x27
 2137 0112 19       		.uleb128 0x19
 2138 0113 49       		.uleb128 0x49
 2139 0114 13       		.uleb128 0x13
 2140 0115 11       		.uleb128 0x11
 2141 0116 01       		.uleb128 0x1
 2142 0117 12       		.uleb128 0x12
 2143 0118 06       		.uleb128 0x6
 2144 0119 40       		.uleb128 0x40
 2145 011a 18       		.uleb128 0x18
 2146 011b 9742     		.uleb128 0x2117
 2147 011d 19       		.uleb128 0x19
 2148 011e 01       		.uleb128 0x1
 2149 011f 13       		.uleb128 0x13
 2150 0120 00       		.byte	0
 2151 0121 00       		.byte	0
 2152 0122 14       		.uleb128 0x14
 2153 0123 05       		.uleb128 0x5
 2154 0124 00       		.byte	0
 2155 0125 03       		.uleb128 0x3
 2156 0126 0E       		.uleb128 0xe
 2157 0127 3A       		.uleb128 0x3a
 2158 0128 0B       		.uleb128 0xb
 2159 0129 3B       		.uleb128 0x3b
 2160 012a 05       		.uleb128 0x5
 2161 012b 49       		.uleb128 0x49
 2162 012c 13       		.uleb128 0x13
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 56


 2163 012d 02       		.uleb128 0x2
 2164 012e 17       		.uleb128 0x17
 2165 012f 00       		.byte	0
 2166 0130 00       		.byte	0
 2167 0131 15       		.uleb128 0x15
 2168 0132 34       		.uleb128 0x34
 2169 0133 00       		.byte	0
 2170 0134 03       		.uleb128 0x3
 2171 0135 0E       		.uleb128 0xe
 2172 0136 3A       		.uleb128 0x3a
 2173 0137 0B       		.uleb128 0xb
 2174 0138 3B       		.uleb128 0x3b
 2175 0139 05       		.uleb128 0x5
 2176 013a 49       		.uleb128 0x49
 2177 013b 13       		.uleb128 0x13
 2178 013c 02       		.uleb128 0x2
 2179 013d 17       		.uleb128 0x17
 2180 013e 00       		.byte	0
 2181 013f 00       		.byte	0
 2182 0140 16       		.uleb128 0x16
 2183 0141 2E       		.uleb128 0x2e
 2184 0142 01       		.byte	0x1
 2185 0143 3F       		.uleb128 0x3f
 2186 0144 19       		.uleb128 0x19
 2187 0145 03       		.uleb128 0x3
 2188 0146 0E       		.uleb128 0xe
 2189 0147 3A       		.uleb128 0x3a
 2190 0148 0B       		.uleb128 0xb
 2191 0149 3B       		.uleb128 0x3b
 2192 014a 05       		.uleb128 0x5
 2193 014b 27       		.uleb128 0x27
 2194 014c 19       		.uleb128 0x19
 2195 014d 11       		.uleb128 0x11
 2196 014e 01       		.uleb128 0x1
 2197 014f 12       		.uleb128 0x12
 2198 0150 06       		.uleb128 0x6
 2199 0151 40       		.uleb128 0x40
 2200 0152 18       		.uleb128 0x18
 2201 0153 9742     		.uleb128 0x2117
 2202 0155 19       		.uleb128 0x19
 2203 0156 01       		.uleb128 0x1
 2204 0157 13       		.uleb128 0x13
 2205 0158 00       		.byte	0
 2206 0159 00       		.byte	0
 2207 015a 17       		.uleb128 0x17
 2208 015b 2E       		.uleb128 0x2e
 2209 015c 01       		.byte	0x1
 2210 015d 3F       		.uleb128 0x3f
 2211 015e 19       		.uleb128 0x19
 2212 015f 03       		.uleb128 0x3
 2213 0160 0E       		.uleb128 0xe
 2214 0161 3A       		.uleb128 0x3a
 2215 0162 0B       		.uleb128 0xb
 2216 0163 3B       		.uleb128 0x3b
 2217 0164 05       		.uleb128 0x5
 2218 0165 27       		.uleb128 0x27
 2219 0166 19       		.uleb128 0x19
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 57


 2220 0167 49       		.uleb128 0x49
 2221 0168 13       		.uleb128 0x13
 2222 0169 11       		.uleb128 0x11
 2223 016a 01       		.uleb128 0x1
 2224 016b 12       		.uleb128 0x12
 2225 016c 06       		.uleb128 0x6
 2226 016d 40       		.uleb128 0x40
 2227 016e 18       		.uleb128 0x18
 2228 016f 9642     		.uleb128 0x2116
 2229 0171 19       		.uleb128 0x19
 2230 0172 01       		.uleb128 0x1
 2231 0173 13       		.uleb128 0x13
 2232 0174 00       		.byte	0
 2233 0175 00       		.byte	0
 2234 0176 18       		.uleb128 0x18
 2235 0177 01       		.uleb128 0x1
 2236 0178 01       		.byte	0x1
 2237 0179 49       		.uleb128 0x49
 2238 017a 13       		.uleb128 0x13
 2239 017b 01       		.uleb128 0x1
 2240 017c 13       		.uleb128 0x13
 2241 017d 00       		.byte	0
 2242 017e 00       		.byte	0
 2243 017f 19       		.uleb128 0x19
 2244 0180 21       		.uleb128 0x21
 2245 0181 00       		.byte	0
 2246 0182 49       		.uleb128 0x49
 2247 0183 13       		.uleb128 0x13
 2248 0184 2F       		.uleb128 0x2f
 2249 0185 0B       		.uleb128 0xb
 2250 0186 00       		.byte	0
 2251 0187 00       		.byte	0
 2252 0188 1A       		.uleb128 0x1a
 2253 0189 26       		.uleb128 0x26
 2254 018a 00       		.byte	0
 2255 018b 49       		.uleb128 0x49
 2256 018c 13       		.uleb128 0x13
 2257 018d 00       		.byte	0
 2258 018e 00       		.byte	0
 2259 018f 1B       		.uleb128 0x1b
 2260 0190 34       		.uleb128 0x34
 2261 0191 00       		.byte	0
 2262 0192 03       		.uleb128 0x3
 2263 0193 0E       		.uleb128 0xe
 2264 0194 3A       		.uleb128 0x3a
 2265 0195 0B       		.uleb128 0xb
 2266 0196 3B       		.uleb128 0x3b
 2267 0197 0B       		.uleb128 0xb
 2268 0198 49       		.uleb128 0x49
 2269 0199 13       		.uleb128 0x13
 2270 019a 1C       		.uleb128 0x1c
 2271 019b 0A       		.uleb128 0xa
 2272 019c 00       		.byte	0
 2273 019d 00       		.byte	0
 2274 019e 1C       		.uleb128 0x1c
 2275 019f 34       		.uleb128 0x34
 2276 01a0 00       		.byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 58


 2277 01a1 03       		.uleb128 0x3
 2278 01a2 0E       		.uleb128 0xe
 2279 01a3 3A       		.uleb128 0x3a
 2280 01a4 0B       		.uleb128 0xb
 2281 01a5 3B       		.uleb128 0x3b
 2282 01a6 0B       		.uleb128 0xb
 2283 01a7 49       		.uleb128 0x49
 2284 01a8 13       		.uleb128 0x13
 2285 01a9 3F       		.uleb128 0x3f
 2286 01aa 19       		.uleb128 0x19
 2287 01ab 02       		.uleb128 0x2
 2288 01ac 18       		.uleb128 0x18
 2289 01ad 00       		.byte	0
 2290 01ae 00       		.byte	0
 2291 01af 1D       		.uleb128 0x1d
 2292 01b0 2E       		.uleb128 0x2e
 2293 01b1 00       		.byte	0
 2294 01b2 3F       		.uleb128 0x3f
 2295 01b3 19       		.uleb128 0x19
 2296 01b4 3C       		.uleb128 0x3c
 2297 01b5 19       		.uleb128 0x19
 2298 01b6 6E       		.uleb128 0x6e
 2299 01b7 0E       		.uleb128 0xe
 2300 01b8 03       		.uleb128 0x3
 2301 01b9 0E       		.uleb128 0xe
 2302 01ba 3A       		.uleb128 0x3a
 2303 01bb 0B       		.uleb128 0xb
 2304 01bc 3B       		.uleb128 0x3b
 2305 01bd 0B       		.uleb128 0xb
 2306 01be 00       		.byte	0
 2307 01bf 00       		.byte	0
 2308 01c0 00       		.byte	0
 2309              		.section	.debug_loc,"",%progbits
 2310              	.Ldebug_loc0:
 2311              	.LLST0:
 2312 0000 9C000000 		.4byte	.LVL6
 2313 0004 AC000000 		.4byte	.LVL8
 2314 0008 0200     		.2byte	0x2
 2315 000a 30       		.byte	0x30
 2316 000b 9F       		.byte	0x9f
 2317 000c 00000000 		.4byte	0
 2318 0010 00000000 		.4byte	0
 2319              	.LLST1:
 2320 0014 90000000 		.4byte	.LVL3
 2321 0018 96000000 		.4byte	.LVL4
 2322 001c 0700     		.2byte	0x7
 2323 001e 75       		.byte	0x75
 2324 001f 00       		.sleb128 0
 2325 0020 40       		.byte	0x40
 2326 0021 49       		.byte	0x49
 2327 0022 24       		.byte	0x24
 2328 0023 21       		.byte	0x21
 2329 0024 9F       		.byte	0x9f
 2330 0025 9A000000 		.4byte	.LVL5
 2331 0029 9C000000 		.4byte	.LVL6
 2332 002d 0100     		.2byte	0x1
 2333 002f 52       		.byte	0x52
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 59


 2334 0030 9C000000 		.4byte	.LVL6
 2335 0034 AC000000 		.4byte	.LVL8
 2336 0038 0200     		.2byte	0x2
 2337 003a 30       		.byte	0x30
 2338 003b 9F       		.byte	0x9f
 2339 003c 00000000 		.4byte	0
 2340 0040 00000000 		.4byte	0
 2341              	.LLST2:
 2342 0044 A0000000 		.4byte	.LVL7
 2343 0048 AE000000 		.4byte	.LVL9
 2344 004c 0400     		.2byte	0x4
 2345 004e 0A       		.byte	0xa
 2346 004f 0010     		.2byte	0x1000
 2347 0051 9F       		.byte	0x9f
 2348 0052 00000000 		.4byte	0
 2349 0056 00000000 		.4byte	0
 2350              	.LLST3:
 2351 005a 70000000 		.4byte	.LVL15
 2352 005e 7E000000 		.4byte	.LVL17
 2353 0062 0200     		.2byte	0x2
 2354 0064 30       		.byte	0x30
 2355 0065 9F       		.byte	0x9f
 2356 0066 7E000000 		.4byte	.LVL17
 2357 006a 80000000 		.4byte	.LVL18
 2358 006e 0200     		.2byte	0x2
 2359 0070 31       		.byte	0x31
 2360 0071 9F       		.byte	0x9f
 2361 0072 00000000 		.4byte	0
 2362 0076 00000000 		.4byte	0
 2363              	.LLST4:
 2364 007a 66000000 		.4byte	.LVL12
 2365 007e 6A000000 		.4byte	.LVL13
 2366 0082 0700     		.2byte	0x7
 2367 0084 70       		.byte	0x70
 2368 0085 00       		.sleb128 0
 2369 0086 40       		.byte	0x40
 2370 0087 49       		.byte	0x49
 2371 0088 24       		.byte	0x24
 2372 0089 21       		.byte	0x21
 2373 008a 9F       		.byte	0x9f
 2374 008b 6E000000 		.4byte	.LVL14
 2375 008f 70000000 		.4byte	.LVL15
 2376 0093 0100     		.2byte	0x1
 2377 0095 52       		.byte	0x52
 2378 0096 70000000 		.4byte	.LVL15
 2379 009a 80000000 		.4byte	.LVL18
 2380 009e 0200     		.2byte	0x2
 2381 00a0 30       		.byte	0x30
 2382 00a1 9F       		.byte	0x9f
 2383 00a2 00000000 		.4byte	0
 2384 00a6 00000000 		.4byte	0
 2385              	.LLST5:
 2386 00aa 74000000 		.4byte	.LVL16
 2387 00ae 80000000 		.4byte	.LVL18
 2388 00b2 0400     		.2byte	0x4
 2389 00b4 0A       		.byte	0xa
 2390 00b5 0010     		.2byte	0x1000
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 60


 2391 00b7 9F       		.byte	0x9f
 2392 00b8 00000000 		.4byte	0
 2393 00bc 00000000 		.4byte	0
 2394              	.LLST6:
 2395 00c0 00000000 		.4byte	.LVL20
 2396 00c4 04000000 		.4byte	.LVL21
 2397 00c8 0100     		.2byte	0x1
 2398 00ca 50       		.byte	0x50
 2399 00cb 04000000 		.4byte	.LVL21
 2400 00cf 0C000000 		.4byte	.LVL22
 2401 00d3 0100     		.2byte	0x1
 2402 00d5 53       		.byte	0x53
 2403 00d6 0C000000 		.4byte	.LVL22
 2404 00da 30000000 		.4byte	.LFE7
 2405 00de 0400     		.2byte	0x4
 2406 00e0 F3       		.byte	0xf3
 2407 00e1 01       		.uleb128 0x1
 2408 00e2 50       		.byte	0x50
 2409 00e3 9F       		.byte	0x9f
 2410 00e4 00000000 		.4byte	0
 2411 00e8 00000000 		.4byte	0
 2412              	.LLST7:
 2413 00ec 00000000 		.4byte	.LVL20
 2414 00f0 10000000 		.4byte	.LVL23
 2415 00f4 0200     		.2byte	0x2
 2416 00f6 30       		.byte	0x30
 2417 00f7 9F       		.byte	0x9f
 2418 00f8 12000000 		.4byte	.LVL24
 2419 00fc 16000000 		.4byte	.LVL25
 2420 0100 0500     		.2byte	0x5
 2421 0102 73       		.byte	0x73
 2422 0103 00       		.sleb128 0
 2423 0104 31       		.byte	0x31
 2424 0105 1A       		.byte	0x1a
 2425 0106 9F       		.byte	0x9f
 2426 0107 1A000000 		.4byte	.LVL26
 2427 010b 1E000000 		.4byte	.LVL27
 2428 010f 0100     		.2byte	0x1
 2429 0111 50       		.byte	0x50
 2430 0112 20000000 		.4byte	.LVL28
 2431 0116 28000000 		.4byte	.LVL29
 2432 011a 0200     		.2byte	0x2
 2433 011c 30       		.byte	0x30
 2434 011d 9F       		.byte	0x9f
 2435 011e 28000000 		.4byte	.LVL29
 2436 0122 30000000 		.4byte	.LFE7
 2437 0126 0100     		.2byte	0x1
 2438 0128 50       		.byte	0x50
 2439 0129 00000000 		.4byte	0
 2440 012d 00000000 		.4byte	0
 2441              	.LLST8:
 2442 0131 00000000 		.4byte	.LVL30
 2443 0135 0A000000 		.4byte	.LVL31
 2444 0139 0100     		.2byte	0x1
 2445 013b 50       		.byte	0x50
 2446 013c 0A000000 		.4byte	.LVL31
 2447 0140 0E000000 		.4byte	.LVL33
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 61


 2448 0144 0400     		.2byte	0x4
 2449 0146 F3       		.byte	0xf3
 2450 0147 01       		.uleb128 0x1
 2451 0148 50       		.byte	0x50
 2452 0149 9F       		.byte	0x9f
 2453 014a 0E000000 		.4byte	.LVL33
 2454 014e 10000000 		.4byte	.LVL34
 2455 0152 0100     		.2byte	0x1
 2456 0154 50       		.byte	0x50
 2457 0155 10000000 		.4byte	.LVL34
 2458 0159 1C000000 		.4byte	.LFE8
 2459 015d 0400     		.2byte	0x4
 2460 015f F3       		.byte	0xf3
 2461 0160 01       		.uleb128 0x1
 2462 0161 50       		.byte	0x50
 2463 0162 9F       		.byte	0x9f
 2464 0163 00000000 		.4byte	0
 2465 0167 00000000 		.4byte	0
 2466              	.LLST9:
 2467 016b 0A000000 		.4byte	.LVL31
 2468 016f 0C000000 		.4byte	.LVL32
 2469 0173 0700     		.2byte	0x7
 2470 0175 70       		.byte	0x70
 2471 0176 00       		.sleb128 0
 2472 0177 40       		.byte	0x40
 2473 0178 24       		.byte	0x24
 2474 0179 40       		.byte	0x40
 2475 017a 25       		.byte	0x25
 2476 017b 9F       		.byte	0x9f
 2477 017c 00000000 		.4byte	0
 2478 0180 00000000 		.4byte	0
 2479              	.LLST10:
 2480 0184 00000000 		.4byte	.LVL36
 2481 0188 04000000 		.4byte	.LVL37
 2482 018c 0100     		.2byte	0x1
 2483 018e 50       		.byte	0x50
 2484 018f 04000000 		.4byte	.LVL37
 2485 0193 10000000 		.4byte	.LFE9
 2486 0197 0400     		.2byte	0x4
 2487 0199 F3       		.byte	0xf3
 2488 019a 01       		.uleb128 0x1
 2489 019b 50       		.byte	0x50
 2490 019c 9F       		.byte	0x9f
 2491 019d 00000000 		.4byte	0
 2492 01a1 00000000 		.4byte	0
 2493              	.LLST11:
 2494 01a5 00000000 		.4byte	.LVL38
 2495 01a9 04000000 		.4byte	.LVL39
 2496 01ad 0100     		.2byte	0x1
 2497 01af 50       		.byte	0x50
 2498 01b0 04000000 		.4byte	.LVL39
 2499 01b4 1C000000 		.4byte	.LFE10
 2500 01b8 0400     		.2byte	0x4
 2501 01ba F3       		.byte	0xf3
 2502 01bb 01       		.uleb128 0x1
 2503 01bc 50       		.byte	0x50
 2504 01bd 9F       		.byte	0x9f
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 62


 2505 01be 00000000 		.4byte	0
 2506 01c2 00000000 		.4byte	0
 2507              	.LLST12:
 2508 01c6 00000000 		.4byte	.LVL40
 2509 01ca 04000000 		.4byte	.LVL41
 2510 01ce 0100     		.2byte	0x1
 2511 01d0 50       		.byte	0x50
 2512 01d1 04000000 		.4byte	.LVL41
 2513 01d5 18000000 		.4byte	.LFE11
 2514 01d9 0400     		.2byte	0x4
 2515 01db F3       		.byte	0xf3
 2516 01dc 01       		.uleb128 0x1
 2517 01dd 50       		.byte	0x50
 2518 01de 9F       		.byte	0x9f
 2519 01df 00000000 		.4byte	0
 2520 01e3 00000000 		.4byte	0
 2521              	.LLST13:
 2522 01e7 00000000 		.4byte	.LVL42
 2523 01eb 04000000 		.4byte	.LVL43
 2524 01ef 0100     		.2byte	0x1
 2525 01f1 50       		.byte	0x50
 2526 01f2 04000000 		.4byte	.LVL43
 2527 01f6 10000000 		.4byte	.LFE12
 2528 01fa 0400     		.2byte	0x4
 2529 01fc F3       		.byte	0xf3
 2530 01fd 01       		.uleb128 0x1
 2531 01fe 50       		.byte	0x50
 2532 01ff 9F       		.byte	0x9f
 2533 0200 00000000 		.4byte	0
 2534 0204 00000000 		.4byte	0
 2535              	.LLST14:
 2536 0208 00000000 		.4byte	.LVL44
 2537 020c 04000000 		.4byte	.LVL45
 2538 0210 0100     		.2byte	0x1
 2539 0212 50       		.byte	0x50
 2540 0213 04000000 		.4byte	.LVL45
 2541 0217 10000000 		.4byte	.LFE13
 2542 021b 0400     		.2byte	0x4
 2543 021d F3       		.byte	0xf3
 2544 021e 01       		.uleb128 0x1
 2545 021f 50       		.byte	0x50
 2546 0220 9F       		.byte	0x9f
 2547 0221 00000000 		.4byte	0
 2548 0225 00000000 		.4byte	0
 2549              	.LLST15:
 2550 0229 00000000 		.4byte	.LVL46
 2551 022d 0C000000 		.4byte	.LVL47
 2552 0231 0100     		.2byte	0x1
 2553 0233 50       		.byte	0x50
 2554 0234 0C000000 		.4byte	.LVL47
 2555 0238 14000000 		.4byte	.LVL49
 2556 023c 0100     		.2byte	0x1
 2557 023e 54       		.byte	0x54
 2558 023f 14000000 		.4byte	.LVL49
 2559 0243 1C000000 		.4byte	.LFE14
 2560 0247 0400     		.2byte	0x4
 2561 0249 F3       		.byte	0xf3
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 63


 2562 024a 01       		.uleb128 0x1
 2563 024b 50       		.byte	0x50
 2564 024c 9F       		.byte	0x9f
 2565 024d 00000000 		.4byte	0
 2566 0251 00000000 		.4byte	0
 2567              	.LLST16:
 2568 0255 00000000 		.4byte	.LVL46
 2569 0259 0F000000 		.4byte	.LVL48-1
 2570 025d 0100     		.2byte	0x1
 2571 025f 51       		.byte	0x51
 2572 0260 0F000000 		.4byte	.LVL48-1
 2573 0264 1C000000 		.4byte	.LFE14
 2574 0268 0400     		.2byte	0x4
 2575 026a F3       		.byte	0xf3
 2576 026b 01       		.uleb128 0x1
 2577 026c 51       		.byte	0x51
 2578 026d 9F       		.byte	0x9f
 2579 026e 00000000 		.4byte	0
 2580 0272 00000000 		.4byte	0
 2581              	.LLST17:
 2582 0276 00000000 		.4byte	.LVL50
 2583 027a 0C000000 		.4byte	.LVL51
 2584 027e 0100     		.2byte	0x1
 2585 0280 50       		.byte	0x50
 2586 0281 0C000000 		.4byte	.LVL51
 2587 0285 14000000 		.4byte	.LVL53
 2588 0289 0100     		.2byte	0x1
 2589 028b 54       		.byte	0x54
 2590 028c 14000000 		.4byte	.LVL53
 2591 0290 1C000000 		.4byte	.LFE15
 2592 0294 0400     		.2byte	0x4
 2593 0296 F3       		.byte	0xf3
 2594 0297 01       		.uleb128 0x1
 2595 0298 50       		.byte	0x50
 2596 0299 9F       		.byte	0x9f
 2597 029a 00000000 		.4byte	0
 2598 029e 00000000 		.4byte	0
 2599              	.LLST18:
 2600 02a2 00000000 		.4byte	.LVL50
 2601 02a6 0F000000 		.4byte	.LVL52-1
 2602 02aa 0100     		.2byte	0x1
 2603 02ac 51       		.byte	0x51
 2604 02ad 0F000000 		.4byte	.LVL52-1
 2605 02b1 16000000 		.4byte	.LVL54
 2606 02b5 0100     		.2byte	0x1
 2607 02b7 55       		.byte	0x55
 2608 02b8 16000000 		.4byte	.LVL54
 2609 02bc 1C000000 		.4byte	.LFE15
 2610 02c0 0800     		.2byte	0x8
 2611 02c2 F3       		.byte	0xf3
 2612 02c3 01       		.uleb128 0x1
 2613 02c4 50       		.byte	0x50
 2614 02c5 32       		.byte	0x32
 2615 02c6 24       		.byte	0x24
 2616 02c7 73       		.byte	0x73
 2617 02c8 00       		.sleb128 0
 2618 02c9 22       		.byte	0x22
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 64


 2619 02ca 00000000 		.4byte	0
 2620 02ce 00000000 		.4byte	0
 2621              	.LLST19:
 2622 02d2 00000000 		.4byte	.LVL55
 2623 02d6 0A000000 		.4byte	.LVL56
 2624 02da 0100     		.2byte	0x1
 2625 02dc 50       		.byte	0x50
 2626 02dd 0A000000 		.4byte	.LVL56
 2627 02e1 20000000 		.4byte	.LVL59
 2628 02e5 0100     		.2byte	0x1
 2629 02e7 55       		.byte	0x55
 2630 02e8 20000000 		.4byte	.LVL59
 2631 02ec 34000000 		.4byte	.LVL63
 2632 02f0 0400     		.2byte	0x4
 2633 02f2 F3       		.byte	0xf3
 2634 02f3 01       		.uleb128 0x1
 2635 02f4 50       		.byte	0x50
 2636 02f5 9F       		.byte	0x9f
 2637 02f6 34000000 		.4byte	.LVL63
 2638 02fa 38000000 		.4byte	.LVL65
 2639 02fe 0100     		.2byte	0x1
 2640 0300 55       		.byte	0x55
 2641 0301 38000000 		.4byte	.LVL65
 2642 0305 44000000 		.4byte	.LVL66
 2643 0309 0400     		.2byte	0x4
 2644 030b F3       		.byte	0xf3
 2645 030c 01       		.uleb128 0x1
 2646 030d 50       		.byte	0x50
 2647 030e 9F       		.byte	0x9f
 2648 030f 44000000 		.4byte	.LVL66
 2649 0313 46000000 		.4byte	.LVL67
 2650 0317 0100     		.2byte	0x1
 2651 0319 50       		.byte	0x50
 2652 031a 46000000 		.4byte	.LVL67
 2653 031e 58000000 		.4byte	.LFE16
 2654 0322 0100     		.2byte	0x1
 2655 0324 55       		.byte	0x55
 2656 0325 00000000 		.4byte	0
 2657 0329 00000000 		.4byte	0
 2658              	.LLST20:
 2659 032d 00000000 		.4byte	.LVL55
 2660 0331 0A000000 		.4byte	.LVL56
 2661 0335 0100     		.2byte	0x1
 2662 0337 51       		.byte	0x51
 2663 0338 0A000000 		.4byte	.LVL56
 2664 033c 16000000 		.4byte	.LVL57
 2665 0340 0400     		.2byte	0x4
 2666 0342 F3       		.byte	0xf3
 2667 0343 01       		.uleb128 0x1
 2668 0344 51       		.byte	0x51
 2669 0345 9F       		.byte	0x9f
 2670 0346 16000000 		.4byte	.LVL57
 2671 034a 1E000000 		.4byte	.LVL58
 2672 034e 0100     		.2byte	0x1
 2673 0350 51       		.byte	0x51
 2674 0351 34000000 		.4byte	.LVL63
 2675 0355 36000000 		.4byte	.LVL64
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 65


 2676 0359 0100     		.2byte	0x1
 2677 035b 51       		.byte	0x51
 2678 035c 44000000 		.4byte	.LVL66
 2679 0360 49000000 		.4byte	.LVL68-1
 2680 0364 0100     		.2byte	0x1
 2681 0366 51       		.byte	0x51
 2682 0367 49000000 		.4byte	.LVL68-1
 2683 036b 58000000 		.4byte	.LFE16
 2684 036f 0400     		.2byte	0x4
 2685 0371 F3       		.byte	0xf3
 2686 0372 01       		.uleb128 0x1
 2687 0373 51       		.byte	0x51
 2688 0374 9F       		.byte	0x9f
 2689 0375 00000000 		.4byte	0
 2690 0379 00000000 		.4byte	0
 2691              	.LLST21:
 2692 037d 2A000000 		.4byte	.LVL60
 2693 0381 2C000000 		.4byte	.LVL61
 2694 0385 0900     		.2byte	0x9
 2695 0387 73       		.byte	0x73
 2696 0388 00       		.sleb128 0
 2697 0389 70       		.byte	0x70
 2698 038a 00       		.sleb128 0
 2699 038b 22       		.byte	0x22
 2700 038c 71       		.byte	0x71
 2701 038d 00       		.sleb128 0
 2702 038e 1B       		.byte	0x1b
 2703 038f 9F       		.byte	0x9f
 2704 0390 00000000 		.4byte	0
 2705 0394 00000000 		.4byte	0
 2706              	.LLST22:
 2707 0398 00000000 		.4byte	.LVL69
 2708 039c 0C000000 		.4byte	.LVL70
 2709 03a0 0100     		.2byte	0x1
 2710 03a2 50       		.byte	0x50
 2711 03a3 0C000000 		.4byte	.LVL70
 2712 03a7 1C000000 		.4byte	.LVL73
 2713 03ab 0100     		.2byte	0x1
 2714 03ad 55       		.byte	0x55
 2715 03ae 1C000000 		.4byte	.LVL73
 2716 03b2 40000000 		.4byte	.LFE17
 2717 03b6 0400     		.2byte	0x4
 2718 03b8 F3       		.byte	0xf3
 2719 03b9 01       		.uleb128 0x1
 2720 03ba 50       		.byte	0x50
 2721 03bb 9F       		.byte	0x9f
 2722 03bc 00000000 		.4byte	0
 2723 03c0 00000000 		.4byte	0
 2724              	.LLST23:
 2725 03c4 00000000 		.4byte	.LVL69
 2726 03c8 0F000000 		.4byte	.LVL71-1
 2727 03cc 0100     		.2byte	0x1
 2728 03ce 51       		.byte	0x51
 2729 03cf 0F000000 		.4byte	.LVL71-1
 2730 03d3 1A000000 		.4byte	.LVL72
 2731 03d7 0400     		.2byte	0x4
 2732 03d9 F3       		.byte	0xf3
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 66


 2733 03da 01       		.uleb128 0x1
 2734 03db 51       		.byte	0x51
 2735 03dc 9F       		.byte	0x9f
 2736 03dd 1A000000 		.4byte	.LVL72
 2737 03e1 32000000 		.4byte	.LVL77
 2738 03e5 0100     		.2byte	0x1
 2739 03e7 54       		.byte	0x54
 2740 03e8 00000000 		.4byte	0
 2741 03ec 00000000 		.4byte	0
 2742              	.LLST24:
 2743 03f0 1E000000 		.4byte	.LVL74
 2744 03f4 32000000 		.4byte	.LVL77
 2745 03f8 1A00     		.2byte	0x1a
 2746 03fa 74       		.byte	0x74
 2747 03fb 00       		.sleb128 0
 2748 03fc F7       		.byte	0xf7
 2749 03fd 41       		.uleb128 0x41
 2750 03fe F7       		.byte	0xf7
 2751 03ff 25       		.uleb128 0x25
 2752 0400 0C       		.byte	0xc
 2753 0401 80969800 		.4byte	0x989680
 2754 0405 F7       		.byte	0xf7
 2755 0406 25       		.uleb128 0x25
 2756 0407 1E       		.byte	0x1e
 2757 0408 F7       		.byte	0xf7
 2758 0409 33       		.uleb128 0x33
 2759 040a 75       		.byte	0x75
 2760 040b 00       		.sleb128 0
 2761 040c F7       		.byte	0xf7
 2762 040d 3A       		.uleb128 0x3a
 2763 040e F7       		.byte	0xf7
 2764 040f 33       		.uleb128 0x33
 2765 0410 1B       		.byte	0x1b
 2766 0411 F7       		.byte	0xf7
 2767 0412 25       		.uleb128 0x25
 2768 0413 9F       		.byte	0x9f
 2769 0414 00000000 		.4byte	0
 2770 0418 00000000 		.4byte	0
 2771              	.LLST25:
 2772 041c 00000000 		.4byte	.LVL78
 2773 0420 0C000000 		.4byte	.LVL79
 2774 0424 0100     		.2byte	0x1
 2775 0426 50       		.byte	0x50
 2776 0427 0C000000 		.4byte	.LVL79
 2777 042b 1E000000 		.4byte	.LVL82
 2778 042f 0100     		.2byte	0x1
 2779 0431 55       		.byte	0x55
 2780 0432 1E000000 		.4byte	.LVL82
 2781 0436 48000000 		.4byte	.LFE18
 2782 043a 0400     		.2byte	0x4
 2783 043c F3       		.byte	0xf3
 2784 043d 01       		.uleb128 0x1
 2785 043e 50       		.byte	0x50
 2786 043f 9F       		.byte	0x9f
 2787 0440 00000000 		.4byte	0
 2788 0444 00000000 		.4byte	0
 2789              	.LLST26:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 67


 2790 0448 00000000 		.4byte	.LVL78
 2791 044c 0F000000 		.4byte	.LVL80-1
 2792 0450 0100     		.2byte	0x1
 2793 0452 51       		.byte	0x51
 2794 0453 0F000000 		.4byte	.LVL80-1
 2795 0457 1A000000 		.4byte	.LVL81
 2796 045b 0400     		.2byte	0x4
 2797 045d F3       		.byte	0xf3
 2798 045e 01       		.uleb128 0x1
 2799 045f 51       		.byte	0x51
 2800 0460 9F       		.byte	0x9f
 2801 0461 1A000000 		.4byte	.LVL81
 2802 0465 2C000000 		.4byte	.LVL86
 2803 0469 0100     		.2byte	0x1
 2804 046b 54       		.byte	0x54
 2805 046c 00000000 		.4byte	0
 2806 0470 00000000 		.4byte	0
 2807              	.LLST27:
 2808 0474 20000000 		.4byte	.LVL83
 2809 0478 2C000000 		.4byte	.LVL86
 2810 047c 1600     		.2byte	0x16
 2811 047e 74       		.byte	0x74
 2812 047f 00       		.sleb128 0
 2813 0480 F7       		.byte	0xf7
 2814 0481 41       		.uleb128 0x41
 2815 0482 F7       		.byte	0xf7
 2816 0483 2C       		.uleb128 0x2c
 2817 0484 F4       		.byte	0xf4
 2818 0485 2C       		.uleb128 0x2c
 2819 0486 04       		.byte	0x4
 2820 0487 00002041 		.4byte	0x41200000
 2821 048b 1E       		.byte	0x1e
 2822 048c 75       		.byte	0x75
 2823 048d 00       		.sleb128 0
 2824 048e F7       		.byte	0xf7
 2825 048f 3A       		.uleb128 0x3a
 2826 0490 F7       		.byte	0xf7
 2827 0491 2C       		.uleb128 0x2c
 2828 0492 1B       		.byte	0x1b
 2829 0493 9F       		.byte	0x9f
 2830 0494 00000000 		.4byte	0
 2831 0498 00000000 		.4byte	0
 2832              		.section	.debug_aranges,"",%progbits
 2833 0000 A4000000 		.4byte	0xa4
 2834 0004 0200     		.2byte	0x2
 2835 0006 00000000 		.4byte	.Ldebug_info0
 2836 000a 04       		.byte	0x4
 2837 000b 00       		.byte	0
 2838 000c 0000     		.2byte	0
 2839 000e 0000     		.2byte	0
 2840 0010 00000000 		.4byte	.LFB1
 2841 0014 1C010000 		.4byte	.LFE1-.LFB1
 2842 0018 00000000 		.4byte	.LFB2
 2843 001c E4000000 		.4byte	.LFE2-.LFB2
 2844 0020 00000000 		.4byte	.LFB3
 2845 0024 30000000 		.4byte	.LFE3-.LFB3
 2846 0028 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 68


 2847 002c 10000000 		.4byte	.LFE4-.LFB4
 2848 0030 00000000 		.4byte	.LFB5
 2849 0034 14000000 		.4byte	.LFE5-.LFB5
 2850 0038 00000000 		.4byte	.LFB6
 2851 003c 14000000 		.4byte	.LFE6-.LFB6
 2852 0040 00000000 		.4byte	.LFB7
 2853 0044 30000000 		.4byte	.LFE7-.LFB7
 2854 0048 00000000 		.4byte	.LFB8
 2855 004c 1C000000 		.4byte	.LFE8-.LFB8
 2856 0050 00000000 		.4byte	.LFB9
 2857 0054 10000000 		.4byte	.LFE9-.LFB9
 2858 0058 00000000 		.4byte	.LFB10
 2859 005c 1C000000 		.4byte	.LFE10-.LFB10
 2860 0060 00000000 		.4byte	.LFB11
 2861 0064 18000000 		.4byte	.LFE11-.LFB11
 2862 0068 00000000 		.4byte	.LFB12
 2863 006c 10000000 		.4byte	.LFE12-.LFB12
 2864 0070 00000000 		.4byte	.LFB13
 2865 0074 10000000 		.4byte	.LFE13-.LFB13
 2866 0078 00000000 		.4byte	.LFB14
 2867 007c 1C000000 		.4byte	.LFE14-.LFB14
 2868 0080 00000000 		.4byte	.LFB15
 2869 0084 1C000000 		.4byte	.LFE15-.LFB15
 2870 0088 00000000 		.4byte	.LFB16
 2871 008c 58000000 		.4byte	.LFE16-.LFB16
 2872 0090 00000000 		.4byte	.LFB17
 2873 0094 40000000 		.4byte	.LFE17-.LFB17
 2874 0098 00000000 		.4byte	.LFB18
 2875 009c 48000000 		.4byte	.LFE18-.LFB18
 2876 00a0 00000000 		.4byte	0
 2877 00a4 00000000 		.4byte	0
 2878              		.section	.debug_ranges,"",%progbits
 2879              	.Ldebug_ranges0:
 2880 0000 2E000000 		.4byte	.LBB14
 2881 0004 A2000000 		.4byte	.LBE14
 2882 0008 A4000000 		.4byte	.LBB17
 2883 000c 1C010000 		.4byte	.LBE17
 2884 0010 00000000 		.4byte	0
 2885 0014 00000000 		.4byte	0
 2886 0018 00000000 		.4byte	.LFB1
 2887 001c 1C010000 		.4byte	.LFE1
 2888 0020 00000000 		.4byte	.LFB2
 2889 0024 E4000000 		.4byte	.LFE2
 2890 0028 00000000 		.4byte	.LFB3
 2891 002c 30000000 		.4byte	.LFE3
 2892 0030 00000000 		.4byte	.LFB4
 2893 0034 10000000 		.4byte	.LFE4
 2894 0038 00000000 		.4byte	.LFB5
 2895 003c 14000000 		.4byte	.LFE5
 2896 0040 00000000 		.4byte	.LFB6
 2897 0044 14000000 		.4byte	.LFE6
 2898 0048 00000000 		.4byte	.LFB7
 2899 004c 30000000 		.4byte	.LFE7
 2900 0050 00000000 		.4byte	.LFB8
 2901 0054 1C000000 		.4byte	.LFE8
 2902 0058 00000000 		.4byte	.LFB9
 2903 005c 10000000 		.4byte	.LFE9
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 69


 2904 0060 00000000 		.4byte	.LFB10
 2905 0064 1C000000 		.4byte	.LFE10
 2906 0068 00000000 		.4byte	.LFB11
 2907 006c 18000000 		.4byte	.LFE11
 2908 0070 00000000 		.4byte	.LFB12
 2909 0074 10000000 		.4byte	.LFE12
 2910 0078 00000000 		.4byte	.LFB13
 2911 007c 10000000 		.4byte	.LFE13
 2912 0080 00000000 		.4byte	.LFB14
 2913 0084 1C000000 		.4byte	.LFE14
 2914 0088 00000000 		.4byte	.LFB15
 2915 008c 1C000000 		.4byte	.LFE15
 2916 0090 00000000 		.4byte	.LFB16
 2917 0094 58000000 		.4byte	.LFE16
 2918 0098 00000000 		.4byte	.LFB17
 2919 009c 40000000 		.4byte	.LFE17
 2920 00a0 00000000 		.4byte	.LFB18
 2921 00a4 48000000 		.4byte	.LFE18
 2922 00a8 00000000 		.4byte	0
 2923 00ac 00000000 		.4byte	0
 2924              		.section	.debug_line,"",%progbits
 2925              	.Ldebug_line0:
 2926 0000 19030000 		.section	.debug_str,"MS",%progbits,1
 2926      02004B00 
 2926      00000201 
 2926      FB0E0D00 
 2926      01010101 
 2927              	.LASF11:
 2928 0000 75696E74 		.ascii	"uint16\000"
 2928      313600
 2929              	.LASF46:
 2930 0007 61646347 		.ascii	"adcGain\000"
 2930      61696E00 
 2931              	.LASF24:
 2932 000f 636F756E 		.ascii	"counts\000"
 2932      747300
 2933              	.LASF52:
 2934 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2934      436F756E 
 2934      7473546F 
 2934      5F566F6C 
 2934      747300
 2935              	.LASF66:
 2936 0029 4144435F 		.ascii	"ADC_Init\000"
 2936      496E6974 
 2936      00
 2937              	.LASF0:
 2938 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2938      206C6F6E 
 2938      6720756E 
 2938      7369676E 
 2938      65642069 
 2939              	.LASF26:
 2940 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2940      53746172 
 2940      74436F6E 
 2940      76657274 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 70


 2940      00
 2941              	.LASF62:
 2942 005a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2942      43313120 
 2942      352E342E 
 2942      31203230 
 2942      31363036 
 2943 008d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2943      20726576 
 2943      6973696F 
 2943      6E203233 
 2943      37373135 
 2944 00c0 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 2944      66756E63 
 2944      74696F6E 
 2944      2D736563 
 2944      74696F6E 
 2945              	.LASF2:
 2946 00e8 6C6F6E67 		.ascii	"long long int\000"
 2946      206C6F6E 
 2946      6720696E 
 2946      7400
 2947              	.LASF4:
 2948 00f6 7369676E 		.ascii	"signed char\000"
 2948      65642063 
 2948      68617200 
 2949              	.LASF32:
 2950 0102 73746174 		.ascii	"status\000"
 2950      757300
 2951              	.LASF14:
 2952 0109 696E7433 		.ascii	"int32\000"
 2952      3200
 2953              	.LASF34:
 2954 010f 4144435F 		.ascii	"ADC_Start\000"
 2954      53746172 
 2954      7400
 2955              	.LASF7:
 2956 0119 6C6F6E67 		.ascii	"long int\000"
 2956      20696E74 
 2956      00
 2957              	.LASF50:
 2958 0122 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2958      436F756E 
 2958      7473546F 
 2958      5F75566F 
 2958      6C747300 
 2959              	.LASF57:
 2960 0136 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2960      636F756E 
 2960      74735065 
 2960      72313056 
 2960      6F6C7400 
 2961              	.LASF10:
 2962 014a 75696E74 		.ascii	"uint8\000"
 2962      3800
 2963              	.LASF58:
 2964 0150 43794465 		.ascii	"CyDelayUs\000"
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 71


 2964      6C617955 
 2964      7300
 2965              	.LASF16:
 2966 015a 646F7562 		.ascii	"double\000"
 2966      6C6500
 2967              	.LASF12:
 2968 0161 75696E74 		.ascii	"uint32\000"
 2968      333200
 2969              	.LASF64:
 2970 0168 443A5C65 		.ascii	"D:\\ext\\EXTPSOC\\camera.cydsn\000"
 2970      78745C45 
 2970      58545053 
 2970      4F435C63 
 2970      616D6572 
 2971              	.LASF36:
 2972 0184 6D61736B 		.ascii	"mask\000"
 2972      00
 2973              	.LASF55:
 2974 0189 4144435F 		.ascii	"ADC_initVar\000"
 2974      696E6974 
 2974      56617200 
 2975              	.LASF30:
 2976 0195 7265744D 		.ascii	"retMode\000"
 2976      6F646500 
 2977              	.LASF41:
 2978 019d 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2978      5365744C 
 2978      696D6974 
 2978      4D61736B 
 2978      00
 2979              	.LASF9:
 2980 01ae 756E7369 		.ascii	"unsigned int\000"
 2980      676E6564 
 2980      20696E74 
 2980      00
 2981              	.LASF51:
 2982 01bb 75566F6C 		.ascii	"uVolts\000"
 2982      747300
 2983              	.LASF8:
 2984 01c2 6C6F6E67 		.ascii	"long unsigned int\000"
 2984      20756E73 
 2984      69676E65 
 2984      6420696E 
 2984      7400
 2985              	.LASF42:
 2986 01d4 4144435F 		.ascii	"ADC_SetSatMask\000"
 2986      53657453 
 2986      61744D61 
 2986      736B00
 2987              	.LASF53:
 2988 01e3 766F6C74 		.ascii	"volts\000"
 2988      7300
 2989              	.LASF23:
 2990 01e9 746D7052 		.ascii	"tmpRegVal\000"
 2990      65675661 
 2990      6C00
 2991              	.LASF6:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 72


 2992 01f3 73686F72 		.ascii	"short unsigned int\000"
 2992      7420756E 
 2992      7369676E 
 2992      65642069 
 2992      6E7400
 2993              	.LASF60:
 2994 0206 4379496E 		.ascii	"CyIntSetVector\000"
 2994      74536574 
 2994      56656374 
 2994      6F7200
 2995              	.LASF27:
 2996 0215 4144435F 		.ascii	"ADC_StopConvert\000"
 2996      53746F70 
 2996      436F6E76 
 2996      65727400 
 2997              	.LASF49:
 2998 0225 6D566F6C 		.ascii	"mVolts\000"
 2998      747300
 2999              	.LASF19:
 3000 022c 72656733 		.ascii	"reg32\000"
 3000      3200
 3001              	.LASF15:
 3002 0232 666C6F61 		.ascii	"float32\000"
 3002      74333200 
 3003              	.LASF21:
 3004 023a 73697A65 		.ascii	"sizetype\000"
 3004      74797065 
 3004      00
 3005              	.LASF38:
 3006 0243 6C6F774C 		.ascii	"lowLimit\000"
 3006      696D6974 
 3006      00
 3007              	.LASF20:
 3008 024c 6C6F6E67 		.ascii	"long double\000"
 3008      20646F75 
 3008      626C6500 
 3009              	.LASF39:
 3010 0258 4144435F 		.ascii	"ADC_SetHighLimit\000"
 3010      53657448 
 3010      6967684C 
 3010      696D6974 
 3010      00
 3011              	.LASF28:
 3012 0269 4144435F 		.ascii	"ADC_IsEndConversion\000"
 3012      4973456E 
 3012      64436F6E 
 3012      76657273 
 3012      696F6E00 
 3013              	.LASF17:
 3014 027d 696E7436 		.ascii	"int64\000"
 3014      3400
 3015              	.LASF59:
 3016 0283 4379496E 		.ascii	"CyIntSetPriority\000"
 3016      74536574 
 3016      5072696F 
 3016      72697479 
 3016      00
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 73


 3017              	.LASF35:
 3018 0294 4144435F 		.ascii	"ADC_SetChanMask\000"
 3018      53657443 
 3018      68616E4D 
 3018      61736B00 
 3019              	.LASF63:
 3020 02a4 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 3020      72617465 
 3020      645F536F 
 3020      75726365 
 3020      5C50536F 
 3021              	.LASF45:
 3022 02c1 4144435F 		.ascii	"ADC_SetGain\000"
 3022      53657447 
 3022      61696E00 
 3023              	.LASF1:
 3024 02cd 666C6F61 		.ascii	"float\000"
 3024      7400
 3025              	.LASF40:
 3026 02d3 68696768 		.ascii	"highLimit\000"
 3026      4C696D69 
 3026      7400
 3027              	.LASF47:
 3028 02dd 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 3028      436F756E 
 3028      7473546F 
 3028      5F6D566F 
 3028      6C747300 
 3029              	.LASF37:
 3030 02f1 4144435F 		.ascii	"ADC_SetLowLimit\000"
 3030      5365744C 
 3030      6F774C69 
 3030      6D697400 
 3031              	.LASF61:
 3032 0301 43794861 		.ascii	"CyHalt\000"
 3032      6C7400
 3033              	.LASF5:
 3034 0308 756E7369 		.ascii	"unsigned char\000"
 3034      676E6564 
 3034      20636861 
 3034      7200
 3035              	.LASF56:
 3036 0316 4144435F 		.ascii	"ADC_offset\000"
 3036      6F666673 
 3036      657400
 3037              	.LASF3:
 3038 0321 73686F72 		.ascii	"short int\000"
 3038      7420696E 
 3038      7400
 3039              	.LASF25:
 3040 032b 4144435F 		.ascii	"ADC_Stop\000"
 3040      53746F70 
 3040      00
 3041              	.LASF22:
 3042 0334 63684E75 		.ascii	"chNum\000"
 3042      6D00
 3043              	.LASF31:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccDogWTk.s 			page 74


 3044 033a 6368616E 		.ascii	"chan\000"
 3044      00
 3045              	.LASF18:
 3046 033f 63686172 		.ascii	"char\000"
 3046      00
 3047              	.LASF54:
 3048 0344 4144435F 		.ascii	"ADC_channelsConfig\000"
 3048      6368616E 
 3048      6E656C73 
 3048      436F6E66 
 3048      696700
 3049              	.LASF44:
 3050 0357 6F666673 		.ascii	"offset\000"
 3050      657400
 3051              	.LASF48:
 3052 035e 61646343 		.ascii	"adcCounts\000"
 3052      6F756E74 
 3052      7300
 3053              	.LASF65:
 3054 0368 4144435F 		.ascii	"ADC_Enable\000"
 3054      456E6162 
 3054      6C6500
 3055              	.LASF13:
 3056 0373 696E7431 		.ascii	"int16\000"
 3056      3600
 3057              	.LASF43:
 3058 0379 4144435F 		.ascii	"ADC_SetOffset\000"
 3058      5365744F 
 3058      66667365 
 3058      7400
 3059              	.LASF33:
 3060 0387 72657375 		.ascii	"result\000"
 3060      6C7400
 3061              	.LASF29:
 3062 038e 4144435F 		.ascii	"ADC_GetResult16\000"
 3062      47657452 
 3062      6573756C 
 3062      74313600 
 3063              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
