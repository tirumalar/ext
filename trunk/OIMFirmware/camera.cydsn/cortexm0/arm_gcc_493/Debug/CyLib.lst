ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 006CDC02 		.word	48000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 80BB0000 		.word	48000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 30       		.byte	48
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000C05D 		.word	1572864000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103              		.global	cyImoFreqMhz2DpllOffset
 104 002e 0000     		.align	2
 105              		.type	cyImoFreqMhz2DpllOffset, %object
 106              		.size	cyImoFreqMhz2DpllOffset, 23
 107              	cyImoFreqMhz2DpllOffset:
 108 0030 EE       		.byte	-18
 109 0031 DB       		.byte	-37
 110 0032 C9       		.byte	-55
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 3


 111 0033 B9       		.byte	-71
 112 0034 AA       		.byte	-86
 113 0035 9B       		.byte	-101
 114 0036 8E       		.byte	-114
 115 0037 82       		.byte	-126
 116 0038 76       		.byte	118
 117 0039 6B       		.byte	107
 118 003a 60       		.byte	96
 119 003b 56       		.byte	86
 120 003c 4D       		.byte	77
 121 003d 44       		.byte	68
 122 003e 3B       		.byte	59
 123 003f 33       		.byte	51
 124 0040 2C       		.byte	44
 125 0041 24       		.byte	36
 126 0042 1D       		.byte	29
 127 0043 17       		.byte	23
 128 0044 10       		.byte	16
 129 0045 0A       		.byte	10
 130 0046 04       		.byte	4
 131              		.global	CySysClkPumpConfig
 132 0047 00       		.data
 133              		.align	2
 134              		.type	CySysClkPumpConfig, %object
 135              		.size	CySysClkPumpConfig, 4
 136              	CySysClkPumpConfig:
 137 0010 01000000 		.word	1
 138              		.section	.text.CySysClkImoStart,"ax",%progbits
 139              		.align	2
 140              		.global	CySysClkImoStart
 141              		.code	16
 142              		.thumb_func
 143              		.type	CySysClkImoStart, %function
 144              	CySysClkImoStart:
 145              	.LFB1:
 146              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 4


  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 5


  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 147              		.loc 1 108 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 155              		.loc 1 109 0
 156 0004 044B     		ldr	r3, .L2
 157 0006 044A     		ldr	r2, .L2
 158 0008 1268     		ldr	r2, [r2]
 159 000a 8021     		mov	r1, #128
 160 000c 0906     		lsl	r1, r1, #24
 161 000e 0A43     		orr	r2, r1
 162 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 6


 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 163              		.loc 1 124 0
 164 0012 BD46     		mov	sp, r7
 165              		@ sp needed
 166 0014 80BD     		pop	{r7, pc}
 167              	.L3:
 168 0016 C046     		.align	2
 169              	.L2:
 170 0018 08010B40 		.word	1074462984
 171              		.cfi_endproc
 172              	.LFE1:
 173              		.size	CySysClkImoStart, .-CySysClkImoStart
 174              		.section	.text.CySysClkImoStop,"ax",%progbits
 175              		.align	2
 176              		.global	CySysClkImoStop
 177              		.code	16
 178              		.thumb_func
 179              		.type	CySysClkImoStop, %function
 180              	CySysClkImoStop:
 181              	.LFB2:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 182              		.loc 1 140 0
 183              		.cfi_startproc
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 190              		.loc 1 142 0
 191 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 7


 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 192              		.loc 1 149 0
 193 0008 034B     		ldr	r3, .L5
 194 000a 034A     		ldr	r2, .L5
 195 000c 1268     		ldr	r2, [r2]
 196 000e 5200     		lsl	r2, r2, #1
 197 0010 5208     		lsr	r2, r2, #1
 198 0012 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 199              		.loc 1 150 0
 200 0014 BD46     		mov	sp, r7
 201              		@ sp needed
 202 0016 80BD     		pop	{r7, pc}
 203              	.L6:
 204              		.align	2
 205              	.L5:
 206 0018 08010B40 		.word	1074462984
 207              		.cfi_endproc
 208              	.LFE2:
 209              		.size	CySysClkImoStop, .-CySysClkImoStop
 210              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 211              		.align	2
 212              		.global	CySysClkImoEnableWcoLock
 213              		.code	16
 214              		.thumb_func
 215              		.type	CySysClkImoEnableWcoLock, %function
 216              	CySysClkImoEnableWcoLock:
 217              	.LFB3:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 218              		.loc 1 176 0
 219              		.cfi_startproc
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 8


 220 0000 90B5     		push	{r4, r7, lr}
 221              		.cfi_def_cfa_offset 12
 222              		.cfi_offset 4, -12
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 87B0     		sub	sp, sp, #28
 226              		.cfi_def_cfa_offset 40
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 229              		.loc 1 184 0
 230 0006 0023     		mov	r3, #0
 231 0008 BB60     		str	r3, [r7, #8]
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 232              		.loc 1 187 0
 233 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 234 000e 031E     		sub	r3, r0, #0
 235 0010 00D1     		bne	.LCB79
 236 0012 7FE0     		b	.L7	@long jump
 237              	.LCB79:
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 238              		.loc 1 189 0
 239 0014 FC1D     		add	r4, r7, #7
 240 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 241 001a 031C     		mov	r3, r0
 242 001c 2370     		strb	r3, [r4]
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 243              		.loc 1 200 0
 244 001e 0323     		mov	r3, #3
 245 0020 3B61     		str	r3, [r7, #16]
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 246              		.loc 1 201 0
 247 0022 0023     		mov	r3, #0
 248 0024 7B61     		str	r3, [r7, #20]
 249 0026 12E0     		b	.L9
 250              	.L12:
 202:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 9


 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 251              		.loc 1 203 0
 252 0028 3C4B     		ldr	r3, .L17
 253 002a 1B68     		ldr	r3, [r3]
 254 002c DBB2     		uxtb	r3, r3
 255 002e 1A1C     		mov	r2, r3
 256 0030 3F23     		mov	r3, #63
 257 0032 1340     		and	r3, r2
 258 0034 3A49     		ldr	r1, .L17+4
 259 0036 7A69     		ldr	r2, [r7, #20]
 260 0038 8A18     		add	r2, r1, r2
 261 003a 1278     		ldrb	r2, [r2]
 262 003c 9342     		cmp	r3, r2
 263 003e 03D1     		bne	.L10
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 264              		.loc 1 205 0
 265 0040 7B69     		ldr	r3, [r7, #20]
 266 0042 0333     		add	r3, r3, #3
 267 0044 3B61     		str	r3, [r7, #16]
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 268              		.loc 1 206 0
 269 0046 05E0     		b	.L11
 270              	.L10:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 271              		.loc 1 201 0 discriminator 2
 272 0048 7B69     		ldr	r3, [r7, #20]
 273 004a 0133     		add	r3, r3, #1
 274 004c 7B61     		str	r3, [r7, #20]
 275              	.L9:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 276              		.loc 1 201 0 is_stmt 0 discriminator 1
 277 004e 7B69     		ldr	r3, [r7, #20]
 278 0050 2D2B     		cmp	r3, #45
 279 0052 E9D9     		bls	.L12
 280              	.L11:
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 281              		.loc 1 225 0 is_stmt 1
 282 0054 334B     		ldr	r3, .L17+8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 10


 283 0056 1B68     		ldr	r3, [r3]
 284 0058 1F22     		mov	r2, #31
 285 005a 1340     		and	r3, r2
 286 005c 07D1     		bne	.L13
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 287              		.loc 1 227 0
 288 005e 314B     		ldr	r3, .L17+8
 289 0060 304A     		ldr	r2, .L17+8
 290 0062 1268     		ldr	r2, [r2]
 291 0064 1F21     		mov	r1, #31
 292 0066 8A43     		bic	r2, r1
 293 0068 0C21     		mov	r1, #12
 294 006a 0A43     		orr	r2, r1
 295 006c 1A60     		str	r2, [r3]
 296              	.L13:
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 297              		.loc 1 232 0
 298 006e 2E4B     		ldr	r3, .L17+12
 299 0070 1B68     		ldr	r3, [r3]
 300 0072 2E4A     		ldr	r2, .L17+16
 301 0074 1340     		and	r3, r2
 302 0076 FB60     		str	r3, [r7, #12]
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 303              		.loc 1 238 0
 304 0078 3B69     		ldr	r3, [r7, #16]
 305 007a 2D4A     		ldr	r2, .L17+20
 306 007c 5343     		mul	r3, r2
 307 007e 8022     		mov	r2, #128
 308 0080 D201     		lsl	r2, r2, #7
 309 0082 9446     		mov	ip, r2
 310 0084 6344     		add	r3, r3, ip
 311 0086 DB0B     		lsr	r3, r3, #15
 312 0088 013B     		sub	r3, r3, #1
 313 008a 5B05     		lsl	r3, r3, #21
 314 008c 5B0D     		lsr	r3, r3, #21
 315 008e FA68     		ldr	r2, [r7, #12]
 316 0090 1343     		orr	r3, r2
 317 0092 FB60     		str	r3, [r7, #12]
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 318              		.loc 1 241 0
 319 0094 FB68     		ldr	r3, [r7, #12]
 320 0096 A022     		mov	r2, #160
 321 0098 5203     		lsl	r2, r2, #13
 322 009a 1343     		orr	r3, r2
 323 009c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 11


 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 324              		.loc 1 244 0
 325 009e 3B69     		ldr	r3, [r7, #16]
 326 00a0 192B     		cmp	r3, #25
 327 00a2 05D8     		bhi	.L14
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 328              		.loc 1 246 0
 329 00a4 FB68     		ldr	r3, [r7, #12]
 330 00a6 FF22     		mov	r2, #255
 331 00a8 9205     		lsl	r2, r2, #22
 332 00aa 1343     		orr	r3, r2
 333 00ac FB60     		str	r3, [r7, #12]
 334 00ae 16E0     		b	.L15
 335              	.L14:
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 336              		.loc 1 250 0
 337 00b0 3B69     		ldr	r3, [r7, #16]
 338 00b2 204A     		ldr	r2, .L17+24
 339 00b4 9446     		mov	ip, r2
 340 00b6 6344     		add	r3, r3, ip
 341 00b8 1B78     		ldrb	r3, [r3]
 342 00ba DBB2     		uxtb	r3, r3
 343 00bc 191C     		mov	r1, r3
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 344              		.loc 1 251 0
 345 00be 3B69     		ldr	r3, [r7, #16]
 346 00c0 1A3B     		sub	r3, r3, #26
 347 00c2 1D4A     		ldr	r2, .L17+28
 348 00c4 D35C     		ldrb	r3, [r2, r3]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 349              		.loc 1 250 0
 350 00c6 CB18     		add	r3, r1, r3
 351 00c8 BB60     		str	r3, [r7, #8]
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 352              		.loc 1 253 0
 353 00ca BB68     		ldr	r3, [r7, #8]
 354 00cc FF2B     		cmp	r3, #255
 355 00ce 00D9     		bls	.L16
 356 00d0 FF23     		mov	r3, #255
 357              	.L16:
 358 00d2 BB60     		str	r3, [r7, #8]
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 359              		.loc 1 256 0
 360 00d4 BB68     		ldr	r3, [r7, #8]
 361 00d6 9B05     		lsl	r3, r3, #22
 362 00d8 FA68     		ldr	r2, [r7, #12]
 363 00da 1343     		orr	r3, r2
 364 00dc FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 12


 365              	.L15:
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 366              		.loc 1 259 0
 367 00de 124B     		ldr	r3, .L17+12
 368 00e0 FA68     		ldr	r2, [r7, #12]
 369 00e2 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 370              		.loc 1 261 0
 371 00e4 154B     		ldr	r3, .L17+32
 372 00e6 1B68     		ldr	r3, [r3]
 373 00e8 3B60     		str	r3, [r7]
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 374              		.loc 1 262 0
 375 00ea 3020     		mov	r0, #48
 376 00ec FFF7FEFF 		bl	CySysFlashSetWaitCycles
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 377              		.loc 1 263 0
 378 00f0 134B     		ldr	r3, .L17+36
 379 00f2 134A     		ldr	r2, .L17+36
 380 00f4 1268     		ldr	r2, [r2]
 381 00f6 8021     		mov	r1, #128
 382 00f8 C905     		lsl	r1, r1, #23
 383 00fa 0A43     		orr	r2, r1
 384 00fc 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 385              		.loc 1 264 0
 386 00fe 1420     		mov	r0, #20
 387 0100 FFF7FEFF 		bl	CyDelay
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 388              		.loc 1 265 0
 389 0104 0D4B     		ldr	r3, .L17+32
 390 0106 3A68     		ldr	r2, [r7]
 391 0108 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 392              		.loc 1 267 0
 393 010a FB1D     		add	r3, r7, #7
 394 010c 1B78     		ldrb	r3, [r3]
 395 010e 181C     		mov	r0, r3
 396 0110 FFF7FEFF 		bl	CyExitCriticalSection
 397              	.L7:
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 398              		.loc 1 269 0
 399 0114 BD46     		mov	sp, r7
 400 0116 07B0     		add	sp, sp, #28
 401              		@ sp needed
 402 0118 90BD     		pop	{r4, r7, pc}
 403              	.L18:
 404 011a C046     		.align	2
 405              	.L17:
 406 011c 2CFF0B40 		.word	1074528044
 407 0120 00000000 		.word	cyImoFreqMhz2Reg
 408 0124 34FF0B40 		.word	1074528052
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 13


 409 0128 08002240 		.word	1075970056
 410 012c 00F800C0 		.word	-1073678336
 411 0130 40420F00 		.word	1000000
 412 0134 CDF1FF0F 		.word	268431821
 413 0138 00000000 		.word	cyImoFreqMhz2DpllOffset
 414 013c 30001040 		.word	1074790448
 415 0140 00002240 		.word	1075970048
 416              		.cfi_endproc
 417              	.LFE3:
 418              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 419              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 420              		.align	2
 421              		.global	CySysClkImoDisableWcoLock
 422              		.code	16
 423              		.thumb_func
 424              		.type	CySysClkImoDisableWcoLock, %function
 425              	CySysClkImoDisableWcoLock:
 426              	.LFB4:
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 427              		.loc 1 286 0
 428              		.cfi_startproc
 429 0000 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 435              		.loc 1 287 0
 436 0004 034B     		ldr	r3, .L20
 437 0006 034A     		ldr	r2, .L20
 438 0008 1268     		ldr	r2, [r2]
 439 000a 0349     		ldr	r1, .L20+4
 440 000c 0A40     		and	r2, r1
 441 000e 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/CyLib.c ****     }
 442              		.loc 1 288 0
 443 0010 BD46     		mov	sp, r7
 444              		@ sp needed
 445 0012 80BD     		pop	{r7, pc}
 446              	.L21:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 14


 447              		.align	2
 448              	.L20:
 449 0014 00002240 		.word	1075970048
 450 0018 FFFFFFBF 		.word	-1073741825
 451              		.cfi_endproc
 452              	.LFE4:
 453              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 454              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 455              		.align	2
 456              		.global	CySysClkImoGetWcoLock
 457              		.code	16
 458              		.thumb_func
 459              		.type	CySysClkImoGetWcoLock, %function
 460              	CySysClkImoGetWcoLock:
 461              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 462              		.loc 1 305 0
 463              		.cfi_startproc
 464 0000 80B5     		push	{r7, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 470              		.loc 1 306 0
 471 0004 054B     		ldr	r3, .L26
 472 0006 1A68     		ldr	r2, [r3]
 473 0008 8023     		mov	r3, #128
 474 000a DB05     		lsl	r3, r3, #23
 475 000c 1340     		and	r3, r2
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 476              		.loc 1 307 0
 477 000e 01D0     		beq	.L23
 478              		.loc 1 307 0 is_stmt 0 discriminator 1
 479 0010 0123     		mov	r3, #1
 480 0012 00E0     		b	.L24
 481              	.L23:
 482              		.loc 1 307 0 discriminator 2
 483 0014 0023     		mov	r3, #0
 484              	.L24:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 15


 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 485              		.loc 1 309 0 is_stmt 1
 486 0016 181C     		mov	r0, r3
 487 0018 BD46     		mov	sp, r7
 488              		@ sp needed
 489 001a 80BD     		pop	{r7, pc}
 490              	.L27:
 491              		.align	2
 492              	.L26:
 493 001c 00002240 		.word	1075970048
 494              		.cfi_endproc
 495              	.LFE5:
 496              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 497              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 498              		.align	2
 499              		.global	CySysClkWriteHfclkDirect
 500              		.code	16
 501              		.thumb_func
 502              		.type	CySysClkWriteHfclkDirect, %function
 503              	CySysClkWriteHfclkDirect:
 504              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 16


 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 17


 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 505              		.loc 1 430 0
 506              		.cfi_startproc
 507 0000 90B5     		push	{r4, r7, lr}
 508              		.cfi_def_cfa_offset 12
 509              		.cfi_offset 4, -12
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 85B0     		sub	sp, sp, #20
 513              		.cfi_def_cfa_offset 32
 514 0004 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 516 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 517              		.loc 1 434 0
 518 0008 0F23     		mov	r3, #15
 519 000a FC18     		add	r4, r7, r3
 520 000c FFF7FEFF 		bl	CyEnterCriticalSection
 521 0010 031C     		mov	r3, r0
 522 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 523              		.loc 1 437 0
 524 0014 0B4B     		ldr	r3, .L29
 525 0016 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 18


 526 0018 0722     		mov	r2, #7
 527 001a 9343     		bic	r3, r2
 528 001c BB60     		str	r3, [r7, #8]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 529              		.loc 1 448 0
 530 001e 7B68     		ldr	r3, [r7, #4]
 531 0020 0722     		mov	r2, #7
 532 0022 1340     		and	r3, r2
 533 0024 BA68     		ldr	r2, [r7, #8]
 534 0026 1343     		orr	r3, r2
 535 0028 BB60     		str	r3, [r7, #8]
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 536              		.loc 1 451 0
 537 002a 064B     		ldr	r3, .L29
 538 002c BA68     		ldr	r2, [r7, #8]
 539 002e 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 540              		.loc 1 453 0
 541 0030 0F23     		mov	r3, #15
 542 0032 FB18     		add	r3, r7, r3
 543 0034 1B78     		ldrb	r3, [r3]
 544 0036 181C     		mov	r0, r3
 545 0038 FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 546              		.loc 1 454 0
 547 003c BD46     		mov	sp, r7
 548 003e 05B0     		add	sp, sp, #20
 549              		@ sp needed
 550 0040 90BD     		pop	{r4, r7, pc}
 551              	.L30:
 552 0042 C046     		.align	2
 553              	.L29:
 554 0044 00010B40 		.word	1074462976
 555              		.cfi_endproc
 556              	.LFE6:
 557              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 558              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 559              		.align	2
 560              		.global	CySysEnablePumpClock
 561              		.code	16
 562              		.thumb_func
 563              		.type	CySysEnablePumpClock, %function
 564              	CySysEnablePumpClock:
 565              	.LFB7:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 19


 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 566              		.loc 1 474 0
 567              		.cfi_startproc
 568 0000 80B5     		push	{r7, lr}
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572 0002 82B0     		sub	sp, sp, #8
 573              		.cfi_def_cfa_offset 16
 574 0004 00AF     		add	r7, sp, #0
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 577              		.loc 1 476 0
 578 0008 7B68     		ldr	r3, [r7, #4]
 579 000a 0122     		mov	r2, #1
 580 000c 1340     		and	r3, r2
 581 000e 08D0     		beq	.L32
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 582              		.loc 1 478 0
 583 0010 0C4A     		ldr	r2, .L34
 584 0012 0C4B     		ldr	r3, .L34
 585 0014 1968     		ldr	r1, [r3]
 586 0016 0C4B     		ldr	r3, .L34+4
 587 0018 1B68     		ldr	r3, [r3]
 588 001a 5B06     		lsl	r3, r3, #25
 589 001c 0B43     		orr	r3, r1
 590 001e 1360     		str	r3, [r2]
 591 0020 0CE0     		b	.L31
 592              	.L32:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 593              		.loc 1 482 0
 594 0022 084B     		ldr	r3, .L34
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 20


 595 0024 1B68     		ldr	r3, [r3]
 596 0026 5B0E     		lsr	r3, r3, #25
 597 0028 0722     		mov	r2, #7
 598 002a 1A40     		and	r2, r3
 599 002c 064B     		ldr	r3, .L34+4
 600 002e 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 601              		.loc 1 484 0
 602 0030 044B     		ldr	r3, .L34
 603 0032 044A     		ldr	r2, .L34
 604 0034 1268     		ldr	r2, [r2]
 605 0036 0549     		ldr	r1, .L34+8
 606 0038 0A40     		and	r2, r1
 607 003a 1A60     		str	r2, [r3]
 608              	.L31:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 609              		.loc 1 498 0
 610 003c BD46     		mov	sp, r7
 611 003e 02B0     		add	sp, sp, #8
 612              		@ sp needed
 613 0040 80BD     		pop	{r7, pc}
 614              	.L35:
 615 0042 C046     		.align	2
 616              	.L34:
 617 0044 08010B40 		.word	1074462984
 618 0048 00000000 		.word	CySysClkPumpConfig
 619 004c FFFFFFF1 		.word	-234881025
 620              		.cfi_endproc
 621              	.LFE7:
 622              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 623              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 624              		.align	2
 625              		.global	CySysClkGetSysclkSource
 626              		.code	16
 627              		.thumb_func
 628              		.type	CySysClkGetSysclkSource, %function
 629              	CySysClkGetSysclkSource:
 630              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 21


 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 631              		.loc 1 511 0
 632              		.cfi_startproc
 633 0000 90B5     		push	{r4, r7, lr}
 634              		.cfi_def_cfa_offset 12
 635              		.cfi_offset 4, -12
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 83B0     		sub	sp, sp, #12
 639              		.cfi_def_cfa_offset 24
 640 0004 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 642              		.loc 1 515 0
 643 0006 FC1D     		add	r4, r7, #7
 644 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 645 000c 031C     		mov	r3, r0
 646 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 647              		.loc 1 525 0
 648 0010 074B     		ldr	r3, .L38
 649 0012 1B68     		ldr	r3, [r3]
 650 0014 0722     		mov	r2, #7
 651 0016 1340     		and	r3, r2
 652 0018 3B60     		str	r3, [r7]
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 653              		.loc 1 528 0
 654 001a FB1D     		add	r3, r7, #7
 655 001c 1B78     		ldrb	r3, [r3]
 656 001e 181C     		mov	r0, r3
 657 0020 FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 658              		.loc 1 530 0
 659 0024 3B68     		ldr	r3, [r7]
 531:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 22


 660              		.loc 1 531 0
 661 0026 181C     		mov	r0, r3
 662 0028 BD46     		mov	sp, r7
 663 002a 03B0     		add	sp, sp, #12
 664              		@ sp needed
 665 002c 90BD     		pop	{r4, r7, pc}
 666              	.L39:
 667 002e C046     		.align	2
 668              	.L38:
 669 0030 00010B40 		.word	1074462976
 670              		.cfi_endproc
 671              	.LFE8:
 672              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 673              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 674              		.align	2
 675              		.global	CySysClkWriteSysclkDiv
 676              		.code	16
 677              		.thumb_func
 678              		.type	CySysClkWriteSysclkDiv, %function
 679              	CySysClkWriteSysclkDiv:
 680              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 681              		.loc 1 566 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 23


 682              		.cfi_startproc
 683 0000 90B5     		push	{r4, r7, lr}
 684              		.cfi_def_cfa_offset 12
 685              		.cfi_offset 4, -12
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 85B0     		sub	sp, sp, #20
 689              		.cfi_def_cfa_offset 32
 690 0004 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 692 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 693              		.loc 1 569 0
 694 0008 0F23     		mov	r3, #15
 695 000a FC18     		add	r4, r7, r3
 696 000c FFF7FEFF 		bl	CyEnterCriticalSection
 697 0010 031C     		mov	r3, r0
 698 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 699              		.loc 1 571 0
 700 0014 094B     		ldr	r3, .L41
 701 0016 7A68     		ldr	r2, [r7, #4]
 702 0018 0721     		mov	r1, #7
 703 001a 0A40     		and	r2, r1
 704 001c D104     		lsl	r1, r2, #19
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 705              		.loc 1 573 0
 706 001e 074A     		ldr	r2, .L41
 707 0020 1268     		ldr	r2, [r2]
 708 0022 0748     		ldr	r0, .L41+4
 709 0024 0240     		and	r2, r0
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 710              		.loc 1 572 0
 711 0026 0A43     		orr	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 712              		.loc 1 571 0
 713 0028 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 714              		.loc 1 576 0
 715 002a 0F23     		mov	r3, #15
 716 002c FB18     		add	r3, r7, r3
 717 002e 1B78     		ldrb	r3, [r3]
 718 0030 181C     		mov	r0, r3
 719 0032 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 720              		.loc 1 577 0
 721 0036 BD46     		mov	sp, r7
 722 0038 05B0     		add	sp, sp, #20
 723              		@ sp needed
 724 003a 90BD     		pop	{r4, r7, pc}
 725              	.L42:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 24


 726              		.align	2
 727              	.L41:
 728 003c 00010B40 		.word	1074462976
 729 0040 FFFFC7FF 		.word	-3670017
 730              		.cfi_endproc
 731              	.LFE9:
 732              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 733              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 734              		.align	2
 735              		.global	CySysClkWriteImoFreq
 736              		.code	16
 737              		.thumb_func
 738              		.type	CySysClkWriteImoFreq, %function
 739              	CySysClkWriteImoFreq:
 740              	.LFB10:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 25


 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 741              		.loc 1 624 0
 742              		.cfi_startproc
 743 0000 90B5     		push	{r4, r7, lr}
 744              		.cfi_def_cfa_offset 12
 745              		.cfi_offset 4, -12
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 8BB0     		sub	sp, sp, #44
 749              		.cfi_def_cfa_offset 56
 750 0004 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 752 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 753              		.loc 1 637 0
 754 0008 0023     		mov	r3, #0
 755 000a 7B62     		str	r3, [r7, #36]
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 756              		.loc 1 647 0
 757 000c 2323     		mov	r3, #35
 758 000e FC18     		add	r4, r7, r3
 759 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 760 0014 031C     		mov	r3, r0
 761 0016 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 762              		.loc 1 650 0
 763 0018 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 764 001c 031E     		sub	r3, r0, #0
 765 001e 03D0     		beq	.L44
 651:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 26


 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 766              		.loc 1 652 0
 767 0020 0123     		mov	r3, #1
 768 0022 7B62     		str	r3, [r7, #36]
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 769              		.loc 1 653 0
 770 0024 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 771              	.L44:
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 772              		.loc 1 681 0
 773 0028 1B4B     		ldr	r3, .L46
 774 002a 1A68     		ldr	r2, [r3]
 775 002c 0823     		mov	r3, #8
 776 002e FB18     		add	r3, r7, r3
 777 0030 1A60     		str	r2, [r3]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 778              		.loc 1 682 0
 779 0032 1A4B     		ldr	r3, .L46+4
 780 0034 1A68     		ldr	r2, [r3]
 781 0036 0823     		mov	r3, #8
 782 0038 FB18     		add	r3, r7, r3
 783 003a 5A60     		str	r2, [r3, #4]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 784              		.loc 1 683 0
 785 003c 7B68     		ldr	r3, [r7, #4]
 786 003e 033B     		sub	r3, r3, #3
 787 0040 174A     		ldr	r2, .L46+8
 788 0042 D35C     		ldrb	r3, [r2, r3]
 789 0044 1A1C     		mov	r2, r3
 790 0046 0823     		mov	r3, #8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 27


 791 0048 FB18     		add	r3, r7, r3
 792 004a 9A60     		str	r2, [r3, #8]
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 793              		.loc 1 684 0
 794 004c 154B     		ldr	r3, .L46+12
 795 004e 1A68     		ldr	r2, [r3]
 796 0050 0823     		mov	r3, #8
 797 0052 FB18     		add	r3, r7, r3
 798 0054 DA60     		str	r2, [r3, #12]
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 799              		.loc 1 686 0
 800 0056 1823     		mov	r3, #24
 801 0058 FB18     		add	r3, r7, r3
 802 005a 134A     		ldr	r2, .L46+16
 803 005c 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 804              		.loc 1 689 0
 805 005e 0823     		mov	r3, #8
 806 0060 FA18     		add	r2, r7, r3
 807 0062 1823     		mov	r3, #24
 808 0064 FB18     		add	r3, r7, r3
 809 0066 5A60     		str	r2, [r3, #4]
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 810              		.loc 1 691 0
 811 0068 104B     		ldr	r3, .L46+20
 812 006a 1822     		mov	r2, #24
 813 006c BA18     		add	r2, r7, r2
 814 006e 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 815              		.loc 1 692 0
 816 0070 0F4B     		ldr	r3, .L46+24
 817 0072 104A     		ldr	r2, .L46+28
 818 0074 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 819              		.loc 1 693 0
 820 0076 0D4B     		ldr	r3, .L46+20
 821 0078 1B68     		ldr	r3, [r3]
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 28


 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 29


 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 822              		.loc 1 810 0
 823 007a 7B6A     		ldr	r3, [r7, #36]
 824 007c 012B     		cmp	r3, #1
 825 007e 01D1     		bne	.L45
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 826              		.loc 1 812 0
 827 0080 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 828              	.L45:
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 30


 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 829              		.loc 1 823 0
 830 0084 2323     		mov	r3, #35
 831 0086 FB18     		add	r3, r7, r3
 832 0088 1B78     		ldrb	r3, [r3]
 833 008a 181C     		mov	r0, r3
 834 008c FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 835              		.loc 1 824 0
 836 0090 BD46     		mov	sp, r7
 837 0092 0BB0     		add	sp, sp, #44
 838              		@ sp needed
 839 0094 90BD     		pop	{r4, r7, pc}
 840              	.L47:
 841 0096 C046     		.align	2
 842              	.L46:
 843 0098 08010B40 		.word	1074462984
 844 009c 00010B40 		.word	1074462976
 845 00a0 00000000 		.word	cyImoFreqMhz2Reg
 846 00a4 30001040 		.word	1074790448
 847 00a8 B6EA0000 		.word	60086
 848 00ac 08001040 		.word	1074790408
 849 00b0 04001040 		.word	1074790404
 850 00b4 17000080 		.word	-2147483625
 851              		.cfi_endproc
 852              	.LFE10:
 853              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 854              		.section	.text.CySysLvdEnable,"ax",%progbits
 855              		.align	2
 856              		.global	CySysLvdEnable
 857              		.code	16
 858              		.thumb_func
 859              		.type	CySysLvdEnable, %function
 860              	CySysLvdEnable:
 861              	.LFB11:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 31


 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 32


 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 33


 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 34


1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 35


1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 36


1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 37


1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 38


1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 39


1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 40


1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 41


1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 42


1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 43


1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 44


1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 45


1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 46


1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 47


1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 48


1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 49


1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 50


1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 51


1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 52


2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 53


2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 862              		.loc 1 2119 0
 863              		.cfi_startproc
 864 0000 80B5     		push	{r7, lr}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 7, -8
 867              		.cfi_offset 14, -4
 868 0002 82B0     		sub	sp, sp, #8
 869              		.cfi_def_cfa_offset 16
 870 0004 00AF     		add	r7, sp, #0
 871              		.cfi_def_cfa_register 7
 872 0006 7860     		str	r0, [r7, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 873              		.loc 1 2121 0
 874 0008 134B     		ldr	r3, .L49
 875 000a 134A     		ldr	r2, .L49
 876 000c 1268     		ldr	r2, [r2]
 877 000e 0221     		mov	r1, #2
 878 0010 8A43     		bic	r2, r1
 879 0012 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 880              		.loc 1 2124 0
 881 0014 114B     		ldr	r3, .L49+4
 882 0016 114A     		ldr	r2, .L49+4
 883 0018 1268     		ldr	r2, [r2]
 884 001a 1E21     		mov	r1, #30
 885 001c 8A43     		bic	r2, r1
 886 001e 111C     		mov	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 887              		.loc 1 2125 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 54


 888 0020 7A68     		ldr	r2, [r7, #4]
 889 0022 5200     		lsl	r2, r2, #1
 890 0024 1E20     		mov	r0, #30
 891 0026 0240     		and	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 892              		.loc 1 2124 0
 893 0028 0A43     		orr	r2, r1
 894 002a 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 895              		.loc 1 2128 0
 896 002c 0B4B     		ldr	r3, .L49+4
 897 002e 0B4A     		ldr	r2, .L49+4
 898 0030 1268     		ldr	r2, [r2]
 899 0032 0121     		mov	r1, #1
 900 0034 0A43     		orr	r2, r1
 901 0036 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 902              		.loc 1 2131 0
 903 0038 FA23     		mov	r3, #250
 904 003a 9B00     		lsl	r3, r3, #2
 905 003c 181C     		mov	r0, r3
 906 003e FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 907              		.loc 1 2134 0
 908 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 909              		.loc 1 2137 0
 910 0046 044B     		ldr	r3, .L49
 911 0048 034A     		ldr	r2, .L49
 912 004a 1268     		ldr	r2, [r2]
 913 004c 0221     		mov	r1, #2
 914 004e 0A43     		orr	r2, r1
 915 0050 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 916              		.loc 1 2138 0
 917 0052 BD46     		mov	sp, r7
 918 0054 02B0     		add	sp, sp, #8
 919              		@ sp needed
 920 0056 80BD     		pop	{r7, pc}
 921              	.L50:
 922              		.align	2
 923              	.L49:
 924 0058 08000B40 		.word	1074462728
 925 005c 18000B40 		.word	1074462744
 926              		.cfi_endproc
 927              	.LFE11:
 928              		.size	CySysLvdEnable, .-CySysLvdEnable
 929              		.section	.text.CySysLvdDisable,"ax",%progbits
 930              		.align	2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 55


 931              		.global	CySysLvdDisable
 932              		.code	16
 933              		.thumb_func
 934              		.type	CySysLvdDisable, %function
 935              	CySysLvdDisable:
 936              	.LFB12:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 937              		.loc 1 2149 0
 938              		.cfi_startproc
 939 0000 80B5     		push	{r7, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 00AF     		add	r7, sp, #0
 944              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 945              		.loc 1 2150 0
 946 0004 064B     		ldr	r3, .L52
 947 0006 064A     		ldr	r2, .L52
 948 0008 1268     		ldr	r2, [r2]
 949 000a 0221     		mov	r1, #2
 950 000c 8A43     		bic	r2, r1
 951 000e 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 952              		.loc 1 2151 0
 953 0010 044B     		ldr	r3, .L52+4
 954 0012 044A     		ldr	r2, .L52+4
 955 0014 1268     		ldr	r2, [r2]
 956 0016 0121     		mov	r1, #1
 957 0018 8A43     		bic	r2, r1
 958 001a 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 959              		.loc 1 2152 0
 960 001c BD46     		mov	sp, r7
 961              		@ sp needed
 962 001e 80BD     		pop	{r7, pc}
 963              	.L53:
 964              		.align	2
 965              	.L52:
 966 0020 08000B40 		.word	1074462728
 967 0024 18000B40 		.word	1074462744
 968              		.cfi_endproc
 969              	.LFE12:
 970              		.size	CySysLvdDisable, .-CySysLvdDisable
 971              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 972              		.align	2
 973              		.global	CySysLvdGetInterruptSource
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 56


 974              		.code	16
 975              		.thumb_func
 976              		.type	CySysLvdGetInterruptSource, %function
 977              	CySysLvdGetInterruptSource:
 978              	.LFB13:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 979              		.loc 1 2167 0
 980              		.cfi_startproc
 981 0000 80B5     		push	{r7, lr}
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 7, -8
 984              		.cfi_offset 14, -4
 985 0002 00AF     		add	r7, sp, #0
 986              		.cfi_def_cfa_register 7
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 987              		.loc 1 2168 0
 988 0004 034B     		ldr	r3, .L56
 989 0006 1B68     		ldr	r3, [r3]
 990 0008 0222     		mov	r2, #2
 991 000a 1340     		and	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
 992              		.loc 1 2169 0
 993 000c 181C     		mov	r0, r3
 994 000e BD46     		mov	sp, r7
 995              		@ sp needed
 996 0010 80BD     		pop	{r7, pc}
 997              	.L57:
 998 0012 C046     		.align	2
 999              	.L56:
 1000 0014 04000B40 		.word	1074462724
 1001              		.cfi_endproc
 1002              	.LFE13:
 1003              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1004              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1005              		.align	2
 1006              		.global	CySysLvdClearInterrupt
 1007              		.code	16
 1008              		.thumb_func
 1009              		.type	CySysLvdClearInterrupt, %function
 1010              	CySysLvdClearInterrupt:
 1011              	.LFB14:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 57


2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 1012              		.loc 1 2183 0
 1013              		.cfi_startproc
 1014 0000 80B5     		push	{r7, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0002 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1020              		.loc 1 2184 0
 1021 0004 024B     		ldr	r3, .L59
 1022 0006 0222     		mov	r2, #2
 1023 0008 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 1024              		.loc 1 2185 0
 1025 000a BD46     		mov	sp, r7
 1026              		@ sp needed
 1027 000c 80BD     		pop	{r7, pc}
 1028              	.L60:
 1029 000e C046     		.align	2
 1030              	.L59:
 1031 0010 04000B40 		.word	1074462724
 1032              		.cfi_endproc
 1033              	.LFE14:
 1034              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1035              		.section	.text.CySysGetResetReason,"ax",%progbits
 1036              		.align	2
 1037              		.global	CySysGetResetReason
 1038              		.code	16
 1039              		.thumb_func
 1040              		.type	CySysGetResetReason, %function
 1041              	CySysGetResetReason:
 1042              	.LFB15:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 58


2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 1043              		.loc 1 2209 0
 1044              		.cfi_startproc
 1045 0000 80B5     		push	{r7, lr}
 1046              		.cfi_def_cfa_offset 8
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 84B0     		sub	sp, sp, #16
 1050              		.cfi_def_cfa_offset 24
 1051 0004 00AF     		add	r7, sp, #0
 1052              		.cfi_def_cfa_register 7
 1053 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1054              		.loc 1 2212 0
 1055 0008 7B68     		ldr	r3, [r7, #4]
 1056 000a 1922     		mov	r2, #25
 1057 000c 1340     		and	r3, r2
 1058 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1059              		.loc 1 2213 0
 1060 0010 064B     		ldr	r3, .L63
 1061 0012 1B68     		ldr	r3, [r3]
 1062 0014 1922     		mov	r2, #25
 1063 0016 1340     		and	r3, r2
 1064 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1065              		.loc 1 2215 0
 1066 001a 044B     		ldr	r3, .L63
 1067 001c 7A68     		ldr	r2, [r7, #4]
 1068 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1069              		.loc 1 2217 0
 1070 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 1071              		.loc 1 2218 0
 1072 0022 181C     		mov	r0, r3
 1073 0024 BD46     		mov	sp, r7
 1074 0026 04B0     		add	sp, sp, #16
 1075              		@ sp needed
 1076 0028 80BD     		pop	{r7, pc}
 1077              	.L64:
 1078 002a C046     		.align	2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 59


 1079              	.L63:
 1080 002c 00030B40 		.word	1074463488
 1081              		.cfi_endproc
 1082              	.LFE15:
 1083              		.size	CySysGetResetReason, .-CySysGetResetReason
 1084              		.section	.text.CyDisableInts,"ax",%progbits
 1085              		.align	2
 1086              		.global	CyDisableInts
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	CyDisableInts, %function
 1090              	CyDisableInts:
 1091              	.LFB16:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 1092              		.loc 1 2232 0
 1093              		.cfi_startproc
 1094 0000 80B5     		push	{r7, lr}
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 82B0     		sub	sp, sp, #8
 1099              		.cfi_def_cfa_offset 16
 1100 0004 00AF     		add	r7, sp, #0
 1101              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1102              		.loc 1 2236 0
 1103 0006 064B     		ldr	r3, .L67
 1104 0008 1B68     		ldr	r3, [r3]
 1105 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1106              		.loc 1 2239 0
 1107 000c 044B     		ldr	r3, .L67
 1108 000e 0122     		mov	r2, #1
 1109 0010 5242     		neg	r2, r2
 1110 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1111              		.loc 1 2241 0
 1112 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 60


2242:Generated_Source\PSoC4/CyLib.c **** }
 1113              		.loc 1 2242 0
 1114 0016 181C     		mov	r0, r3
 1115 0018 BD46     		mov	sp, r7
 1116 001a 02B0     		add	sp, sp, #8
 1117              		@ sp needed
 1118 001c 80BD     		pop	{r7, pc}
 1119              	.L68:
 1120 001e C046     		.align	2
 1121              	.L67:
 1122 0020 80E100E0 		.word	-536813184
 1123              		.cfi_endproc
 1124              	.LFE16:
 1125              		.size	CyDisableInts, .-CyDisableInts
 1126              		.section	.text.CyEnableInts,"ax",%progbits
 1127              		.align	2
 1128              		.global	CyEnableInts
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CyEnableInts, %function
 1132              	CyEnableInts:
 1133              	.LFB17:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 1134              		.loc 1 2255 0
 1135              		.cfi_startproc
 1136 0000 80B5     		push	{r7, lr}
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 7, -8
 1139              		.cfi_offset 14, -4
 1140 0002 82B0     		sub	sp, sp, #8
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              		.cfi_def_cfa_register 7
 1144 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1145              		.loc 1 2256 0
 1146 0008 024B     		ldr	r3, .L70
 1147 000a 7A68     		ldr	r2, [r7, #4]
 1148 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 1149              		.loc 1 2257 0
 1150 000e BD46     		mov	sp, r7
 1151 0010 02B0     		add	sp, sp, #8
 1152              		@ sp needed
 1153 0012 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 61


 1154              	.L71:
 1155              		.align	2
 1156              	.L70:
 1157 0014 00E100E0 		.word	-536813312
 1158              		.cfi_endproc
 1159              	.LFE17:
 1160              		.size	CyEnableInts, .-CyEnableInts
 1161              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1162              		.align	2
 1163              		.global	CyIntSetSysVector
 1164              		.code	16
 1165              		.thumb_func
 1166              		.type	CyIntSetSysVector, %function
 1167              	CyIntSetSysVector:
 1168              	.LFB18:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 1169              		.loc 1 2280 0
 1170              		.cfi_startproc
 1171 0000 80B5     		push	{r7, lr}
 1172              		.cfi_def_cfa_offset 8
 1173              		.cfi_offset 7, -8
 1174              		.cfi_offset 14, -4
 1175 0002 84B0     		sub	sp, sp, #16
 1176              		.cfi_def_cfa_offset 24
 1177 0004 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
 1179 0006 021C     		mov	r2, r0
 1180 0008 3960     		str	r1, [r7]
 1181 000a FB1D     		add	r3, r7, #7
 1182 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1183              		.loc 1 2282 0
 1184 000e 8023     		mov	r3, #128
 1185 0010 9B05     		lsl	r3, r3, #22
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 62


 1186 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1187              		.loc 1 2284 0
 1188 0014 FB1D     		add	r3, r7, #7
 1189 0016 1B78     		ldrb	r3, [r3]
 1190 0018 0F2B     		cmp	r3, #15
 1191 001a 02D9     		bls	.L73
 1192              		.loc 1 2284 0 is_stmt 0 discriminator 1
 1193 001c 0020     		mov	r0, #0
 1194 001e FFF7FEFF 		bl	CyHalt
 1195              	.L73:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1196              		.loc 1 2287 0 is_stmt 1
 1197 0022 FB1D     		add	r3, r7, #7
 1198 0024 1B78     		ldrb	r3, [r3]
 1199 0026 9B00     		lsl	r3, r3, #2
 1200 0028 FA68     		ldr	r2, [r7, #12]
 1201 002a D318     		add	r3, r2, r3
 1202 002c 1B68     		ldr	r3, [r3]
 1203 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1204              		.loc 1 2290 0
 1205 0030 FB1D     		add	r3, r7, #7
 1206 0032 1B78     		ldrb	r3, [r3]
 1207 0034 9B00     		lsl	r3, r3, #2
 1208 0036 FA68     		ldr	r2, [r7, #12]
 1209 0038 D318     		add	r3, r2, r3
 1210 003a 3A68     		ldr	r2, [r7]
 1211 003c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1212              		.loc 1 2292 0
 1213 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 1214              		.loc 1 2293 0
 1215 0040 181C     		mov	r0, r3
 1216 0042 BD46     		mov	sp, r7
 1217 0044 04B0     		add	sp, sp, #16
 1218              		@ sp needed
 1219 0046 80BD     		pop	{r7, pc}
 1220              		.cfi_endproc
 1221              	.LFE18:
 1222              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1223              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1224              		.align	2
 1225              		.global	CyIntGetSysVector
 1226              		.code	16
 1227              		.thumb_func
 1228              		.type	CyIntGetSysVector, %function
 1229              	CyIntGetSysVector:
 1230              	.LFB19:
2294:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 63


2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 1231              		.loc 1 2314 0
 1232              		.cfi_startproc
 1233 0000 80B5     		push	{r7, lr}
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 7, -8
 1236              		.cfi_offset 14, -4
 1237 0002 84B0     		sub	sp, sp, #16
 1238              		.cfi_def_cfa_offset 24
 1239 0004 00AF     		add	r7, sp, #0
 1240              		.cfi_def_cfa_register 7
 1241 0006 021C     		mov	r2, r0
 1242 0008 FB1D     		add	r3, r7, #7
 1243 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1244              		.loc 1 2315 0
 1245 000c 8023     		mov	r3, #128
 1246 000e 9B05     		lsl	r3, r3, #22
 1247 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1248              		.loc 1 2317 0
 1249 0012 FB1D     		add	r3, r7, #7
 1250 0014 1B78     		ldrb	r3, [r3]
 1251 0016 0F2B     		cmp	r3, #15
 1252 0018 02D9     		bls	.L76
 1253              		.loc 1 2317 0 is_stmt 0 discriminator 1
 1254 001a 0020     		mov	r0, #0
 1255 001c FFF7FEFF 		bl	CyHalt
 1256              	.L76:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1257              		.loc 1 2319 0 is_stmt 1
 1258 0020 FB1D     		add	r3, r7, #7
 1259 0022 1B78     		ldrb	r3, [r3]
 1260 0024 9B00     		lsl	r3, r3, #2
 1261 0026 FA68     		ldr	r2, [r7, #12]
 1262 0028 D318     		add	r3, r2, r3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 64


 1263 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 1264              		.loc 1 2320 0
 1265 002c 181C     		mov	r0, r3
 1266 002e BD46     		mov	sp, r7
 1267 0030 04B0     		add	sp, sp, #16
 1268              		@ sp needed
 1269 0032 80BD     		pop	{r7, pc}
 1270              		.cfi_endproc
 1271              	.LFE19:
 1272              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1273              		.section	.text.CyIntSetVector,"ax",%progbits
 1274              		.align	2
 1275              		.global	CyIntSetVector
 1276              		.code	16
 1277              		.thumb_func
 1278              		.type	CyIntSetVector, %function
 1279              	CyIntSetVector:
 1280              	.LFB20:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 1281              		.loc 1 2336 0
 1282              		.cfi_startproc
 1283 0000 80B5     		push	{r7, lr}
 1284              		.cfi_def_cfa_offset 8
 1285              		.cfi_offset 7, -8
 1286              		.cfi_offset 14, -4
 1287 0002 84B0     		sub	sp, sp, #16
 1288              		.cfi_def_cfa_offset 24
 1289 0004 00AF     		add	r7, sp, #0
 1290              		.cfi_def_cfa_register 7
 1291 0006 021C     		mov	r2, r0
 1292 0008 3960     		str	r1, [r7]
 1293 000a FB1D     		add	r3, r7, #7
 1294 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1295              		.loc 1 2338 0
 1296 000e 8023     		mov	r3, #128
 1297 0010 9B05     		lsl	r3, r3, #22
 1298 0012 FB60     		str	r3, [r7, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 65


 1299              		.loc 1 2340 0
 1300 0014 FB1D     		add	r3, r7, #7
 1301 0016 1B78     		ldrb	r3, [r3]
 1302 0018 1F2B     		cmp	r3, #31
 1303 001a 02D9     		bls	.L79
 1304              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1305 001c 0020     		mov	r0, #0
 1306 001e FFF7FEFF 		bl	CyHalt
 1307              	.L79:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1308              		.loc 1 2343 0 is_stmt 1
 1309 0022 FB1D     		add	r3, r7, #7
 1310 0024 1B78     		ldrb	r3, [r3]
 1311 0026 1033     		add	r3, r3, #16
 1312 0028 9B00     		lsl	r3, r3, #2
 1313 002a FA68     		ldr	r2, [r7, #12]
 1314 002c D318     		add	r3, r2, r3
 1315 002e 1B68     		ldr	r3, [r3]
 1316 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1317              		.loc 1 2346 0
 1318 0032 FB1D     		add	r3, r7, #7
 1319 0034 1B78     		ldrb	r3, [r3]
 1320 0036 1033     		add	r3, r3, #16
 1321 0038 9B00     		lsl	r3, r3, #2
 1322 003a FA68     		ldr	r2, [r7, #12]
 1323 003c D318     		add	r3, r2, r3
 1324 003e 3A68     		ldr	r2, [r7]
 1325 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1326              		.loc 1 2348 0
 1327 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 1328              		.loc 1 2349 0
 1329 0044 181C     		mov	r0, r3
 1330 0046 BD46     		mov	sp, r7
 1331 0048 04B0     		add	sp, sp, #16
 1332              		@ sp needed
 1333 004a 80BD     		pop	{r7, pc}
 1334              		.cfi_endproc
 1335              	.LFE20:
 1336              		.size	CyIntSetVector, .-CyIntSetVector
 1337              		.section	.text.CyIntGetVector,"ax",%progbits
 1338              		.align	2
 1339              		.global	CyIntGetVector
 1340              		.code	16
 1341              		.thumb_func
 1342              		.type	CyIntGetVector, %function
 1343              	CyIntGetVector:
 1344              	.LFB21:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 66


2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 1345              		.loc 1 2364 0
 1346              		.cfi_startproc
 1347 0000 80B5     		push	{r7, lr}
 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 7, -8
 1350              		.cfi_offset 14, -4
 1351 0002 84B0     		sub	sp, sp, #16
 1352              		.cfi_def_cfa_offset 24
 1353 0004 00AF     		add	r7, sp, #0
 1354              		.cfi_def_cfa_register 7
 1355 0006 021C     		mov	r2, r0
 1356 0008 FB1D     		add	r3, r7, #7
 1357 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1358              		.loc 1 2365 0
 1359 000c 8023     		mov	r3, #128
 1360 000e 9B05     		lsl	r3, r3, #22
 1361 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1362              		.loc 1 2367 0
 1363 0012 FB1D     		add	r3, r7, #7
 1364 0014 1B78     		ldrb	r3, [r3]
 1365 0016 1F2B     		cmp	r3, #31
 1366 0018 02D9     		bls	.L82
 1367              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1368 001a 0020     		mov	r0, #0
 1369 001c FFF7FEFF 		bl	CyHalt
 1370              	.L82:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1371              		.loc 1 2369 0 is_stmt 1
 1372 0020 FB1D     		add	r3, r7, #7
 1373 0022 1B78     		ldrb	r3, [r3]
 1374 0024 1033     		add	r3, r3, #16
 1375 0026 9B00     		lsl	r3, r3, #2
 1376 0028 FA68     		ldr	r2, [r7, #12]
 1377 002a D318     		add	r3, r2, r3
 1378 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 1379              		.loc 1 2370 0
 1380 002e 181C     		mov	r0, r3
 1381 0030 BD46     		mov	sp, r7
 1382 0032 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 67


 1383              		@ sp needed
 1384 0034 80BD     		pop	{r7, pc}
 1385              		.cfi_endproc
 1386              	.LFE21:
 1387              		.size	CyIntGetVector, .-CyIntGetVector
 1388              		.section	.text.CyIntSetPriority,"ax",%progbits
 1389              		.align	2
 1390              		.global	CyIntSetPriority
 1391              		.code	16
 1392              		.thumb_func
 1393              		.type	CyIntSetPriority, %function
 1394              	CyIntSetPriority:
 1395              	.LFB22:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 1396              		.loc 1 2383 0
 1397              		.cfi_startproc
 1398 0000 90B5     		push	{r4, r7, lr}
 1399              		.cfi_def_cfa_offset 12
 1400              		.cfi_offset 4, -12
 1401              		.cfi_offset 7, -8
 1402              		.cfi_offset 14, -4
 1403 0002 87B0     		sub	sp, sp, #28
 1404              		.cfi_def_cfa_offset 40
 1405 0004 00AF     		add	r7, sp, #0
 1406              		.cfi_def_cfa_register 7
 1407 0006 021C     		mov	r2, r0
 1408 0008 FB1D     		add	r3, r7, #7
 1409 000a 1A70     		strb	r2, [r3]
 1410 000c BB1D     		add	r3, r7, #6
 1411 000e 0A1C     		add	r2, r1, #0
 1412 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1413              		.loc 1 2388 0
 1414 0012 BB1D     		add	r3, r7, #6
 1415 0014 1B78     		ldrb	r3, [r3]
 1416 0016 032B     		cmp	r3, #3
 1417 0018 02D9     		bls	.L85
 1418              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1419 001a 0020     		mov	r0, #0
 1420 001c FFF7FEFF 		bl	CyHalt
 1421              	.L85:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 68


2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1422              		.loc 1 2389 0 is_stmt 1
 1423 0020 FB1D     		add	r3, r7, #7
 1424 0022 1B78     		ldrb	r3, [r3]
 1425 0024 1F2B     		cmp	r3, #31
 1426 0026 02D9     		bls	.L86
 1427              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1428 0028 0020     		mov	r0, #0
 1429 002a FFF7FEFF 		bl	CyHalt
 1430              	.L86:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1431              		.loc 1 2391 0 is_stmt 1
 1432 002e FB1D     		add	r3, r7, #7
 1433 0030 1B78     		ldrb	r3, [r3]
 1434 0032 0322     		mov	r2, #3
 1435 0034 1340     		and	r3, r2
 1436 0036 DB00     		lsl	r3, r3, #3
 1437 0038 0633     		add	r3, r3, #6
 1438 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1439              		.loc 1 2393 0
 1440 003c 1323     		mov	r3, #19
 1441 003e FC18     		add	r4, r7, r3
 1442 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1443 0044 031C     		mov	r3, r0
 1444 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1445              		.loc 1 2395 0
 1446 0048 FB1D     		add	r3, r7, #7
 1447 004a 1B78     		ldrb	r3, [r3]
 1448 004c 9B08     		lsr	r3, r3, #2
 1449 004e DBB2     		uxtb	r3, r3
 1450 0050 9B00     		lsl	r3, r3, #2
 1451 0052 144A     		ldr	r2, .L87
 1452 0054 9446     		mov	ip, r2
 1453 0056 6344     		add	r3, r3, ip
 1454 0058 1B68     		ldr	r3, [r3]
 1455 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1456              		.loc 1 2396 0
 1457 005c 7B69     		ldr	r3, [r7, #20]
 1458 005e 0322     		mov	r2, #3
 1459 0060 9A40     		lsl	r2, r2, r3
 1460 0062 131C     		mov	r3, r2
 1461 0064 DA43     		mvn	r2, r3
 1462 0066 FB68     		ldr	r3, [r7, #12]
 1463 0068 1340     		and	r3, r2
 1464 006a FB60     		str	r3, [r7, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1465              		.loc 1 2397 0
 1466 006c BB1D     		add	r3, r7, #6
 1467 006e 1A78     		ldrb	r2, [r3]
 1468 0070 7B69     		ldr	r3, [r7, #20]
 1469 0072 9A40     		lsl	r2, r2, r3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 69


 1470 0074 131C     		mov	r3, r2
 1471 0076 FA68     		ldr	r2, [r7, #12]
 1472 0078 1343     		orr	r3, r2
 1473 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1474              		.loc 1 2398 0
 1475 007c FB1D     		add	r3, r7, #7
 1476 007e 1B78     		ldrb	r3, [r3]
 1477 0080 9B08     		lsr	r3, r3, #2
 1478 0082 DBB2     		uxtb	r3, r3
 1479 0084 9B00     		lsl	r3, r3, #2
 1480 0086 074A     		ldr	r2, .L87
 1481 0088 9446     		mov	ip, r2
 1482 008a 6344     		add	r3, r3, ip
 1483 008c FA68     		ldr	r2, [r7, #12]
 1484 008e 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1485              		.loc 1 2400 0
 1486 0090 1323     		mov	r3, #19
 1487 0092 FB18     		add	r3, r7, r3
 1488 0094 1B78     		ldrb	r3, [r3]
 1489 0096 181C     		mov	r0, r3
 1490 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 1491              		.loc 1 2401 0
 1492 009c BD46     		mov	sp, r7
 1493 009e 07B0     		add	sp, sp, #28
 1494              		@ sp needed
 1495 00a0 90BD     		pop	{r4, r7, pc}
 1496              	.L88:
 1497 00a2 C046     		.align	2
 1498              	.L87:
 1499 00a4 00E400E0 		.word	-536812544
 1500              		.cfi_endproc
 1501              	.LFE22:
 1502              		.size	CyIntSetPriority, .-CyIntSetPriority
 1503              		.section	.text.CyIntGetPriority,"ax",%progbits
 1504              		.align	2
 1505              		.global	CyIntGetPriority
 1506              		.code	16
 1507              		.thumb_func
 1508              		.type	CyIntGetPriority, %function
 1509              	CyIntGetPriority:
 1510              	.LFB23:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 70


2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 1511              		.loc 1 2417 0
 1512              		.cfi_startproc
 1513 0000 80B5     		push	{r7, lr}
 1514              		.cfi_def_cfa_offset 8
 1515              		.cfi_offset 7, -8
 1516              		.cfi_offset 14, -4
 1517 0002 84B0     		sub	sp, sp, #16
 1518              		.cfi_def_cfa_offset 24
 1519 0004 00AF     		add	r7, sp, #0
 1520              		.cfi_def_cfa_register 7
 1521 0006 021C     		mov	r2, r0
 1522 0008 FB1D     		add	r3, r7, #7
 1523 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1524              		.loc 1 2420 0
 1525 000c FB1D     		add	r3, r7, #7
 1526 000e 1B78     		ldrb	r3, [r3]
 1527 0010 1F2B     		cmp	r3, #31
 1528 0012 02D9     		bls	.L90
 1529              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1530 0014 0020     		mov	r0, #0
 1531 0016 FFF7FEFF 		bl	CyHalt
 1532              	.L90:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1533              		.loc 1 2422 0 is_stmt 1
 1534 001a FB1D     		add	r3, r7, #7
 1535 001c 1B78     		ldrb	r3, [r3]
 1536 001e 9B08     		lsr	r3, r3, #2
 1537 0020 DBB2     		uxtb	r3, r3
 1538 0022 9B00     		lsl	r3, r3, #2
 1539 0024 0C4A     		ldr	r2, .L92
 1540 0026 9446     		mov	ip, r2
 1541 0028 6344     		add	r3, r3, ip
 1542 002a 1B68     		ldr	r3, [r3]
 1543 002c FA1D     		add	r2, r7, #7
 1544 002e 1278     		ldrb	r2, [r2]
 1545 0030 0321     		mov	r1, #3
 1546 0032 0A40     		and	r2, r1
 1547 0034 D200     		lsl	r2, r2, #3
 1548 0036 0632     		add	r2, r2, #6
 1549 0038 D340     		lsr	r3, r3, r2
 1550 003a 1A1C     		mov	r2, r3
 1551 003c 0F23     		mov	r3, #15
 1552 003e FB18     		add	r3, r7, r3
 1553 0040 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1554              		.loc 1 2424 0
 1555 0042 0F23     		mov	r3, #15
 1556 0044 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 71


 1557 0046 1B78     		ldrb	r3, [r3]
 1558 0048 0322     		mov	r2, #3
 1559 004a 1340     		and	r3, r2
 1560 004c DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 1561              		.loc 1 2425 0
 1562 004e 181C     		mov	r0, r3
 1563 0050 BD46     		mov	sp, r7
 1564 0052 04B0     		add	sp, sp, #16
 1565              		@ sp needed
 1566 0054 80BD     		pop	{r7, pc}
 1567              	.L93:
 1568 0056 C046     		.align	2
 1569              	.L92:
 1570 0058 00E400E0 		.word	-536812544
 1571              		.cfi_endproc
 1572              	.LFE23:
 1573              		.size	CyIntGetPriority, .-CyIntGetPriority
 1574              		.section	.text.CyIntEnable,"ax",%progbits
 1575              		.align	2
 1576              		.global	CyIntEnable
 1577              		.code	16
 1578              		.thumb_func
 1579              		.type	CyIntEnable, %function
 1580              	CyIntEnable:
 1581              	.LFB24:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 1582              		.loc 1 2438 0
 1583              		.cfi_startproc
 1584 0000 80B5     		push	{r7, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 7, -8
 1587              		.cfi_offset 14, -4
 1588 0002 82B0     		sub	sp, sp, #8
 1589              		.cfi_def_cfa_offset 16
 1590 0004 00AF     		add	r7, sp, #0
 1591              		.cfi_def_cfa_register 7
 1592 0006 021C     		mov	r2, r0
 1593 0008 FB1D     		add	r3, r7, #7
 1594 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1595              		.loc 1 2439 0
 1596 000c 054B     		ldr	r3, .L95
 1597 000e FA1D     		add	r2, r7, #7
 1598 0010 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 72


 1599 0012 1F21     		mov	r1, #31
 1600 0014 0A40     		and	r2, r1
 1601 0016 0121     		mov	r1, #1
 1602 0018 9140     		lsl	r1, r1, r2
 1603 001a 0A1C     		mov	r2, r1
 1604 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 1605              		.loc 1 2440 0
 1606 001e BD46     		mov	sp, r7
 1607 0020 02B0     		add	sp, sp, #8
 1608              		@ sp needed
 1609 0022 80BD     		pop	{r7, pc}
 1610              	.L96:
 1611              		.align	2
 1612              	.L95:
 1613 0024 00E100E0 		.word	-536813312
 1614              		.cfi_endproc
 1615              	.LFE24:
 1616              		.size	CyIntEnable, .-CyIntEnable
 1617              		.section	.text.CyIntGetState,"ax",%progbits
 1618              		.align	2
 1619              		.global	CyIntGetState
 1620              		.code	16
 1621              		.thumb_func
 1622              		.type	CyIntGetState, %function
 1623              	CyIntGetState:
 1624              	.LFB25:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1625              		.loc 1 2456 0
 1626              		.cfi_startproc
 1627 0000 80B5     		push	{r7, lr}
 1628              		.cfi_def_cfa_offset 8
 1629              		.cfi_offset 7, -8
 1630              		.cfi_offset 14, -4
 1631 0002 82B0     		sub	sp, sp, #8
 1632              		.cfi_def_cfa_offset 16
 1633 0004 00AF     		add	r7, sp, #0
 1634              		.cfi_def_cfa_register 7
 1635 0006 021C     		mov	r2, r0
 1636 0008 FB1D     		add	r3, r7, #7
 1637 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 73


2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1638              		.loc 1 2458 0
 1639 000c 074B     		ldr	r3, .L99
 1640 000e 1A68     		ldr	r2, [r3]
 1641 0010 FB1D     		add	r3, r7, #7
 1642 0012 1B78     		ldrb	r3, [r3]
 1643 0014 1F21     		mov	r1, #31
 1644 0016 0B40     		and	r3, r1
 1645 0018 DA40     		lsr	r2, r2, r3
 1646 001a 131C     		mov	r3, r2
 1647 001c DBB2     		uxtb	r3, r3
 1648 001e 0122     		mov	r2, #1
 1649 0020 1340     		and	r3, r2
 1650 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 1651              		.loc 1 2459 0
 1652 0024 181C     		mov	r0, r3
 1653 0026 BD46     		mov	sp, r7
 1654 0028 02B0     		add	sp, sp, #8
 1655              		@ sp needed
 1656 002a 80BD     		pop	{r7, pc}
 1657              	.L100:
 1658              		.align	2
 1659              	.L99:
 1660 002c 00E100E0 		.word	-536813312
 1661              		.cfi_endproc
 1662              	.LFE25:
 1663              		.size	CyIntGetState, .-CyIntGetState
 1664              		.section	.text.CyIntDisable,"ax",%progbits
 1665              		.align	2
 1666              		.global	CyIntDisable
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	CyIntDisable, %function
 1670              	CyIntDisable:
 1671              	.LFB26:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 1672              		.loc 1 2472 0
 1673              		.cfi_startproc
 1674 0000 80B5     		push	{r7, lr}
 1675              		.cfi_def_cfa_offset 8
 1676              		.cfi_offset 7, -8
 1677              		.cfi_offset 14, -4
 1678 0002 82B0     		sub	sp, sp, #8
 1679              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 74


 1680 0004 00AF     		add	r7, sp, #0
 1681              		.cfi_def_cfa_register 7
 1682 0006 021C     		mov	r2, r0
 1683 0008 FB1D     		add	r3, r7, #7
 1684 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1685              		.loc 1 2473 0
 1686 000c 054B     		ldr	r3, .L102
 1687 000e FA1D     		add	r2, r7, #7
 1688 0010 1278     		ldrb	r2, [r2]
 1689 0012 1F21     		mov	r1, #31
 1690 0014 0A40     		and	r2, r1
 1691 0016 0121     		mov	r1, #1
 1692 0018 9140     		lsl	r1, r1, r2
 1693 001a 0A1C     		mov	r2, r1
 1694 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 1695              		.loc 1 2474 0
 1696 001e BD46     		mov	sp, r7
 1697 0020 02B0     		add	sp, sp, #8
 1698              		@ sp needed
 1699 0022 80BD     		pop	{r7, pc}
 1700              	.L103:
 1701              		.align	2
 1702              	.L102:
 1703 0024 80E100E0 		.word	-536813184
 1704              		.cfi_endproc
 1705              	.LFE26:
 1706              		.size	CyIntDisable, .-CyIntDisable
 1707              		.section	.text.CyIntSetPending,"ax",%progbits
 1708              		.align	2
 1709              		.global	CyIntSetPending
 1710              		.code	16
 1711              		.thumb_func
 1712              		.type	CyIntSetPending, %function
 1713              	CyIntSetPending:
 1714              	.LFB27:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1715              		.loc 1 2486 0
 1716              		.cfi_startproc
 1717 0000 80B5     		push	{r7, lr}
 1718              		.cfi_def_cfa_offset 8
 1719              		.cfi_offset 7, -8
 1720              		.cfi_offset 14, -4
 1721 0002 82B0     		sub	sp, sp, #8
 1722              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 75


 1723 0004 00AF     		add	r7, sp, #0
 1724              		.cfi_def_cfa_register 7
 1725 0006 021C     		mov	r2, r0
 1726 0008 FB1D     		add	r3, r7, #7
 1727 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1728              		.loc 1 2487 0
 1729 000c 054B     		ldr	r3, .L105
 1730 000e FA1D     		add	r2, r7, #7
 1731 0010 1278     		ldrb	r2, [r2]
 1732 0012 1F21     		mov	r1, #31
 1733 0014 0A40     		and	r2, r1
 1734 0016 0121     		mov	r1, #1
 1735 0018 9140     		lsl	r1, r1, r2
 1736 001a 0A1C     		mov	r2, r1
 1737 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 1738              		.loc 1 2488 0
 1739 001e BD46     		mov	sp, r7
 1740 0020 02B0     		add	sp, sp, #8
 1741              		@ sp needed
 1742 0022 80BD     		pop	{r7, pc}
 1743              	.L106:
 1744              		.align	2
 1745              	.L105:
 1746 0024 00E200E0 		.word	-536813056
 1747              		.cfi_endproc
 1748              	.LFE27:
 1749              		.size	CyIntSetPending, .-CyIntSetPending
 1750              		.section	.text.CyIntClearPending,"ax",%progbits
 1751              		.align	2
 1752              		.global	CyIntClearPending
 1753              		.code	16
 1754              		.thumb_func
 1755              		.type	CyIntClearPending, %function
 1756              	CyIntClearPending:
 1757              	.LFB28:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 1758              		.loc 1 2501 0
 1759              		.cfi_startproc
 1760 0000 80B5     		push	{r7, lr}
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 7, -8
 1763              		.cfi_offset 14, -4
 1764 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 76


 1765              		.cfi_def_cfa_offset 16
 1766 0004 00AF     		add	r7, sp, #0
 1767              		.cfi_def_cfa_register 7
 1768 0006 021C     		mov	r2, r0
 1769 0008 FB1D     		add	r3, r7, #7
 1770 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1771              		.loc 1 2502 0
 1772 000c 054B     		ldr	r3, .L108
 1773 000e FA1D     		add	r2, r7, #7
 1774 0010 1278     		ldrb	r2, [r2]
 1775 0012 1F21     		mov	r1, #31
 1776 0014 0A40     		and	r2, r1
 1777 0016 0121     		mov	r1, #1
 1778 0018 9140     		lsl	r1, r1, r2
 1779 001a 0A1C     		mov	r2, r1
 1780 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 1781              		.loc 1 2503 0
 1782 001e BD46     		mov	sp, r7
 1783 0020 02B0     		add	sp, sp, #8
 1784              		@ sp needed
 1785 0022 80BD     		pop	{r7, pc}
 1786              	.L109:
 1787              		.align	2
 1788              	.L108:
 1789 0024 80E200E0 		.word	-536812928
 1790              		.cfi_endproc
 1791              	.LFE28:
 1792              		.size	CyIntClearPending, .-CyIntClearPending
 1793              		.section	.text.CyHalt,"ax",%progbits
 1794              		.align	2
 1795              		.global	CyHalt
 1796              		.code	16
 1797              		.thumb_func
 1798              		.type	CyHalt, %function
 1799              	CyHalt:
 1800              	.LFB29:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1801              		.loc 1 2516 0
 1802              		.cfi_startproc
 1803 0000 80B5     		push	{r7, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 77


 1807 0002 82B0     		sub	sp, sp, #8
 1808              		.cfi_def_cfa_offset 16
 1809 0004 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
 1811 0006 021C     		mov	r2, r0
 1812 0008 FB1D     		add	r3, r7, #7
 1813 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1814              		.loc 1 2525 0
 1815              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1816 000c 01BE     		    bkpt    1
 1817              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1818              		.loc 1 2529 0
 1819              		.code	16
 1820 000e BD46     		mov	sp, r7
 1821 0010 02B0     		add	sp, sp, #8
 1822              		@ sp needed
 1823 0012 80BD     		pop	{r7, pc}
 1824              		.cfi_endproc
 1825              	.LFE29:
 1826              		.size	CyHalt, .-CyHalt
 1827              		.section	.text.CySoftwareReset,"ax",%progbits
 1828              		.align	2
 1829              		.global	CySoftwareReset
 1830              		.code	16
 1831              		.thumb_func
 1832              		.type	CySoftwareReset, %function
 1833              	CySoftwareReset:
 1834              	.LFB30:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1835              		.loc 1 2540 0
 1836              		.cfi_startproc
 1837 0000 80B5     		push	{r7, lr}
 1838              		.cfi_def_cfa_offset 8
 1839              		.cfi_offset 7, -8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 78


 1840              		.cfi_offset 14, -4
 1841 0002 00AF     		add	r7, sp, #0
 1842              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1843              		.loc 1 2545 0
 1844 0004 044B     		ldr	r3, .L112
 1845 0006 044A     		ldr	r2, .L112
 1846 0008 1268     		ldr	r2, [r2]
 1847 000a 1204     		lsl	r2, r2, #16
 1848 000c 120C     		lsr	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1849              		.loc 1 2546 0
 1850 000e 0349     		ldr	r1, .L112+4
 1851 0010 0A43     		orr	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1852              		.loc 1 2545 0
 1853 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1854              		.loc 1 2547 0
 1855 0014 BD46     		mov	sp, r7
 1856              		@ sp needed
 1857 0016 80BD     		pop	{r7, pc}
 1858              	.L113:
 1859              		.align	2
 1860              	.L112:
 1861 0018 0CED00E0 		.word	-536810228
 1862 001c 0400FA05 		.word	100270084
 1863              		.cfi_endproc
 1864              	.LFE30:
 1865              		.size	CySoftwareReset, .-CySoftwareReset
 1866              		.section	.text.CyDelay,"ax",%progbits
 1867              		.align	2
 1868              		.global	CyDelay
 1869              		.code	16
 1870              		.thumb_func
 1871              		.type	CyDelay, %function
 1872              	CyDelay:
 1873              	.LFB31:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1874              		.loc 1 2560 0
 1875              		.cfi_startproc
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 79


 1876 0000 80B5     		push	{r7, lr}
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 7, -8
 1879              		.cfi_offset 14, -4
 1880 0002 82B0     		sub	sp, sp, #8
 1881              		.cfi_def_cfa_offset 16
 1882 0004 00AF     		add	r7, sp, #0
 1883              		.cfi_def_cfa_register 7
 1884 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1885              		.loc 1 2561 0
 1886 0008 09E0     		b	.L115
 1887              	.L116:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1888              		.loc 1 2566 0
 1889 000a 0C4B     		ldr	r3, .L117
 1890 000c 1B68     		ldr	r3, [r3]
 1891 000e 181C     		mov	r0, r3
 1892 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1893              		.loc 1 2567 0
 1894 0014 7B68     		ldr	r3, [r7, #4]
 1895 0016 0A4A     		ldr	r2, .L117+4
 1896 0018 9446     		mov	ip, r2
 1897 001a 6344     		add	r3, r3, ip
 1898 001c 7B60     		str	r3, [r7, #4]
 1899              	.L115:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1900              		.loc 1 2561 0
 1901 001e 7A68     		ldr	r2, [r7, #4]
 1902 0020 8023     		mov	r3, #128
 1903 0022 1B02     		lsl	r3, r3, #8
 1904 0024 9A42     		cmp	r2, r3
 1905 0026 F0D8     		bhi	.L116
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1906              		.loc 1 2570 0
 1907 0028 064B     		ldr	r3, .L117+8
 1908 002a 1B68     		ldr	r3, [r3]
 1909 002c 7A68     		ldr	r2, [r7, #4]
 1910 002e 5343     		mul	r3, r2
 1911 0030 181C     		mov	r0, r3
 1912 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 1913              		.loc 1 2571 0
 1914 0036 BD46     		mov	sp, r7
 1915 0038 02B0     		add	sp, sp, #8
 1916              		@ sp needed
 1917 003a 80BD     		pop	{r7, pc}
 1918              	.L118:
 1919              		.align	2
 1920              	.L117:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 80


 1921 003c 00000000 		.word	cydelay32kMs
 1922 0040 0080FFFF 		.word	-32768
 1923 0044 00000000 		.word	cydelayFreqKhz
 1924              		.cfi_endproc
 1925              	.LFE31:
 1926              		.size	CyDelay, .-CyDelay
 1927              		.section	.text.CyDelayUs,"ax",%progbits
 1928              		.align	2
 1929              		.global	CyDelayUs
 1930              		.code	16
 1931              		.thumb_func
 1932              		.type	CyDelayUs, %function
 1933              	CyDelayUs:
 1934              	.LFB32:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1935              		.loc 1 2583 0
 1936              		.cfi_startproc
 1937 0000 80B5     		push	{r7, lr}
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 7, -8
 1940              		.cfi_offset 14, -4
 1941 0002 82B0     		sub	sp, sp, #8
 1942              		.cfi_def_cfa_offset 16
 1943 0004 00AF     		add	r7, sp, #0
 1944              		.cfi_def_cfa_register 7
 1945 0006 021C     		mov	r2, r0
 1946 0008 BB1D     		add	r3, r7, #6
 1947 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1948              		.loc 1 2584 0
 1949 000c BB1D     		add	r3, r7, #6
 1950 000e 1B88     		ldrh	r3, [r3]
 1951 0010 044A     		ldr	r2, .L120
 1952 0012 1278     		ldrb	r2, [r2]
 1953 0014 5343     		mul	r3, r2
 1954 0016 181C     		mov	r0, r3
 1955 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 1956              		.loc 1 2585 0
 1957 001c BD46     		mov	sp, r7
 1958 001e 02B0     		add	sp, sp, #8
 1959              		@ sp needed
 1960 0020 80BD     		pop	{r7, pc}
 1961              	.L121:
 1962 0022 C046     		.align	2
 1963              	.L120:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 81


 1964 0024 00000000 		.word	cydelayFreqMhz
 1965              		.cfi_endproc
 1966              	.LFE32:
 1967              		.size	CyDelayUs, .-CyDelayUs
 1968              		.global	__aeabi_uidiv
 1969              		.section	.text.CyDelayFreq,"ax",%progbits
 1970              		.align	2
 1971              		.global	CyDelayFreq
 1972              		.code	16
 1973              		.thumb_func
 1974              		.type	CyDelayFreq, %function
 1975              	CyDelayFreq:
 1976              	.LFB33:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1977              		.loc 1 2597 0
 1978              		.cfi_startproc
 1979 0000 80B5     		push	{r7, lr}
 1980              		.cfi_def_cfa_offset 8
 1981              		.cfi_offset 7, -8
 1982              		.cfi_offset 14, -4
 1983 0002 82B0     		sub	sp, sp, #8
 1984              		.cfi_def_cfa_offset 16
 1985 0004 00AF     		add	r7, sp, #0
 1986              		.cfi_def_cfa_register 7
 1987 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1988              		.loc 1 2598 0
 1989 0008 7B68     		ldr	r3, [r7, #4]
 1990 000a 002B     		cmp	r3, #0
 1991 000c 03D0     		beq	.L123
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1992              		.loc 1 2600 0
 1993 000e 154B     		ldr	r3, .L125
 1994 0010 7A68     		ldr	r2, [r7, #4]
 1995 0012 1A60     		str	r2, [r3]
 1996 0014 02E0     		b	.L124
 1997              	.L123:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1998              		.loc 1 2604 0
 1999 0016 134B     		ldr	r3, .L125
 2000 0018 134A     		ldr	r2, .L125+4
 2001 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 82


 2002              	.L124:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2003              		.loc 1 2607 0
 2004 001c 114B     		ldr	r3, .L125
 2005 001e 1B68     		ldr	r3, [r3]
 2006 0020 124A     		ldr	r2, .L125+8
 2007 0022 9446     		mov	ip, r2
 2008 0024 6344     		add	r3, r3, ip
 2009 0026 181C     		mov	r0, r3
 2010 0028 1149     		ldr	r1, .L125+12
 2011 002a FFF7FEFF 		bl	__aeabi_uidiv
 2012 002e 031C     		mov	r3, r0
 2013 0030 DAB2     		uxtb	r2, r3
 2014 0032 104B     		ldr	r3, .L125+16
 2015 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2016              		.loc 1 2608 0
 2017 0036 0B4B     		ldr	r3, .L125
 2018 0038 1B68     		ldr	r3, [r3]
 2019 003a 0F4A     		ldr	r2, .L125+20
 2020 003c 9446     		mov	ip, r2
 2021 003e 6344     		add	r3, r3, ip
 2022 0040 181C     		mov	r0, r3
 2023 0042 FA23     		mov	r3, #250
 2024 0044 9900     		lsl	r1, r3, #2
 2025 0046 FFF7FEFF 		bl	__aeabi_uidiv
 2026 004a 031C     		mov	r3, r0
 2027 004c 1A1C     		mov	r2, r3
 2028 004e 0B4B     		ldr	r3, .L125+24
 2029 0050 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2030              		.loc 1 2609 0
 2031 0052 0A4B     		ldr	r3, .L125+24
 2032 0054 1B68     		ldr	r3, [r3]
 2033 0056 DA03     		lsl	r2, r3, #15
 2034 0058 094B     		ldr	r3, .L125+28
 2035 005a 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 2036              		.loc 1 2610 0
 2037 005c BD46     		mov	sp, r7
 2038 005e 02B0     		add	sp, sp, #8
 2039              		@ sp needed
 2040 0060 80BD     		pop	{r7, pc}
 2041              	.L126:
 2042 0062 C046     		.align	2
 2043              	.L125:
 2044 0064 00000000 		.word	cydelayFreqHz
 2045 0068 006CDC02 		.word	48000000
 2046 006c 3F420F00 		.word	999999
 2047 0070 40420F00 		.word	1000000
 2048 0074 00000000 		.word	cydelayFreqMhz
 2049 0078 E7030000 		.word	999
 2050 007c 00000000 		.word	cydelayFreqKhz
 2051 0080 00000000 		.word	cydelay32kMs
 2052              		.cfi_endproc
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 83


 2053              	.LFE33:
 2054              		.size	CyDelayFreq, .-CyDelayFreq
 2055              		.section	.text.CySysTickStart,"ax",%progbits
 2056              		.align	2
 2057              		.global	CySysTickStart
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	CySysTickStart, %function
 2061              	CySysTickStart:
 2062              	.LFB34:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 2063              		.loc 1 2629 0
 2064              		.cfi_startproc
 2065 0000 80B5     		push	{r7, lr}
 2066              		.cfi_def_cfa_offset 8
 2067              		.cfi_offset 7, -8
 2068              		.cfi_offset 14, -4
 2069 0002 00AF     		add	r7, sp, #0
 2070              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2071              		.loc 1 2630 0
 2072 0004 064B     		ldr	r3, .L129
 2073 0006 1B68     		ldr	r3, [r3]
 2074 0008 002B     		cmp	r3, #0
 2075 000a 04D1     		bne	.L128
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2076              		.loc 1 2632 0
 2077 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2078              		.loc 1 2633 0
 2079 0010 034B     		ldr	r3, .L129
 2080 0012 0122     		mov	r2, #1
 2081 0014 1A60     		str	r2, [r3]
 2082              	.L128:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2083              		.loc 1 2636 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 84


 2084 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 2085              		.loc 1 2637 0
 2086 001a BD46     		mov	sp, r7
 2087              		@ sp needed
 2088 001c 80BD     		pop	{r7, pc}
 2089              	.L130:
 2090 001e C046     		.align	2
 2091              	.L129:
 2092 0020 00000000 		.word	CySysTickInitVar
 2093              		.cfi_endproc
 2094              	.LFE34:
 2095              		.size	CySysTickStart, .-CySysTickStart
 2096              		.section	.text.CySysTickInit,"ax",%progbits
 2097              		.align	2
 2098              		.global	CySysTickInit
 2099              		.code	16
 2100              		.thumb_func
 2101              		.type	CySysTickInit, %function
 2102              	CySysTickInit:
 2103              	.LFB35:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 2104              		.loc 1 2658 0
 2105              		.cfi_startproc
 2106 0000 80B5     		push	{r7, lr}
 2107              		.cfi_def_cfa_offset 8
 2108              		.cfi_offset 7, -8
 2109              		.cfi_offset 14, -4
 2110 0002 82B0     		sub	sp, sp, #8
 2111              		.cfi_def_cfa_offset 16
 2112 0004 00AF     		add	r7, sp, #0
 2113              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2114              		.loc 1 2661 0
 2115 0006 0023     		mov	r3, #0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 85


 2116 0008 7B60     		str	r3, [r7, #4]
 2117 000a 07E0     		b	.L132
 2118              	.L133:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2119              		.loc 1 2663 0 discriminator 3
 2120 000c 124B     		ldr	r3, .L134
 2121 000e 7A68     		ldr	r2, [r7, #4]
 2122 0010 9200     		lsl	r2, r2, #2
 2123 0012 0021     		mov	r1, #0
 2124 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2125              		.loc 1 2661 0 discriminator 3
 2126 0016 7B68     		ldr	r3, [r7, #4]
 2127 0018 0133     		add	r3, r3, #1
 2128 001a 7B60     		str	r3, [r7, #4]
 2129              	.L132:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2130              		.loc 1 2661 0 is_stmt 0 discriminator 1
 2131 001c 7B68     		ldr	r3, [r7, #4]
 2132 001e 042B     		cmp	r3, #4
 2133 0020 F4D9     		bls	.L133
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2134              		.loc 1 2666 0 is_stmt 1
 2135 0022 0E4B     		ldr	r3, .L134+4
 2136 0024 0F20     		mov	r0, #15
 2137 0026 191C     		mov	r1, r3
 2138 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2139              		.loc 1 2669 0
 2140 002c 0120     		mov	r0, #1
 2141 002e FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2142              		.loc 1 2672 0
 2143 0032 0B4B     		ldr	r3, .L134+8
 2144 0034 1B68     		ldr	r3, [r3]
 2145 0036 181C     		mov	r0, r3
 2146 0038 FA23     		mov	r3, #250
 2147 003a 9900     		lsl	r1, r3, #2
 2148 003c FFF7FEFF 		bl	__aeabi_uidiv
 2149 0040 031C     		mov	r3, r0
 2150 0042 181C     		mov	r0, r3
 2151 0044 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2152              		.loc 1 2673 0
 2153 0048 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2154              		.loc 1 2674 0
 2155 004c 0F20     		mov	r0, #15
 2156 004e FFF7FEFF 		bl	CyIntEnable
2675:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 86


 2157              		.loc 1 2675 0
 2158 0052 BD46     		mov	sp, r7
 2159 0054 02B0     		add	sp, sp, #8
 2160              		@ sp needed
 2161 0056 80BD     		pop	{r7, pc}
 2162              	.L135:
 2163              		.align	2
 2164              	.L134:
 2165 0058 00000000 		.word	CySysTickCallbacks
 2166 005c 00000000 		.word	CySysTickServiceCallbacks
 2167 0060 00000000 		.word	cydelayFreqHz
 2168              		.cfi_endproc
 2169              	.LFE35:
 2170              		.size	CySysTickInit, .-CySysTickInit
 2171              		.section	.text.CySysTickEnable,"ax",%progbits
 2172              		.align	2
 2173              		.global	CySysTickEnable
 2174              		.code	16
 2175              		.thumb_func
 2176              		.type	CySysTickEnable, %function
 2177              	CySysTickEnable:
 2178              	.LFB36:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
 2179              		.loc 1 2689 0
 2180              		.cfi_startproc
 2181 0000 80B5     		push	{r7, lr}
 2182              		.cfi_def_cfa_offset 8
 2183              		.cfi_offset 7, -8
 2184              		.cfi_offset 14, -4
 2185 0002 00AF     		add	r7, sp, #0
 2186              		.cfi_def_cfa_register 7
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2187              		.loc 1 2690 0
 2188 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2189              		.loc 1 2691 0
 2190 0008 034B     		ldr	r3, .L137
 2191 000a 034A     		ldr	r2, .L137
 2192 000c 1268     		ldr	r2, [r2]
 2193 000e 0121     		mov	r1, #1
 2194 0010 0A43     		orr	r2, r1
 2195 0012 1A60     		str	r2, [r3]
2692:Generated_Source\PSoC4/CyLib.c **** }
 2196              		.loc 1 2692 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 87


 2197 0014 BD46     		mov	sp, r7
 2198              		@ sp needed
 2199 0016 80BD     		pop	{r7, pc}
 2200              	.L138:
 2201              		.align	2
 2202              	.L137:
 2203 0018 10E000E0 		.word	-536813552
 2204              		.cfi_endproc
 2205              	.LFE36:
 2206              		.size	CySysTickEnable, .-CySysTickEnable
 2207              		.section	.text.CySysTickStop,"ax",%progbits
 2208              		.align	2
 2209              		.global	CySysTickStop
 2210              		.code	16
 2211              		.thumb_func
 2212              		.type	CySysTickStop, %function
 2213              	CySysTickStop:
 2214              	.LFB37:
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 2215              		.loc 1 2706 0
 2216              		.cfi_startproc
 2217 0000 80B5     		push	{r7, lr}
 2218              		.cfi_def_cfa_offset 8
 2219              		.cfi_offset 7, -8
 2220              		.cfi_offset 14, -4
 2221 0002 00AF     		add	r7, sp, #0
 2222              		.cfi_def_cfa_register 7
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2223              		.loc 1 2707 0
 2224 0004 034B     		ldr	r3, .L140
 2225 0006 034A     		ldr	r2, .L140
 2226 0008 1268     		ldr	r2, [r2]
 2227 000a 0121     		mov	r1, #1
 2228 000c 8A43     		bic	r2, r1
 2229 000e 1A60     		str	r2, [r3]
2708:Generated_Source\PSoC4/CyLib.c **** }
 2230              		.loc 1 2708 0
 2231 0010 BD46     		mov	sp, r7
 2232              		@ sp needed
 2233 0012 80BD     		pop	{r7, pc}
 2234              	.L141:
 2235              		.align	2
 2236              	.L140:
 2237 0014 10E000E0 		.word	-536813552
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 88


 2238              		.cfi_endproc
 2239              	.LFE37:
 2240              		.size	CySysTickStop, .-CySysTickStop
 2241              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2242              		.align	2
 2243              		.global	CySysTickEnableInterrupt
 2244              		.code	16
 2245              		.thumb_func
 2246              		.type	CySysTickEnableInterrupt, %function
 2247              	CySysTickEnableInterrupt:
 2248              	.LFB38:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 2249              		.loc 1 2722 0
 2250              		.cfi_startproc
 2251 0000 80B5     		push	{r7, lr}
 2252              		.cfi_def_cfa_offset 8
 2253              		.cfi_offset 7, -8
 2254              		.cfi_offset 14, -4
 2255 0002 00AF     		add	r7, sp, #0
 2256              		.cfi_def_cfa_register 7
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2257              		.loc 1 2723 0
 2258 0004 034B     		ldr	r3, .L143
 2259 0006 034A     		ldr	r2, .L143
 2260 0008 1268     		ldr	r2, [r2]
 2261 000a 0221     		mov	r1, #2
 2262 000c 0A43     		orr	r2, r1
 2263 000e 1A60     		str	r2, [r3]
2724:Generated_Source\PSoC4/CyLib.c **** }
 2264              		.loc 1 2724 0
 2265 0010 BD46     		mov	sp, r7
 2266              		@ sp needed
 2267 0012 80BD     		pop	{r7, pc}
 2268              	.L144:
 2269              		.align	2
 2270              	.L143:
 2271 0014 10E000E0 		.word	-536813552
 2272              		.cfi_endproc
 2273              	.LFE38:
 2274              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2275              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2276              		.align	2
 2277              		.global	CySysTickDisableInterrupt
 2278              		.code	16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 89


 2279              		.thumb_func
 2280              		.type	CySysTickDisableInterrupt, %function
 2281              	CySysTickDisableInterrupt:
 2282              	.LFB39:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 2283              		.loc 1 2738 0
 2284              		.cfi_startproc
 2285 0000 80B5     		push	{r7, lr}
 2286              		.cfi_def_cfa_offset 8
 2287              		.cfi_offset 7, -8
 2288              		.cfi_offset 14, -4
 2289 0002 00AF     		add	r7, sp, #0
 2290              		.cfi_def_cfa_register 7
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2291              		.loc 1 2739 0
 2292 0004 034B     		ldr	r3, .L146
 2293 0006 034A     		ldr	r2, .L146
 2294 0008 1268     		ldr	r2, [r2]
 2295 000a 0221     		mov	r1, #2
 2296 000c 8A43     		bic	r2, r1
 2297 000e 1A60     		str	r2, [r3]
2740:Generated_Source\PSoC4/CyLib.c **** }
 2298              		.loc 1 2740 0
 2299 0010 BD46     		mov	sp, r7
 2300              		@ sp needed
 2301 0012 80BD     		pop	{r7, pc}
 2302              	.L147:
 2303              		.align	2
 2304              	.L146:
 2305 0014 10E000E0 		.word	-536813552
 2306              		.cfi_endproc
 2307              	.LFE39:
 2308              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2309              		.section	.text.CySysTickSetReload,"ax",%progbits
 2310              		.align	2
 2311              		.global	CySysTickSetReload
 2312              		.code	16
 2313              		.thumb_func
 2314              		.type	CySysTickSetReload, %function
 2315              	CySysTickSetReload:
 2316              	.LFB40:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 90


2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 2317              		.loc 1 2755 0
 2318              		.cfi_startproc
 2319 0000 80B5     		push	{r7, lr}
 2320              		.cfi_def_cfa_offset 8
 2321              		.cfi_offset 7, -8
 2322              		.cfi_offset 14, -4
 2323 0002 82B0     		sub	sp, sp, #8
 2324              		.cfi_def_cfa_offset 16
 2325 0004 00AF     		add	r7, sp, #0
 2326              		.cfi_def_cfa_register 7
 2327 0006 7860     		str	r0, [r7, #4]
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2328              		.loc 1 2756 0
 2329 0008 034B     		ldr	r3, .L149
 2330 000a 7A68     		ldr	r2, [r7, #4]
 2331 000c 1202     		lsl	r2, r2, #8
 2332 000e 120A     		lsr	r2, r2, #8
 2333 0010 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 2334              		.loc 1 2757 0
 2335 0012 BD46     		mov	sp, r7
 2336 0014 02B0     		add	sp, sp, #8
 2337              		@ sp needed
 2338 0016 80BD     		pop	{r7, pc}
 2339              	.L150:
 2340              		.align	2
 2341              	.L149:
 2342 0018 14E000E0 		.word	-536813548
 2343              		.cfi_endproc
 2344              	.LFE40:
 2345              		.size	CySysTickSetReload, .-CySysTickSetReload
 2346              		.section	.text.CySysTickGetReload,"ax",%progbits
 2347              		.align	2
 2348              		.global	CySysTickGetReload
 2349              		.code	16
 2350              		.thumb_func
 2351              		.type	CySysTickGetReload, %function
 2352              	CySysTickGetReload:
 2353              	.LFB41:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 91


2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 2354              		.loc 1 2771 0
 2355              		.cfi_startproc
 2356 0000 80B5     		push	{r7, lr}
 2357              		.cfi_def_cfa_offset 8
 2358              		.cfi_offset 7, -8
 2359              		.cfi_offset 14, -4
 2360 0002 00AF     		add	r7, sp, #0
 2361              		.cfi_def_cfa_register 7
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2362              		.loc 1 2772 0
 2363 0004 034B     		ldr	r3, .L153
 2364 0006 1B68     		ldr	r3, [r3]
 2365 0008 1B02     		lsl	r3, r3, #8
 2366 000a 1B0A     		lsr	r3, r3, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 2367              		.loc 1 2773 0
 2368 000c 181C     		mov	r0, r3
 2369 000e BD46     		mov	sp, r7
 2370              		@ sp needed
 2371 0010 80BD     		pop	{r7, pc}
 2372              	.L154:
 2373 0012 C046     		.align	2
 2374              	.L153:
 2375 0014 14E000E0 		.word	-536813548
 2376              		.cfi_endproc
 2377              	.LFE41:
 2378              		.size	CySysTickGetReload, .-CySysTickGetReload
 2379              		.section	.text.CySysTickGetValue,"ax",%progbits
 2380              		.align	2
 2381              		.global	CySysTickGetValue
 2382              		.code	16
 2383              		.thumb_func
 2384              		.type	CySysTickGetValue, %function
 2385              	CySysTickGetValue:
 2386              	.LFB42:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 92


 2387              		.loc 1 2787 0
 2388              		.cfi_startproc
 2389 0000 80B5     		push	{r7, lr}
 2390              		.cfi_def_cfa_offset 8
 2391              		.cfi_offset 7, -8
 2392              		.cfi_offset 14, -4
 2393 0002 00AF     		add	r7, sp, #0
 2394              		.cfi_def_cfa_register 7
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2395              		.loc 1 2788 0
 2396 0004 034B     		ldr	r3, .L157
 2397 0006 1B68     		ldr	r3, [r3]
 2398 0008 1B02     		lsl	r3, r3, #8
 2399 000a 1B0A     		lsr	r3, r3, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 2400              		.loc 1 2789 0
 2401 000c 181C     		mov	r0, r3
 2402 000e BD46     		mov	sp, r7
 2403              		@ sp needed
 2404 0010 80BD     		pop	{r7, pc}
 2405              	.L158:
 2406 0012 C046     		.align	2
 2407              	.L157:
 2408 0014 18E000E0 		.word	-536813544
 2409              		.cfi_endproc
 2410              	.LFE42:
 2411              		.size	CySysTickGetValue, .-CySysTickGetValue
 2412              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2413              		.align	2
 2414              		.global	CySysTickSetClockSource
 2415              		.code	16
 2416              		.thumb_func
 2417              		.type	CySysTickSetClockSource, %function
 2418              	CySysTickSetClockSource:
 2419              	.LFB43:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 93


2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 2420              		.loc 1 2819 0
 2421              		.cfi_startproc
 2422 0000 80B5     		push	{r7, lr}
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 82B0     		sub	sp, sp, #8
 2427              		.cfi_def_cfa_offset 16
 2428 0004 00AF     		add	r7, sp, #0
 2429              		.cfi_def_cfa_register 7
 2430 0006 7860     		str	r0, [r7, #4]
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2431              		.loc 1 2820 0
 2432 0008 7B68     		ldr	r3, [r7, #4]
 2433 000a 012B     		cmp	r3, #1
 2434 000c 06D1     		bne	.L160
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2435              		.loc 1 2822 0
 2436 000e 084B     		ldr	r3, .L162
 2437 0010 074A     		ldr	r2, .L162
 2438 0012 1268     		ldr	r2, [r2]
 2439 0014 0421     		mov	r1, #4
 2440 0016 0A43     		orr	r2, r1
 2441 0018 1A60     		str	r2, [r3]
 2442 001a 05E0     		b	.L159
 2443              	.L160:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 2444              		.loc 1 2826 0
 2445 001c 044B     		ldr	r3, .L162
 2446 001e 044A     		ldr	r2, .L162
 2447 0020 1268     		ldr	r2, [r2]
 2448 0022 0421     		mov	r1, #4
 2449 0024 8A43     		bic	r2, r1
 2450 0026 1A60     		str	r2, [r3]
 2451              	.L159:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 2452              		.loc 1 2828 0
 2453 0028 BD46     		mov	sp, r7
 2454 002a 02B0     		add	sp, sp, #8
 2455              		@ sp needed
 2456 002c 80BD     		pop	{r7, pc}
 2457              	.L163:
 2458 002e C046     		.align	2
 2459              	.L162:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 94


 2460 0030 10E000E0 		.word	-536813552
 2461              		.cfi_endproc
 2462              	.LFE43:
 2463              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2464              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2465              		.align	2
 2466              		.global	CySysTickGetClockSource
 2467              		.code	16
 2468              		.thumb_func
 2469              		.type	CySysTickGetClockSource, %function
 2470              	CySysTickGetClockSource:
 2471              	.LFB44:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 2472              		.loc 1 2844 0
 2473              		.cfi_startproc
 2474 0000 80B5     		push	{r7, lr}
 2475              		.cfi_def_cfa_offset 8
 2476              		.cfi_offset 7, -8
 2477              		.cfi_offset 14, -4
 2478 0002 00AF     		add	r7, sp, #0
 2479              		.cfi_def_cfa_register 7
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2480              		.loc 1 2845 0
 2481 0004 034B     		ldr	r3, .L166
 2482 0006 1B68     		ldr	r3, [r3]
 2483 0008 9B08     		lsr	r3, r3, #2
 2484 000a 0122     		mov	r2, #1
 2485 000c 1340     		and	r3, r2
2846:Generated_Source\PSoC4/CyLib.c ****     }
 2486              		.loc 1 2846 0
 2487 000e 181C     		mov	r0, r3
 2488 0010 BD46     		mov	sp, r7
 2489              		@ sp needed
 2490 0012 80BD     		pop	{r7, pc}
 2491              	.L167:
 2492              		.align	2
 2493              	.L166:
 2494 0014 10E000E0 		.word	-536813552
 2495              		.cfi_endproc
 2496              	.LFE44:
 2497              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2498              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 95


 2499              		.align	2
 2500              		.global	CySysTickGetCountFlag
 2501              		.code	16
 2502              		.thumb_func
 2503              		.type	CySysTickGetCountFlag, %function
 2504              	CySysTickGetCountFlag:
 2505              	.LFB45:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 2506              		.loc 1 2867 0
 2507              		.cfi_startproc
 2508 0000 80B5     		push	{r7, lr}
 2509              		.cfi_def_cfa_offset 8
 2510              		.cfi_offset 7, -8
 2511              		.cfi_offset 14, -4
 2512 0002 00AF     		add	r7, sp, #0
 2513              		.cfi_def_cfa_register 7
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2514              		.loc 1 2868 0
 2515 0004 034B     		ldr	r3, .L170
 2516 0006 1B68     		ldr	r3, [r3]
 2517 0008 1B0C     		lsr	r3, r3, #16
 2518 000a 0122     		mov	r2, #1
 2519 000c 1340     		and	r3, r2
2869:Generated_Source\PSoC4/CyLib.c **** }
 2520              		.loc 1 2869 0
 2521 000e 181C     		mov	r0, r3
 2522 0010 BD46     		mov	sp, r7
 2523              		@ sp needed
 2524 0012 80BD     		pop	{r7, pc}
 2525              	.L171:
 2526              		.align	2
 2527              	.L170:
 2528 0014 10E000E0 		.word	-536813552
 2529              		.cfi_endproc
 2530              	.LFE45:
 2531              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2532              		.section	.text.CySysTickClear,"ax",%progbits
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 96


 2533              		.align	2
 2534              		.global	CySysTickClear
 2535              		.code	16
 2536              		.thumb_func
 2537              		.type	CySysTickClear, %function
 2538              	CySysTickClear:
 2539              	.LFB46:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
 2540              		.loc 1 2880 0
 2541              		.cfi_startproc
 2542 0000 80B5     		push	{r7, lr}
 2543              		.cfi_def_cfa_offset 8
 2544              		.cfi_offset 7, -8
 2545              		.cfi_offset 14, -4
 2546 0002 00AF     		add	r7, sp, #0
 2547              		.cfi_def_cfa_register 7
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2548              		.loc 1 2881 0
 2549 0004 024B     		ldr	r3, .L173
 2550 0006 0022     		mov	r2, #0
 2551 0008 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** }
 2552              		.loc 1 2882 0
 2553 000a BD46     		mov	sp, r7
 2554              		@ sp needed
 2555 000c 80BD     		pop	{r7, pc}
 2556              	.L174:
 2557 000e C046     		.align	2
 2558              	.L173:
 2559 0010 18E000E0 		.word	-536813544
 2560              		.cfi_endproc
 2561              	.LFE46:
 2562              		.size	CySysTickClear, .-CySysTickClear
 2563              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2564              		.align	2
 2565              		.global	CySysTickSetCallback
 2566              		.code	16
 2567              		.thumb_func
 2568              		.type	CySysTickSetCallback, %function
 2569              	CySysTickSetCallback:
 2570              	.LFB47:
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 97


2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
 2571              		.loc 1 2915 0
 2572              		.cfi_startproc
 2573 0000 80B5     		push	{r7, lr}
 2574              		.cfi_def_cfa_offset 8
 2575              		.cfi_offset 7, -8
 2576              		.cfi_offset 14, -4
 2577 0002 84B0     		sub	sp, sp, #16
 2578              		.cfi_def_cfa_offset 24
 2579 0004 00AF     		add	r7, sp, #0
 2580              		.cfi_def_cfa_register 7
 2581 0006 7860     		str	r0, [r7, #4]
 2582 0008 3960     		str	r1, [r7]
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2583              		.loc 1 2918 0
 2584 000a 074B     		ldr	r3, .L177
 2585 000c 7A68     		ldr	r2, [r7, #4]
 2586 000e 9200     		lsl	r2, r2, #2
 2587 0010 D358     		ldr	r3, [r2, r3]
 2588 0012 FB60     		str	r3, [r7, #12]
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2589              		.loc 1 2919 0
 2590 0014 044B     		ldr	r3, .L177
 2591 0016 7A68     		ldr	r2, [r7, #4]
 2592 0018 9200     		lsl	r2, r2, #2
 2593 001a 3968     		ldr	r1, [r7]
 2594 001c D150     		str	r1, [r2, r3]
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2595              		.loc 1 2920 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 98


 2596 001e FB68     		ldr	r3, [r7, #12]
2921:Generated_Source\PSoC4/CyLib.c **** }
 2597              		.loc 1 2921 0
 2598 0020 181C     		mov	r0, r3
 2599 0022 BD46     		mov	sp, r7
 2600 0024 04B0     		add	sp, sp, #16
 2601              		@ sp needed
 2602 0026 80BD     		pop	{r7, pc}
 2603              	.L178:
 2604              		.align	2
 2605              	.L177:
 2606 0028 00000000 		.word	CySysTickCallbacks
 2607              		.cfi_endproc
 2608              	.LFE47:
 2609              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2610              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2611              		.align	2
 2612              		.global	CySysTickGetCallback
 2613              		.code	16
 2614              		.thumb_func
 2615              		.type	CySysTickGetCallback, %function
 2616              	CySysTickGetCallback:
 2617              	.LFB48:
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
 2618              		.loc 1 2939 0
 2619              		.cfi_startproc
 2620 0000 80B5     		push	{r7, lr}
 2621              		.cfi_def_cfa_offset 8
 2622              		.cfi_offset 7, -8
 2623              		.cfi_offset 14, -4
 2624 0002 82B0     		sub	sp, sp, #8
 2625              		.cfi_def_cfa_offset 16
 2626 0004 00AF     		add	r7, sp, #0
 2627              		.cfi_def_cfa_register 7
 2628 0006 7860     		str	r0, [r7, #4]
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2629              		.loc 1 2940 0
 2630 0008 034B     		ldr	r3, .L181
 2631 000a 7A68     		ldr	r2, [r7, #4]
 2632 000c 9200     		lsl	r2, r2, #2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 99


 2633 000e D358     		ldr	r3, [r2, r3]
2941:Generated_Source\PSoC4/CyLib.c **** }
 2634              		.loc 1 2941 0
 2635 0010 181C     		mov	r0, r3
 2636 0012 BD46     		mov	sp, r7
 2637 0014 02B0     		add	sp, sp, #8
 2638              		@ sp needed
 2639 0016 80BD     		pop	{r7, pc}
 2640              	.L182:
 2641              		.align	2
 2642              	.L181:
 2643 0018 00000000 		.word	CySysTickCallbacks
 2644              		.cfi_endproc
 2645              	.LFE48:
 2646              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2647              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2648              		.align	2
 2649              		.code	16
 2650              		.thumb_func
 2651              		.type	CySysTickServiceCallbacks, %function
 2652              	CySysTickServiceCallbacks:
 2653              	.LFB49:
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 2654              		.loc 1 2952 0
 2655              		.cfi_startproc
 2656 0000 80B5     		push	{r7, lr}
 2657              		.cfi_def_cfa_offset 8
 2658              		.cfi_offset 7, -8
 2659              		.cfi_offset 14, -4
 2660 0002 82B0     		sub	sp, sp, #8
 2661              		.cfi_def_cfa_offset 16
 2662 0004 00AF     		add	r7, sp, #0
 2663              		.cfi_def_cfa_register 7
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2664              		.loc 1 2956 0
 2665 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2666 000a 031E     		sub	r3, r0, #0
 2667 000c 012B     		cmp	r3, #1
 2668 000e 13D1     		bne	.L183
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2669              		.loc 1 2958 0
 2670 0010 0023     		mov	r3, #0
 2671 0012 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 100


 2672 0014 0DE0     		b	.L185
 2673              	.L187:
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2674              		.loc 1 2960 0
 2675 0016 0A4B     		ldr	r3, .L188
 2676 0018 7A68     		ldr	r2, [r7, #4]
 2677 001a 9200     		lsl	r2, r2, #2
 2678 001c D358     		ldr	r3, [r2, r3]
 2679 001e 002B     		cmp	r3, #0
 2680 0020 04D0     		beq	.L186
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2681              		.loc 1 2962 0
 2682 0022 074B     		ldr	r3, .L188
 2683 0024 7A68     		ldr	r2, [r7, #4]
 2684 0026 9200     		lsl	r2, r2, #2
 2685 0028 D358     		ldr	r3, [r2, r3]
 2686 002a 9847     		blx	r3
 2687              	.L186:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2688              		.loc 1 2958 0 discriminator 2
 2689 002c 7B68     		ldr	r3, [r7, #4]
 2690 002e 0133     		add	r3, r3, #1
 2691 0030 7B60     		str	r3, [r7, #4]
 2692              	.L185:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2693              		.loc 1 2958 0 is_stmt 0 discriminator 1
 2694 0032 7B68     		ldr	r3, [r7, #4]
 2695 0034 042B     		cmp	r3, #4
 2696 0036 EED9     		bls	.L187
 2697              	.L183:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 2698              		.loc 1 2966 0 is_stmt 1
 2699 0038 BD46     		mov	sp, r7
 2700 003a 02B0     		add	sp, sp, #8
 2701              		@ sp needed
 2702 003c 80BD     		pop	{r7, pc}
 2703              	.L189:
 2704 003e C046     		.align	2
 2705              	.L188:
 2706 0040 00000000 		.word	CySysTickCallbacks
 2707              		.cfi_endproc
 2708              	.LFE49:
 2709              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2710              		.section	.text.CyGetUniqueId,"ax",%progbits
 2711              		.align	2
 2712              		.global	CyGetUniqueId
 2713              		.code	16
 2714              		.thumb_func
 2715              		.type	CyGetUniqueId, %function
 2716              	CyGetUniqueId:
 2717              	.LFB50:
2967:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 101


2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2718              		.loc 1 2984 0
 2719              		.cfi_startproc
 2720 0000 80B5     		push	{r7, lr}
 2721              		.cfi_def_cfa_offset 8
 2722              		.cfi_offset 7, -8
 2723              		.cfi_offset 14, -4
 2724 0002 82B0     		sub	sp, sp, #8
 2725              		.cfi_def_cfa_offset 16
 2726 0004 00AF     		add	r7, sp, #0
 2727              		.cfi_def_cfa_register 7
 2728 0006 7860     		str	r0, [r7, #4]
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2729              		.loc 1 2986 0
 2730 0008 254B     		ldr	r3, .L191
 2731 000a 1B78     		ldrb	r3, [r3]
 2732 000c DBB2     		uxtb	r3, r3
 2733 000e 1A1C     		mov	r2, r3
 2734 0010 7B68     		ldr	r3, [r7, #4]
 2735 0012 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2736              		.loc 1 2987 0
 2737 0014 234B     		ldr	r3, .L191+4
 2738 0016 1B78     		ldrb	r3, [r3]
 2739 0018 DBB2     		uxtb	r3, r3
 2740 001a 1A02     		lsl	r2, r3, #8
 2741 001c 7B68     		ldr	r3, [r7, #4]
 2742 001e 1B68     		ldr	r3, [r3]
 2743 0020 1A43     		orr	r2, r3
 2744 0022 7B68     		ldr	r3, [r7, #4]
 2745 0024 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2746              		.loc 1 2988 0
 2747 0026 204B     		ldr	r3, .L191+8
 2748 0028 1B78     		ldrb	r3, [r3]
 2749 002a DBB2     		uxtb	r3, r3
 2750 002c 1A04     		lsl	r2, r3, #16
 2751 002e 7B68     		ldr	r3, [r7, #4]
 2752 0030 1B68     		ldr	r3, [r3]
 2753 0032 1A43     		orr	r2, r3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 102


 2754 0034 7B68     		ldr	r3, [r7, #4]
 2755 0036 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2756              		.loc 1 2989 0
 2757 0038 1C4B     		ldr	r3, .L191+12
 2758 003a 1B78     		ldrb	r3, [r3]
 2759 003c DBB2     		uxtb	r3, r3
 2760 003e 1A06     		lsl	r2, r3, #24
 2761 0040 7B68     		ldr	r3, [r7, #4]
 2762 0042 1B68     		ldr	r3, [r3]
 2763 0044 1A43     		orr	r2, r3
 2764 0046 7B68     		ldr	r3, [r7, #4]
 2765 0048 1A60     		str	r2, [r3]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2766              		.loc 1 2991 0
 2767 004a 7B68     		ldr	r3, [r7, #4]
 2768 004c 0433     		add	r3, r3, #4
 2769 004e 184A     		ldr	r2, .L191+16
 2770 0050 1278     		ldrb	r2, [r2]
 2771 0052 D2B2     		uxtb	r2, r2
 2772 0054 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2773              		.loc 1 2992 0
 2774 0056 174B     		ldr	r3, .L191+20
 2775 0058 1B78     		ldrb	r3, [r3]
 2776 005a DBB2     		uxtb	r3, r3
 2777 005c 1902     		lsl	r1, r3, #8
 2778 005e 7B68     		ldr	r3, [r7, #4]
 2779 0060 0433     		add	r3, r3, #4
 2780 0062 7A68     		ldr	r2, [r7, #4]
 2781 0064 0432     		add	r2, r2, #4
 2782 0066 1268     		ldr	r2, [r2]
 2783 0068 0A43     		orr	r2, r1
 2784 006a 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2785              		.loc 1 2993 0
 2786 006c 124B     		ldr	r3, .L191+24
 2787 006e 1B78     		ldrb	r3, [r3]
 2788 0070 DBB2     		uxtb	r3, r3
 2789 0072 1904     		lsl	r1, r3, #16
 2790 0074 7B68     		ldr	r3, [r7, #4]
 2791 0076 0433     		add	r3, r3, #4
 2792 0078 7A68     		ldr	r2, [r7, #4]
 2793 007a 0432     		add	r2, r2, #4
 2794 007c 1268     		ldr	r2, [r2]
 2795 007e 0A43     		orr	r2, r1
 2796 0080 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2797              		.loc 1 2994 0
 2798 0082 0E4B     		ldr	r3, .L191+28
 2799 0084 1B78     		ldrb	r3, [r3]
 2800 0086 DBB2     		uxtb	r3, r3
 2801 0088 1906     		lsl	r1, r3, #24
 2802 008a 7B68     		ldr	r3, [r7, #4]
 2803 008c 0433     		add	r3, r3, #4
 2804 008e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 103


 2805 0090 0432     		add	r2, r2, #4
 2806 0092 1268     		ldr	r2, [r2]
 2807 0094 0A43     		orr	r2, r1
 2808 0096 1A60     		str	r2, [r3]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2809              		.loc 1 3006 0
 2810 0098 BD46     		mov	sp, r7
 2811 009a 02B0     		add	sp, sp, #8
 2812              		@ sp needed
 2813 009c 80BD     		pop	{r7, pc}
 2814              	.L192:
 2815 009e C046     		.align	2
 2816              	.L191:
 2817 00a0 78F1FF0F 		.word	268431736
 2818 00a4 79F1FF0F 		.word	268431737
 2819 00a8 7AF1FF0F 		.word	268431738
 2820 00ac 7BF1FF0F 		.word	268431739
 2821 00b0 7CF1FF0F 		.word	268431740
 2822 00b4 7DF1FF0F 		.word	268431741
 2823 00b8 7EF1FF0F 		.word	268431742
 2824 00bc 7FF1FF0F 		.word	268431743
 2825              		.cfi_endproc
 2826              	.LFE50:
 2827              		.size	CyGetUniqueId, .-CyGetUniqueId
 2828              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2829              		.align	2
 2830              		.global	CySysSetRamAccessArbPriority
 2831              		.code	16
 2832              		.thumb_func
 2833              		.type	CySysSetRamAccessArbPriority, %function
 2834              	CySysSetRamAccessArbPriority:
 2835              	.LFB51:
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3010:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3011:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3012:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3013:Generated_Source\PSoC4/CyLib.c ****     *
3014:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3015:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3016:Generated_Source\PSoC4/CyLib.c ****     *  details.
3017:Generated_Source\PSoC4/CyLib.c ****     *
3018:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3019:Generated_Source\PSoC4/CyLib.c ****     *
3020:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 104


3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3024:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3028:Generated_Source\PSoC4/CyLib.c ****     {
 2836              		.loc 1 3028 0
 2837              		.cfi_startproc
 2838 0000 80B5     		push	{r7, lr}
 2839              		.cfi_def_cfa_offset 8
 2840              		.cfi_offset 7, -8
 2841              		.cfi_offset 14, -4
 2842 0002 84B0     		sub	sp, sp, #16
 2843              		.cfi_def_cfa_offset 24
 2844 0004 00AF     		add	r7, sp, #0
 2845              		.cfi_def_cfa_register 7
 2846 0006 7860     		str	r0, [r7, #4]
3029:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2847              		.loc 1 3031 0
 2848 0008 094B     		ldr	r3, .L194
 2849 000a 1B68     		ldr	r3, [r3]
 2850 000c 094A     		ldr	r2, .L194+4
 2851 000e 1340     		and	r3, r2
 2852 0010 FB60     		str	r3, [r7, #12]
3032:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2853              		.loc 1 3032 0
 2854 0012 7B68     		ldr	r3, [r7, #4]
 2855 0014 5A04     		lsl	r2, r3, #17
 2856 0016 C023     		mov	r3, #192
 2857 0018 DB02     		lsl	r3, r3, #11
 2858 001a 1340     		and	r3, r2
 2859 001c FA68     		ldr	r2, [r7, #12]
 2860 001e 1343     		orr	r3, r2
 2861 0020 FB60     		str	r3, [r7, #12]
3033:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2862              		.loc 1 3033 0
 2863 0022 034B     		ldr	r3, .L194
 2864 0024 FA68     		ldr	r2, [r7, #12]
 2865 0026 1A60     		str	r2, [r3]
3034:Generated_Source\PSoC4/CyLib.c ****     }
 2866              		.loc 1 3034 0
 2867 0028 BD46     		mov	sp, r7
 2868 002a 04B0     		add	sp, sp, #16
 2869              		@ sp needed
 2870 002c 80BD     		pop	{r7, pc}
 2871              	.L195:
 2872 002e C046     		.align	2
 2873              	.L194:
 2874 0030 38001040 		.word	1074790456
 2875 0034 FFFFF9FF 		.word	-393217
 2876              		.cfi_endproc
 2877              	.LFE51:
 2878              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 105


 2879              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2880              		.align	2
 2881              		.global	CySysSetFlashAccessArbPriority
 2882              		.code	16
 2883              		.thumb_func
 2884              		.type	CySysSetFlashAccessArbPriority, %function
 2885              	CySysSetFlashAccessArbPriority:
 2886              	.LFB52:
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3038:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3039:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3042:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3043:Generated_Source\PSoC4/CyLib.c ****     *  details.
3044:Generated_Source\PSoC4/CyLib.c ****     *
3045:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3046:Generated_Source\PSoC4/CyLib.c ****     *
3047:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3051:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3052:Generated_Source\PSoC4/CyLib.c ****     *
3053:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3054:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3055:Generated_Source\PSoC4/CyLib.c ****     {
 2887              		.loc 1 3055 0
 2888              		.cfi_startproc
 2889 0000 80B5     		push	{r7, lr}
 2890              		.cfi_def_cfa_offset 8
 2891              		.cfi_offset 7, -8
 2892              		.cfi_offset 14, -4
 2893 0002 84B0     		sub	sp, sp, #16
 2894              		.cfi_def_cfa_offset 24
 2895 0004 00AF     		add	r7, sp, #0
 2896              		.cfi_def_cfa_register 7
 2897 0006 7860     		str	r0, [r7, #4]
3056:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3057:Generated_Source\PSoC4/CyLib.c **** 
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2898              		.loc 1 3058 0
 2899 0008 094B     		ldr	r3, .L197
 2900 000a 1B68     		ldr	r3, [r3]
 2901 000c 094A     		ldr	r2, .L197+4
 2902 000e 1340     		and	r3, r2
 2903 0010 FB60     		str	r3, [r7, #12]
3059:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2904              		.loc 1 3059 0
 2905 0012 7B68     		ldr	r3, [r7, #4]
 2906 0014 5A04     		lsl	r2, r3, #17
 2907 0016 C023     		mov	r3, #192
 2908 0018 DB02     		lsl	r3, r3, #11
 2909 001a 1340     		and	r3, r2
 2910 001c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 106


 2911 001e 1343     		orr	r3, r2
 2912 0020 FB60     		str	r3, [r7, #12]
3060:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2913              		.loc 1 3060 0
 2914 0022 034B     		ldr	r3, .L197
 2915 0024 FA68     		ldr	r2, [r7, #12]
 2916 0026 1A60     		str	r2, [r3]
3061:Generated_Source\PSoC4/CyLib.c ****     }
 2917              		.loc 1 3061 0
 2918 0028 BD46     		mov	sp, r7
 2919 002a 04B0     		add	sp, sp, #16
 2920              		@ sp needed
 2921 002c 80BD     		pop	{r7, pc}
 2922              	.L198:
 2923 002e C046     		.align	2
 2924              	.L197:
 2925 0030 30001040 		.word	1074790448
 2926 0034 FFFFF9FF 		.word	-393217
 2927              		.cfi_endproc
 2928              	.LFE52:
 2929              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2930              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2931              		.align	2
 2932              		.global	CySysSetDmacAccessArbPriority
 2933              		.code	16
 2934              		.thumb_func
 2935              		.type	CySysSetDmacAccessArbPriority, %function
 2936              	CySysSetDmacAccessArbPriority:
 2937              	.LFB53:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3066:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c ****     *
3068:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3069:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3070:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3071:Generated_Source\PSoC4/CyLib.c ****     *
3072:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3073:Generated_Source\PSoC4/CyLib.c ****     *
3074:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3078:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3079:Generated_Source\PSoC4/CyLib.c ****     *
3080:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3082:Generated_Source\PSoC4/CyLib.c ****     {
 2938              		.loc 1 3082 0
 2939              		.cfi_startproc
 2940 0000 80B5     		push	{r7, lr}
 2941              		.cfi_def_cfa_offset 8
 2942              		.cfi_offset 7, -8
 2943              		.cfi_offset 14, -4
 2944 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 107


 2945              		.cfi_def_cfa_offset 24
 2946 0004 00AF     		add	r7, sp, #0
 2947              		.cfi_def_cfa_register 7
 2948 0006 7860     		str	r0, [r7, #4]
3083:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3084:Generated_Source\PSoC4/CyLib.c **** 
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2949              		.loc 1 3085 0
 2950 0008 094B     		ldr	r3, .L200
 2951 000a 1B68     		ldr	r3, [r3]
 2952 000c 094A     		ldr	r2, .L200+4
 2953 000e 1340     		and	r3, r2
 2954 0010 FB60     		str	r3, [r7, #12]
3086:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2955              		.loc 1 3086 0
 2956 0012 7B68     		ldr	r3, [r7, #4]
 2957 0014 5A04     		lsl	r2, r3, #17
 2958 0016 C023     		mov	r3, #192
 2959 0018 DB02     		lsl	r3, r3, #11
 2960 001a 1340     		and	r3, r2
 2961 001c FA68     		ldr	r2, [r7, #12]
 2962 001e 1343     		orr	r3, r2
 2963 0020 FB60     		str	r3, [r7, #12]
3087:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2964              		.loc 1 3087 0
 2965 0022 034B     		ldr	r3, .L200
 2966 0024 FA68     		ldr	r2, [r7, #12]
 2967 0026 1A60     		str	r2, [r3]
3088:Generated_Source\PSoC4/CyLib.c ****     }
 2968              		.loc 1 3088 0
 2969 0028 BD46     		mov	sp, r7
 2970 002a 04B0     		add	sp, sp, #16
 2971              		@ sp needed
 2972 002c 80BD     		pop	{r7, pc}
 2973              	.L201:
 2974 002e C046     		.align	2
 2975              	.L200:
 2976 0030 3C001040 		.word	1074790460
 2977 0034 FFFFF9FF 		.word	-393217
 2978              		.cfi_endproc
 2979              	.LFE53:
 2980              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2981              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2982              		.align	2
 2983              		.global	CySysSetPeripheralAccessArbPriority
 2984              		.code	16
 2985              		.thumb_func
 2986              		.type	CySysSetPeripheralAccessArbPriority, %function
 2987              	CySysSetPeripheralAccessArbPriority:
 2988              	.LFB54:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c ****     *
3095:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 108


3096:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3097:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3100:Generated_Source\PSoC4/CyLib.c ****     *
3101:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3102:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
 2989              		.loc 1 3111 0
 2990              		.cfi_startproc
 2991 0000 80B5     		push	{r7, lr}
 2992              		.cfi_def_cfa_offset 8
 2993              		.cfi_offset 7, -8
 2994              		.cfi_offset 14, -4
 2995 0002 84B0     		sub	sp, sp, #16
 2996              		.cfi_def_cfa_offset 24
 2997 0004 00AF     		add	r7, sp, #0
 2998              		.cfi_def_cfa_register 7
 2999 0006 7860     		str	r0, [r7, #4]
 3000 0008 3960     		str	r1, [r7]
3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 3001              		.loc 1 3114 0
 3002 000a 7B68     		ldr	r3, [r7, #4]
 3003 000c 002B     		cmp	r3, #0
 3004 000e 10D1     		bne	.L203
3115:Generated_Source\PSoC4/CyLib.c ****         {
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3005              		.loc 1 3116 0
 3006 0010 1F4B     		ldr	r3, .L207
 3007 0012 1B68     		ldr	r3, [r3]
 3008 0014 1F4A     		ldr	r2, .L207+4
 3009 0016 1340     		and	r3, r2
 3010 0018 FB60     		str	r3, [r7, #12]
3117:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3011              		.loc 1 3117 0
 3012 001a 3B68     		ldr	r3, [r7]
 3013 001c 5A04     		lsl	r2, r3, #17
 3014 001e C023     		mov	r3, #192
 3015 0020 DB02     		lsl	r3, r3, #11
 3016 0022 1340     		and	r3, r2
 3017 0024 FA68     		ldr	r2, [r7, #12]
 3018 0026 1343     		orr	r3, r2
 3019 0028 FB60     		str	r3, [r7, #12]
3118:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 3020              		.loc 1 3118 0
 3021 002a 194B     		ldr	r3, .L207
 3022 002c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 109


 3023 002e 1A60     		str	r2, [r3]
 3024 0030 2AE0     		b	.L202
 3025              	.L203:
3119:Generated_Source\PSoC4/CyLib.c ****         } else
3120:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3121:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 3026              		.loc 1 3121 0
 3027 0032 7B68     		ldr	r3, [r7, #4]
 3028 0034 012B     		cmp	r3, #1
 3029 0036 10D1     		bne	.L205
3122:Generated_Source\PSoC4/CyLib.c ****         {
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3030              		.loc 1 3123 0
 3031 0038 174B     		ldr	r3, .L207+8
 3032 003a 1B68     		ldr	r3, [r3]
 3033 003c 154A     		ldr	r2, .L207+4
 3034 003e 1340     		and	r3, r2
 3035 0040 FB60     		str	r3, [r7, #12]
3124:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3036              		.loc 1 3124 0
 3037 0042 3B68     		ldr	r3, [r7]
 3038 0044 5A04     		lsl	r2, r3, #17
 3039 0046 C023     		mov	r3, #192
 3040 0048 DB02     		lsl	r3, r3, #11
 3041 004a 1340     		and	r3, r2
 3042 004c FA68     		ldr	r2, [r7, #12]
 3043 004e 1343     		orr	r3, r2
 3044 0050 FB60     		str	r3, [r7, #12]
3125:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 3045              		.loc 1 3125 0
 3046 0052 114B     		ldr	r3, .L207+8
 3047 0054 FA68     		ldr	r2, [r7, #12]
 3048 0056 1A60     		str	r2, [r3]
 3049 0058 16E0     		b	.L202
 3050              	.L205:
3126:Generated_Source\PSoC4/CyLib.c ****         } else
3127:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3128:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3129:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 3051              		.loc 1 3129 0
 3052 005a 7B68     		ldr	r3, [r7, #4]
 3053 005c 022B     		cmp	r3, #2
 3054 005e 10D1     		bne	.L206
3130:Generated_Source\PSoC4/CyLib.c ****         {
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3055              		.loc 1 3131 0
 3056 0060 0E4B     		ldr	r3, .L207+12
 3057 0062 1B68     		ldr	r3, [r3]
 3058 0064 0B4A     		ldr	r2, .L207+4
 3059 0066 1340     		and	r3, r2
 3060 0068 FB60     		str	r3, [r7, #12]
3132:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3061              		.loc 1 3132 0
 3062 006a 3B68     		ldr	r3, [r7]
 3063 006c 5A04     		lsl	r2, r3, #17
 3064 006e C023     		mov	r3, #192
 3065 0070 DB02     		lsl	r3, r3, #11
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 110


 3066 0072 1340     		and	r3, r2
 3067 0074 FA68     		ldr	r2, [r7, #12]
 3068 0076 1343     		orr	r3, r2
 3069 0078 FB60     		str	r3, [r7, #12]
3133:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 3070              		.loc 1 3133 0
 3071 007a 084B     		ldr	r3, .L207+12
 3072 007c FA68     		ldr	r2, [r7, #12]
 3073 007e 1A60     		str	r2, [r3]
 3074 0080 02E0     		b	.L202
 3075              	.L206:
3134:Generated_Source\PSoC4/CyLib.c ****         } else
3135:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3136:Generated_Source\PSoC4/CyLib.c ****         {
3137:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3138:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 3076              		.loc 1 3138 0 discriminator 1
 3077 0082 0020     		mov	r0, #0
 3078 0084 FFF7FEFF 		bl	CyHalt
 3079              	.L202:
3139:Generated_Source\PSoC4/CyLib.c ****         }
3140:Generated_Source\PSoC4/CyLib.c ****     }
 3080              		.loc 1 3140 0
 3081 0088 BD46     		mov	sp, r7
 3082 008a 04B0     		add	sp, sp, #16
 3083              		@ sp needed
 3084 008c 80BD     		pop	{r7, pc}
 3085              	.L208:
 3086 008e C046     		.align	2
 3087              	.L207:
 3088 0090 00011040 		.word	1074790656
 3089 0094 FFFFF9FF 		.word	-393217
 3090 0098 04011040 		.word	1074790660
 3091 009c 08011040 		.word	1074790664
 3092              		.cfi_endproc
 3093              	.LFE54:
 3094              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 3095              		.text
 3096              	.Letext0:
 3097              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3098              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3099              		.section	.debug_info,"",%progbits
 3100              	.Ldebug_info0:
 3101 0000 C00A0000 		.4byte	0xac0
 3102 0004 0400     		.2byte	0x4
 3103 0006 00000000 		.4byte	.Ldebug_abbrev0
 3104 000a 04       		.byte	0x4
 3105 000b 01       		.uleb128 0x1
 3106 000c 93060000 		.4byte	.LASF115
 3107 0010 01       		.byte	0x1
 3108 0011 32070000 		.4byte	.LASF116
 3109 0015 38000000 		.4byte	.LASF117
 3110 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3111 001d 00000000 		.4byte	0
 3112 0021 00000000 		.4byte	.Ldebug_line0
 3113 0025 02       		.uleb128 0x2
 3114 0026 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 111


 3115 0027 06       		.byte	0x6
 3116 0028 2A010000 		.4byte	.LASF0
 3117 002c 02       		.uleb128 0x2
 3118 002d 01       		.byte	0x1
 3119 002e 08       		.byte	0x8
 3120 002f 20050000 		.4byte	.LASF1
 3121 0033 02       		.uleb128 0x2
 3122 0034 02       		.byte	0x2
 3123 0035 05       		.byte	0x5
 3124 0036 2E050000 		.4byte	.LASF2
 3125 003a 02       		.uleb128 0x2
 3126 003b 02       		.byte	0x2
 3127 003c 07       		.byte	0x7
 3128 003d 20030000 		.4byte	.LASF3
 3129 0041 02       		.uleb128 0x2
 3130 0042 04       		.byte	0x4
 3131 0043 05       		.byte	0x5
 3132 0044 8F010000 		.4byte	.LASF4
 3133 0048 02       		.uleb128 0x2
 3134 0049 04       		.byte	0x4
 3135 004a 07       		.byte	0x7
 3136 004b AA020000 		.4byte	.LASF5
 3137 004f 02       		.uleb128 0x2
 3138 0050 08       		.byte	0x8
 3139 0051 05       		.byte	0x5
 3140 0052 1C010000 		.4byte	.LASF6
 3141 0056 02       		.uleb128 0x2
 3142 0057 08       		.byte	0x8
 3143 0058 07       		.byte	0x7
 3144 0059 A6000000 		.4byte	.LASF7
 3145 005d 03       		.uleb128 0x3
 3146 005e 04       		.byte	0x4
 3147 005f 05       		.byte	0x5
 3148 0060 696E7400 		.ascii	"int\000"
 3149 0064 02       		.uleb128 0x2
 3150 0065 04       		.byte	0x4
 3151 0066 07       		.byte	0x7
 3152 0067 8E020000 		.4byte	.LASF8
 3153 006b 04       		.uleb128 0x4
 3154 006c AF010000 		.4byte	.LASF9
 3155 0070 02       		.byte	0x2
 3156 0071 B901     		.2byte	0x1b9
 3157 0073 2C000000 		.4byte	0x2c
 3158 0077 04       		.uleb128 0x4
 3159 0078 0F000000 		.4byte	.LASF10
 3160 007c 02       		.byte	0x2
 3161 007d BA01     		.2byte	0x1ba
 3162 007f 3A000000 		.4byte	0x3a
 3163 0083 04       		.uleb128 0x4
 3164 0084 EF010000 		.4byte	.LASF11
 3165 0088 02       		.byte	0x2
 3166 0089 BB01     		.2byte	0x1bb
 3167 008b 48000000 		.4byte	0x48
 3168 008f 02       		.uleb128 0x2
 3169 0090 04       		.byte	0x4
 3170 0091 04       		.byte	0x4
 3171 0092 AA040000 		.4byte	.LASF12
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 112


 3172 0096 02       		.uleb128 0x2
 3173 0097 08       		.byte	0x8
 3174 0098 04       		.byte	0x4
 3175 0099 CB010000 		.4byte	.LASF13
 3176 009d 02       		.uleb128 0x2
 3177 009e 01       		.byte	0x1
 3178 009f 08       		.byte	0x8
 3179 00a0 71050000 		.4byte	.LASF14
 3180 00a4 04       		.uleb128 0x4
 3181 00a5 ED040000 		.4byte	.LASF15
 3182 00a9 02       		.byte	0x2
 3183 00aa 6302     		.2byte	0x263
 3184 00ac B0000000 		.4byte	0xb0
 3185 00b0 05       		.uleb128 0x5
 3186 00b1 6B000000 		.4byte	0x6b
 3187 00b5 04       		.uleb128 0x4
 3188 00b6 D1030000 		.4byte	.LASF16
 3189 00ba 02       		.byte	0x2
 3190 00bb 6502     		.2byte	0x265
 3191 00bd C1000000 		.4byte	0xc1
 3192 00c1 05       		.uleb128 0x5
 3193 00c2 83000000 		.4byte	0x83
 3194 00c6 04       		.uleb128 0x4
 3195 00c7 8E050000 		.4byte	.LASF17
 3196 00cb 02       		.byte	0x2
 3197 00cc 7502     		.2byte	0x275
 3198 00ce D2000000 		.4byte	0xd2
 3199 00d2 06       		.uleb128 0x6
 3200 00d3 04       		.byte	0x4
 3201 00d4 D8000000 		.4byte	0xd8
 3202 00d8 07       		.uleb128 0x7
 3203 00d9 02       		.uleb128 0x2
 3204 00da 04       		.byte	0x4
 3205 00db 07       		.byte	0x7
 3206 00dc FA030000 		.4byte	.LASF18
 3207 00e0 08       		.uleb128 0x8
 3208 00e1 BF040000 		.4byte	.LASF19
 3209 00e5 03       		.byte	0x3
 3210 00e6 F5       		.byte	0xf5
 3211 00e7 D2000000 		.4byte	0xd2
 3212 00eb 09       		.uleb128 0x9
 3213 00ec 21070000 		.4byte	.LASF20
 3214 00f0 01       		.byte	0x1
 3215 00f1 6B       		.byte	0x6b
 3216 00f2 00000000 		.4byte	.LFB1
 3217 00f6 1C000000 		.4byte	.LFE1-.LFB1
 3218 00fa 01       		.uleb128 0x1
 3219 00fb 9C       		.byte	0x9c
 3220 00fc 0A       		.uleb128 0xa
 3221 00fd D7020000 		.4byte	.LASF21
 3222 0101 01       		.byte	0x1
 3223 0102 8B       		.byte	0x8b
 3224 0103 00000000 		.4byte	.LFB2
 3225 0107 1C000000 		.4byte	.LFE2-.LFB2
 3226 010b 01       		.uleb128 0x1
 3227 010c 9C       		.byte	0x9c
 3228 010d 0B       		.uleb128 0xb
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 113


 3229 010e 13020000 		.4byte	.LASF28
 3230 0112 01       		.byte	0x1
 3231 0113 AF       		.byte	0xaf
 3232 0114 00000000 		.4byte	.LFB3
 3233 0118 44010000 		.4byte	.LFE3-.LFB3
 3234 011c 01       		.uleb128 0x1
 3235 011d 9C       		.byte	0x9c
 3236 011e 75010000 		.4byte	0x175
 3237 0122 0C       		.uleb128 0xc
 3238 0123 6900     		.ascii	"i\000"
 3239 0125 01       		.byte	0x1
 3240 0126 B2       		.byte	0xb2
 3241 0127 83000000 		.4byte	0x83
 3242 012b 02       		.uleb128 0x2
 3243 012c 91       		.byte	0x91
 3244 012d 6C       		.sleb128 -20
 3245 012e 0D       		.uleb128 0xd
 3246 012f 36010000 		.4byte	.LASF22
 3247 0133 01       		.byte	0x1
 3248 0134 B5       		.byte	0xb5
 3249 0135 83000000 		.4byte	0x83
 3250 0139 02       		.uleb128 0x2
 3251 013a 91       		.byte	0x91
 3252 013b 68       		.sleb128 -24
 3253 013c 0D       		.uleb128 0xd
 3254 013d 47010000 		.4byte	.LASF23
 3255 0141 01       		.byte	0x1
 3256 0142 B6       		.byte	0xb6
 3257 0143 6B000000 		.4byte	0x6b
 3258 0147 02       		.uleb128 0x2
 3259 0148 91       		.byte	0x91
 3260 0149 5F       		.sleb128 -33
 3261 014a 0D       		.uleb128 0xd
 3262 014b 33030000 		.4byte	.LASF24
 3263 014f 01       		.byte	0x1
 3264 0150 B7       		.byte	0xb7
 3265 0151 83000000 		.4byte	0x83
 3266 0155 02       		.uleb128 0x2
 3267 0156 91       		.byte	0x91
 3268 0157 64       		.sleb128 -28
 3269 0158 0D       		.uleb128 0xd
 3270 0159 56010000 		.4byte	.LASF25
 3271 015d 01       		.byte	0x1
 3272 015e B8       		.byte	0xb8
 3273 015f 83000000 		.4byte	0x83
 3274 0163 02       		.uleb128 0x2
 3275 0164 91       		.byte	0x91
 3276 0165 60       		.sleb128 -32
 3277 0166 0D       		.uleb128 0xd
 3278 0167 F3050000 		.4byte	.LASF26
 3279 016b 01       		.byte	0x1
 3280 016c B9       		.byte	0xb9
 3281 016d C1000000 		.4byte	0xc1
 3282 0171 02       		.uleb128 0x2
 3283 0172 91       		.byte	0x91
 3284 0173 58       		.sleb128 -40
 3285 0174 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 114


 3286 0175 0E       		.uleb128 0xe
 3287 0176 B7030000 		.4byte	.LASF27
 3288 017a 01       		.byte	0x1
 3289 017b 1D01     		.2byte	0x11d
 3290 017d 00000000 		.4byte	.LFB4
 3291 0181 1C000000 		.4byte	.LFE4-.LFB4
 3292 0185 01       		.uleb128 0x1
 3293 0186 9C       		.byte	0x9c
 3294 0187 0F       		.uleb128 0xf
 3295 0188 71010000 		.4byte	.LASF44
 3296 018c 01       		.byte	0x1
 3297 018d 3001     		.2byte	0x130
 3298 018f 83000000 		.4byte	0x83
 3299 0193 00000000 		.4byte	.LFB5
 3300 0197 20000000 		.4byte	.LFE5-.LFB5
 3301 019b 01       		.uleb128 0x1
 3302 019c 9C       		.byte	0x9c
 3303 019d 10       		.uleb128 0x10
 3304 019e 1F000000 		.4byte	.LASF29
 3305 01a2 01       		.byte	0x1
 3306 01a3 AD01     		.2byte	0x1ad
 3307 01a5 00000000 		.4byte	.LFB6
 3308 01a9 48000000 		.4byte	.LFE6-.LFB6
 3309 01ad 01       		.uleb128 0x1
 3310 01ae 9C       		.byte	0x9c
 3311 01af E1010000 		.4byte	0x1e1
 3312 01b3 11       		.uleb128 0x11
 3313 01b4 56050000 		.4byte	.LASF32
 3314 01b8 01       		.byte	0x1
 3315 01b9 AD01     		.2byte	0x1ad
 3316 01bb 83000000 		.4byte	0x83
 3317 01bf 02       		.uleb128 0x2
 3318 01c0 91       		.byte	0x91
 3319 01c1 64       		.sleb128 -28
 3320 01c2 12       		.uleb128 0x12
 3321 01c3 47010000 		.4byte	.LASF23
 3322 01c7 01       		.byte	0x1
 3323 01c8 AF01     		.2byte	0x1af
 3324 01ca 6B000000 		.4byte	0x6b
 3325 01ce 02       		.uleb128 0x2
 3326 01cf 91       		.byte	0x91
 3327 01d0 6F       		.sleb128 -17
 3328 01d1 12       		.uleb128 0x12
 3329 01d2 5E070000 		.4byte	.LASF30
 3330 01d6 01       		.byte	0x1
 3331 01d7 B001     		.2byte	0x1b0
 3332 01d9 83000000 		.4byte	0x83
 3333 01dd 02       		.uleb128 0x2
 3334 01de 91       		.byte	0x91
 3335 01df 68       		.sleb128 -24
 3336 01e0 00       		.byte	0
 3337 01e1 13       		.uleb128 0x13
 3338 01e2 7C000000 		.4byte	.LASF31
 3339 01e6 01       		.byte	0x1
 3340 01e7 D901     		.2byte	0x1d9
 3341 01e9 00000000 		.4byte	.LFB7
 3342 01ed 50000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 115


 3343 01f1 01       		.uleb128 0x1
 3344 01f2 9C       		.byte	0x9c
 3345 01f3 07020000 		.4byte	0x207
 3346 01f7 11       		.uleb128 0x11
 3347 01f8 C4010000 		.4byte	.LASF33
 3348 01fc 01       		.byte	0x1
 3349 01fd D901     		.2byte	0x1d9
 3350 01ff 83000000 		.4byte	0x83
 3351 0203 02       		.uleb128 0x2
 3352 0204 91       		.byte	0x91
 3353 0205 74       		.sleb128 -12
 3354 0206 00       		.byte	0
 3355 0207 14       		.uleb128 0x14
 3356 0208 FB010000 		.4byte	.LASF47
 3357 020c 01       		.byte	0x1
 3358 020d FE01     		.2byte	0x1fe
 3359 020f 83000000 		.4byte	0x83
 3360 0213 00000000 		.4byte	.LFB8
 3361 0217 34000000 		.4byte	.LFE8-.LFB8
 3362 021b 01       		.uleb128 0x1
 3363 021c 9C       		.byte	0x9c
 3364 021d 40020000 		.4byte	0x240
 3365 0221 12       		.uleb128 0x12
 3366 0222 47010000 		.4byte	.LASF23
 3367 0226 01       		.byte	0x1
 3368 0227 0002     		.2byte	0x200
 3369 0229 6B000000 		.4byte	0x6b
 3370 022d 02       		.uleb128 0x2
 3371 022e 91       		.byte	0x91
 3372 022f 6F       		.sleb128 -17
 3373 0230 12       		.uleb128 0x12
 3374 0231 52040000 		.4byte	.LASF34
 3375 0235 01       		.byte	0x1
 3376 0236 0102     		.2byte	0x201
 3377 0238 83000000 		.4byte	0x83
 3378 023c 02       		.uleb128 0x2
 3379 023d 91       		.byte	0x91
 3380 023e 68       		.sleb128 -24
 3381 023f 00       		.byte	0
 3382 0240 10       		.uleb128 0x10
 3383 0241 AB050000 		.4byte	.LASF35
 3384 0245 01       		.byte	0x1
 3385 0246 3502     		.2byte	0x235
 3386 0248 00000000 		.4byte	.LFB9
 3387 024c 44000000 		.4byte	.LFE9-.LFB9
 3388 0250 01       		.uleb128 0x1
 3389 0251 9C       		.byte	0x9c
 3390 0252 75020000 		.4byte	0x275
 3391 0256 11       		.uleb128 0x11
 3392 0257 8B060000 		.4byte	.LASF36
 3393 025b 01       		.byte	0x1
 3394 025c 3502     		.2byte	0x235
 3395 025e 83000000 		.4byte	0x83
 3396 0262 02       		.uleb128 0x2
 3397 0263 91       		.byte	0x91
 3398 0264 64       		.sleb128 -28
 3399 0265 12       		.uleb128 0x12
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 116


 3400 0266 47010000 		.4byte	.LASF23
 3401 026a 01       		.byte	0x1
 3402 026b 3702     		.2byte	0x237
 3403 026d 6B000000 		.4byte	0x6b
 3404 0271 02       		.uleb128 0x2
 3405 0272 91       		.byte	0x91
 3406 0273 6F       		.sleb128 -17
 3407 0274 00       		.byte	0
 3408 0275 10       		.uleb128 0x10
 3409 0276 71030000 		.4byte	.LASF37
 3410 027a 01       		.byte	0x1
 3411 027b 6F02     		.2byte	0x26f
 3412 027d 00000000 		.4byte	.LFB10
 3413 0281 B8000000 		.4byte	.LFE10-.LFB10
 3414 0285 01       		.uleb128 0x1
 3415 0286 9C       		.byte	0x9c
 3416 0287 D7020000 		.4byte	0x2d7
 3417 028b 11       		.uleb128 0x11
 3418 028c 36010000 		.4byte	.LASF22
 3419 0290 01       		.byte	0x1
 3420 0291 6F02     		.2byte	0x26f
 3421 0293 83000000 		.4byte	0x83
 3422 0297 02       		.uleb128 0x2
 3423 0298 91       		.byte	0x91
 3424 0299 4C       		.sleb128 -52
 3425 029a 12       		.uleb128 0x12
 3426 029b BD000000 		.4byte	.LASF38
 3427 029f 01       		.byte	0x1
 3428 02a0 7202     		.2byte	0x272
 3429 02a2 E7020000 		.4byte	0x2e7
 3430 02a6 02       		.uleb128 0x2
 3431 02a7 91       		.byte	0x91
 3432 02a8 60       		.sleb128 -32
 3433 02a9 12       		.uleb128 0x12
 3434 02aa A5010000 		.4byte	.LASF39
 3435 02ae 01       		.byte	0x1
 3436 02af 7302     		.2byte	0x273
 3437 02b1 FC020000 		.4byte	0x2fc
 3438 02b5 02       		.uleb128 0x2
 3439 02b6 91       		.byte	0x91
 3440 02b7 50       		.sleb128 -48
 3441 02b8 12       		.uleb128 0x12
 3442 02b9 87010000 		.4byte	.LASF40
 3443 02bd 01       		.byte	0x1
 3444 02be 7D02     		.2byte	0x27d
 3445 02c0 83000000 		.4byte	0x83
 3446 02c4 02       		.uleb128 0x2
 3447 02c5 91       		.byte	0x91
 3448 02c6 6C       		.sleb128 -20
 3449 02c7 12       		.uleb128 0x12
 3450 02c8 47010000 		.4byte	.LASF23
 3451 02cc 01       		.byte	0x1
 3452 02cd 8402     		.2byte	0x284
 3453 02cf 6B000000 		.4byte	0x6b
 3454 02d3 02       		.uleb128 0x2
 3455 02d4 91       		.byte	0x91
 3456 02d5 6B       		.sleb128 -21
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 117


 3457 02d6 00       		.byte	0
 3458 02d7 15       		.uleb128 0x15
 3459 02d8 83000000 		.4byte	0x83
 3460 02dc E7020000 		.4byte	0x2e7
 3461 02e0 16       		.uleb128 0x16
 3462 02e1 D9000000 		.4byte	0xd9
 3463 02e5 01       		.byte	0x1
 3464 02e6 00       		.byte	0
 3465 02e7 05       		.uleb128 0x5
 3466 02e8 D7020000 		.4byte	0x2d7
 3467 02ec 15       		.uleb128 0x15
 3468 02ed 83000000 		.4byte	0x83
 3469 02f1 FC020000 		.4byte	0x2fc
 3470 02f5 16       		.uleb128 0x16
 3471 02f6 D9000000 		.4byte	0xd9
 3472 02fa 03       		.byte	0x3
 3473 02fb 00       		.byte	0
 3474 02fc 05       		.uleb128 0x5
 3475 02fd EC020000 		.4byte	0x2ec
 3476 0301 10       		.uleb128 0x10
 3477 0302 B0040000 		.4byte	.LASF41
 3478 0306 01       		.byte	0x1
 3479 0307 4608     		.2byte	0x846
 3480 0309 00000000 		.4byte	.LFB11
 3481 030d 60000000 		.4byte	.LFE11-.LFB11
 3482 0311 01       		.uleb128 0x1
 3483 0312 9C       		.byte	0x9c
 3484 0313 27030000 		.4byte	0x327
 3485 0317 11       		.uleb128 0x11
 3486 0318 F2040000 		.4byte	.LASF42
 3487 031c 01       		.byte	0x1
 3488 031d 4608     		.2byte	0x846
 3489 031f 83000000 		.4byte	0x83
 3490 0323 02       		.uleb128 0x2
 3491 0324 91       		.byte	0x91
 3492 0325 74       		.sleb128 -12
 3493 0326 00       		.byte	0
 3494 0327 0E       		.uleb128 0xe
 3495 0328 39060000 		.4byte	.LASF43
 3496 032c 01       		.byte	0x1
 3497 032d 6408     		.2byte	0x864
 3498 032f 00000000 		.4byte	.LFB12
 3499 0333 28000000 		.4byte	.LFE12-.LFB12
 3500 0337 01       		.uleb128 0x1
 3501 0338 9C       		.byte	0x9c
 3502 0339 0F       		.uleb128 0xf
 3503 033a BC020000 		.4byte	.LASF45
 3504 033e 01       		.byte	0x1
 3505 033f 7608     		.2byte	0x876
 3506 0341 83000000 		.4byte	0x83
 3507 0345 00000000 		.4byte	.LFB13
 3508 0349 18000000 		.4byte	.LFE13-.LFB13
 3509 034d 01       		.uleb128 0x1
 3510 034e 9C       		.byte	0x9c
 3511 034f 0E       		.uleb128 0xe
 3512 0350 D8010000 		.4byte	.LASF46
 3513 0354 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 118


 3514 0355 8608     		.2byte	0x886
 3515 0357 00000000 		.4byte	.LFB14
 3516 035b 14000000 		.4byte	.LFE14-.LFB14
 3517 035f 01       		.uleb128 0x1
 3518 0360 9C       		.byte	0x9c
 3519 0361 17       		.uleb128 0x17
 3520 0362 0C030000 		.4byte	.LASF48
 3521 0366 01       		.byte	0x1
 3522 0367 A008     		.2byte	0x8a0
 3523 0369 83000000 		.4byte	0x83
 3524 036d 00000000 		.4byte	.LFB15
 3525 0371 30000000 		.4byte	.LFE15-.LFB15
 3526 0375 01       		.uleb128 0x1
 3527 0376 9C       		.byte	0x9c
 3528 0377 9A030000 		.4byte	0x39a
 3529 037b 11       		.uleb128 0x11
 3530 037c 6A050000 		.4byte	.LASF49
 3531 0380 01       		.byte	0x1
 3532 0381 A008     		.2byte	0x8a0
 3533 0383 83000000 		.4byte	0x83
 3534 0387 02       		.uleb128 0x2
 3535 0388 91       		.byte	0x91
 3536 0389 6C       		.sleb128 -20
 3537 038a 12       		.uleb128 0x12
 3538 038b E6030000 		.4byte	.LASF50
 3539 038f 01       		.byte	0x1
 3540 0390 A208     		.2byte	0x8a2
 3541 0392 83000000 		.4byte	0x83
 3542 0396 02       		.uleb128 0x2
 3543 0397 91       		.byte	0x91
 3544 0398 74       		.sleb128 -12
 3545 0399 00       		.byte	0
 3546 039a 17       		.uleb128 0x17
 3547 039b 98000000 		.4byte	.LASF51
 3548 039f 01       		.byte	0x1
 3549 03a0 B708     		.2byte	0x8b7
 3550 03a2 83000000 		.4byte	0x83
 3551 03a6 00000000 		.4byte	.LFB16
 3552 03aa 24000000 		.4byte	.LFE16-.LFB16
 3553 03ae 01       		.uleb128 0x1
 3554 03af 9C       		.byte	0x9c
 3555 03b0 C4030000 		.4byte	0x3c4
 3556 03b4 12       		.uleb128 0x12
 3557 03b5 16000000 		.4byte	.LASF52
 3558 03b9 01       		.byte	0x1
 3559 03ba B908     		.2byte	0x8b9
 3560 03bc 83000000 		.4byte	0x83
 3561 03c0 02       		.uleb128 0x2
 3562 03c1 91       		.byte	0x91
 3563 03c2 74       		.sleb128 -12
 3564 03c3 00       		.byte	0
 3565 03c4 13       		.uleb128 0x13
 3566 03c5 C8000000 		.4byte	.LASF53
 3567 03c9 01       		.byte	0x1
 3568 03ca CE08     		.2byte	0x8ce
 3569 03cc 00000000 		.4byte	.LFB17
 3570 03d0 18000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 119


 3571 03d4 01       		.uleb128 0x1
 3572 03d5 9C       		.byte	0x9c
 3573 03d6 EA030000 		.4byte	0x3ea
 3574 03da 11       		.uleb128 0x11
 3575 03db F6010000 		.4byte	.LASF54
 3576 03df 01       		.byte	0x1
 3577 03e0 CE08     		.2byte	0x8ce
 3578 03e2 83000000 		.4byte	0x83
 3579 03e6 02       		.uleb128 0x2
 3580 03e7 91       		.byte	0x91
 3581 03e8 74       		.sleb128 -12
 3582 03e9 00       		.byte	0
 3583 03ea 14       		.uleb128 0x14
 3584 03eb A5030000 		.4byte	.LASF55
 3585 03ef 01       		.byte	0x1
 3586 03f0 E708     		.2byte	0x8e7
 3587 03f2 C6000000 		.4byte	0xc6
 3588 03f6 00000000 		.4byte	.LFB18
 3589 03fa 48000000 		.4byte	.LFE18-.LFB18
 3590 03fe 01       		.uleb128 0x1
 3591 03ff 9C       		.byte	0x9c
 3592 0400 41040000 		.4byte	0x441
 3593 0404 11       		.uleb128 0x11
 3594 0405 61030000 		.4byte	.LASF56
 3595 0409 01       		.byte	0x1
 3596 040a E708     		.2byte	0x8e7
 3597 040c 6B000000 		.4byte	0x6b
 3598 0410 02       		.uleb128 0x2
 3599 0411 91       		.byte	0x91
 3600 0412 6F       		.sleb128 -17
 3601 0413 11       		.uleb128 0x11
 3602 0414 4A040000 		.4byte	.LASF57
 3603 0418 01       		.byte	0x1
 3604 0419 E708     		.2byte	0x8e7
 3605 041b C6000000 		.4byte	0xc6
 3606 041f 02       		.uleb128 0x2
 3607 0420 91       		.byte	0x91
 3608 0421 68       		.sleb128 -24
 3609 0422 12       		.uleb128 0x12
 3610 0423 49060000 		.4byte	.LASF58
 3611 0427 01       		.byte	0x1
 3612 0428 E908     		.2byte	0x8e9
 3613 042a C6000000 		.4byte	0xc6
 3614 042e 02       		.uleb128 0x2
 3615 042f 91       		.byte	0x91
 3616 0430 70       		.sleb128 -16
 3617 0431 12       		.uleb128 0x12
 3618 0432 00000000 		.4byte	.LASF59
 3619 0436 01       		.byte	0x1
 3620 0437 EA08     		.2byte	0x8ea
 3621 0439 41040000 		.4byte	0x441
 3622 043d 02       		.uleb128 0x2
 3623 043e 91       		.byte	0x91
 3624 043f 74       		.sleb128 -12
 3625 0440 00       		.byte	0
 3626 0441 06       		.uleb128 0x6
 3627 0442 04       		.byte	0x4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 120


 3628 0443 C6000000 		.4byte	0xc6
 3629 0447 14       		.uleb128 0x14
 3630 0448 44050000 		.4byte	.LASF60
 3631 044c 01       		.byte	0x1
 3632 044d 0909     		.2byte	0x909
 3633 044f C6000000 		.4byte	0xc6
 3634 0453 00000000 		.4byte	.LFB19
 3635 0457 34000000 		.4byte	.LFE19-.LFB19
 3636 045b 01       		.uleb128 0x1
 3637 045c 9C       		.byte	0x9c
 3638 045d 80040000 		.4byte	0x480
 3639 0461 11       		.uleb128 0x11
 3640 0462 61030000 		.4byte	.LASF56
 3641 0466 01       		.byte	0x1
 3642 0467 0909     		.2byte	0x909
 3643 0469 6B000000 		.4byte	0x6b
 3644 046d 02       		.uleb128 0x2
 3645 046e 91       		.byte	0x91
 3646 046f 6F       		.sleb128 -17
 3647 0470 12       		.uleb128 0x12
 3648 0471 00000000 		.4byte	.LASF59
 3649 0475 01       		.byte	0x1
 3650 0476 0B09     		.2byte	0x90b
 3651 0478 41040000 		.4byte	0x441
 3652 047c 02       		.uleb128 0x2
 3653 047d 91       		.byte	0x91
 3654 047e 74       		.sleb128 -12
 3655 047f 00       		.byte	0
 3656 0480 14       		.uleb128 0x14
 3657 0481 52030000 		.4byte	.LASF61
 3658 0485 01       		.byte	0x1
 3659 0486 1F09     		.2byte	0x91f
 3660 0488 C6000000 		.4byte	0xc6
 3661 048c 00000000 		.4byte	.LFB20
 3662 0490 4C000000 		.4byte	.LFE20-.LFB20
 3663 0494 01       		.uleb128 0x1
 3664 0495 9C       		.byte	0x9c
 3665 0496 D7040000 		.4byte	0x4d7
 3666 049a 11       		.uleb128 0x11
 3667 049b 61030000 		.4byte	.LASF56
 3668 049f 01       		.byte	0x1
 3669 04a0 1F09     		.2byte	0x91f
 3670 04a2 6B000000 		.4byte	0x6b
 3671 04a6 02       		.uleb128 0x2
 3672 04a7 91       		.byte	0x91
 3673 04a8 6F       		.sleb128 -17
 3674 04a9 11       		.uleb128 0x11
 3675 04aa 4A040000 		.4byte	.LASF57
 3676 04ae 01       		.byte	0x1
 3677 04af 1F09     		.2byte	0x91f
 3678 04b1 C6000000 		.4byte	0xc6
 3679 04b5 02       		.uleb128 0x2
 3680 04b6 91       		.byte	0x91
 3681 04b7 68       		.sleb128 -24
 3682 04b8 12       		.uleb128 0x12
 3683 04b9 49060000 		.4byte	.LASF58
 3684 04bd 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 121


 3685 04be 2109     		.2byte	0x921
 3686 04c0 C6000000 		.4byte	0xc6
 3687 04c4 02       		.uleb128 0x2
 3688 04c5 91       		.byte	0x91
 3689 04c6 70       		.sleb128 -16
 3690 04c7 12       		.uleb128 0x12
 3691 04c8 00000000 		.4byte	.LASF59
 3692 04cc 01       		.byte	0x1
 3693 04cd 2209     		.2byte	0x922
 3694 04cf 41040000 		.4byte	0x441
 3695 04d3 02       		.uleb128 0x2
 3696 04d4 91       		.byte	0x91
 3697 04d5 74       		.sleb128 -12
 3698 04d6 00       		.byte	0
 3699 04d7 14       		.uleb128 0x14
 3700 04d8 D1040000 		.4byte	.LASF62
 3701 04dc 01       		.byte	0x1
 3702 04dd 3B09     		.2byte	0x93b
 3703 04df C6000000 		.4byte	0xc6
 3704 04e3 00000000 		.4byte	.LFB21
 3705 04e7 36000000 		.4byte	.LFE21-.LFB21
 3706 04eb 01       		.uleb128 0x1
 3707 04ec 9C       		.byte	0x9c
 3708 04ed 10050000 		.4byte	0x510
 3709 04f1 11       		.uleb128 0x11
 3710 04f2 61030000 		.4byte	.LASF56
 3711 04f6 01       		.byte	0x1
 3712 04f7 3B09     		.2byte	0x93b
 3713 04f9 6B000000 		.4byte	0x6b
 3714 04fd 02       		.uleb128 0x2
 3715 04fe 91       		.byte	0x91
 3716 04ff 6F       		.sleb128 -17
 3717 0500 12       		.uleb128 0x12
 3718 0501 00000000 		.4byte	.LASF59
 3719 0505 01       		.byte	0x1
 3720 0506 3D09     		.2byte	0x93d
 3721 0508 41040000 		.4byte	0x441
 3722 050c 02       		.uleb128 0x2
 3723 050d 91       		.byte	0x91
 3724 050e 74       		.sleb128 -12
 3725 050f 00       		.byte	0
 3726 0510 10       		.uleb128 0x10
 3727 0511 99040000 		.4byte	.LASF63
 3728 0515 01       		.byte	0x1
 3729 0516 4E09     		.2byte	0x94e
 3730 0518 00000000 		.4byte	.LFB22
 3731 051c A8000000 		.4byte	.LFE22-.LFB22
 3732 0520 01       		.uleb128 0x1
 3733 0521 9C       		.byte	0x9c
 3734 0522 72050000 		.4byte	0x572
 3735 0526 11       		.uleb128 0x11
 3736 0527 61030000 		.4byte	.LASF56
 3737 052b 01       		.byte	0x1
 3738 052c 4E09     		.2byte	0x94e
 3739 052e 6B000000 		.4byte	0x6b
 3740 0532 02       		.uleb128 0x2
 3741 0533 91       		.byte	0x91
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 122


 3742 0534 5F       		.sleb128 -33
 3743 0535 11       		.uleb128 0x11
 3744 0536 68030000 		.4byte	.LASF64
 3745 053a 01       		.byte	0x1
 3746 053b 4E09     		.2byte	0x94e
 3747 053d 6B000000 		.4byte	0x6b
 3748 0541 02       		.uleb128 0x2
 3749 0542 91       		.byte	0x91
 3750 0543 5E       		.sleb128 -34
 3751 0544 12       		.uleb128 0x12
 3752 0545 47010000 		.4byte	.LASF23
 3753 0549 01       		.byte	0x1
 3754 054a 5009     		.2byte	0x950
 3755 054c 6B000000 		.4byte	0x6b
 3756 0550 02       		.uleb128 0x2
 3757 0551 91       		.byte	0x91
 3758 0552 6B       		.sleb128 -21
 3759 0553 12       		.uleb128 0x12
 3760 0554 D2010000 		.4byte	.LASF65
 3761 0558 01       		.byte	0x1
 3762 0559 5109     		.2byte	0x951
 3763 055b 83000000 		.4byte	0x83
 3764 055f 02       		.uleb128 0x2
 3765 0560 91       		.byte	0x91
 3766 0561 6C       		.sleb128 -20
 3767 0562 12       		.uleb128 0x12
 3768 0563 58020000 		.4byte	.LASF66
 3769 0567 01       		.byte	0x1
 3770 0568 5209     		.2byte	0x952
 3771 056a 83000000 		.4byte	0x83
 3772 056e 02       		.uleb128 0x2
 3773 056f 91       		.byte	0x91
 3774 0570 64       		.sleb128 -28
 3775 0571 00       		.byte	0
 3776 0572 14       		.uleb128 0x14
 3777 0573 2C020000 		.4byte	.LASF67
 3778 0577 01       		.byte	0x1
 3779 0578 7009     		.2byte	0x970
 3780 057a 6B000000 		.4byte	0x6b
 3781 057e 00000000 		.4byte	.LFB23
 3782 0582 5C000000 		.4byte	.LFE23-.LFB23
 3783 0586 01       		.uleb128 0x1
 3784 0587 9C       		.byte	0x9c
 3785 0588 AB050000 		.4byte	0x5ab
 3786 058c 11       		.uleb128 0x11
 3787 058d 61030000 		.4byte	.LASF56
 3788 0591 01       		.byte	0x1
 3789 0592 7009     		.2byte	0x970
 3790 0594 6B000000 		.4byte	0x6b
 3791 0598 02       		.uleb128 0x2
 3792 0599 91       		.byte	0x91
 3793 059a 6F       		.sleb128 -17
 3794 059b 12       		.uleb128 0x12
 3795 059c 68030000 		.4byte	.LASF64
 3796 05a0 01       		.byte	0x1
 3797 05a1 7209     		.2byte	0x972
 3798 05a3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 123


 3799 05a7 02       		.uleb128 0x2
 3800 05a8 91       		.byte	0x91
 3801 05a9 77       		.sleb128 -9
 3802 05aa 00       		.byte	0
 3803 05ab 13       		.uleb128 0x13
 3804 05ac 38050000 		.4byte	.LASF68
 3805 05b0 01       		.byte	0x1
 3806 05b1 8509     		.2byte	0x985
 3807 05b3 00000000 		.4byte	.LFB24
 3808 05b7 28000000 		.4byte	.LFE24-.LFB24
 3809 05bb 01       		.uleb128 0x1
 3810 05bc 9C       		.byte	0x9c
 3811 05bd D1050000 		.4byte	0x5d1
 3812 05c1 11       		.uleb128 0x11
 3813 05c2 61030000 		.4byte	.LASF56
 3814 05c6 01       		.byte	0x1
 3815 05c7 8509     		.2byte	0x985
 3816 05c9 6B000000 		.4byte	0x6b
 3817 05cd 02       		.uleb128 0x2
 3818 05ce 91       		.byte	0x91
 3819 05cf 77       		.sleb128 -9
 3820 05d0 00       		.byte	0
 3821 05d1 17       		.uleb128 0x17
 3822 05d2 0E010000 		.4byte	.LASF69
 3823 05d6 01       		.byte	0x1
 3824 05d7 9709     		.2byte	0x997
 3825 05d9 6B000000 		.4byte	0x6b
 3826 05dd 00000000 		.4byte	.LFB25
 3827 05e1 30000000 		.4byte	.LFE25-.LFB25
 3828 05e5 01       		.uleb128 0x1
 3829 05e6 9C       		.byte	0x9c
 3830 05e7 FB050000 		.4byte	0x5fb
 3831 05eb 11       		.uleb128 0x11
 3832 05ec 61030000 		.4byte	.LASF56
 3833 05f0 01       		.byte	0x1
 3834 05f1 9709     		.2byte	0x997
 3835 05f3 6B000000 		.4byte	0x6b
 3836 05f7 02       		.uleb128 0x2
 3837 05f8 91       		.byte	0x91
 3838 05f9 77       		.sleb128 -9
 3839 05fa 00       		.byte	0
 3840 05fb 13       		.uleb128 0x13
 3841 05fc 98010000 		.4byte	.LASF70
 3842 0600 01       		.byte	0x1
 3843 0601 A709     		.2byte	0x9a7
 3844 0603 00000000 		.4byte	.LFB26
 3845 0607 28000000 		.4byte	.LFE26-.LFB26
 3846 060b 01       		.uleb128 0x1
 3847 060c 9C       		.byte	0x9c
 3848 060d 21060000 		.4byte	0x621
 3849 0611 11       		.uleb128 0x11
 3850 0612 61030000 		.4byte	.LASF56
 3851 0616 01       		.byte	0x1
 3852 0617 A709     		.2byte	0x9a7
 3853 0619 6B000000 		.4byte	0x6b
 3854 061d 02       		.uleb128 0x2
 3855 061e 91       		.byte	0x91
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 124


 3856 061f 77       		.sleb128 -9
 3857 0620 00       		.byte	0
 3858 0621 13       		.uleb128 0x13
 3859 0622 E7020000 		.4byte	.LASF71
 3860 0626 01       		.byte	0x1
 3861 0627 B509     		.2byte	0x9b5
 3862 0629 00000000 		.4byte	.LFB27
 3863 062d 28000000 		.4byte	.LFE27-.LFB27
 3864 0631 01       		.uleb128 0x1
 3865 0632 9C       		.byte	0x9c
 3866 0633 47060000 		.4byte	0x647
 3867 0637 11       		.uleb128 0x11
 3868 0638 61030000 		.4byte	.LASF56
 3869 063c 01       		.byte	0x1
 3870 063d B509     		.2byte	0x9b5
 3871 063f 6B000000 		.4byte	0x6b
 3872 0643 02       		.uleb128 0x2
 3873 0644 91       		.byte	0x91
 3874 0645 77       		.sleb128 -9
 3875 0646 00       		.byte	0
 3876 0647 13       		.uleb128 0x13
 3877 0648 38040000 		.4byte	.LASF72
 3878 064c 01       		.byte	0x1
 3879 064d C409     		.2byte	0x9c4
 3880 064f 00000000 		.4byte	.LFB28
 3881 0653 28000000 		.4byte	.LFE28-.LFB28
 3882 0657 01       		.uleb128 0x1
 3883 0658 9C       		.byte	0x9c
 3884 0659 6D060000 		.4byte	0x66d
 3885 065d 11       		.uleb128 0x11
 3886 065e 61030000 		.4byte	.LASF56
 3887 0662 01       		.byte	0x1
 3888 0663 C409     		.2byte	0x9c4
 3889 0665 6B000000 		.4byte	0x6b
 3890 0669 02       		.uleb128 0x2
 3891 066a 91       		.byte	0x91
 3892 066b 77       		.sleb128 -9
 3893 066c 00       		.byte	0
 3894 066d 13       		.uleb128 0x13
 3895 066e FC040000 		.4byte	.LASF73
 3896 0672 01       		.byte	0x1
 3897 0673 D309     		.2byte	0x9d3
 3898 0675 00000000 		.4byte	.LFB29
 3899 0679 14000000 		.4byte	.LFE29-.LFB29
 3900 067d 01       		.uleb128 0x1
 3901 067e 9C       		.byte	0x9c
 3902 067f 93060000 		.4byte	0x693
 3903 0683 11       		.uleb128 0x11
 3904 0684 6A050000 		.4byte	.LASF49
 3905 0688 01       		.byte	0x1
 3906 0689 D309     		.2byte	0x9d3
 3907 068b 6B000000 		.4byte	0x6b
 3908 068f 02       		.uleb128 0x2
 3909 0690 91       		.byte	0x91
 3910 0691 77       		.sleb128 -9
 3911 0692 00       		.byte	0
 3912 0693 0E       		.uleb128 0xe
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 125


 3913 0694 E5000000 		.4byte	.LASF74
 3914 0698 01       		.byte	0x1
 3915 0699 EB09     		.2byte	0x9eb
 3916 069b 00000000 		.4byte	.LFB30
 3917 069f 20000000 		.4byte	.LFE30-.LFB30
 3918 06a3 01       		.uleb128 0x1
 3919 06a4 9C       		.byte	0x9c
 3920 06a5 10       		.uleb128 0x10
 3921 06a6 FF050000 		.4byte	.LASF75
 3922 06aa 01       		.byte	0x1
 3923 06ab FF09     		.2byte	0x9ff
 3924 06ad 00000000 		.4byte	.LFB31
 3925 06b1 48000000 		.4byte	.LFE31-.LFB31
 3926 06b5 01       		.uleb128 0x1
 3927 06b6 9C       		.byte	0x9c
 3928 06b7 CB060000 		.4byte	0x6cb
 3929 06bb 11       		.uleb128 0x11
 3930 06bc E0040000 		.4byte	.LASF76
 3931 06c0 01       		.byte	0x1
 3932 06c1 FF09     		.2byte	0x9ff
 3933 06c3 83000000 		.4byte	0x83
 3934 06c7 02       		.uleb128 0x2
 3935 06c8 91       		.byte	0x91
 3936 06c9 74       		.sleb128 -12
 3937 06ca 00       		.byte	0
 3938 06cb 10       		.uleb128 0x10
 3939 06cc 60050000 		.4byte	.LASF77
 3940 06d0 01       		.byte	0x1
 3941 06d1 160A     		.2byte	0xa16
 3942 06d3 00000000 		.4byte	.LFB32
 3943 06d7 28000000 		.4byte	.LFE32-.LFB32
 3944 06db 01       		.uleb128 0x1
 3945 06dc 9C       		.byte	0x9c
 3946 06dd F1060000 		.4byte	0x6f1
 3947 06e1 11       		.uleb128 0x11
 3948 06e2 51070000 		.4byte	.LASF78
 3949 06e6 01       		.byte	0x1
 3950 06e7 160A     		.2byte	0xa16
 3951 06e9 77000000 		.4byte	0x77
 3952 06ed 02       		.uleb128 0x2
 3953 06ee 91       		.byte	0x91
 3954 06ef 76       		.sleb128 -10
 3955 06f0 00       		.byte	0
 3956 06f1 10       		.uleb128 0x10
 3957 06f2 3B010000 		.4byte	.LASF79
 3958 06f6 01       		.byte	0x1
 3959 06f7 240A     		.2byte	0xa24
 3960 06f9 00000000 		.4byte	.LFB33
 3961 06fd 84000000 		.4byte	.LFE33-.LFB33
 3962 0701 01       		.uleb128 0x1
 3963 0702 9C       		.byte	0x9c
 3964 0703 17070000 		.4byte	0x717
 3965 0707 11       		.uleb128 0x11
 3966 0708 36010000 		.4byte	.LASF22
 3967 070c 01       		.byte	0x1
 3968 070d 240A     		.2byte	0xa24
 3969 070f 83000000 		.4byte	0x83
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 126


 3970 0713 02       		.uleb128 0x2
 3971 0714 91       		.byte	0x91
 3972 0715 74       		.sleb128 -12
 3973 0716 00       		.byte	0
 3974 0717 18       		.uleb128 0x18
 3975 0718 D7030000 		.4byte	.LASF80
 3976 071c 01       		.byte	0x1
 3977 071d 440A     		.2byte	0xa44
 3978 071f 00000000 		.4byte	.LFB34
 3979 0723 24000000 		.4byte	.LFE34-.LFB34
 3980 0727 01       		.uleb128 0x1
 3981 0728 9C       		.byte	0x9c
 3982 0729 10       		.uleb128 0x10
 3983 072a 4A020000 		.4byte	.LASF81
 3984 072e 01       		.byte	0x1
 3985 072f 610A     		.2byte	0xa61
 3986 0731 00000000 		.4byte	.LFB35
 3987 0735 64000000 		.4byte	.LFE35-.LFB35
 3988 0739 01       		.uleb128 0x1
 3989 073a 9C       		.byte	0x9c
 3990 073b 4D070000 		.4byte	0x74d
 3991 073f 19       		.uleb128 0x19
 3992 0740 6900     		.ascii	"i\000"
 3993 0742 01       		.byte	0x1
 3994 0743 630A     		.2byte	0xa63
 3995 0745 83000000 		.4byte	0x83
 3996 0749 02       		.uleb128 0x2
 3997 074a 91       		.byte	0x91
 3998 074b 74       		.sleb128 -12
 3999 074c 00       		.byte	0
 4000 074d 18       		.uleb128 0x18
 4001 074e 9B050000 		.4byte	.LASF82
 4002 0752 01       		.byte	0x1
 4003 0753 800A     		.2byte	0xa80
 4004 0755 00000000 		.4byte	.LFB36
 4005 0759 1C000000 		.4byte	.LFE36-.LFB36
 4006 075d 01       		.uleb128 0x1
 4007 075e 9C       		.byte	0x9c
 4008 075f 0E       		.uleb128 0xe
 4009 0760 7D060000 		.4byte	.LASF83
 4010 0764 01       		.byte	0x1
 4011 0765 910A     		.2byte	0xa91
 4012 0767 00000000 		.4byte	.LFB37
 4013 076b 18000000 		.4byte	.LFE37-.LFB37
 4014 076f 01       		.uleb128 0x1
 4015 0770 9C       		.byte	0x9c
 4016 0771 0E       		.uleb128 0xe
 4017 0772 F5000000 		.4byte	.LASF84
 4018 0776 01       		.byte	0x1
 4019 0777 A10A     		.2byte	0xaa1
 4020 0779 00000000 		.4byte	.LFB38
 4021 077d 18000000 		.4byte	.LFE38-.LFB38
 4022 0781 01       		.uleb128 0x1
 4023 0782 9C       		.byte	0x9c
 4024 0783 0E       		.uleb128 0xe
 4025 0784 1F060000 		.4byte	.LASF85
 4026 0788 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 127


 4027 0789 B10A     		.2byte	0xab1
 4028 078b 00000000 		.4byte	.LFB39
 4029 078f 18000000 		.4byte	.LFE39-.LFB39
 4030 0793 01       		.uleb128 0x1
 4031 0794 9C       		.byte	0x9c
 4032 0795 13       		.uleb128 0x13
 4033 0796 65070000 		.4byte	.LASF86
 4034 079a 01       		.byte	0x1
 4035 079b C20A     		.2byte	0xac2
 4036 079d 00000000 		.4byte	.LFB40
 4037 07a1 1C000000 		.4byte	.LFE40-.LFB40
 4038 07a5 01       		.uleb128 0x1
 4039 07a6 9C       		.byte	0x9c
 4040 07a7 BB070000 		.4byte	0x7bb
 4041 07ab 11       		.uleb128 0x11
 4042 07ac 58020000 		.4byte	.LASF66
 4043 07b0 01       		.byte	0x1
 4044 07b1 C20A     		.2byte	0xac2
 4045 07b3 83000000 		.4byte	0x83
 4046 07b7 02       		.uleb128 0x2
 4047 07b8 91       		.byte	0x91
 4048 07b9 74       		.sleb128 -12
 4049 07ba 00       		.byte	0
 4050 07bb 0F       		.uleb128 0xf
 4051 07bc 5E010000 		.4byte	.LASF87
 4052 07c0 01       		.byte	0x1
 4053 07c1 D20A     		.2byte	0xad2
 4054 07c3 83000000 		.4byte	0x83
 4055 07c7 00000000 		.4byte	.LFB41
 4056 07cb 18000000 		.4byte	.LFE41-.LFB41
 4057 07cf 01       		.uleb128 0x1
 4058 07d0 9C       		.byte	0x9c
 4059 07d1 0F       		.uleb128 0xf
 4060 07d2 79040000 		.4byte	.LASF88
 4061 07d6 01       		.byte	0x1
 4062 07d7 E20A     		.2byte	0xae2
 4063 07d9 83000000 		.4byte	0x83
 4064 07dd 00000000 		.4byte	.LFB42
 4065 07e1 18000000 		.4byte	.LFE42-.LFB42
 4066 07e5 01       		.uleb128 0x1
 4067 07e6 9C       		.byte	0x9c
 4068 07e7 13       		.uleb128 0x13
 4069 07e8 3A030000 		.4byte	.LASF89
 4070 07ec 01       		.byte	0x1
 4071 07ed 020B     		.2byte	0xb02
 4072 07ef 00000000 		.4byte	.LFB43
 4073 07f3 34000000 		.4byte	.LFE43-.LFB43
 4074 07f7 01       		.uleb128 0x1
 4075 07f8 9C       		.byte	0x9c
 4076 07f9 0D080000 		.4byte	0x80d
 4077 07fd 11       		.uleb128 0x11
 4078 07fe 5E020000 		.4byte	.LASF90
 4079 0802 01       		.byte	0x1
 4080 0803 020B     		.2byte	0xb02
 4081 0805 83000000 		.4byte	0x83
 4082 0809 02       		.uleb128 0x2
 4083 080a 91       		.byte	0x91
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 128


 4084 080b 74       		.sleb128 -12
 4085 080c 00       		.byte	0
 4086 080d 0F       		.uleb128 0xf
 4087 080e 07060000 		.4byte	.LASF91
 4088 0812 01       		.byte	0x1
 4089 0813 1B0B     		.2byte	0xb1b
 4090 0815 83000000 		.4byte	0x83
 4091 0819 00000000 		.4byte	.LFB44
 4092 081d 18000000 		.4byte	.LFE44-.LFB44
 4093 0821 01       		.uleb128 0x1
 4094 0822 9C       		.byte	0x9c
 4095 0823 0F       		.uleb128 0xf
 4096 0824 78020000 		.4byte	.LASF92
 4097 0828 01       		.byte	0x1
 4098 0829 320B     		.2byte	0xb32
 4099 082b 83000000 		.4byte	0x83
 4100 082f 00000000 		.4byte	.LFB45
 4101 0833 18000000 		.4byte	.LFE45-.LFB45
 4102 0837 01       		.uleb128 0x1
 4103 0838 9C       		.byte	0x9c
 4104 0839 0E       		.uleb128 0xe
 4105 083a 9B020000 		.4byte	.LASF93
 4106 083e 01       		.byte	0x1
 4107 083f 3F0B     		.2byte	0xb3f
 4108 0841 00000000 		.4byte	.LFB46
 4109 0845 14000000 		.4byte	.LFE46-.LFB46
 4110 0849 01       		.uleb128 0x1
 4111 084a 9C       		.byte	0x9c
 4112 084b 17       		.uleb128 0x17
 4113 084c C2050000 		.4byte	.LASF94
 4114 0850 01       		.byte	0x1
 4115 0851 620B     		.2byte	0xb62
 4116 0853 E0000000 		.4byte	0xe0
 4117 0857 00000000 		.4byte	.LFB47
 4118 085b 2C000000 		.4byte	.LFE47-.LFB47
 4119 085f 01       		.uleb128 0x1
 4120 0860 9C       		.byte	0x9c
 4121 0861 93080000 		.4byte	0x893
 4122 0865 11       		.uleb128 0x11
 4123 0866 61030000 		.4byte	.LASF56
 4124 086a 01       		.byte	0x1
 4125 086b 620B     		.2byte	0xb62
 4126 086d 83000000 		.4byte	0x83
 4127 0871 02       		.uleb128 0x2
 4128 0872 91       		.byte	0x91
 4129 0873 6C       		.sleb128 -20
 4130 0874 11       		.uleb128 0x11
 4131 0875 5F040000 		.4byte	.LASF95
 4132 0879 01       		.byte	0x1
 4133 087a 620B     		.2byte	0xb62
 4134 087c E0000000 		.4byte	0xe0
 4135 0880 02       		.uleb128 0x2
 4136 0881 91       		.byte	0x91
 4137 0882 68       		.sleb128 -24
 4138 0883 12       		.uleb128 0x12
 4139 0884 91000000 		.4byte	.LASF96
 4140 0888 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 129


 4141 0889 640B     		.2byte	0xb64
 4142 088b E0000000 		.4byte	0xe0
 4143 088f 02       		.uleb128 0x2
 4144 0890 91       		.byte	0x91
 4145 0891 74       		.sleb128 -12
 4146 0892 00       		.byte	0
 4147 0893 17       		.uleb128 0x17
 4148 0894 F7020000 		.4byte	.LASF97
 4149 0898 01       		.byte	0x1
 4150 0899 7A0B     		.2byte	0xb7a
 4151 089b E0000000 		.4byte	0xe0
 4152 089f 00000000 		.4byte	.LFB48
 4153 08a3 1C000000 		.4byte	.LFE48-.LFB48
 4154 08a7 01       		.uleb128 0x1
 4155 08a8 9C       		.byte	0x9c
 4156 08a9 BD080000 		.4byte	0x8bd
 4157 08ad 11       		.uleb128 0x11
 4158 08ae 61030000 		.4byte	.LASF56
 4159 08b2 01       		.byte	0x1
 4160 08b3 7A0B     		.2byte	0xb7a
 4161 08b5 83000000 		.4byte	0x83
 4162 08b9 02       		.uleb128 0x2
 4163 08ba 91       		.byte	0x91
 4164 08bb 74       		.sleb128 -12
 4165 08bc 00       		.byte	0
 4166 08bd 1A       		.uleb128 0x1a
 4167 08be 78070000 		.4byte	.LASF118
 4168 08c2 01       		.byte	0x1
 4169 08c3 870B     		.2byte	0xb87
 4170 08c5 00000000 		.4byte	.LFB49
 4171 08c9 44000000 		.4byte	.LFE49-.LFB49
 4172 08cd 01       		.uleb128 0x1
 4173 08ce 9C       		.byte	0x9c
 4174 08cf E1080000 		.4byte	0x8e1
 4175 08d3 19       		.uleb128 0x19
 4176 08d4 6900     		.ascii	"i\000"
 4177 08d6 01       		.byte	0x1
 4178 08d7 890B     		.2byte	0xb89
 4179 08d9 83000000 		.4byte	0x83
 4180 08dd 02       		.uleb128 0x2
 4181 08de 91       		.byte	0x91
 4182 08df 74       		.sleb128 -12
 4183 08e0 00       		.byte	0
 4184 08e1 13       		.uleb128 0x13
 4185 08e2 6A020000 		.4byte	.LASF98
 4186 08e6 01       		.byte	0x1
 4187 08e7 A70B     		.2byte	0xba7
 4188 08e9 00000000 		.4byte	.LFB50
 4189 08ed C0000000 		.4byte	.LFE50-.LFB50
 4190 08f1 01       		.uleb128 0x1
 4191 08f2 9C       		.byte	0x9c
 4192 08f3 07090000 		.4byte	0x907
 4193 08f7 11       		.uleb128 0x11
 4194 08f8 EA050000 		.4byte	.LASF99
 4195 08fc 01       		.byte	0x1
 4196 08fd A70B     		.2byte	0xba7
 4197 08ff 07090000 		.4byte	0x907
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 130


 4198 0903 02       		.uleb128 0x2
 4199 0904 91       		.byte	0x91
 4200 0905 74       		.sleb128 -12
 4201 0906 00       		.byte	0
 4202 0907 06       		.uleb128 0x6
 4203 0908 04       		.byte	0x4
 4204 0909 83000000 		.4byte	0x83
 4205 090d 13       		.uleb128 0x13
 4206 090e 03050000 		.4byte	.LASF100
 4207 0912 01       		.byte	0x1
 4208 0913 D30B     		.2byte	0xbd3
 4209 0915 00000000 		.4byte	.LFB51
 4210 0919 38000000 		.4byte	.LFE51-.LFB51
 4211 091d 01       		.uleb128 0x1
 4212 091e 9C       		.byte	0x9c
 4213 091f 42090000 		.4byte	0x942
 4214 0923 11       		.uleb128 0x11
 4215 0924 F3030000 		.4byte	.LASF101
 4216 0928 01       		.byte	0x1
 4217 0929 D30B     		.2byte	0xbd3
 4218 092b 83000000 		.4byte	0x83
 4219 092f 02       		.uleb128 0x2
 4220 0930 91       		.byte	0x91
 4221 0931 6C       		.sleb128 -20
 4222 0932 12       		.uleb128 0x12
 4223 0933 33030000 		.4byte	.LASF24
 4224 0937 01       		.byte	0x1
 4225 0938 D50B     		.2byte	0xbd5
 4226 093a 83000000 		.4byte	0x83
 4227 093e 02       		.uleb128 0x2
 4228 093f 91       		.byte	0x91
 4229 0940 74       		.sleb128 -12
 4230 0941 00       		.byte	0
 4231 0942 13       		.uleb128 0x13
 4232 0943 86030000 		.4byte	.LASF102
 4233 0947 01       		.byte	0x1
 4234 0948 EE0B     		.2byte	0xbee
 4235 094a 00000000 		.4byte	.LFB52
 4236 094e 38000000 		.4byte	.LFE52-.LFB52
 4237 0952 01       		.uleb128 0x1
 4238 0953 9C       		.byte	0x9c
 4239 0954 77090000 		.4byte	0x977
 4240 0958 11       		.uleb128 0x11
 4241 0959 F3030000 		.4byte	.LASF101
 4242 095d 01       		.byte	0x1
 4243 095e EE0B     		.2byte	0xbee
 4244 0960 83000000 		.4byte	0x83
 4245 0964 02       		.uleb128 0x2
 4246 0965 91       		.byte	0x91
 4247 0966 6C       		.sleb128 -20
 4248 0967 12       		.uleb128 0x12
 4249 0968 33030000 		.4byte	.LASF24
 4250 096c 01       		.byte	0x1
 4251 096d F00B     		.2byte	0xbf0
 4252 096f 83000000 		.4byte	0x83
 4253 0973 02       		.uleb128 0x2
 4254 0974 91       		.byte	0x91
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 131


 4255 0975 74       		.sleb128 -12
 4256 0976 00       		.byte	0
 4257 0977 13       		.uleb128 0x13
 4258 0978 5F060000 		.4byte	.LASF103
 4259 097c 01       		.byte	0x1
 4260 097d 090C     		.2byte	0xc09
 4261 097f 00000000 		.4byte	.LFB53
 4262 0983 38000000 		.4byte	.LFE53-.LFB53
 4263 0987 01       		.uleb128 0x1
 4264 0988 9C       		.byte	0x9c
 4265 0989 AC090000 		.4byte	0x9ac
 4266 098d 11       		.uleb128 0x11
 4267 098e F3030000 		.4byte	.LASF101
 4268 0992 01       		.byte	0x1
 4269 0993 090C     		.2byte	0xc09
 4270 0995 83000000 		.4byte	0x83
 4271 0999 02       		.uleb128 0x2
 4272 099a 91       		.byte	0x91
 4273 099b 6C       		.sleb128 -20
 4274 099c 12       		.uleb128 0x12
 4275 099d 33030000 		.4byte	.LASF24
 4276 09a1 01       		.byte	0x1
 4277 09a2 0B0C     		.2byte	0xc0b
 4278 09a4 83000000 		.4byte	0x83
 4279 09a8 02       		.uleb128 0x2
 4280 09a9 91       		.byte	0x91
 4281 09aa 74       		.sleb128 -12
 4282 09ab 00       		.byte	0
 4283 09ac 10       		.uleb128 0x10
 4284 09ad 14040000 		.4byte	.LASF104
 4285 09b1 01       		.byte	0x1
 4286 09b2 260C     		.2byte	0xc26
 4287 09b4 00000000 		.4byte	.LFB54
 4288 09b8 A0000000 		.4byte	.LFE54-.LFB54
 4289 09bc 01       		.uleb128 0x1
 4290 09bd 9C       		.byte	0x9c
 4291 09be F0090000 		.4byte	0x9f0
 4292 09c2 11       		.uleb128 0x11
 4293 09c3 D5000000 		.4byte	.LASF105
 4294 09c7 01       		.byte	0x1
 4295 09c8 260C     		.2byte	0xc26
 4296 09ca 83000000 		.4byte	0x83
 4297 09ce 02       		.uleb128 0x2
 4298 09cf 91       		.byte	0x91
 4299 09d0 6C       		.sleb128 -20
 4300 09d1 11       		.uleb128 0x11
 4301 09d2 F3030000 		.4byte	.LASF101
 4302 09d6 01       		.byte	0x1
 4303 09d7 260C     		.2byte	0xc26
 4304 09d9 83000000 		.4byte	0x83
 4305 09dd 02       		.uleb128 0x2
 4306 09de 91       		.byte	0x91
 4307 09df 68       		.sleb128 -24
 4308 09e0 12       		.uleb128 0x12
 4309 09e1 33030000 		.4byte	.LASF24
 4310 09e5 01       		.byte	0x1
 4311 09e6 280C     		.2byte	0xc28
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 132


 4312 09e8 83000000 		.4byte	0x83
 4313 09ec 02       		.uleb128 0x2
 4314 09ed 91       		.byte	0x91
 4315 09ee 74       		.sleb128 -12
 4316 09ef 00       		.byte	0
 4317 09f0 15       		.uleb128 0x15
 4318 09f1 E0000000 		.4byte	0xe0
 4319 09f5 000A0000 		.4byte	0xa00
 4320 09f9 16       		.uleb128 0x16
 4321 09fa D9000000 		.4byte	0xd9
 4322 09fe 04       		.byte	0x4
 4323 09ff 00       		.byte	0
 4324 0a00 0D       		.uleb128 0xd
 4325 0a01 D7050000 		.4byte	.LASF106
 4326 0a05 01       		.byte	0x1
 4327 0a06 22       		.byte	0x22
 4328 0a07 F0090000 		.4byte	0x9f0
 4329 0a0b 05       		.uleb128 0x5
 4330 0a0c 03       		.byte	0x3
 4331 0a0d 00000000 		.4byte	CySysTickCallbacks
 4332 0a11 1B       		.uleb128 0x1b
 4333 0a12 8B040000 		.4byte	.LASF107
 4334 0a16 01       		.byte	0x1
 4335 0a17 1B       		.byte	0x1b
 4336 0a18 83000000 		.4byte	0x83
 4337 0a1c 05       		.uleb128 0x5
 4338 0a1d 03       		.byte	0x3
 4339 0a1e 00000000 		.4byte	cydelayFreqHz
 4340 0a22 1B       		.uleb128 0x1b
 4341 0a23 B5010000 		.4byte	.LASF108
 4342 0a27 01       		.byte	0x1
 4343 0a28 1C       		.byte	0x1c
 4344 0a29 83000000 		.4byte	0x83
 4345 0a2d 05       		.uleb128 0x5
 4346 0a2e 03       		.byte	0x3
 4347 0a2f 00000000 		.4byte	cydelayFreqKhz
 4348 0a33 1B       		.uleb128 0x1b
 4349 0a34 50060000 		.4byte	.LASF109
 4350 0a38 01       		.byte	0x1
 4351 0a39 1D       		.byte	0x1d
 4352 0a3a 6B000000 		.4byte	0x6b
 4353 0a3e 05       		.uleb128 0x5
 4354 0a3f 03       		.byte	0x3
 4355 0a40 00000000 		.4byte	cydelayFreqMhz
 4356 0a44 1B       		.uleb128 0x1b
 4357 0a45 3D020000 		.4byte	.LASF110
 4358 0a49 01       		.byte	0x1
 4359 0a4a 1E       		.byte	0x1e
 4360 0a4b 83000000 		.4byte	0x83
 4361 0a4f 05       		.uleb128 0x5
 4362 0a50 03       		.byte	0x3
 4363 0a51 00000000 		.4byte	cydelay32kMs
 4364 0a55 1B       		.uleb128 0x1b
 4365 0a56 03040000 		.4byte	.LASF111
 4366 0a5a 01       		.byte	0x1
 4367 0a5b 36       		.byte	0x36
 4368 0a5c 83000000 		.4byte	0x83
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 133


 4369 0a60 05       		.uleb128 0x5
 4370 0a61 03       		.byte	0x3
 4371 0a62 00000000 		.4byte	CySysTickInitVar
 4372 0a66 15       		.uleb128 0x15
 4373 0a67 6B000000 		.4byte	0x6b
 4374 0a6b 760A0000 		.4byte	0xa76
 4375 0a6f 16       		.uleb128 0x16
 4376 0a70 D9000000 		.4byte	0xd9
 4377 0a74 2D       		.byte	0x2d
 4378 0a75 00       		.byte	0
 4379 0a76 1B       		.uleb128 0x1b
 4380 0a77 68040000 		.4byte	.LASF112
 4381 0a7b 01       		.byte	0x1
 4382 0a7c 3B       		.byte	0x3b
 4383 0a7d 870A0000 		.4byte	0xa87
 4384 0a81 05       		.uleb128 0x5
 4385 0a82 03       		.byte	0x3
 4386 0a83 00000000 		.4byte	cyImoFreqMhz2Reg
 4387 0a87 1C       		.uleb128 0x1c
 4388 0a88 660A0000 		.4byte	0xa66
 4389 0a8c 15       		.uleb128 0x15
 4390 0a8d 6B000000 		.4byte	0x6b
 4391 0a91 9C0A0000 		.4byte	0xa9c
 4392 0a95 16       		.uleb128 0x16
 4393 0a96 D9000000 		.4byte	0xd9
 4394 0a9a 16       		.byte	0x16
 4395 0a9b 00       		.byte	0
 4396 0a9c 1B       		.uleb128 0x1b
 4397 0a9d 76050000 		.4byte	.LASF113
 4398 0aa1 01       		.byte	0x1
 4399 0aa2 4C       		.byte	0x4c
 4400 0aa3 AD0A0000 		.4byte	0xaad
 4401 0aa7 05       		.uleb128 0x5
 4402 0aa8 03       		.byte	0x3
 4403 0aa9 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4404 0aad 1C       		.uleb128 0x1c
 4405 0aae 8C0A0000 		.4byte	0xa8c
 4406 0ab2 1B       		.uleb128 0x1b
 4407 0ab3 69000000 		.4byte	.LASF114
 4408 0ab7 01       		.byte	0x1
 4409 0ab8 5B       		.byte	0x5b
 4410 0ab9 83000000 		.4byte	0x83
 4411 0abd 05       		.uleb128 0x5
 4412 0abe 03       		.byte	0x3
 4413 0abf 00000000 		.4byte	CySysClkPumpConfig
 4414 0ac3 00       		.byte	0
 4415              		.section	.debug_abbrev,"",%progbits
 4416              	.Ldebug_abbrev0:
 4417 0000 01       		.uleb128 0x1
 4418 0001 11       		.uleb128 0x11
 4419 0002 01       		.byte	0x1
 4420 0003 25       		.uleb128 0x25
 4421 0004 0E       		.uleb128 0xe
 4422 0005 13       		.uleb128 0x13
 4423 0006 0B       		.uleb128 0xb
 4424 0007 03       		.uleb128 0x3
 4425 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 134


 4426 0009 1B       		.uleb128 0x1b
 4427 000a 0E       		.uleb128 0xe
 4428 000b 55       		.uleb128 0x55
 4429 000c 17       		.uleb128 0x17
 4430 000d 11       		.uleb128 0x11
 4431 000e 01       		.uleb128 0x1
 4432 000f 10       		.uleb128 0x10
 4433 0010 17       		.uleb128 0x17
 4434 0011 00       		.byte	0
 4435 0012 00       		.byte	0
 4436 0013 02       		.uleb128 0x2
 4437 0014 24       		.uleb128 0x24
 4438 0015 00       		.byte	0
 4439 0016 0B       		.uleb128 0xb
 4440 0017 0B       		.uleb128 0xb
 4441 0018 3E       		.uleb128 0x3e
 4442 0019 0B       		.uleb128 0xb
 4443 001a 03       		.uleb128 0x3
 4444 001b 0E       		.uleb128 0xe
 4445 001c 00       		.byte	0
 4446 001d 00       		.byte	0
 4447 001e 03       		.uleb128 0x3
 4448 001f 24       		.uleb128 0x24
 4449 0020 00       		.byte	0
 4450 0021 0B       		.uleb128 0xb
 4451 0022 0B       		.uleb128 0xb
 4452 0023 3E       		.uleb128 0x3e
 4453 0024 0B       		.uleb128 0xb
 4454 0025 03       		.uleb128 0x3
 4455 0026 08       		.uleb128 0x8
 4456 0027 00       		.byte	0
 4457 0028 00       		.byte	0
 4458 0029 04       		.uleb128 0x4
 4459 002a 16       		.uleb128 0x16
 4460 002b 00       		.byte	0
 4461 002c 03       		.uleb128 0x3
 4462 002d 0E       		.uleb128 0xe
 4463 002e 3A       		.uleb128 0x3a
 4464 002f 0B       		.uleb128 0xb
 4465 0030 3B       		.uleb128 0x3b
 4466 0031 05       		.uleb128 0x5
 4467 0032 49       		.uleb128 0x49
 4468 0033 13       		.uleb128 0x13
 4469 0034 00       		.byte	0
 4470 0035 00       		.byte	0
 4471 0036 05       		.uleb128 0x5
 4472 0037 35       		.uleb128 0x35
 4473 0038 00       		.byte	0
 4474 0039 49       		.uleb128 0x49
 4475 003a 13       		.uleb128 0x13
 4476 003b 00       		.byte	0
 4477 003c 00       		.byte	0
 4478 003d 06       		.uleb128 0x6
 4479 003e 0F       		.uleb128 0xf
 4480 003f 00       		.byte	0
 4481 0040 0B       		.uleb128 0xb
 4482 0041 0B       		.uleb128 0xb
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 135


 4483 0042 49       		.uleb128 0x49
 4484 0043 13       		.uleb128 0x13
 4485 0044 00       		.byte	0
 4486 0045 00       		.byte	0
 4487 0046 07       		.uleb128 0x7
 4488 0047 15       		.uleb128 0x15
 4489 0048 00       		.byte	0
 4490 0049 27       		.uleb128 0x27
 4491 004a 19       		.uleb128 0x19
 4492 004b 00       		.byte	0
 4493 004c 00       		.byte	0
 4494 004d 08       		.uleb128 0x8
 4495 004e 16       		.uleb128 0x16
 4496 004f 00       		.byte	0
 4497 0050 03       		.uleb128 0x3
 4498 0051 0E       		.uleb128 0xe
 4499 0052 3A       		.uleb128 0x3a
 4500 0053 0B       		.uleb128 0xb
 4501 0054 3B       		.uleb128 0x3b
 4502 0055 0B       		.uleb128 0xb
 4503 0056 49       		.uleb128 0x49
 4504 0057 13       		.uleb128 0x13
 4505 0058 00       		.byte	0
 4506 0059 00       		.byte	0
 4507 005a 09       		.uleb128 0x9
 4508 005b 2E       		.uleb128 0x2e
 4509 005c 00       		.byte	0
 4510 005d 3F       		.uleb128 0x3f
 4511 005e 19       		.uleb128 0x19
 4512 005f 03       		.uleb128 0x3
 4513 0060 0E       		.uleb128 0xe
 4514 0061 3A       		.uleb128 0x3a
 4515 0062 0B       		.uleb128 0xb
 4516 0063 3B       		.uleb128 0x3b
 4517 0064 0B       		.uleb128 0xb
 4518 0065 27       		.uleb128 0x27
 4519 0066 19       		.uleb128 0x19
 4520 0067 11       		.uleb128 0x11
 4521 0068 01       		.uleb128 0x1
 4522 0069 12       		.uleb128 0x12
 4523 006a 06       		.uleb128 0x6
 4524 006b 40       		.uleb128 0x40
 4525 006c 18       		.uleb128 0x18
 4526 006d 9742     		.uleb128 0x2117
 4527 006f 19       		.uleb128 0x19
 4528 0070 00       		.byte	0
 4529 0071 00       		.byte	0
 4530 0072 0A       		.uleb128 0xa
 4531 0073 2E       		.uleb128 0x2e
 4532 0074 00       		.byte	0
 4533 0075 3F       		.uleb128 0x3f
 4534 0076 19       		.uleb128 0x19
 4535 0077 03       		.uleb128 0x3
 4536 0078 0E       		.uleb128 0xe
 4537 0079 3A       		.uleb128 0x3a
 4538 007a 0B       		.uleb128 0xb
 4539 007b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 136


 4540 007c 0B       		.uleb128 0xb
 4541 007d 27       		.uleb128 0x27
 4542 007e 19       		.uleb128 0x19
 4543 007f 11       		.uleb128 0x11
 4544 0080 01       		.uleb128 0x1
 4545 0081 12       		.uleb128 0x12
 4546 0082 06       		.uleb128 0x6
 4547 0083 40       		.uleb128 0x40
 4548 0084 18       		.uleb128 0x18
 4549 0085 9642     		.uleb128 0x2116
 4550 0087 19       		.uleb128 0x19
 4551 0088 00       		.byte	0
 4552 0089 00       		.byte	0
 4553 008a 0B       		.uleb128 0xb
 4554 008b 2E       		.uleb128 0x2e
 4555 008c 01       		.byte	0x1
 4556 008d 3F       		.uleb128 0x3f
 4557 008e 19       		.uleb128 0x19
 4558 008f 03       		.uleb128 0x3
 4559 0090 0E       		.uleb128 0xe
 4560 0091 3A       		.uleb128 0x3a
 4561 0092 0B       		.uleb128 0xb
 4562 0093 3B       		.uleb128 0x3b
 4563 0094 0B       		.uleb128 0xb
 4564 0095 27       		.uleb128 0x27
 4565 0096 19       		.uleb128 0x19
 4566 0097 11       		.uleb128 0x11
 4567 0098 01       		.uleb128 0x1
 4568 0099 12       		.uleb128 0x12
 4569 009a 06       		.uleb128 0x6
 4570 009b 40       		.uleb128 0x40
 4571 009c 18       		.uleb128 0x18
 4572 009d 9642     		.uleb128 0x2116
 4573 009f 19       		.uleb128 0x19
 4574 00a0 01       		.uleb128 0x1
 4575 00a1 13       		.uleb128 0x13
 4576 00a2 00       		.byte	0
 4577 00a3 00       		.byte	0
 4578 00a4 0C       		.uleb128 0xc
 4579 00a5 34       		.uleb128 0x34
 4580 00a6 00       		.byte	0
 4581 00a7 03       		.uleb128 0x3
 4582 00a8 08       		.uleb128 0x8
 4583 00a9 3A       		.uleb128 0x3a
 4584 00aa 0B       		.uleb128 0xb
 4585 00ab 3B       		.uleb128 0x3b
 4586 00ac 0B       		.uleb128 0xb
 4587 00ad 49       		.uleb128 0x49
 4588 00ae 13       		.uleb128 0x13
 4589 00af 02       		.uleb128 0x2
 4590 00b0 18       		.uleb128 0x18
 4591 00b1 00       		.byte	0
 4592 00b2 00       		.byte	0
 4593 00b3 0D       		.uleb128 0xd
 4594 00b4 34       		.uleb128 0x34
 4595 00b5 00       		.byte	0
 4596 00b6 03       		.uleb128 0x3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 137


 4597 00b7 0E       		.uleb128 0xe
 4598 00b8 3A       		.uleb128 0x3a
 4599 00b9 0B       		.uleb128 0xb
 4600 00ba 3B       		.uleb128 0x3b
 4601 00bb 0B       		.uleb128 0xb
 4602 00bc 49       		.uleb128 0x49
 4603 00bd 13       		.uleb128 0x13
 4604 00be 02       		.uleb128 0x2
 4605 00bf 18       		.uleb128 0x18
 4606 00c0 00       		.byte	0
 4607 00c1 00       		.byte	0
 4608 00c2 0E       		.uleb128 0xe
 4609 00c3 2E       		.uleb128 0x2e
 4610 00c4 00       		.byte	0
 4611 00c5 3F       		.uleb128 0x3f
 4612 00c6 19       		.uleb128 0x19
 4613 00c7 03       		.uleb128 0x3
 4614 00c8 0E       		.uleb128 0xe
 4615 00c9 3A       		.uleb128 0x3a
 4616 00ca 0B       		.uleb128 0xb
 4617 00cb 3B       		.uleb128 0x3b
 4618 00cc 05       		.uleb128 0x5
 4619 00cd 27       		.uleb128 0x27
 4620 00ce 19       		.uleb128 0x19
 4621 00cf 11       		.uleb128 0x11
 4622 00d0 01       		.uleb128 0x1
 4623 00d1 12       		.uleb128 0x12
 4624 00d2 06       		.uleb128 0x6
 4625 00d3 40       		.uleb128 0x40
 4626 00d4 18       		.uleb128 0x18
 4627 00d5 9742     		.uleb128 0x2117
 4628 00d7 19       		.uleb128 0x19
 4629 00d8 00       		.byte	0
 4630 00d9 00       		.byte	0
 4631 00da 0F       		.uleb128 0xf
 4632 00db 2E       		.uleb128 0x2e
 4633 00dc 00       		.byte	0
 4634 00dd 3F       		.uleb128 0x3f
 4635 00de 19       		.uleb128 0x19
 4636 00df 03       		.uleb128 0x3
 4637 00e0 0E       		.uleb128 0xe
 4638 00e1 3A       		.uleb128 0x3a
 4639 00e2 0B       		.uleb128 0xb
 4640 00e3 3B       		.uleb128 0x3b
 4641 00e4 05       		.uleb128 0x5
 4642 00e5 27       		.uleb128 0x27
 4643 00e6 19       		.uleb128 0x19
 4644 00e7 49       		.uleb128 0x49
 4645 00e8 13       		.uleb128 0x13
 4646 00e9 11       		.uleb128 0x11
 4647 00ea 01       		.uleb128 0x1
 4648 00eb 12       		.uleb128 0x12
 4649 00ec 06       		.uleb128 0x6
 4650 00ed 40       		.uleb128 0x40
 4651 00ee 18       		.uleb128 0x18
 4652 00ef 9742     		.uleb128 0x2117
 4653 00f1 19       		.uleb128 0x19
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 138


 4654 00f2 00       		.byte	0
 4655 00f3 00       		.byte	0
 4656 00f4 10       		.uleb128 0x10
 4657 00f5 2E       		.uleb128 0x2e
 4658 00f6 01       		.byte	0x1
 4659 00f7 3F       		.uleb128 0x3f
 4660 00f8 19       		.uleb128 0x19
 4661 00f9 03       		.uleb128 0x3
 4662 00fa 0E       		.uleb128 0xe
 4663 00fb 3A       		.uleb128 0x3a
 4664 00fc 0B       		.uleb128 0xb
 4665 00fd 3B       		.uleb128 0x3b
 4666 00fe 05       		.uleb128 0x5
 4667 00ff 27       		.uleb128 0x27
 4668 0100 19       		.uleb128 0x19
 4669 0101 11       		.uleb128 0x11
 4670 0102 01       		.uleb128 0x1
 4671 0103 12       		.uleb128 0x12
 4672 0104 06       		.uleb128 0x6
 4673 0105 40       		.uleb128 0x40
 4674 0106 18       		.uleb128 0x18
 4675 0107 9642     		.uleb128 0x2116
 4676 0109 19       		.uleb128 0x19
 4677 010a 01       		.uleb128 0x1
 4678 010b 13       		.uleb128 0x13
 4679 010c 00       		.byte	0
 4680 010d 00       		.byte	0
 4681 010e 11       		.uleb128 0x11
 4682 010f 05       		.uleb128 0x5
 4683 0110 00       		.byte	0
 4684 0111 03       		.uleb128 0x3
 4685 0112 0E       		.uleb128 0xe
 4686 0113 3A       		.uleb128 0x3a
 4687 0114 0B       		.uleb128 0xb
 4688 0115 3B       		.uleb128 0x3b
 4689 0116 05       		.uleb128 0x5
 4690 0117 49       		.uleb128 0x49
 4691 0118 13       		.uleb128 0x13
 4692 0119 02       		.uleb128 0x2
 4693 011a 18       		.uleb128 0x18
 4694 011b 00       		.byte	0
 4695 011c 00       		.byte	0
 4696 011d 12       		.uleb128 0x12
 4697 011e 34       		.uleb128 0x34
 4698 011f 00       		.byte	0
 4699 0120 03       		.uleb128 0x3
 4700 0121 0E       		.uleb128 0xe
 4701 0122 3A       		.uleb128 0x3a
 4702 0123 0B       		.uleb128 0xb
 4703 0124 3B       		.uleb128 0x3b
 4704 0125 05       		.uleb128 0x5
 4705 0126 49       		.uleb128 0x49
 4706 0127 13       		.uleb128 0x13
 4707 0128 02       		.uleb128 0x2
 4708 0129 18       		.uleb128 0x18
 4709 012a 00       		.byte	0
 4710 012b 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 139


 4711 012c 13       		.uleb128 0x13
 4712 012d 2E       		.uleb128 0x2e
 4713 012e 01       		.byte	0x1
 4714 012f 3F       		.uleb128 0x3f
 4715 0130 19       		.uleb128 0x19
 4716 0131 03       		.uleb128 0x3
 4717 0132 0E       		.uleb128 0xe
 4718 0133 3A       		.uleb128 0x3a
 4719 0134 0B       		.uleb128 0xb
 4720 0135 3B       		.uleb128 0x3b
 4721 0136 05       		.uleb128 0x5
 4722 0137 27       		.uleb128 0x27
 4723 0138 19       		.uleb128 0x19
 4724 0139 11       		.uleb128 0x11
 4725 013a 01       		.uleb128 0x1
 4726 013b 12       		.uleb128 0x12
 4727 013c 06       		.uleb128 0x6
 4728 013d 40       		.uleb128 0x40
 4729 013e 18       		.uleb128 0x18
 4730 013f 9742     		.uleb128 0x2117
 4731 0141 19       		.uleb128 0x19
 4732 0142 01       		.uleb128 0x1
 4733 0143 13       		.uleb128 0x13
 4734 0144 00       		.byte	0
 4735 0145 00       		.byte	0
 4736 0146 14       		.uleb128 0x14
 4737 0147 2E       		.uleb128 0x2e
 4738 0148 01       		.byte	0x1
 4739 0149 3F       		.uleb128 0x3f
 4740 014a 19       		.uleb128 0x19
 4741 014b 03       		.uleb128 0x3
 4742 014c 0E       		.uleb128 0xe
 4743 014d 3A       		.uleb128 0x3a
 4744 014e 0B       		.uleb128 0xb
 4745 014f 3B       		.uleb128 0x3b
 4746 0150 05       		.uleb128 0x5
 4747 0151 27       		.uleb128 0x27
 4748 0152 19       		.uleb128 0x19
 4749 0153 49       		.uleb128 0x49
 4750 0154 13       		.uleb128 0x13
 4751 0155 11       		.uleb128 0x11
 4752 0156 01       		.uleb128 0x1
 4753 0157 12       		.uleb128 0x12
 4754 0158 06       		.uleb128 0x6
 4755 0159 40       		.uleb128 0x40
 4756 015a 18       		.uleb128 0x18
 4757 015b 9642     		.uleb128 0x2116
 4758 015d 19       		.uleb128 0x19
 4759 015e 01       		.uleb128 0x1
 4760 015f 13       		.uleb128 0x13
 4761 0160 00       		.byte	0
 4762 0161 00       		.byte	0
 4763 0162 15       		.uleb128 0x15
 4764 0163 01       		.uleb128 0x1
 4765 0164 01       		.byte	0x1
 4766 0165 49       		.uleb128 0x49
 4767 0166 13       		.uleb128 0x13
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 140


 4768 0167 01       		.uleb128 0x1
 4769 0168 13       		.uleb128 0x13
 4770 0169 00       		.byte	0
 4771 016a 00       		.byte	0
 4772 016b 16       		.uleb128 0x16
 4773 016c 21       		.uleb128 0x21
 4774 016d 00       		.byte	0
 4775 016e 49       		.uleb128 0x49
 4776 016f 13       		.uleb128 0x13
 4777 0170 2F       		.uleb128 0x2f
 4778 0171 0B       		.uleb128 0xb
 4779 0172 00       		.byte	0
 4780 0173 00       		.byte	0
 4781 0174 17       		.uleb128 0x17
 4782 0175 2E       		.uleb128 0x2e
 4783 0176 01       		.byte	0x1
 4784 0177 3F       		.uleb128 0x3f
 4785 0178 19       		.uleb128 0x19
 4786 0179 03       		.uleb128 0x3
 4787 017a 0E       		.uleb128 0xe
 4788 017b 3A       		.uleb128 0x3a
 4789 017c 0B       		.uleb128 0xb
 4790 017d 3B       		.uleb128 0x3b
 4791 017e 05       		.uleb128 0x5
 4792 017f 27       		.uleb128 0x27
 4793 0180 19       		.uleb128 0x19
 4794 0181 49       		.uleb128 0x49
 4795 0182 13       		.uleb128 0x13
 4796 0183 11       		.uleb128 0x11
 4797 0184 01       		.uleb128 0x1
 4798 0185 12       		.uleb128 0x12
 4799 0186 06       		.uleb128 0x6
 4800 0187 40       		.uleb128 0x40
 4801 0188 18       		.uleb128 0x18
 4802 0189 9742     		.uleb128 0x2117
 4803 018b 19       		.uleb128 0x19
 4804 018c 01       		.uleb128 0x1
 4805 018d 13       		.uleb128 0x13
 4806 018e 00       		.byte	0
 4807 018f 00       		.byte	0
 4808 0190 18       		.uleb128 0x18
 4809 0191 2E       		.uleb128 0x2e
 4810 0192 00       		.byte	0
 4811 0193 3F       		.uleb128 0x3f
 4812 0194 19       		.uleb128 0x19
 4813 0195 03       		.uleb128 0x3
 4814 0196 0E       		.uleb128 0xe
 4815 0197 3A       		.uleb128 0x3a
 4816 0198 0B       		.uleb128 0xb
 4817 0199 3B       		.uleb128 0x3b
 4818 019a 05       		.uleb128 0x5
 4819 019b 27       		.uleb128 0x27
 4820 019c 19       		.uleb128 0x19
 4821 019d 11       		.uleb128 0x11
 4822 019e 01       		.uleb128 0x1
 4823 019f 12       		.uleb128 0x12
 4824 01a0 06       		.uleb128 0x6
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 141


 4825 01a1 40       		.uleb128 0x40
 4826 01a2 18       		.uleb128 0x18
 4827 01a3 9642     		.uleb128 0x2116
 4828 01a5 19       		.uleb128 0x19
 4829 01a6 00       		.byte	0
 4830 01a7 00       		.byte	0
 4831 01a8 19       		.uleb128 0x19
 4832 01a9 34       		.uleb128 0x34
 4833 01aa 00       		.byte	0
 4834 01ab 03       		.uleb128 0x3
 4835 01ac 08       		.uleb128 0x8
 4836 01ad 3A       		.uleb128 0x3a
 4837 01ae 0B       		.uleb128 0xb
 4838 01af 3B       		.uleb128 0x3b
 4839 01b0 05       		.uleb128 0x5
 4840 01b1 49       		.uleb128 0x49
 4841 01b2 13       		.uleb128 0x13
 4842 01b3 02       		.uleb128 0x2
 4843 01b4 18       		.uleb128 0x18
 4844 01b5 00       		.byte	0
 4845 01b6 00       		.byte	0
 4846 01b7 1A       		.uleb128 0x1a
 4847 01b8 2E       		.uleb128 0x2e
 4848 01b9 01       		.byte	0x1
 4849 01ba 03       		.uleb128 0x3
 4850 01bb 0E       		.uleb128 0xe
 4851 01bc 3A       		.uleb128 0x3a
 4852 01bd 0B       		.uleb128 0xb
 4853 01be 3B       		.uleb128 0x3b
 4854 01bf 05       		.uleb128 0x5
 4855 01c0 27       		.uleb128 0x27
 4856 01c1 19       		.uleb128 0x19
 4857 01c2 11       		.uleb128 0x11
 4858 01c3 01       		.uleb128 0x1
 4859 01c4 12       		.uleb128 0x12
 4860 01c5 06       		.uleb128 0x6
 4861 01c6 40       		.uleb128 0x40
 4862 01c7 18       		.uleb128 0x18
 4863 01c8 9642     		.uleb128 0x2116
 4864 01ca 19       		.uleb128 0x19
 4865 01cb 01       		.uleb128 0x1
 4866 01cc 13       		.uleb128 0x13
 4867 01cd 00       		.byte	0
 4868 01ce 00       		.byte	0
 4869 01cf 1B       		.uleb128 0x1b
 4870 01d0 34       		.uleb128 0x34
 4871 01d1 00       		.byte	0
 4872 01d2 03       		.uleb128 0x3
 4873 01d3 0E       		.uleb128 0xe
 4874 01d4 3A       		.uleb128 0x3a
 4875 01d5 0B       		.uleb128 0xb
 4876 01d6 3B       		.uleb128 0x3b
 4877 01d7 0B       		.uleb128 0xb
 4878 01d8 49       		.uleb128 0x49
 4879 01d9 13       		.uleb128 0x13
 4880 01da 3F       		.uleb128 0x3f
 4881 01db 19       		.uleb128 0x19
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 142


 4882 01dc 02       		.uleb128 0x2
 4883 01dd 18       		.uleb128 0x18
 4884 01de 00       		.byte	0
 4885 01df 00       		.byte	0
 4886 01e0 1C       		.uleb128 0x1c
 4887 01e1 26       		.uleb128 0x26
 4888 01e2 00       		.byte	0
 4889 01e3 49       		.uleb128 0x49
 4890 01e4 13       		.uleb128 0x13
 4891 01e5 00       		.byte	0
 4892 01e6 00       		.byte	0
 4893 01e7 00       		.byte	0
 4894              		.section	.debug_aranges,"",%progbits
 4895 0000 C4010000 		.4byte	0x1c4
 4896 0004 0200     		.2byte	0x2
 4897 0006 00000000 		.4byte	.Ldebug_info0
 4898 000a 04       		.byte	0x4
 4899 000b 00       		.byte	0
 4900 000c 0000     		.2byte	0
 4901 000e 0000     		.2byte	0
 4902 0010 00000000 		.4byte	.LFB1
 4903 0014 1C000000 		.4byte	.LFE1-.LFB1
 4904 0018 00000000 		.4byte	.LFB2
 4905 001c 1C000000 		.4byte	.LFE2-.LFB2
 4906 0020 00000000 		.4byte	.LFB3
 4907 0024 44010000 		.4byte	.LFE3-.LFB3
 4908 0028 00000000 		.4byte	.LFB4
 4909 002c 1C000000 		.4byte	.LFE4-.LFB4
 4910 0030 00000000 		.4byte	.LFB5
 4911 0034 20000000 		.4byte	.LFE5-.LFB5
 4912 0038 00000000 		.4byte	.LFB6
 4913 003c 48000000 		.4byte	.LFE6-.LFB6
 4914 0040 00000000 		.4byte	.LFB7
 4915 0044 50000000 		.4byte	.LFE7-.LFB7
 4916 0048 00000000 		.4byte	.LFB8
 4917 004c 34000000 		.4byte	.LFE8-.LFB8
 4918 0050 00000000 		.4byte	.LFB9
 4919 0054 44000000 		.4byte	.LFE9-.LFB9
 4920 0058 00000000 		.4byte	.LFB10
 4921 005c B8000000 		.4byte	.LFE10-.LFB10
 4922 0060 00000000 		.4byte	.LFB11
 4923 0064 60000000 		.4byte	.LFE11-.LFB11
 4924 0068 00000000 		.4byte	.LFB12
 4925 006c 28000000 		.4byte	.LFE12-.LFB12
 4926 0070 00000000 		.4byte	.LFB13
 4927 0074 18000000 		.4byte	.LFE13-.LFB13
 4928 0078 00000000 		.4byte	.LFB14
 4929 007c 14000000 		.4byte	.LFE14-.LFB14
 4930 0080 00000000 		.4byte	.LFB15
 4931 0084 30000000 		.4byte	.LFE15-.LFB15
 4932 0088 00000000 		.4byte	.LFB16
 4933 008c 24000000 		.4byte	.LFE16-.LFB16
 4934 0090 00000000 		.4byte	.LFB17
 4935 0094 18000000 		.4byte	.LFE17-.LFB17
 4936 0098 00000000 		.4byte	.LFB18
 4937 009c 48000000 		.4byte	.LFE18-.LFB18
 4938 00a0 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 143


 4939 00a4 34000000 		.4byte	.LFE19-.LFB19
 4940 00a8 00000000 		.4byte	.LFB20
 4941 00ac 4C000000 		.4byte	.LFE20-.LFB20
 4942 00b0 00000000 		.4byte	.LFB21
 4943 00b4 36000000 		.4byte	.LFE21-.LFB21
 4944 00b8 00000000 		.4byte	.LFB22
 4945 00bc A8000000 		.4byte	.LFE22-.LFB22
 4946 00c0 00000000 		.4byte	.LFB23
 4947 00c4 5C000000 		.4byte	.LFE23-.LFB23
 4948 00c8 00000000 		.4byte	.LFB24
 4949 00cc 28000000 		.4byte	.LFE24-.LFB24
 4950 00d0 00000000 		.4byte	.LFB25
 4951 00d4 30000000 		.4byte	.LFE25-.LFB25
 4952 00d8 00000000 		.4byte	.LFB26
 4953 00dc 28000000 		.4byte	.LFE26-.LFB26
 4954 00e0 00000000 		.4byte	.LFB27
 4955 00e4 28000000 		.4byte	.LFE27-.LFB27
 4956 00e8 00000000 		.4byte	.LFB28
 4957 00ec 28000000 		.4byte	.LFE28-.LFB28
 4958 00f0 00000000 		.4byte	.LFB29
 4959 00f4 14000000 		.4byte	.LFE29-.LFB29
 4960 00f8 00000000 		.4byte	.LFB30
 4961 00fc 20000000 		.4byte	.LFE30-.LFB30
 4962 0100 00000000 		.4byte	.LFB31
 4963 0104 48000000 		.4byte	.LFE31-.LFB31
 4964 0108 00000000 		.4byte	.LFB32
 4965 010c 28000000 		.4byte	.LFE32-.LFB32
 4966 0110 00000000 		.4byte	.LFB33
 4967 0114 84000000 		.4byte	.LFE33-.LFB33
 4968 0118 00000000 		.4byte	.LFB34
 4969 011c 24000000 		.4byte	.LFE34-.LFB34
 4970 0120 00000000 		.4byte	.LFB35
 4971 0124 64000000 		.4byte	.LFE35-.LFB35
 4972 0128 00000000 		.4byte	.LFB36
 4973 012c 1C000000 		.4byte	.LFE36-.LFB36
 4974 0130 00000000 		.4byte	.LFB37
 4975 0134 18000000 		.4byte	.LFE37-.LFB37
 4976 0138 00000000 		.4byte	.LFB38
 4977 013c 18000000 		.4byte	.LFE38-.LFB38
 4978 0140 00000000 		.4byte	.LFB39
 4979 0144 18000000 		.4byte	.LFE39-.LFB39
 4980 0148 00000000 		.4byte	.LFB40
 4981 014c 1C000000 		.4byte	.LFE40-.LFB40
 4982 0150 00000000 		.4byte	.LFB41
 4983 0154 18000000 		.4byte	.LFE41-.LFB41
 4984 0158 00000000 		.4byte	.LFB42
 4985 015c 18000000 		.4byte	.LFE42-.LFB42
 4986 0160 00000000 		.4byte	.LFB43
 4987 0164 34000000 		.4byte	.LFE43-.LFB43
 4988 0168 00000000 		.4byte	.LFB44
 4989 016c 18000000 		.4byte	.LFE44-.LFB44
 4990 0170 00000000 		.4byte	.LFB45
 4991 0174 18000000 		.4byte	.LFE45-.LFB45
 4992 0178 00000000 		.4byte	.LFB46
 4993 017c 14000000 		.4byte	.LFE46-.LFB46
 4994 0180 00000000 		.4byte	.LFB47
 4995 0184 2C000000 		.4byte	.LFE47-.LFB47
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 144


 4996 0188 00000000 		.4byte	.LFB48
 4997 018c 1C000000 		.4byte	.LFE48-.LFB48
 4998 0190 00000000 		.4byte	.LFB49
 4999 0194 44000000 		.4byte	.LFE49-.LFB49
 5000 0198 00000000 		.4byte	.LFB50
 5001 019c C0000000 		.4byte	.LFE50-.LFB50
 5002 01a0 00000000 		.4byte	.LFB51
 5003 01a4 38000000 		.4byte	.LFE51-.LFB51
 5004 01a8 00000000 		.4byte	.LFB52
 5005 01ac 38000000 		.4byte	.LFE52-.LFB52
 5006 01b0 00000000 		.4byte	.LFB53
 5007 01b4 38000000 		.4byte	.LFE53-.LFB53
 5008 01b8 00000000 		.4byte	.LFB54
 5009 01bc A0000000 		.4byte	.LFE54-.LFB54
 5010 01c0 00000000 		.4byte	0
 5011 01c4 00000000 		.4byte	0
 5012              		.section	.debug_ranges,"",%progbits
 5013              	.Ldebug_ranges0:
 5014 0000 00000000 		.4byte	.LFB1
 5015 0004 1C000000 		.4byte	.LFE1
 5016 0008 00000000 		.4byte	.LFB2
 5017 000c 1C000000 		.4byte	.LFE2
 5018 0010 00000000 		.4byte	.LFB3
 5019 0014 44010000 		.4byte	.LFE3
 5020 0018 00000000 		.4byte	.LFB4
 5021 001c 1C000000 		.4byte	.LFE4
 5022 0020 00000000 		.4byte	.LFB5
 5023 0024 20000000 		.4byte	.LFE5
 5024 0028 00000000 		.4byte	.LFB6
 5025 002c 48000000 		.4byte	.LFE6
 5026 0030 00000000 		.4byte	.LFB7
 5027 0034 50000000 		.4byte	.LFE7
 5028 0038 00000000 		.4byte	.LFB8
 5029 003c 34000000 		.4byte	.LFE8
 5030 0040 00000000 		.4byte	.LFB9
 5031 0044 44000000 		.4byte	.LFE9
 5032 0048 00000000 		.4byte	.LFB10
 5033 004c B8000000 		.4byte	.LFE10
 5034 0050 00000000 		.4byte	.LFB11
 5035 0054 60000000 		.4byte	.LFE11
 5036 0058 00000000 		.4byte	.LFB12
 5037 005c 28000000 		.4byte	.LFE12
 5038 0060 00000000 		.4byte	.LFB13
 5039 0064 18000000 		.4byte	.LFE13
 5040 0068 00000000 		.4byte	.LFB14
 5041 006c 14000000 		.4byte	.LFE14
 5042 0070 00000000 		.4byte	.LFB15
 5043 0074 30000000 		.4byte	.LFE15
 5044 0078 00000000 		.4byte	.LFB16
 5045 007c 24000000 		.4byte	.LFE16
 5046 0080 00000000 		.4byte	.LFB17
 5047 0084 18000000 		.4byte	.LFE17
 5048 0088 00000000 		.4byte	.LFB18
 5049 008c 48000000 		.4byte	.LFE18
 5050 0090 00000000 		.4byte	.LFB19
 5051 0094 34000000 		.4byte	.LFE19
 5052 0098 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 145


 5053 009c 4C000000 		.4byte	.LFE20
 5054 00a0 00000000 		.4byte	.LFB21
 5055 00a4 36000000 		.4byte	.LFE21
 5056 00a8 00000000 		.4byte	.LFB22
 5057 00ac A8000000 		.4byte	.LFE22
 5058 00b0 00000000 		.4byte	.LFB23
 5059 00b4 5C000000 		.4byte	.LFE23
 5060 00b8 00000000 		.4byte	.LFB24
 5061 00bc 28000000 		.4byte	.LFE24
 5062 00c0 00000000 		.4byte	.LFB25
 5063 00c4 30000000 		.4byte	.LFE25
 5064 00c8 00000000 		.4byte	.LFB26
 5065 00cc 28000000 		.4byte	.LFE26
 5066 00d0 00000000 		.4byte	.LFB27
 5067 00d4 28000000 		.4byte	.LFE27
 5068 00d8 00000000 		.4byte	.LFB28
 5069 00dc 28000000 		.4byte	.LFE28
 5070 00e0 00000000 		.4byte	.LFB29
 5071 00e4 14000000 		.4byte	.LFE29
 5072 00e8 00000000 		.4byte	.LFB30
 5073 00ec 20000000 		.4byte	.LFE30
 5074 00f0 00000000 		.4byte	.LFB31
 5075 00f4 48000000 		.4byte	.LFE31
 5076 00f8 00000000 		.4byte	.LFB32
 5077 00fc 28000000 		.4byte	.LFE32
 5078 0100 00000000 		.4byte	.LFB33
 5079 0104 84000000 		.4byte	.LFE33
 5080 0108 00000000 		.4byte	.LFB34
 5081 010c 24000000 		.4byte	.LFE34
 5082 0110 00000000 		.4byte	.LFB35
 5083 0114 64000000 		.4byte	.LFE35
 5084 0118 00000000 		.4byte	.LFB36
 5085 011c 1C000000 		.4byte	.LFE36
 5086 0120 00000000 		.4byte	.LFB37
 5087 0124 18000000 		.4byte	.LFE37
 5088 0128 00000000 		.4byte	.LFB38
 5089 012c 18000000 		.4byte	.LFE38
 5090 0130 00000000 		.4byte	.LFB39
 5091 0134 18000000 		.4byte	.LFE39
 5092 0138 00000000 		.4byte	.LFB40
 5093 013c 1C000000 		.4byte	.LFE40
 5094 0140 00000000 		.4byte	.LFB41
 5095 0144 18000000 		.4byte	.LFE41
 5096 0148 00000000 		.4byte	.LFB42
 5097 014c 18000000 		.4byte	.LFE42
 5098 0150 00000000 		.4byte	.LFB43
 5099 0154 34000000 		.4byte	.LFE43
 5100 0158 00000000 		.4byte	.LFB44
 5101 015c 18000000 		.4byte	.LFE44
 5102 0160 00000000 		.4byte	.LFB45
 5103 0164 18000000 		.4byte	.LFE45
 5104 0168 00000000 		.4byte	.LFB46
 5105 016c 14000000 		.4byte	.LFE46
 5106 0170 00000000 		.4byte	.LFB47
 5107 0174 2C000000 		.4byte	.LFE47
 5108 0178 00000000 		.4byte	.LFB48
 5109 017c 1C000000 		.4byte	.LFE48
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 146


 5110 0180 00000000 		.4byte	.LFB49
 5111 0184 44000000 		.4byte	.LFE49
 5112 0188 00000000 		.4byte	.LFB50
 5113 018c C0000000 		.4byte	.LFE50
 5114 0190 00000000 		.4byte	.LFB51
 5115 0194 38000000 		.4byte	.LFE51
 5116 0198 00000000 		.4byte	.LFB52
 5117 019c 38000000 		.4byte	.LFE52
 5118 01a0 00000000 		.4byte	.LFB53
 5119 01a4 38000000 		.4byte	.LFE53
 5120 01a8 00000000 		.4byte	.LFB54
 5121 01ac A0000000 		.4byte	.LFE54
 5122 01b0 00000000 		.4byte	0
 5123 01b4 00000000 		.4byte	0
 5124              		.section	.debug_line,"",%progbits
 5125              	.Ldebug_line0:
 5126 0000 3B050000 		.section	.debug_str,"MS",%progbits,1
 5126      02004D00 
 5126      00000201 
 5126      FB0E0D00 
 5126      01010101 
 5127              	.LASF59:
 5128 0000 72616D56 		.ascii	"ramVectorTable\000"
 5128      6563746F 
 5128      72546162 
 5128      6C6500
 5129              	.LASF10:
 5130 000f 75696E74 		.ascii	"uint16\000"
 5130      313600
 5131              	.LASF52:
 5132 0016 696E7453 		.ascii	"intState\000"
 5132      74617465 
 5132      00
 5133              	.LASF29:
 5134 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5134      73436C6B 
 5134      57726974 
 5134      65486663 
 5134      6C6B4469 
 5135              	.LASF117:
 5136 0038 433A5C70 		.ascii	"C:\\psoc\\chamonix\\camera\\Workspace01\\camera.cyd"
 5136      736F635C 
 5136      6368616D 
 5136      6F6E6978 
 5136      5C63616D 
 5137 0066 736E00   		.ascii	"sn\000"
 5138              	.LASF114:
 5139 0069 43795379 		.ascii	"CySysClkPumpConfig\000"
 5139      73436C6B 
 5139      50756D70 
 5139      436F6E66 
 5139      696700
 5140              	.LASF31:
 5141 007c 43795379 		.ascii	"CySysEnablePumpClock\000"
 5141      73456E61 
 5141      626C6550 
 5141      756D7043 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 147


 5141      6C6F636B 
 5142              	.LASF96:
 5143 0091 72657456 		.ascii	"retVal\000"
 5143      616C00
 5144              	.LASF51:
 5145 0098 43794469 		.ascii	"CyDisableInts\000"
 5145      7361626C 
 5145      65496E74 
 5145      7300
 5146              	.LASF7:
 5147 00a6 6C6F6E67 		.ascii	"long long unsigned int\000"
 5147      206C6F6E 
 5147      6720756E 
 5147      7369676E 
 5147      65642069 
 5148              	.LASF38:
 5149 00bd 70617261 		.ascii	"parameters\000"
 5149      6D657465 
 5149      727300
 5150              	.LASF53:
 5151 00c8 4379456E 		.ascii	"CyEnableInts\000"
 5151      61626C65 
 5151      496E7473 
 5151      00
 5152              	.LASF105:
 5153 00d5 696E7465 		.ascii	"interfaceNumber\000"
 5153      72666163 
 5153      654E756D 
 5153      62657200 
 5154              	.LASF74:
 5155 00e5 4379536F 		.ascii	"CySoftwareReset\000"
 5155      66747761 
 5155      72655265 
 5155      73657400 
 5156              	.LASF84:
 5157 00f5 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5157      73546963 
 5157      6B456E61 
 5157      626C6549 
 5157      6E746572 
 5158              	.LASF69:
 5159 010e 4379496E 		.ascii	"CyIntGetState\000"
 5159      74476574 
 5159      53746174 
 5159      6500
 5160              	.LASF6:
 5161 011c 6C6F6E67 		.ascii	"long long int\000"
 5161      206C6F6E 
 5161      6720696E 
 5161      7400
 5162              	.LASF0:
 5163 012a 7369676E 		.ascii	"signed char\000"
 5163      65642063 
 5163      68617200 
 5164              	.LASF22:
 5165 0136 66726571 		.ascii	"freq\000"
 5165      00
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 148


 5166              	.LASF79:
 5167 013b 43794465 		.ascii	"CyDelayFreq\000"
 5167      6C617946 
 5167      72657100 
 5168              	.LASF23:
 5169 0147 696E7465 		.ascii	"interruptState\000"
 5169      72727570 
 5169      74537461 
 5169      746500
 5170              	.LASF25:
 5171 0156 6C664C69 		.ascii	"lfLimit\000"
 5171      6D697400 
 5172              	.LASF87:
 5173 015e 43795379 		.ascii	"CySysTickGetReload\000"
 5173      73546963 
 5173      6B476574 
 5173      52656C6F 
 5173      616400
 5174              	.LASF44:
 5175 0171 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5175      73436C6B 
 5175      496D6F47 
 5175      65745763 
 5175      6F4C6F63 
 5176              	.LASF40:
 5177 0187 77636F4C 		.ascii	"wcoLock\000"
 5177      6F636B00 
 5178              	.LASF4:
 5179 018f 6C6F6E67 		.ascii	"long int\000"
 5179      20696E74 
 5179      00
 5180              	.LASF70:
 5181 0198 4379496E 		.ascii	"CyIntDisable\000"
 5181      74446973 
 5181      61626C65 
 5181      00
 5182              	.LASF39:
 5183 01a5 72656756 		.ascii	"regValues\000"
 5183      616C7565 
 5183      7300
 5184              	.LASF9:
 5185 01af 75696E74 		.ascii	"uint8\000"
 5185      3800
 5186              	.LASF108:
 5187 01b5 63796465 		.ascii	"cydelayFreqKhz\000"
 5187      6C617946 
 5187      7265714B 
 5187      687A00
 5188              	.LASF33:
 5189 01c4 656E6162 		.ascii	"enable\000"
 5189      6C6500
 5190              	.LASF13:
 5191 01cb 646F7562 		.ascii	"double\000"
 5191      6C6500
 5192              	.LASF65:
 5193 01d2 73686966 		.ascii	"shift\000"
 5193      7400
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 149


 5194              	.LASF46:
 5195 01d8 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5195      734C7664 
 5195      436C6561 
 5195      72496E74 
 5195      65727275 
 5196              	.LASF11:
 5197 01ef 75696E74 		.ascii	"uint32\000"
 5197      333200
 5198              	.LASF54:
 5199 01f6 6D61736B 		.ascii	"mask\000"
 5199      00
 5200              	.LASF47:
 5201 01fb 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5201      73436C6B 
 5201      47657453 
 5201      7973636C 
 5201      6B536F75 
 5202              	.LASF28:
 5203 0213 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5203      73436C6B 
 5203      496D6F45 
 5203      6E61626C 
 5203      6557636F 
 5204              	.LASF67:
 5205 022c 4379496E 		.ascii	"CyIntGetPriority\000"
 5205      74476574 
 5205      5072696F 
 5205      72697479 
 5205      00
 5206              	.LASF110:
 5207 023d 63796465 		.ascii	"cydelay32kMs\000"
 5207      6C617933 
 5207      326B4D73 
 5207      00
 5208              	.LASF81:
 5209 024a 43795379 		.ascii	"CySysTickInit\000"
 5209      73546963 
 5209      6B496E69 
 5209      7400
 5210              	.LASF66:
 5211 0258 76616C75 		.ascii	"value\000"
 5211      6500
 5212              	.LASF90:
 5213 025e 636C6F63 		.ascii	"clockSource\000"
 5213      6B536F75 
 5213      72636500 
 5214              	.LASF98:
 5215 026a 43794765 		.ascii	"CyGetUniqueId\000"
 5215      74556E69 
 5215      71756549 
 5215      6400
 5216              	.LASF92:
 5217 0278 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5217      73546963 
 5217      6B476574 
 5217      436F756E 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 150


 5217      74466C61 
 5218              	.LASF8:
 5219 028e 756E7369 		.ascii	"unsigned int\000"
 5219      676E6564 
 5219      20696E74 
 5219      00
 5220              	.LASF93:
 5221 029b 43795379 		.ascii	"CySysTickClear\000"
 5221      73546963 
 5221      6B436C65 
 5221      617200
 5222              	.LASF5:
 5223 02aa 6C6F6E67 		.ascii	"long unsigned int\000"
 5223      20756E73 
 5223      69676E65 
 5223      6420696E 
 5223      7400
 5224              	.LASF45:
 5225 02bc 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5225      734C7664 
 5225      47657449 
 5225      6E746572 
 5225      72757074 
 5226              	.LASF21:
 5227 02d7 43795379 		.ascii	"CySysClkImoStop\000"
 5227      73436C6B 
 5227      496D6F53 
 5227      746F7000 
 5228              	.LASF71:
 5229 02e7 4379496E 		.ascii	"CyIntSetPending\000"
 5229      74536574 
 5229      50656E64 
 5229      696E6700 
 5230              	.LASF97:
 5231 02f7 43795379 		.ascii	"CySysTickGetCallback\000"
 5231      73546963 
 5231      6B476574 
 5231      43616C6C 
 5231      6261636B 
 5232              	.LASF48:
 5233 030c 43795379 		.ascii	"CySysGetResetReason\000"
 5233      73476574 
 5233      52657365 
 5233      74526561 
 5233      736F6E00 
 5234              	.LASF3:
 5235 0320 73686F72 		.ascii	"short unsigned int\000"
 5235      7420756E 
 5235      7369676E 
 5235      65642069 
 5235      6E7400
 5236              	.LASF24:
 5237 0333 72656754 		.ascii	"regTmp\000"
 5237      6D7000
 5238              	.LASF89:
 5239 033a 43795379 		.ascii	"CySysTickSetClockSource\000"
 5239      73546963 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 151


 5239      6B536574 
 5239      436C6F63 
 5239      6B536F75 
 5240              	.LASF61:
 5241 0352 4379496E 		.ascii	"CyIntSetVector\000"
 5241      74536574 
 5241      56656374 
 5241      6F7200
 5242              	.LASF56:
 5243 0361 6E756D62 		.ascii	"number\000"
 5243      657200
 5244              	.LASF64:
 5245 0368 7072696F 		.ascii	"priority\000"
 5245      72697479 
 5245      00
 5246              	.LASF37:
 5247 0371 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5247      73436C6B 
 5247      57726974 
 5247      65496D6F 
 5247      46726571 
 5248              	.LASF102:
 5249 0386 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5249      73536574 
 5249      466C6173 
 5249      68416363 
 5249      65737341 
 5250              	.LASF55:
 5251 03a5 4379496E 		.ascii	"CyIntSetSysVector\000"
 5251      74536574 
 5251      53797356 
 5251      6563746F 
 5251      7200
 5252              	.LASF27:
 5253 03b7 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5253      73436C6B 
 5253      496D6F44 
 5253      69736162 
 5253      6C655763 
 5254              	.LASF16:
 5255 03d1 72656733 		.ascii	"reg32\000"
 5255      3200
 5256              	.LASF80:
 5257 03d7 43795379 		.ascii	"CySysTickStart\000"
 5257      73546963 
 5257      6B537461 
 5257      727400
 5258              	.LASF50:
 5259 03e6 72657475 		.ascii	"returnStatus\000"
 5259      726E5374 
 5259      61747573 
 5259      00
 5260              	.LASF101:
 5261 03f3 736F7572 		.ascii	"source\000"
 5261      636500
 5262              	.LASF18:
 5263 03fa 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 152


 5263      74797065 
 5263      00
 5264              	.LASF111:
 5265 0403 43795379 		.ascii	"CySysTickInitVar\000"
 5265      73546963 
 5265      6B496E69 
 5265      74566172 
 5265      00
 5266              	.LASF104:
 5267 0414 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5267      73536574 
 5267      50657269 
 5267      70686572 
 5267      616C4163 
 5268              	.LASF72:
 5269 0438 4379496E 		.ascii	"CyIntClearPending\000"
 5269      74436C65 
 5269      61725065 
 5269      6E64696E 
 5269      6700
 5270              	.LASF57:
 5271 044a 61646472 		.ascii	"address\000"
 5271      65737300 
 5272              	.LASF34:
 5273 0452 73797363 		.ascii	"sysclkSource\000"
 5273      6C6B536F 
 5273      75726365 
 5273      00
 5274              	.LASF95:
 5275 045f 66756E63 		.ascii	"function\000"
 5275      74696F6E 
 5275      00
 5276              	.LASF112:
 5277 0468 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5277      6F467265 
 5277      714D687A 
 5277      32526567 
 5277      00
 5278              	.LASF88:
 5279 0479 43795379 		.ascii	"CySysTickGetValue\000"
 5279      73546963 
 5279      6B476574 
 5279      56616C75 
 5279      6500
 5280              	.LASF107:
 5281 048b 63796465 		.ascii	"cydelayFreqHz\000"
 5281      6C617946 
 5281      72657148 
 5281      7A00
 5282              	.LASF63:
 5283 0499 4379496E 		.ascii	"CyIntSetPriority\000"
 5283      74536574 
 5283      5072696F 
 5283      72697479 
 5283      00
 5284              	.LASF12:
 5285 04aa 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 153


 5285      7400
 5286              	.LASF41:
 5287 04b0 43795379 		.ascii	"CySysLvdEnable\000"
 5287      734C7664 
 5287      456E6162 
 5287      6C6500
 5288              	.LASF19:
 5289 04bf 63795379 		.ascii	"cySysTickCallback\000"
 5289      73546963 
 5289      6B43616C 
 5289      6C626163 
 5289      6B00
 5290              	.LASF62:
 5291 04d1 4379496E 		.ascii	"CyIntGetVector\000"
 5291      74476574 
 5291      56656374 
 5291      6F7200
 5292              	.LASF76:
 5293 04e0 6D696C6C 		.ascii	"milliseconds\000"
 5293      69736563 
 5293      6F6E6473 
 5293      00
 5294              	.LASF15:
 5295 04ed 72656738 		.ascii	"reg8\000"
 5295      00
 5296              	.LASF42:
 5297 04f2 74687265 		.ascii	"threshold\000"
 5297      73686F6C 
 5297      6400
 5298              	.LASF73:
 5299 04fc 43794861 		.ascii	"CyHalt\000"
 5299      6C7400
 5300              	.LASF100:
 5301 0503 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5301      73536574 
 5301      52616D41 
 5301      63636573 
 5301      73417262 
 5302              	.LASF1:
 5303 0520 756E7369 		.ascii	"unsigned char\000"
 5303      676E6564 
 5303      20636861 
 5303      7200
 5304              	.LASF2:
 5305 052e 73686F72 		.ascii	"short int\000"
 5305      7420696E 
 5305      7400
 5306              	.LASF68:
 5307 0538 4379496E 		.ascii	"CyIntEnable\000"
 5307      74456E61 
 5307      626C6500 
 5308              	.LASF60:
 5309 0544 4379496E 		.ascii	"CyIntGetSysVector\000"
 5309      74476574 
 5309      53797356 
 5309      6563746F 
 5309      7200
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 154


 5310              	.LASF32:
 5311 0556 636C6B53 		.ascii	"clkSelect\000"
 5311      656C6563 
 5311      7400
 5312              	.LASF77:
 5313 0560 43794465 		.ascii	"CyDelayUs\000"
 5313      6C617955 
 5313      7300
 5314              	.LASF49:
 5315 056a 72656173 		.ascii	"reason\000"
 5315      6F6E00
 5316              	.LASF14:
 5317 0571 63686172 		.ascii	"char\000"
 5317      00
 5318              	.LASF113:
 5319 0576 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5319      6F467265 
 5319      714D687A 
 5319      3244706C 
 5319      6C4F6666 
 5320              	.LASF17:
 5321 058e 63796973 		.ascii	"cyisraddress\000"
 5321      72616464 
 5321      72657373 
 5321      00
 5322              	.LASF82:
 5323 059b 43795379 		.ascii	"CySysTickEnable\000"
 5323      73546963 
 5323      6B456E61 
 5323      626C6500 
 5324              	.LASF35:
 5325 05ab 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5325      73436C6B 
 5325      57726974 
 5325      65537973 
 5325      636C6B44 
 5326              	.LASF94:
 5327 05c2 43795379 		.ascii	"CySysTickSetCallback\000"
 5327      73546963 
 5327      6B536574 
 5327      43616C6C 
 5327      6261636B 
 5328              	.LASF106:
 5329 05d7 43795379 		.ascii	"CySysTickCallbacks\000"
 5329      73546963 
 5329      6B43616C 
 5329      6C626163 
 5329      6B7300
 5330              	.LASF99:
 5331 05ea 756E6971 		.ascii	"uniqueId\000"
 5331      75654964 
 5331      00
 5332              	.LASF26:
 5333 05f3 666C6173 		.ascii	"flashCtlReg\000"
 5333      6843746C 
 5333      52656700 
 5334              	.LASF75:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 155


 5335 05ff 43794465 		.ascii	"CyDelay\000"
 5335      6C617900 
 5336              	.LASF91:
 5337 0607 43795379 		.ascii	"CySysTickGetClockSource\000"
 5337      73546963 
 5337      6B476574 
 5337      436C6F63 
 5337      6B536F75 
 5338              	.LASF85:
 5339 061f 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5339      73546963 
 5339      6B446973 
 5339      61626C65 
 5339      496E7465 
 5340              	.LASF43:
 5341 0639 43795379 		.ascii	"CySysLvdDisable\000"
 5341      734C7664 
 5341      44697361 
 5341      626C6500 
 5342              	.LASF58:
 5343 0649 6F6C6449 		.ascii	"oldIsr\000"
 5343      737200
 5344              	.LASF109:
 5345 0650 63796465 		.ascii	"cydelayFreqMhz\000"
 5345      6C617946 
 5345      7265714D 
 5345      687A00
 5346              	.LASF103:
 5347 065f 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5347      73536574 
 5347      446D6163 
 5347      41636365 
 5347      73734172 
 5348              	.LASF83:
 5349 067d 43795379 		.ascii	"CySysTickStop\000"
 5349      73546963 
 5349      6B53746F 
 5349      7000
 5350              	.LASF36:
 5351 068b 64697669 		.ascii	"divider\000"
 5351      64657200 
 5352              	.LASF115:
 5353 0693 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5353      4320342E 
 5353      392E3320 
 5353      32303135 
 5353      30333033 
 5354 06c6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5354      20726576 
 5354      6973696F 
 5354      6E203232 
 5354      31323230 
 5355 06f9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5355      66756E63 
 5355      74696F6E 
 5355      2D736563 
 5355      74696F6E 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\cc7kBxtg.s 			page 156


 5356              	.LASF20:
 5357 0721 43795379 		.ascii	"CySysClkImoStart\000"
 5357      73436C6B 
 5357      496D6F53 
 5357      74617274 
 5357      00
 5358              	.LASF116:
 5359 0732 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5359      72617465 
 5359      645F536F 
 5359      75726365 
 5359      5C50536F 
 5360              	.LASF78:
 5361 0751 6D696372 		.ascii	"microseconds\000"
 5361      6F736563 
 5361      6F6E6473 
 5361      00
 5362              	.LASF30:
 5363 075e 746D7052 		.ascii	"tmpReg\000"
 5363      656700
 5364              	.LASF86:
 5365 0765 43795379 		.ascii	"CySysTickSetReload\000"
 5365      73546963 
 5365      6B536574 
 5365      52656C6F 
 5365      616400
 5366              	.LASF118:
 5367 0778 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5367      73546963 
 5367      6B536572 
 5367      76696365 
 5367      43616C6C 
 5368              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
