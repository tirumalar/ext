ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"EZI2C_CAM_I2C_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EZI2C_CAM_I2C_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	EZI2C_CAM_I2C_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	EZI2C_CAM_I2C_ISR, %function
  25              	EZI2C_CAM_I2C_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\EZI2C_CAM_I2C_INT.c"
   1:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * \file EZI2C_CAM_I2C_INT.c
   3:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * \version 3.20
   4:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *
   5:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * \brief
   6:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *  the SCB Component in I2C mode.
   8:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *
   9:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * Note:
  10:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *
  11:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * \copyright
  13:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  19:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #include "EZI2C_CAM_PVT.h"
  20:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #include "EZI2C_CAM_I2C_PVT.h"
  21:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  23:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  24:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** * Function Name: EZI2C_CAM_I2C_ISR
  26:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** ****************************************************************************//**
  27:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *
  28:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *  Handles the Interrupt Service Routine for the SCB I2C mode.
  29:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *
  30:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** *******************************************************************************/
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 2


  31:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** CY_ISR(EZI2C_CAM_I2C_ISR)
  32:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36              	.LVL0:
  33:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     uint32 diffCount;
  34:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     uint32 endTransfer;
  35:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  36:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #ifdef EZI2C_CAM_I2C_ISR_ENTRY_CALLBACK
  37:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     EZI2C_CAM_I2C_ISR_EntryCallback();
  38:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #endif /* EZI2C_CAM_I2C_ISR_ENTRY_CALLBACK */
  39:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  40:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #if (EZI2C_CAM_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
  41:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     uint32 response;
  42:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  43:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     response = EZI2C_CAM_I2C_ACK_ADDR;
  44:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #endif /* (EZI2C_CAM_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
  45:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  46:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     endTransfer = 0u; /* Continue active transfer */
  47:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  48:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     /* Calls customer routine if registered */
  49:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     if(NULL != EZI2C_CAM_customIntrHandler)
  37              		.loc 1 49 0
  38 0002 C54B     		ldr	r3, .L37
  39 0004 1B68     		ldr	r3, [r3]
  40 0006 002B     		cmp	r3, #0
  41 0008 00D0     		beq	.L2
  50:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     {
  51:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_customIntrHandler();
  42              		.loc 1 51 0
  43 000a 9847     		blx	r3
  44              	.LVL1:
  45              	.L2:
  52:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     }
  53:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  54:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     if(EZI2C_CAM_CHECK_INTR_I2C_EC_MASKED(EZI2C_CAM_INTR_I2C_EC_WAKE_UP))
  46              		.loc 1 54 0
  47 000c C34B     		ldr	r3, .L37+4
  48 000e 1B68     		ldr	r3, [r3]
  49 0010 DB07     		lsls	r3, r3, #31
  50 0012 02D5     		bpl	.L3
  55:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     {
  56:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         /* Mask-off after wakeup */
  57:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_SetI2CExtClkInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
  51              		.loc 1 57 0
  52 0014 0022     		movs	r2, #0
  53 0016 C24B     		ldr	r3, .L37+8
  54 0018 1A60     		str	r2, [r3]
  55              	.L3:
  58:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     }
  59:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 3


  60:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     /* Master and Slave error tracking:
  61:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     * Add the master state check to track only the master errors when the master is active or
  62:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     * track slave errors when the slave is active or idle.
  63:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     * A special MMS case: in the address phase with misplaced Start: the master sets the LOST_ARB a
  64:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     * slave BUS_ERR. The valid event is LOST_ARB comes from the master.
  65:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     */
  66:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     if(EZI2C_CAM_CHECK_I2C_FSM_MASTER)
  56              		.loc 1 66 0
  57 001a C24B     		ldr	r3, .L37+12
  58 001c 1B78     		ldrb	r3, [r3]
  59 001e 9B06     		lsls	r3, r3, #26
  60 0020 22D4     		bmi	.L4
  67:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     {
  68:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #if(EZI2C_CAM_I2C_MASTER)
  69:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         {
  70:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* INTR_MASTER_I2C_BUS_ERROR:
  71:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * A misplaced Start or Stop condition occurred on the bus: complete the transaction.
  72:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The interrupt is cleared in I2C_FSM_EXIT_IDLE.
  73:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
  74:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(EZI2C_CAM_CHECK_INTR_MASTER_MASKED(EZI2C_CAM_INTR_MASTER_I2C_BUS_ERROR))
  75:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
  76:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_mstrStatus |= (uint16) (EZI2C_CAM_I2C_MSTAT_ERR_XFER |
  77:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                          EZI2C_CAM_I2C_MSTAT_ERR_BUS_ERROR);
  78:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  79:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
  80:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
  81:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  82:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* INTR_MASTER_I2C_ARB_LOST:
  83:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The MultiMaster lost arbitrage during transaction.
  84:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * A Misplaced Start or Stop condition is treated as lost arbitration when the master dr
  85:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The interrupt source is cleared in I2C_FSM_EXIT_IDLE.
  86:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
  87:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(EZI2C_CAM_CHECK_INTR_MASTER_MASKED(EZI2C_CAM_INTR_MASTER_I2C_ARB_LOST))
  88:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
  89:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_mstrStatus |= (uint16) (EZI2C_CAM_I2C_MSTAT_ERR_XFER |
  90:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                          EZI2C_CAM_I2C_MSTAT_ERR_ARB_LOST);
  91:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  92:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
  93:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
  94:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
  95:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             #if(EZI2C_CAM_I2C_MULTI_MASTER_SLAVE)
  96:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
  97:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* I2C_MASTER_CMD_M_START_ON_IDLE:
  98:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 * MultiMaster-Slave does not generate start, because Slave was addressed.
  99:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 * Pass control to slave.
 100:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 */
 101:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(EZI2C_CAM_CHECK_I2C_MASTER_CMD(EZI2C_CAM_I2C_MASTER_CMD_M_START_ON_IDLE))
 102:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 103:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_mstrStatus |= (uint16) (EZI2C_CAM_I2C_MSTAT_ERR_XFER |
 104:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                              EZI2C_CAM_I2C_MSTAT_ERR_ABORT_XFER);
 105:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 106:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
 107:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 108:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 109:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             #endif
 110:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 111:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* The error handling common part:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 4


 112:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * Sets a completion flag of the master transaction and passes control to:
 113:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             *  - I2C_FSM_EXIT_IDLE - to complete transaction in case of: ARB_LOST or BUS_ERR.
 114:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             *  - I2C_FSM_IDLE      - to take chance for the slave to process incoming transaction.
 115:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
 116:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(0u != endTransfer)
 117:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 118:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Set completion flags for master */
 119:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_mstrStatus |= (uint16) EZI2C_CAM_GET_I2C_MSTAT_CMPLT;
 120:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 121:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #if(EZI2C_CAM_I2C_MULTI_MASTER_SLAVE)
 122:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 123:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     if(EZI2C_CAM_CHECK_I2C_FSM_ADDR)
 124:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 125:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Start generation is set after another master starts accessing Slave.
 126:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * Clean-up master and turn to slave. Set state to IDLE.
 127:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         */
 128:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         if(EZI2C_CAM_CHECK_I2C_MASTER_CMD(EZI2C_CAM_I2C_MASTER_CMD_M_START_ON_IDLE)
 129:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 130:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_I2C_MASTER_CLEAR_START;
 131:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 132:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Slav
 133:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 134:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Valid arbitration lost on the address phase happens only when: master LO
 135:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * slave BUS_ERR is cleared. Only in that case set the state to IDLE without
 136:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         */
 137:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else if((!EZI2C_CAM_CHECK_INTR_SLAVE_MASKED(EZI2C_CAM_INTR_SLAVE_I2C_BUS_ER
 138:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                && EZI2C_CAM_CHECK_INTR_MASTER_MASKED(EZI2C_CAM_INTR_MASTER_I2C_ARB_
 139:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 140:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER; /* Pass control to Slav
 141:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 142:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else
 143:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 144:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             endTransfer = 0u; /* Causes I2C_FSM_EXIT_IDLE to be set below */
 145:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 146:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 147:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         if(0u != endTransfer) /* Clean-up master to proceed with slave */
 148:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 149:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_CLEAR_TX_FIFO; /* Shifter keeps address, clear it */
 150:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 151:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_DISABLE_MASTER_AUTO_DATA_ACK; /* In case of reading disable a
 152:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 153:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Clean-up master interrupt sources */
 154:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_ClearMasterInterruptSource(EZI2C_CAM_INTR_MASTER_ALL);
 155:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 156:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Disable data processing interrupts: they have to be cleared before *
 157:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 158:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 159:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 160:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_IDLE;
 161:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 162:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else
 163:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 164:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Set I2C_FSM_EXIT_IDLE for BUS_ERR and ARB_LOST (that is really bus e
 165:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_EXIT_IDLE;
 166:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 167:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 168:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     else
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 5


 169:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 170:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Set I2C_FSM_EXIT_IDLE if any other state than address */
 171:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_EXIT_IDLE;
 172:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 173:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 174:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #else
 175:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 176:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* In case of LOST*/
 177:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_EXIT_IDLE;
 178:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 179:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #endif
 180:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 181:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         }
 182:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #endif
 183:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     }
 184:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     else /* (EZI2C_CAM_CHECK_I2C_FSM_SLAVE) */
 185:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     {
 186:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #if(EZI2C_CAM_I2C_SLAVE)
 187:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         {
 188:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* INTR_SLAVE_I2C_BUS_ERROR or EZI2C_CAM_INTR_SLAVE_I2C_ARB_LOST:
 189:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * A Misplaced Start or Stop condition occurred on the bus: set a flag
 190:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * to notify an error condition.
 191:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
 192:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(EZI2C_CAM_CHECK_INTR_SLAVE_MASKED(EZI2C_CAM_INTR_SLAVE_I2C_BUS_ERROR |
  61              		.loc 1 192 0
  62 0022 C14B     		ldr	r3, .L37+16
  63 0024 1A68     		ldr	r2, [r3]
  64 0026 0223     		movs	r3, #2
  65 0028 FF33     		adds	r3, r3, #255
  66 002a 1A42     		tst	r2, r3
  67 002c 1CD0     		beq	.L4
 193:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                         EZI2C_CAM_INTR_SLAVE_I2C_ARB_LOST))
 194:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 195:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(EZI2C_CAM_CHECK_I2C_FSM_RD)
  68              		.loc 1 195 0
  69 002e BD4B     		ldr	r3, .L37+12
  70 0030 1B78     		ldrb	r3, [r3]
  71 0032 DB07     		lsls	r3, r3, #31
  72 0034 0AD5     		bpl	.L5
 196:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 197:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* TX direction: master reads from slave */
 198:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slStatus &= (uint8) ~EZI2C_CAM_I2C_SSTAT_RD_BUSY;
  73              		.loc 1 198 0
  74 0036 BD4A     		ldr	r2, .L37+20
  75 0038 1378     		ldrb	r3, [r2]
  76 003a 0221     		movs	r1, #2
  77 003c 8B43     		bics	r3, r1
  78 003e 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slStatus |= (uint8) (EZI2C_CAM_I2C_SSTAT_RD_ERR |
  79              		.loc 1 199 0
  80 0040 1178     		ldrb	r1, [r2]
  81 0042 0923     		movs	r3, #9
  82 0044 0B43     		orrs	r3, r1
  83 0046 DBB2     		uxtb	r3, r3
  84 0048 1370     		strb	r3, [r2]
  85 004a 0AE0     		b	.L6
  86              	.L5:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 6


 200:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                           EZI2C_CAM_I2C_SSTAT_RD_CMPLT);
 201:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 202:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 else
 203:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 204:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* RX direction: master writes into slave */
 205:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slStatus &= (uint8) ~EZI2C_CAM_I2C_SSTAT_WR_BUSY;
  87              		.loc 1 205 0
  88 004c B74A     		ldr	r2, .L37+20
  89 004e 1378     		ldrb	r3, [r2]
  90 0050 2021     		movs	r1, #32
  91 0052 8B43     		bics	r3, r1
  92 0054 1370     		strb	r3, [r2]
 206:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slStatus |= (uint8) (EZI2C_CAM_I2C_SSTAT_WR_ERR |
  93              		.loc 1 206 0
  94 0056 1178     		ldrb	r1, [r2]
  95 0058 7023     		movs	r3, #112
  96 005a 5B42     		rsbs	r3, r3, #0
  97 005c 0B43     		orrs	r3, r1
  98 005e DBB2     		uxtb	r3, r3
  99 0060 1370     		strb	r3, [r2]
 100              	.L6:
 207:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                           EZI2C_CAM_I2C_SSTAT_WR_CMPLT);
 208:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 209:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 210:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_EXIT_IDLE;
 101              		.loc 1 210 0
 102 0062 0022     		movs	r2, #0
 103 0064 AF4B     		ldr	r3, .L37+12
 104 0066 1A70     		strb	r2, [r3]
 105              	.L4:
 211:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 212:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         }
 213:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #endif
 214:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     }
 215:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 216:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     /* States description:
 217:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     * Any Master operation starts from: the ADDR_RD/WR state as the master generates traffic on the
 218:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     * Any Slave operation starts from: the IDLE state as the slave always waits for actions from th
 219:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     */
 220:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 221:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     /* FSM Master */
 222:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     if(EZI2C_CAM_CHECK_I2C_FSM_MASTER)
 106              		.loc 1 222 0
 107 0068 AE4B     		ldr	r3, .L37+12
 108 006a 1B78     		ldrb	r3, [r3]
 109 006c 9B06     		lsls	r3, r3, #26
 110 006e 00D5     		bpl	.LCB96
 111 0070 BDE1     		b	.L1	@long jump
 112              	.LCB96:
 223:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     {
 224:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #if(EZI2C_CAM_I2C_MASTER)
 225:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         {
 226:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* INTR_MASTER_I2C_STOP:
 227:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * A Stop condition was generated by the master: the end of the transaction.
 228:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * Set completion flags to notify the API.
 229:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
 230:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(EZI2C_CAM_CHECK_INTR_MASTER_MASKED(EZI2C_CAM_INTR_MASTER_I2C_STOP))
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 7


 231:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 232:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_ClearMasterInterruptSource(EZI2C_CAM_INTR_MASTER_I2C_STOP);
 233:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 234:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_mstrStatus |= (uint16) EZI2C_CAM_GET_I2C_MSTAT_CMPLT;
 235:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_state       = EZI2C_CAM_I2C_FSM_IDLE;
 236:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 237:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             else
 238:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 239:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(EZI2C_CAM_CHECK_I2C_FSM_ADDR) /* Address stage */
 240:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 241:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* INTR_MASTER_I2C_NACK:
 242:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     * The master sent an address but it was NACKed by the slave. Complete transacti
 243:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     */
 244:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     if(EZI2C_CAM_CHECK_INTR_MASTER_MASKED(EZI2C_CAM_INTR_MASTER_I2C_NACK))
 245:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 246:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_ClearMasterInterruptSource(EZI2C_CAM_INTR_MASTER_I2C_NACK);
 247:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 248:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_mstrStatus |= (uint16) (EZI2C_CAM_I2C_MSTAT_ERR_XFER |
 249:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                                  EZI2C_CAM_I2C_MSTAT_ERR_ADDR_NAK);
 250:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 251:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
 252:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 253:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* INTR_TX_UNDERFLOW. The master sent an address:
 254:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     *  - TX direction: the clock is stretched after the ACK phase, because the TX F
 255:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     *    EMPTY. The TX EMPTY cleans all the TX interrupt sources.
 256:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     *  - RX direction: the 1st byte is received, but there is no ACK permission,
 257:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     *    the clock is stretched after 1 byte is received.
 258:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     */
 259:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     else
 260:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 261:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         if(EZI2C_CAM_CHECK_I2C_FSM_RD) /* Reading */
 262:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 263:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_MSTR_RD_DATA;
 264:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 265:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else /* Writing */
 266:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 267:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_MSTR_WR_DATA;
 268:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             if(0u != EZI2C_CAM_mstrWrBufSize)
 269:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 270:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 /* Enable INTR.TX_EMPTY if there is data to transmit */
 271:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_INTR_TX_EMPTY);
 272:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 273:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 274:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 275:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 276:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 277:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(EZI2C_CAM_CHECK_I2C_FSM_DATA) /* Data phase */
 278:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 279:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     if(EZI2C_CAM_CHECK_I2C_FSM_RD) /* Reading */
 280:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 281:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* INTR_RX_FULL:
 282:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * RX direction: the master received 8 bytes.
 283:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * Get data from RX FIFO and decide whether to ACK or  NACK the following by
 284:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         */
 285:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         if(EZI2C_CAM_CHECK_INTR_RX_MASKED(EZI2C_CAM_INTR_RX_FULL))
 286:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 287:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Calculate difference */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 8


 288:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             diffCount =  EZI2C_CAM_mstrRdBufSize -
 289:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                         (EZI2C_CAM_mstrRdBufIndex + EZI2C_CAM_GET_RX_FIFO_ENTRIES);
 290:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 291:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Proceed transaction or end it when RX FIFO becomes FULL again */
 292:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             if(diffCount > EZI2C_CAM_I2C_FIFO_SIZE)
 293:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 294:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 diffCount = EZI2C_CAM_I2C_FIFO_SIZE;
 295:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 296:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             else
 297:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 298:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 if(0u == diffCount)
 299:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 {
 300:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     EZI2C_CAM_DISABLE_MASTER_AUTO_DATA_ACK;
 301:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 302:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     diffCount   = EZI2C_CAM_I2C_FIFO_SIZE;
 303:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
 304:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 }
 305:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 306:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 307:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             for(; (0u != diffCount); diffCount--)
 308:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 309:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_mstrRdBufPtr[EZI2C_CAM_mstrRdBufIndex] = (uint8)
 310:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                                                         EZI2C_CAM_R
 311:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_mstrRdBufIndex++;
 312:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 313:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 314:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* INTR_RX_NOT_EMPTY:
 315:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * RX direction: the master received one data byte, ACK or NACK it.
 316:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * The last byte is stored and NACKed by the master. The NACK and Stop is
 317:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * generated by one command generate Stop.
 318:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         */
 319:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else if(EZI2C_CAM_CHECK_INTR_RX_MASKED(EZI2C_CAM_INTR_RX_NOT_EMPTY))
 320:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 321:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Put data in component buffer */
 322:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_mstrRdBufPtr[EZI2C_CAM_mstrRdBufIndex] = (uint8) EZI2C_CAM_RX
 323:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_mstrRdBufIndex++;
 324:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 325:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             if(EZI2C_CAM_mstrRdBufIndex < EZI2C_CAM_mstrRdBufSize)
 326:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 327:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_I2C_MASTER_GENERATE_ACK;
 328:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 329:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             else
 330:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 331:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
 332:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 333:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 334:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else
 335:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 336:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Do nothing */
 337:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 338:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 339:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_ALL);
 340:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 341:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     else /* Writing */
 342:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 343:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* INTR_MASTER_I2C_NACK :
 344:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * The master writes data to the slave and NACK was received: not all the by
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 9


 345:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * written to the slave from the TX FIFO. Revert the index if there is data 
 346:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * the TX FIFO and pass control to a complete transfer.
 347:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         */
 348:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         if(EZI2C_CAM_CHECK_INTR_MASTER_MASKED(EZI2C_CAM_INTR_MASTER_I2C_NACK))
 349:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 350:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_ClearMasterInterruptSource(EZI2C_CAM_INTR_MASTER_I2C_NACK);
 351:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 352:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Rollback write buffer index: NACKed byte remains in shifter */
 353:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_mstrWrBufIndexTmp -= (EZI2C_CAM_GET_TX_FIFO_ENTRIES +
 354:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                                    EZI2C_CAM_GET_TX_FIFO_SR_VALID);
 355:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 356:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Update number of transferred bytes */
 357:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_mstrWrBufIndex = EZI2C_CAM_mstrWrBufIndexTmp;
 358:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 359:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_mstrStatus |= (uint16) (EZI2C_CAM_I2C_MSTAT_ERR_XFER |
 360:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                                      EZI2C_CAM_I2C_MSTAT_ERR_SHORT_
 361:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 362:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_CLEAR_TX_FIFO;
 363:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 364:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
 365:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 366:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* INTR_TX_EMPTY :
 367:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * TX direction: the TX FIFO is EMPTY, the data from the buffer needs to be 
 368:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * When there is no data in the component buffer, the underflow interrupt is
 369:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * enabled to catch when all the data has been transferred.
 370:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         */
 371:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else if(EZI2C_CAM_CHECK_INTR_TX_MASKED(EZI2C_CAM_INTR_TX_EMPTY))
 372:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 373:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             while(EZI2C_CAM_I2C_FIFO_SIZE != EZI2C_CAM_GET_TX_FIFO_ENTRIES)
 374:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 375:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 /* The temporary mstrWrBufIndexTmp is used because slave could NACK
 376:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 * roll-back required in this case. The mstrWrBufIndex is updated at
 377:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 */
 378:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 if(EZI2C_CAM_mstrWrBufIndexTmp < EZI2C_CAM_mstrWrBufSize)
 379:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 {
 380:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 #if(!EZI2C_CAM_CY_SCBIP_V0)
 381:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                    /* Clear INTR_TX.UNDERFLOW before putting the last byte into TX 
 382:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     * a proper trigger at the end of transaction when INTR_TX.UNDER
 383:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     * event. Ticket ID# 156735.
 384:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     */
 385:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     if(EZI2C_CAM_mstrWrBufIndexTmp == (EZI2C_CAM_mstrWrBufSize - 1u
 386:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     {
 387:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                         EZI2C_CAM_ClearTxInterruptSource(EZI2C_CAM_INTR_TX_UNDERFLO
 388:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                         EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_INTR_TX_UNDERFLOW);
 389:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     }
 390:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                  #endif /* (!EZI2C_CAM_CY_SCBIP_V0) */
 391:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 392:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     /* Put data into TX FIFO */
 393:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     EZI2C_CAM_TX_FIFO_WR_REG = (uint32) EZI2C_CAM_mstrWrBufPtr[EZI2
 394:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     EZI2C_CAM_mstrWrBufIndexTmp++;
 395:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 }
 396:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 else
 397:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 {
 398:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     break; /* No more data to put */
 399:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 }
 400:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 401:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 10


 402:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         #if(EZI2C_CAM_CY_SCBIP_V0)
 403:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             if(EZI2C_CAM_mstrWrBufIndexTmp == EZI2C_CAM_mstrWrBufSize)
 404:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 405:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_INTR_TX_UNDERFLOW);
 406:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 407:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 408:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_ClearTxInterruptSource(EZI2C_CAM_INTR_TX_ALL);
 409:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         #else
 410:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_ClearTxInterruptSource(EZI2C_CAM_INTR_TX_EMPTY);
 411:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         #endif /* (EZI2C_CAM_CY_SCBIP_V0) */
 412:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 413:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* INTR_TX_UNDERFLOW:
 414:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * TX direction: all data from the TX FIFO was transferred to the slave.
 415:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * The transaction needs to be completed.
 416:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         */
 417:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else if(EZI2C_CAM_CHECK_INTR_TX_MASKED(EZI2C_CAM_INTR_TX_UNDERFLOW))
 418:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 419:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Update number of transferred bytes */
 420:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_mstrWrBufIndex = EZI2C_CAM_mstrWrBufIndexTmp;
 421:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 422:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
 423:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 424:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else
 425:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 426:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Do nothing */
 427:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 428:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 429:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 430:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 431:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(0u != endTransfer) /* Complete transfer */
 432:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 433:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Clean-up master after reading: only in case of NACK */
 434:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_DISABLE_MASTER_AUTO_DATA_ACK;
 435:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 436:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Disable data processing interrupts: they have to be cleared before */
 437:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 438:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 439:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 440:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     if(EZI2C_CAM_CHECK_I2C_MODE_NO_STOP(EZI2C_CAM_mstrControl))
 441:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 442:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* On-going transaction is suspended: the ReStart is generated by the API r
 443:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_mstrStatus |= (uint16) (EZI2C_CAM_I2C_MSTAT_XFER_HALT |
 444:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                                  EZI2C_CAM_GET_I2C_MSTAT_CMPLT);
 445:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 446:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_MSTR_HALT;
 447:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 448:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     else
 449:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 450:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Complete transaction: exclude the data processing state and generate Sto
 451:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * The completion status will be set after Stop generation.
 452:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * A special case is read: because NACK and Stop are generated by the comman
 453:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * Lost arbitration can occur during NACK generation when
 454:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * the other master is still reading from the slave.
 455:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         */
 456:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_I2C_MASTER_GENERATE_STOP;
 457:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 458:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 11


 459:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 460:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 461:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         } /* (EZI2C_CAM_I2C_MASTER) */
 462:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #endif
 463:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 464:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     } /* (EZI2C_CAM_CHECK_I2C_FSM_MASTER) */
 465:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 466:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 467:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     /* FSM Slave */
 468:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     else if(EZI2C_CAM_CHECK_I2C_FSM_SLAVE)
 113              		.loc 1 468 0
 114 0072 AC4B     		ldr	r3, .L37+12
 115 0074 1B78     		ldrb	r3, [r3]
 116 0076 DB06     		lsls	r3, r3, #27
 117 0078 00D4     		bmi	.LCB104
 118 007a 91E1     		b	.L8	@long jump
 119              	.LCB104:
 469:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     {
 470:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #if(EZI2C_CAM_I2C_SLAVE)
 471:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         {
 472:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* INTR_SLAVE_NACK:
 473:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The master completes reading the slave: the appropriate flags have to be set.
 474:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The TX FIFO is cleared after an overflow condition is set.
 475:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
 476:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(EZI2C_CAM_CHECK_INTR_SLAVE_MASKED(EZI2C_CAM_INTR_SLAVE_I2C_NACK))
 120              		.loc 1 476 0
 121 007c AA4B     		ldr	r3, .L37+16
 122 007e 1B68     		ldr	r3, [r3]
 123 0080 9B07     		lsls	r3, r3, #30
 124 0082 40D5     		bpl	.L9
 477:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 478:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_ClearSlaveInterruptSource(EZI2C_CAM_INTR_SLAVE_I2C_NACK);
 125              		.loc 1 478 0
 126 0084 0222     		movs	r2, #2
 127 0086 AA4B     		ldr	r3, .L37+24
 128 0088 1A60     		str	r2, [r3]
 479:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 480:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* All entries that remain in TX FIFO are: FIFO Size + 1 (SHIFTER) */
 481:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 diffCount = (EZI2C_CAM_GET_TX_FIFO_ENTRIES + EZI2C_CAM_GET_TX_FIFO_SR_VALID);
 129              		.loc 1 481 0
 130 008a AA49     		ldr	r1, .L37+28
 131 008c 0B68     		ldr	r3, [r1]
 132 008e 0D32     		adds	r2, r2, #13
 133 0090 1A40     		ands	r2, r3
 134 0092 0968     		ldr	r1, [r1]
 135 0094 8023     		movs	r3, #128
 136 0096 1B02     		lsls	r3, r3, #8
 137 0098 0B40     		ands	r3, r1
 138 009a 00D0     		beq	.L10
 139 009c 0123     		movs	r3, #1
 140              	.L10:
 141              		.loc 1 481 0 is_stmt 0 discriminator 4
 142 009e 9B18     		adds	r3, r3, r2
 143              	.LVL2:
 482:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 483:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(EZI2C_CAM_slOverFlowCount > diffCount) /* Overflow */
 144              		.loc 1 483 0 is_stmt 1 discriminator 4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 12


 145 00a0 A54A     		ldr	r2, .L37+32
 146 00a2 1278     		ldrb	r2, [r2]
 147 00a4 D2B2     		uxtb	r2, r2
 148 00a6 9342     		cmp	r3, r2
 149 00a8 06D2     		bcs	.L11
 484:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 485:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slStatus |= (uint8) EZI2C_CAM_I2C_SSTAT_RD_OVFL;
 150              		.loc 1 485 0
 151 00aa A04A     		ldr	r2, .L37+20
 152 00ac 1178     		ldrb	r1, [r2]
 153 00ae 0423     		movs	r3, #4
 154              	.LVL3:
 155 00b0 0B43     		orrs	r3, r1
 156 00b2 DBB2     		uxtb	r3, r3
 157 00b4 1370     		strb	r3, [r2]
 158 00b6 06E0     		b	.L12
 159              	.LVL4:
 160              	.L11:
 486:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 487:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 else /* No Overflow */
 488:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 489:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Roll-back temporary index */
 490:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slRdBufIndexTmp -= (diffCount - EZI2C_CAM_slOverFlowCount);
 161              		.loc 1 490 0
 162 00b8 9F4A     		ldr	r2, .L37+32
 163 00ba 1278     		ldrb	r2, [r2]
 164 00bc 9B1A     		subs	r3, r3, r2
 165              	.LVL5:
 166 00be 9F49     		ldr	r1, .L37+36
 167 00c0 0A68     		ldr	r2, [r1]
 168 00c2 D31A     		subs	r3, r2, r3
 169 00c4 0B60     		str	r3, [r1]
 170              	.L12:
 491:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 492:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 493:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Update slave of transferred bytes */
 494:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_slRdBufIndex = EZI2C_CAM_slRdBufIndexTmp;
 171              		.loc 1 494 0
 172 00c6 9D4B     		ldr	r3, .L37+36
 173 00c8 1A68     		ldr	r2, [r3]
 174 00ca 9D4B     		ldr	r3, .L37+40
 175 00cc 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 496:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Clean-up TX FIFO */
 497:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 176              		.loc 1 497 0
 177 00ce 0023     		movs	r3, #0
 178 00d0 9C4A     		ldr	r2, .L37+44
 179 00d2 1360     		str	r3, [r2]
 498:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_slOverFlowCount = 0u;
 180              		.loc 1 498 0
 181 00d4 984A     		ldr	r2, .L37+32
 182 00d6 1370     		strb	r3, [r2]
 499:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_CLEAR_TX_FIFO;
 183              		.loc 1 499 0
 184 00d8 9B4B     		ldr	r3, .L37+48
 185 00da 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 13


 186 00dc 8021     		movs	r1, #128
 187 00de 4902     		lsls	r1, r1, #9
 188 00e0 0A43     		orrs	r2, r1
 189 00e2 1A60     		str	r2, [r3]
 190 00e4 1968     		ldr	r1, [r3]
 191 00e6 994A     		ldr	r2, .L37+52
 192 00e8 0A40     		ands	r2, r1
 193 00ea 1A60     		str	r2, [r3]
 500:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 501:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Complete master reading */
 502:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_slStatus &= (uint8) ~EZI2C_CAM_I2C_SSTAT_RD_BUSY;
 194              		.loc 1 502 0
 195 00ec 8F4A     		ldr	r2, .L37+20
 196 00ee 1378     		ldrb	r3, [r2]
 197 00f0 0221     		movs	r1, #2
 198 00f2 8B43     		bics	r3, r1
 199 00f4 1370     		strb	r3, [r2]
 503:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_slStatus |= (uint8)  EZI2C_CAM_I2C_SSTAT_RD_CMPLT;
 200              		.loc 1 503 0
 201 00f6 1178     		ldrb	r1, [r2]
 202 00f8 0123     		movs	r3, #1
 203 00fa 0B43     		orrs	r3, r1
 204 00fc DBB2     		uxtb	r3, r3
 205 00fe 1370     		strb	r3, [r2]
 504:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_state     =  EZI2C_CAM_I2C_FSM_IDLE;
 206              		.loc 1 504 0
 207 0100 1022     		movs	r2, #16
 208 0102 884B     		ldr	r3, .L37+12
 209 0104 1A70     		strb	r2, [r3]
 210              	.L9:
 505:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 506:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 507:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 508:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* INTR_SLAVE_I2C_WRITE_STOP:
 509:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The master completes writing to the slave: the appropriate flags have to be set.
 510:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The RX FIFO contains 1-8 bytes from the previous transaction which needs to be read.
 511:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * There is a possibility that RX FIFO contains an address, it needs to leave it there.
 512:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
 513:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(EZI2C_CAM_CHECK_INTR_SLAVE_MASKED(EZI2C_CAM_INTR_SLAVE_I2C_WRITE_STOP))
 211              		.loc 1 513 0
 212 0106 884B     		ldr	r3, .L37+16
 213 0108 1B68     		ldr	r3, [r3]
 214 010a 1B07     		lsls	r3, r3, #28
 215 010c 39D5     		bpl	.L13
 514:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 515:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_ClearSlaveInterruptSource(EZI2C_CAM_INTR_SLAVE_I2C_WRITE_STOP);
 216              		.loc 1 515 0
 217 010e 0822     		movs	r2, #8
 218 0110 874B     		ldr	r3, .L37+24
 219 0112 1A60     		str	r2, [r3]
 516:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 517:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Read bytes from RX FIFO when auto data ACK receive logic is enabled. Otherwise a
 518:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 * were already read from the RX FIFO except for address byte which has to stay here
 519:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 * I2C_ADDR_MATCH.
 520:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 */
 521:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if (0u != (EZI2C_CAM_I2C_CTRL_REG & EZI2C_CAM_I2C_CTRL_S_READY_DATA_ACK))
 220              		.loc 1 521 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 14


 221 0114 8E4B     		ldr	r3, .L37+56
 222 0116 1B68     		ldr	r3, [r3]
 223 0118 9B04     		lsls	r3, r3, #18
 224 011a 0CD4     		bmi	.L14
 225 011c 14E0     		b	.L15
 226              	.L16:
 522:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 523:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     while(0u != EZI2C_CAM_GET_RX_FIFO_ENTRIES)
 524:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 525:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         #if(EZI2C_CAM_CHECK_I2C_ACCEPT_ADDRESS)
 526:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 527:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             if((1u == EZI2C_CAM_GET_RX_FIFO_ENTRIES) &&
 528:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                (EZI2C_CAM_CHECK_INTR_SLAVE_MASKED(EZI2C_CAM_INTR_SLAVE_I2C_ADDR_MAT
 529:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 530:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 break; /* Leave address in RX FIFO */
 531:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 532:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 533:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         #endif
 534:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 535:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Put data in component buffer */
 536:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_slWrBufPtr[EZI2C_CAM_slWrBufIndex] = (uint8) EZI2C_CAM_RX_FIFO_RD
 227              		.loc 1 536 0
 228 011e 8D4B     		ldr	r3, .L37+60
 229 0120 1A68     		ldr	r2, [r3]
 230 0122 8D49     		ldr	r1, .L37+64
 231 0124 0968     		ldr	r1, [r1]
 232 0126 8A18     		adds	r2, r1, r2
 233 0128 8C49     		ldr	r1, .L37+68
 234 012a 0968     		ldr	r1, [r1]
 235 012c C9B2     		uxtb	r1, r1
 236 012e 1170     		strb	r1, [r2]
 537:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_slWrBufIndex++;
 237              		.loc 1 537 0
 238 0130 1A68     		ldr	r2, [r3]
 239 0132 0132     		adds	r2, r2, #1
 240 0134 1A60     		str	r2, [r3]
 241              	.L14:
 523:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 242              		.loc 1 523 0
 243 0136 8A4B     		ldr	r3, .L37+72
 244 0138 1B68     		ldr	r3, [r3]
 245 013a 1B07     		lsls	r3, r3, #28
 246 013c EFD1     		bne	.L16
 538:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 539:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 540:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_DISABLE_SLAVE_AUTO_DATA;
 247              		.loc 1 540 0
 248 013e 844A     		ldr	r2, .L37+56
 249 0140 1168     		ldr	r1, [r2]
 250 0142 884B     		ldr	r3, .L37+76
 251 0144 0B40     		ands	r3, r1
 252 0146 1360     		str	r3, [r2]
 253              	.L15:
 541:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 542:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 543:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(EZI2C_CAM_CHECK_INTR_RX(EZI2C_CAM_INTR_RX_OVERFLOW))
 254              		.loc 1 543 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 15


 255 0148 874B     		ldr	r3, .L37+80
 256 014a 1B68     		ldr	r3, [r3]
 257 014c 9B06     		lsls	r3, r3, #26
 258 014e 05D5     		bpl	.L17
 544:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 545:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slStatus |= (uint8) EZI2C_CAM_I2C_SSTAT_WR_OVFL;
 259              		.loc 1 545 0
 260 0150 764A     		ldr	r2, .L37+20
 261 0152 1178     		ldrb	r1, [r2]
 262 0154 4023     		movs	r3, #64
 263 0156 0B43     		orrs	r3, r1
 264 0158 DBB2     		uxtb	r3, r3
 265 015a 1370     		strb	r3, [r2]
 266              	.L17:
 546:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 547:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 548:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Clears RX interrupt sources triggered on data receiving */
 549:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 267              		.loc 1 549 0
 268 015c 0022     		movs	r2, #0
 269 015e 834B     		ldr	r3, .L37+84
 270 0160 1A60     		str	r2, [r3]
 550:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_ALL);
 271              		.loc 1 550 0
 272 0162 834A     		ldr	r2, .L37+88
 273 0164 804B     		ldr	r3, .L37+80
 274 0166 1A60     		str	r2, [r3]
 551:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 552:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Complete master writing */
 553:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_slStatus &= (uint8) ~EZI2C_CAM_I2C_SSTAT_WR_BUSY;
 275              		.loc 1 553 0
 276 0168 704A     		ldr	r2, .L37+20
 277 016a 1378     		ldrb	r3, [r2]
 278 016c 2021     		movs	r1, #32
 279 016e 8B43     		bics	r3, r1
 280 0170 1370     		strb	r3, [r2]
 554:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_slStatus |= (uint8)  EZI2C_CAM_I2C_SSTAT_WR_CMPLT;
 281              		.loc 1 554 0
 282 0172 1178     		ldrb	r1, [r2]
 283 0174 1023     		movs	r3, #16
 284 0176 0B43     		orrs	r3, r1
 285 0178 DBB2     		uxtb	r3, r3
 286 017a 1370     		strb	r3, [r2]
 555:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_state     =  EZI2C_CAM_I2C_FSM_IDLE;
 287              		.loc 1 555 0
 288 017c 694B     		ldr	r3, .L37+12
 289 017e 1022     		movs	r2, #16
 290 0180 1A70     		strb	r2, [r3]
 291              	.L13:
 556:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 557:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 558:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 559:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* INTR_SLAVE_I2C_ADDR_MATCH or INTR_SLAVE_I2C_GENERAL:
 560:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The address match or general call address event starts the slave operation:
 561:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * after leaving the TX or RX direction has to be chosen.
 562:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The wakeup interrupt must be cleared only after an address match is set.
 563:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 16


 564:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #if (EZI2C_CAM_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
 565:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if (EZI2C_CAM_CHECK_INTR_SLAVE_MASKED(EZI2C_CAM_INTR_SLAVE_I2C_ADDR_MATCH |
 566:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                                          EZI2C_CAM_INTR_SLAVE_I2C_GENERAL))
 567:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #else
 568:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if (EZI2C_CAM_CHECK_INTR_SLAVE_MASKED(EZI2C_CAM_INTR_SLAVE_I2C_ADDR_MATCH))
 292              		.loc 1 568 0
 293 0182 694B     		ldr	r3, .L37+16
 294 0184 1B68     		ldr	r3, [r3]
 295 0186 5B06     		lsls	r3, r3, #25
 296 0188 43D5     		bpl	.L18
 569:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #endif /* (EZI2C_CAM_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
 570:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 571:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Clear externally clocked address match interrupt source when internally clocked 
 572:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_ClearI2CExtClkInterruptSource(EZI2C_CAM_INTR_I2C_EC_WAKE_UP);
 297              		.loc 1 572 0
 298 018a 0122     		movs	r2, #1
 299 018c 794B     		ldr	r3, .L37+92
 300 018e 1A60     		str	r2, [r3]
 573:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 574:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #if (EZI2C_CAM_I2C_CUSTOM_ADDRESS_HANDLER)
 575:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 576:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     if (NULL != EZI2C_CAM_customAddressHandler)
 577:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 578:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Call custom address handler */
 579:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         response = EZI2C_CAM_customAddressHandler();
 580:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 581:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     else
 582:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 583:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Read address from the RX FIFO. If there is no address underflow triggers
 584:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         * component does not use that source. */
 585:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         (void) EZI2C_CAM_RX_FIFO_RD_REG;
 586:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         response = EZI2C_CAM_I2C_ACK_ADDR;
 587:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 588:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 589:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Clears RX sources after address was received in the RX FIFO */
 590:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_ALL);
 591:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 592:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #endif
 593:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 594:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             #if (EZI2C_CAM_I2C_CUSTOM_ADDRESS_HANDLER_CONST)
 595:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if (response == EZI2C_CAM_I2C_NAK_ADDR)
 596:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 597:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #if (!EZI2C_CAM_CY_SCBIP_V0)
 598:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Disable write stop interrupt source as it triggers after address was NACKed.
 599:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_DISABLE_INTR_SLAVE(EZI2C_CAM_INTR_SLAVE_I2C_WRITE_STOP);
 600:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #endif /* (!EZI2C_CAM_CY_SCBIP_V0) */
 601:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 602:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Clear address match and stop history */
 603:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_ClearSlaveInterruptSource(EZI2C_CAM_INTR_SLAVE_ALL);
 604:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 605:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* ACK the address byte */
 606:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_I2C_SLAVE_GENERATE_NACK;
 607:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 608:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 else
 609:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             #endif /* (EZI2C_CAM_I2C_CUSTOM_ADDRESS_HANDLER_CONST) */
 610:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 611:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     if(EZI2C_CAM_CHECK_I2C_STATUS(EZI2C_CAM_I2C_STATUS_S_READ))
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 17


 301              		.loc 1 611 0
 302 0190 794B     		ldr	r3, .L37+96
 303 0192 1B68     		ldr	r3, [r3]
 304 0194 DB06     		lsls	r3, r3, #27
 305 0196 10D5     		bpl	.L19
 612:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* TX direction: master reads from slave */
 613:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 614:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_INTR_TX_EMPTY);
 306              		.loc 1 614 0
 307 0198 0F32     		adds	r2, r2, #15
 308 019a 6A4B     		ldr	r3, .L37+44
 309 019c 1A60     		str	r2, [r3]
 615:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 616:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Set temporary index to address buffer clear from API */
 617:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_slRdBufIndexTmp = EZI2C_CAM_slRdBufIndex;
 310              		.loc 1 617 0
 311 019e 684B     		ldr	r3, .L37+40
 312 01a0 1A68     		ldr	r2, [r3]
 313 01a2 664B     		ldr	r3, .L37+36
 314 01a4 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 619:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Start master reading */
 620:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_slStatus |= (uint8) EZI2C_CAM_I2C_SSTAT_RD_BUSY;
 315              		.loc 1 620 0
 316 01a6 614A     		ldr	r2, .L37+20
 317 01a8 1178     		ldrb	r1, [r2]
 318 01aa 0223     		movs	r3, #2
 319 01ac 0B43     		orrs	r3, r1
 320 01ae DBB2     		uxtb	r3, r3
 321 01b0 1370     		strb	r3, [r2]
 621:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_state     = EZI2C_CAM_I2C_FSM_SL_RD;
 322              		.loc 1 621 0
 323 01b2 1222     		movs	r2, #18
 324 01b4 5B4B     		ldr	r3, .L37+12
 325 01b6 1A70     		strb	r2, [r3]
 326 01b8 25E0     		b	.L20
 327              	.L19:
 622:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 623:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     else
 624:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* RX direction: master writes into slave */
 625:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 626:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Calculate available buffer size */
 627:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         diffCount = (EZI2C_CAM_slWrBufSize - EZI2C_CAM_slWrBufIndex);
 328              		.loc 1 627 0
 329 01ba 704B     		ldr	r3, .L37+100
 330 01bc 1B68     		ldr	r3, [r3]
 331 01be 654A     		ldr	r2, .L37+60
 332 01c0 1268     		ldr	r2, [r2]
 333 01c2 9B1A     		subs	r3, r3, r2
 334              	.LVL6:
 628:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 629:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     #if (EZI2C_CAM_CY_SCBIP_V0)
 630:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         if(diffCount < EZI2C_CAM_I2C_FIFO_SIZE)
 335              		.loc 1 630 0
 336 01c4 072B     		cmp	r3, #7
 337 01c6 03D8     		bhi	.L21
 631:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Receive data: byte-by-byte */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 18


 632:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 633:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_INTR_RX_NOT_EMPTY);
 338              		.loc 1 633 0
 339 01c8 0422     		movs	r2, #4
 340 01ca 684B     		ldr	r3, .L37+84
 341              	.LVL7:
 342 01cc 1A60     		str	r2, [r3]
 343 01ce 11E0     		b	.L22
 344              	.LVL8:
 345              	.L21:
 634:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 635:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         else
 636:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Receive data: into RX FIFO */
 637:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 638:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             if(diffCount == EZI2C_CAM_I2C_FIFO_SIZE)
 346              		.loc 1 638 0
 347 01d0 082B     		cmp	r3, #8
 348 01d2 06D1     		bne	.L23
 639:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 640:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 /* NACK when RX FIFO become FULL */
 641:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA;
 349              		.loc 1 641 0
 350 01d4 5E4A     		ldr	r2, .L37+56
 351 01d6 1368     		ldr	r3, [r2]
 352              	.LVL9:
 353 01d8 A021     		movs	r1, #160
 354 01da 0902     		lsls	r1, r1, #8
 355 01dc 0B43     		orrs	r3, r1
 356 01de 1360     		str	r3, [r2]
 357 01e0 08E0     		b	.L22
 358              	.LVL10:
 359              	.L23:
 642:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 643:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             else
 644:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 645:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 /* Stretch clock when RX FIFO becomes FULL */
 646:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA_ACK;
 360              		.loc 1 646 0
 361 01e2 5B4A     		ldr	r2, .L37+56
 362 01e4 1368     		ldr	r3, [r2]
 363              	.LVL11:
 364 01e6 8021     		movs	r1, #128
 365 01e8 8901     		lsls	r1, r1, #6
 366 01ea 0B43     		orrs	r3, r1
 367 01ec 1360     		str	r3, [r2]
 647:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_INTR_RX_FULL);
 368              		.loc 1 647 0
 369 01ee 0822     		movs	r2, #8
 370 01f0 5E4B     		ldr	r3, .L37+84
 371 01f2 1A60     		str	r2, [r3]
 372              	.L22:
 648:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 649:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 650:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 651:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     #else
 652:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         #if(EZI2C_CAM_CHECK_I2C_ACCEPT_ADDRESS)
 653:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 19


 654:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Enable RX.NOT_EMPTY interrupt source to receive byte by byte.
 655:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             * The byte by byte receive is always chosen for the case when an addres
 656:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             * in RX FIFO. Ticket ID#175559.
 657:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             */
 658:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_INTR_RX_NOT_EMPTY);
 659:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 660:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         #else
 661:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 662:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             if(diffCount < EZI2C_CAM_I2C_FIFO_SIZE)
 663:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Receive data: byte-by-byte */
 664:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 665:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_INTR_RX_NOT_EMPTY);
 666:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 667:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             else
 668:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Receive data: into RX FIFO */
 669:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             {
 670:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 if(diffCount == EZI2C_CAM_I2C_FIFO_SIZE)
 671:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 {
 672:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     /* NACK when RX FIFO become FULL */
 673:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA;
 674:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 }
 675:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 else
 676:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 {
 677:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     /* Stretch clock when RX FIFO becomes FULL */
 678:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA_ACK;
 679:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                     EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_INTR_RX_FULL);
 680:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                                 }
 681:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             }
 682:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 683:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         #endif
 684:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     #endif /* (EZI2C_CAM_CY_SCBIP_V0) */
 685:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 686:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         /* Start master reading */
 687:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_slStatus |= (uint8) EZI2C_CAM_I2C_SSTAT_WR_BUSY;
 373              		.loc 1 687 0
 374 01f4 4D4A     		ldr	r2, .L37+20
 375 01f6 1178     		ldrb	r1, [r2]
 376 01f8 2023     		movs	r3, #32
 377 01fa 0B43     		orrs	r3, r1
 378 01fc DBB2     		uxtb	r3, r3
 379 01fe 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_state     = EZI2C_CAM_I2C_FSM_SL_WR;
 380              		.loc 1 688 0
 381 0200 1122     		movs	r2, #17
 382 0202 484B     		ldr	r3, .L37+12
 383 0204 1A70     		strb	r2, [r3]
 384              	.L20:
 689:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 690:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 691:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Clear address match and stop history */
 692:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_ClearSlaveInterruptSource(EZI2C_CAM_INTR_SLAVE_ALL);
 385              		.loc 1 692 0
 386 0206 5E4A     		ldr	r2, .L37+104
 387 0208 494B     		ldr	r3, .L37+24
 388 020a 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 694:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #if (!EZI2C_CAM_CY_SCBIP_V0)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 20


 695:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Enable write stop interrupt source as it triggers after address was NACKed. 
 696:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_ENABLE_INTR_SLAVE(EZI2C_CAM_INTR_SLAVE_I2C_WRITE_STOP);
 697:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 #endif /* (!EZI2C_CAM_CY_SCBIP_V0) */
 698:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 699:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* ACK the address byte */
 700:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_I2C_SLAVE_GENERATE_ACK;
 389              		.loc 1 700 0
 390 020c 0122     		movs	r2, #1
 391 020e 5D4B     		ldr	r3, .L37+108
 392 0210 1A60     		str	r2, [r3]
 393              	.L18:
 701:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 702:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 703:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 704:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* EZI2C_CAM_INTR_RX_FULL:
 705:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * Get data from the RX FIFO and decide whether to ACK or NACK the following bytes
 706:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
 707:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(EZI2C_CAM_CHECK_INTR_RX_MASKED(EZI2C_CAM_INTR_RX_FULL))
 394              		.loc 1 707 0
 395 0212 5D4B     		ldr	r3, .L37+112
 396 0214 1B68     		ldr	r3, [r3]
 397 0216 1B07     		lsls	r3, r3, #28
 398 0218 2AD5     		bpl	.L24
 708:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 709:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Calculate available buffer size to take into account that RX FIFO is FULL */
 710:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 diffCount =  EZI2C_CAM_slWrBufSize -
 399              		.loc 1 710 0
 400 021a 584B     		ldr	r3, .L37+100
 401 021c 1B68     		ldr	r3, [r3]
 402 021e 4D4A     		ldr	r2, .L37+60
 403 0220 1068     		ldr	r0, [r2]
 404 0222 181A     		subs	r0, r3, r0
 405 0224 0838     		subs	r0, r0, #8
 406              	.LVL12:
 711:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             (EZI2C_CAM_slWrBufIndex + EZI2C_CAM_I2C_FIFO_SIZE);
 712:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 713:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(diffCount > EZI2C_CAM_I2C_FIFO_SIZE) /* Proceed transaction */
 407              		.loc 1 713 0
 408 0226 0828     		cmp	r0, #8
 409 0228 02D9     		bls	.L36
 714:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 715:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     diffCount   = EZI2C_CAM_I2C_FIFO_SIZE;
 716:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     endTransfer = 0u;  /* Continue active transfer */
 410              		.loc 1 716 0
 411 022a 0024     		movs	r4, #0
 715:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     endTransfer = 0u;  /* Continue active transfer */
 412              		.loc 1 715 0
 413 022c 0820     		movs	r0, #8
 414              	.LVL13:
 415 022e 0EE0     		b	.L26
 416              	.LVL14:
 417              	.L36:
 717:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 718:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 else /* End when FIFO becomes FULL again */
 719:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 720:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     endTransfer = EZI2C_CAM_I2C_CMPLT_ANY_TRANSFER;
 418              		.loc 1 720 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 21


 419 0230 0124     		movs	r4, #1
 420 0232 0CE0     		b	.L26
 421              	.LVL15:
 422              	.L27:
 721:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 722:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 723:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 for(; (0u != diffCount); diffCount--)
 724:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 725:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Put data in component buffer */
 726:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slWrBufPtr[EZI2C_CAM_slWrBufIndex] = (uint8) EZI2C_CAM_RX_FIFO_RD_REG
 423              		.loc 1 726 0 discriminator 2
 424 0234 474B     		ldr	r3, .L37+60
 425 0236 1A68     		ldr	r2, [r3]
 426 0238 4749     		ldr	r1, .L37+64
 427 023a 0968     		ldr	r1, [r1]
 428 023c 8A18     		adds	r2, r1, r2
 429 023e 4749     		ldr	r1, .L37+68
 430 0240 0968     		ldr	r1, [r1]
 431 0242 C9B2     		uxtb	r1, r1
 432 0244 1170     		strb	r1, [r2]
 727:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slWrBufIndex++;
 433              		.loc 1 727 0 discriminator 2
 434 0246 1A68     		ldr	r2, [r3]
 435 0248 0132     		adds	r2, r2, #1
 436 024a 1A60     		str	r2, [r3]
 723:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 437              		.loc 1 723 0 discriminator 2
 438 024c 0138     		subs	r0, r0, #1
 439              	.LVL16:
 440              	.L26:
 723:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 441              		.loc 1 723 0 is_stmt 0 discriminator 1
 442 024e 0028     		cmp	r0, #0
 443 0250 F0D1     		bne	.L27
 728:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 729:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 730:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(0u != endTransfer) /* End transfer sending NACK */
 444              		.loc 1 730 0 is_stmt 1
 445 0252 002C     		cmp	r4, #0
 446 0254 08D0     		beq	.L28
 731:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 732:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_ENABLE_SLAVE_AUTO_DATA_NACK;
 447              		.loc 1 732 0
 448 0256 3E4A     		ldr	r2, .L37+56
 449 0258 1368     		ldr	r3, [r2]
 450 025a 8021     		movs	r1, #128
 451 025c 0902     		lsls	r1, r1, #8
 452 025e 0B43     		orrs	r3, r1
 453 0260 1360     		str	r3, [r2]
 733:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 734:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* INTR_RX_FULL triggers earlier than INTR_SLAVE_I2C_STOP:
 735:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     * disable all RX interrupt sources.
 736:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     */
 737:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 454              		.loc 1 737 0
 455 0262 0022     		movs	r2, #0
 456 0264 414B     		ldr	r3, .L37+84
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 22


 457 0266 1A60     		str	r2, [r3]
 458              	.L28:
 738:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 739:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 740:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_FULL);
 459              		.loc 1 740 0
 460 0268 0822     		movs	r2, #8
 461 026a 3F4B     		ldr	r3, .L37+80
 462 026c 1A60     		str	r2, [r3]
 463 026e 24E0     		b	.L29
 464              	.LVL17:
 465              	.L24:
 741:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 742:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* EZI2C_CAM_INTR_RX_NOT_EMPTY:
 743:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The buffer size is less than 8: it requires processing in byte-by-byte mode.
 744:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
 745:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             else if(EZI2C_CAM_CHECK_INTR_RX_MASKED(EZI2C_CAM_INTR_RX_NOT_EMPTY))
 466              		.loc 1 745 0
 467 0270 454B     		ldr	r3, .L37+112
 468 0272 1B68     		ldr	r3, [r3]
 469 0274 5B07     		lsls	r3, r3, #29
 470 0276 20D5     		bpl	.L29
 746:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 747:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 diffCount = EZI2C_CAM_RX_FIFO_RD_REG;
 471              		.loc 1 747 0
 472 0278 384B     		ldr	r3, .L37+68
 473 027a 1B68     		ldr	r3, [r3]
 474              	.LVL18:
 748:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 749:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 if(EZI2C_CAM_slWrBufIndex < EZI2C_CAM_slWrBufSize)
 475              		.loc 1 749 0
 476 027c 354A     		ldr	r2, .L37+60
 477 027e 1168     		ldr	r1, [r2]
 478 0280 3E4A     		ldr	r2, .L37+100
 479 0282 1268     		ldr	r2, [r2]
 480 0284 9142     		cmp	r1, r2
 481 0286 0DD2     		bcs	.L30
 750:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 751:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_I2C_SLAVE_GENERATE_ACK;
 482              		.loc 1 751 0
 483 0288 0121     		movs	r1, #1
 484 028a 3E4A     		ldr	r2, .L37+108
 485 028c 1160     		str	r1, [r2]
 752:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 753:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Put data into component buffer */
 754:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slWrBufPtr[EZI2C_CAM_slWrBufIndex] = (uint8) diffCount;
 486              		.loc 1 754 0
 487 028e 314A     		ldr	r2, .L37+60
 488 0290 1168     		ldr	r1, [r2]
 489 0292 3148     		ldr	r0, .L37+64
 490 0294 0068     		ldr	r0, [r0]
 491 0296 4118     		adds	r1, r0, r1
 492 0298 DBB2     		uxtb	r3, r3
 493              	.LVL19:
 494 029a 0B70     		strb	r3, [r1]
 755:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slWrBufIndex++;
 495              		.loc 1 755 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 23


 496 029c 1368     		ldr	r3, [r2]
 497 029e 0133     		adds	r3, r3, #1
 498 02a0 1360     		str	r3, [r2]
 499 02a2 07E0     		b	.L31
 500              	.LVL20:
 501              	.L30:
 756:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 757:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 else /* Overflow: there is no space in write buffer */
 758:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 759:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_I2C_SLAVE_GENERATE_NACK;
 502              		.loc 1 759 0
 503 02a4 FFF7FEFF 		bl	EZI2C_CAM_I2CSlaveNackGeneration
 504              	.LVL21:
 760:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 761:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     EZI2C_CAM_slStatus |= (uint8) EZI2C_CAM_I2C_SSTAT_WR_OVFL;
 505              		.loc 1 761 0
 506 02a8 204A     		ldr	r2, .L37+20
 507 02aa 1178     		ldrb	r1, [r2]
 508 02ac 4023     		movs	r3, #64
 509 02ae 0B43     		orrs	r3, r1
 510 02b0 DBB2     		uxtb	r3, r3
 511 02b2 1370     		strb	r3, [r2]
 512              	.L31:
 762:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 763:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 764:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_RX_NOT_EMPTY);
 513              		.loc 1 764 0
 514 02b4 0422     		movs	r2, #4
 515 02b6 2C4B     		ldr	r3, .L37+80
 516 02b8 1A60     		str	r2, [r3]
 517              	.LVL22:
 518              	.L29:
 765:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 766:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             else
 767:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 768:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 /* Does nothing */
 769:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 770:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 771:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 772:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             /* EZI2C_CAM_INTR_TX_EMPTY:
 773:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The master reads the slave: provide data to read or 0xFF in the case of the end of th
 774:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * The overflow condition must be captured, but not set until the end of transaction.
 775:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             * There is a possibility of a false overflow due to TX FIFO utilization.
 776:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             */
 777:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             if(EZI2C_CAM_CHECK_INTR_TX_MASKED(EZI2C_CAM_INTR_TX_EMPTY))
 519              		.loc 1 777 0
 520 02ba 344B     		ldr	r3, .L37+116
 521 02bc 1B68     		ldr	r3, [r3]
 522 02be DB06     		lsls	r3, r3, #27
 523 02c0 20D4     		bmi	.L32
 524 02c2 94E0     		b	.L1
 525              	.L35:
 778:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             {
 779:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 while(EZI2C_CAM_I2C_FIFO_SIZE != EZI2C_CAM_GET_TX_FIFO_ENTRIES)
 780:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 781:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Temporary slRdBufIndexTmp is used because the master can NACK the byte and
 782:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     * index roll-back is required in this case. The slRdBufIndex is updated at the 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 24


 783:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     * of the read transfer.
 784:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     */
 785:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     if(EZI2C_CAM_slRdBufIndexTmp < EZI2C_CAM_slRdBufSize)
 526              		.loc 1 785 0
 527 02c4 1D4B     		ldr	r3, .L37+36
 528 02c6 1A68     		ldr	r2, [r3]
 529 02c8 314B     		ldr	r3, .L37+120
 530 02ca 1B68     		ldr	r3, [r3]
 531 02cc 9A42     		cmp	r2, r3
 532 02ce 0CD2     		bcs	.L33
 786:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Data from buffer */
 787:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 788:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_TX_FIFO_WR_REG = (uint32) EZI2C_CAM_slRdBufPtr[EZI2C_CAM_slRdBufI
 533              		.loc 1 788 0
 534 02d0 1A4B     		ldr	r3, .L37+36
 535 02d2 1A68     		ldr	r2, [r3]
 536 02d4 2F49     		ldr	r1, .L37+124
 537 02d6 0968     		ldr	r1, [r1]
 538 02d8 8A18     		adds	r2, r1, r2
 539 02da 1278     		ldrb	r2, [r2]
 540 02dc D2B2     		uxtb	r2, r2
 541 02de 2E49     		ldr	r1, .L37+128
 542 02e0 0A60     		str	r2, [r1]
 789:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_slRdBufIndexTmp++;
 543              		.loc 1 789 0
 544 02e2 1A68     		ldr	r2, [r3]
 545 02e4 0132     		adds	r2, r2, #1
 546 02e6 1A60     		str	r2, [r3]
 547 02e8 0CE0     		b	.L32
 548              	.L33:
 790:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 791:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     else
 792:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     /* Probably Overflow */
 793:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     {
 794:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         EZI2C_CAM_TX_FIFO_WR_REG = EZI2C_CAM_I2C_SLAVE_OVFL_RETURN;
 549              		.loc 1 794 0
 550 02ea FF22     		movs	r2, #255
 551 02ec 2A4B     		ldr	r3, .L37+128
 552 02ee 1A60     		str	r2, [r3]
 795:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 796:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         if(EZI2C_CAM_slOverFlowCount <= EZI2C_CAM_I2C_TX_OVERFLOW_COUNT)
 553              		.loc 1 796 0
 554 02f0 114B     		ldr	r3, .L37+32
 555 02f2 1B78     		ldrb	r3, [r3]
 556 02f4 DBB2     		uxtb	r3, r3
 557 02f6 0A2B     		cmp	r3, #10
 558 02f8 04D8     		bhi	.L32
 797:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         {
 798:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             /* Get counter in range of overflow. */
 799:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                             EZI2C_CAM_slOverFlowCount++;
 559              		.loc 1 799 0
 560 02fa 0F4A     		ldr	r2, .L37+32
 561 02fc 1378     		ldrb	r3, [r2]
 562 02fe 0133     		adds	r3, r3, #1
 563 0300 DBB2     		uxtb	r3, r3
 564 0302 1370     		strb	r3, [r2]
 565              	.L32:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 25


 779:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 {
 566              		.loc 1 779 0
 567 0304 0B4B     		ldr	r3, .L37+28
 568 0306 1B68     		ldr	r3, [r3]
 569 0308 0F22     		movs	r2, #15
 570 030a 1340     		ands	r3, r2
 571 030c 082B     		cmp	r3, #8
 572 030e D9D1     		bne	.L35
 800:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                         }
 801:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                     }
 802:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 }
 803:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 804:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****                 EZI2C_CAM_ClearTxInterruptSource(EZI2C_CAM_INTR_TX_EMPTY);
 573              		.loc 1 804 0
 574 0310 0132     		adds	r2, r2, #1
 575 0312 224B     		ldr	r3, .L37+132
 576 0314 1A60     		str	r2, [r3]
 577 0316 6AE0     		b	.L1
 578              	.L38:
 579              		.align	2
 580              	.L37:
 581 0318 00000000 		.word	EZI2C_CAM_customIntrHandler
 582 031c 8C0E0740 		.word	1074204300
 583 0320 880E0740 		.word	1074204296
 584 0324 00000000 		.word	EZI2C_CAM_state
 585 0328 4C0F0740 		.word	1074204492
 586 032c 00000000 		.word	EZI2C_CAM_slStatus
 587 0330 400F0740 		.word	1074204480
 588 0334 08020740 		.word	1074201096
 589 0338 00000000 		.word	EZI2C_CAM_slOverFlowCount
 590 033c 00000000 		.word	EZI2C_CAM_slRdBufIndexTmp
 591 0340 00000000 		.word	EZI2C_CAM_slRdBufIndex
 592 0344 880F0740 		.word	1074204552
 593 0348 04020740 		.word	1074201092
 594 034c FFFFFEFF 		.word	-65537
 595 0350 60000740 		.word	1074200672
 596 0354 00000000 		.word	EZI2C_CAM_slWrBufIndex
 597 0358 00000000 		.word	EZI2C_CAM_slWrBufPtr
 598 035c 40030740 		.word	1074201408
 599 0360 08030740 		.word	1074201352
 600 0364 FF5FFFFF 		.word	-40961
 601 0368 C00F0740 		.word	1074204608
 602 036c C80F0740 		.word	1074204616
 603 0370 ED0F0000 		.word	4077
 604 0374 800E0740 		.word	1074204288
 605 0378 64000740 		.word	1074200676
 606 037c 00000000 		.word	EZI2C_CAM_slWrBufSize
 607 0380 FF0F0000 		.word	4095
 608 0384 6C000740 		.word	1074200684
 609 0388 CC0F0740 		.word	1074204620
 610 038c 8C0F0740 		.word	1074204556
 611 0390 00000000 		.word	EZI2C_CAM_slRdBufSize
 612 0394 00000000 		.word	EZI2C_CAM_slRdBufPtr
 613 0398 40020740 		.word	1074201152
 614 039c 800F0740 		.word	1074204544
 615              	.LVL23:
 616              	.L8:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 26


 805:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****             }
 806:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 807:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         }  /* (EZI2C_CAM_I2C_SLAVE) */
 808:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         #endif
 809:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     }
 810:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 811:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 812:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     /* FSM EXIT:
 813:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     * Slave:  INTR_SLAVE_I2C_BUS_ERROR, INTR_SLAVE_I2C_ARB_LOST
 814:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     * Master: INTR_MASTER_I2C_BUS_ERROR, INTR_MASTER_I2C_ARB_LOST.
 815:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     */
 816:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     else
 817:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     {
 818:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_CTRL_REG &= (uint32) ~EZI2C_CAM_CTRL_ENABLED; /* Disable scb IP */
 617              		.loc 1 818 0
 618 03a0 134A     		ldr	r2, .L39
 619 03a2 1368     		ldr	r3, [r2]
 620 03a4 5B00     		lsls	r3, r3, #1
 621 03a6 5B08     		lsrs	r3, r3, #1
 622 03a8 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 820:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_state = EZI2C_CAM_I2C_FSM_IDLE;
 623              		.loc 1 820 0
 624 03aa 1021     		movs	r1, #16
 625 03ac 114B     		ldr	r3, .L39+4
 626 03ae 1970     		strb	r1, [r3]
 821:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 822:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_DISABLE_SLAVE_AUTO_DATA;
 627              		.loc 1 822 0
 628 03b0 114B     		ldr	r3, .L39+8
 629 03b2 1868     		ldr	r0, [r3]
 630 03b4 1149     		ldr	r1, .L39+12
 631 03b6 0140     		ands	r1, r0
 632 03b8 1960     		str	r1, [r3]
 823:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_DISABLE_MASTER_AUTO_DATA;
 633              		.loc 1 823 0
 634 03ba 1868     		ldr	r0, [r3]
 635 03bc 1049     		ldr	r1, .L39+16
 636 03be 0140     		ands	r1, r0
 637 03c0 1960     		str	r1, [r3]
 824:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 825:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     #if(EZI2C_CAM_CY_SCBIP_V0)
 826:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_SetRxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 638              		.loc 1 826 0
 639 03c2 0023     		movs	r3, #0
 640 03c4 0F49     		ldr	r1, .L39+20
 641 03c6 0B60     		str	r3, [r1]
 827:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_SetTxInterruptMode(EZI2C_CAM_NO_INTR_SOURCES);
 642              		.loc 1 827 0
 643 03c8 0F49     		ldr	r1, .L39+24
 644 03ca 0B60     		str	r3, [r1]
 828:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 829:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         /* Clear interrupt sources as they are not automatically cleared after SCB is disabled */
 830:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_ClearTxInterruptSource(EZI2C_CAM_INTR_RX_ALL);
 645              		.loc 1 830 0
 646 03cc 0F49     		ldr	r1, .L39+28
 647 03ce 104B     		ldr	r3, .L39+32
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 27


 648 03d0 1960     		str	r1, [r3]
 831:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_ClearRxInterruptSource(EZI2C_CAM_INTR_TX_ALL);
 649              		.loc 1 831 0
 650 03d2 1049     		ldr	r1, .L39+36
 651 03d4 104B     		ldr	r3, .L39+40
 652 03d6 1960     		str	r1, [r3]
 832:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_ClearSlaveInterruptSource(EZI2C_CAM_INTR_SLAVE_ALL);
 653              		.loc 1 832 0
 654 03d8 1049     		ldr	r1, .L39+44
 655 03da 114B     		ldr	r3, .L39+48
 656 03dc 1960     		str	r1, [r3]
 833:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_ClearMasterInterruptSource(EZI2C_CAM_INTR_MASTER_ALL);
 657              		.loc 1 833 0
 658 03de 1149     		ldr	r1, .L39+52
 659 03e0 114B     		ldr	r3, .L39+56
 660 03e2 1960     		str	r1, [r3]
 834:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     #endif /* (EZI2C_CAM_CY_SCBIP_V0) */
 835:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 836:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****         EZI2C_CAM_CTRL_REG |= (uint32) EZI2C_CAM_CTRL_ENABLED;  /* Enable scb IP */
 661              		.loc 1 836 0
 662 03e4 1368     		ldr	r3, [r2]
 663 03e6 8021     		movs	r1, #128
 664 03e8 0906     		lsls	r1, r1, #24
 665 03ea 0B43     		orrs	r3, r1
 666 03ec 1360     		str	r3, [r2]
 667              	.LVL24:
 668              	.L1:
 837:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     }
 838:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 839:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #ifdef EZI2C_CAM_I2C_ISR_EXIT_CALLBACK
 840:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c ****     EZI2C_CAM_I2C_ISR_ExitCallback();
 841:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** #endif /* EZI2C_CAM_I2C_ISR_EXIT_CALLBACK */
 842:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** 
 843:Generated_Source\PSoC4/EZI2C_CAM_I2C_INT.c **** }
 669              		.loc 1 843 0
 670              		@ sp needed
 671 03ee 10BD     		pop	{r4, pc}
 672              	.L40:
 673              		.align	2
 674              	.L39:
 675 03f0 00000740 		.word	1074200576
 676 03f4 00000000 		.word	EZI2C_CAM_state
 677 03f8 60000740 		.word	1074200672
 678 03fc FF5FFFFF 		.word	-40961
 679 0400 FFFCFFFF 		.word	-769
 680 0404 C80F0740 		.word	1074204616
 681 0408 880F0740 		.word	1074204552
 682 040c ED0F0000 		.word	4077
 683 0410 800F0740 		.word	1074204544
 684 0414 F3070000 		.word	2035
 685 0418 C00F0740 		.word	1074204608
 686 041c FF0F0000 		.word	4095
 687 0420 400F0740 		.word	1074204480
 688 0424 17030000 		.word	791
 689 0428 000F0740 		.word	1074204416
 690              		.cfi_endproc
 691              	.LFE0:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 28


 692              		.size	EZI2C_CAM_I2C_ISR, .-EZI2C_CAM_I2C_ISR
 693              		.text
 694              	.Letext0:
 695              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 696              		.file 3 "Generated_Source\\PSoC4\\EZI2C_CAM_PVT.h"
 697              		.file 4 "Generated_Source\\PSoC4\\EZI2C_CAM_I2C_PVT.h"
 698              		.file 5 "Generated_Source\\PSoC4\\EZI2C_CAM.h"
 699              		.section	.debug_info,"",%progbits
 700              	.Ldebug_info0:
 701 0000 94010000 		.4byte	0x194
 702 0004 0400     		.2byte	0x4
 703 0006 00000000 		.4byte	.Ldebug_abbrev0
 704 000a 04       		.byte	0x4
 705 000b 01       		.uleb128 0x1
 706 000c A2010000 		.4byte	.LASF31
 707 0010 0C       		.byte	0xc
 708 0011 66020000 		.4byte	.LASF32
 709 0015 7B010000 		.4byte	.LASF33
 710 0019 00000000 		.4byte	.Ldebug_ranges0+0
 711 001d 00000000 		.4byte	0
 712 0021 00000000 		.4byte	.Ldebug_line0
 713 0025 02       		.uleb128 0x2
 714 0026 01       		.byte	0x1
 715 0027 06       		.byte	0x6
 716 0028 C0020000 		.4byte	.LASF0
 717 002c 02       		.uleb128 0x2
 718 002d 01       		.byte	0x1
 719 002e 08       		.byte	0x8
 720 002f B0000000 		.4byte	.LASF1
 721 0033 02       		.uleb128 0x2
 722 0034 02       		.byte	0x2
 723 0035 05       		.byte	0x5
 724 0036 5C020000 		.4byte	.LASF2
 725 003a 02       		.uleb128 0x2
 726 003b 02       		.byte	0x2
 727 003c 07       		.byte	0x7
 728 003d D8020000 		.4byte	.LASF3
 729 0041 02       		.uleb128 0x2
 730 0042 04       		.byte	0x4
 731 0043 05       		.byte	0x5
 732 0044 91020000 		.4byte	.LASF4
 733 0048 02       		.uleb128 0x2
 734 0049 04       		.byte	0x4
 735 004a 07       		.byte	0x7
 736 004b BE000000 		.4byte	.LASF5
 737 004f 02       		.uleb128 0x2
 738 0050 08       		.byte	0x8
 739 0051 05       		.byte	0x5
 740 0052 49020000 		.4byte	.LASF6
 741 0056 02       		.uleb128 0x2
 742 0057 08       		.byte	0x8
 743 0058 07       		.byte	0x7
 744 0059 57010000 		.4byte	.LASF7
 745 005d 03       		.uleb128 0x3
 746 005e 04       		.byte	0x4
 747 005f 05       		.byte	0x5
 748 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 29


 749 0064 02       		.uleb128 0x2
 750 0065 04       		.byte	0x4
 751 0066 07       		.byte	0x7
 752 0067 4A010000 		.4byte	.LASF8
 753 006b 04       		.uleb128 0x4
 754 006c DA000000 		.4byte	.LASF9
 755 0070 02       		.byte	0x2
 756 0071 E401     		.2byte	0x1e4
 757 0073 2C000000 		.4byte	0x2c
 758 0077 04       		.uleb128 0x4
 759 0078 2E010000 		.4byte	.LASF10
 760 007c 02       		.byte	0x2
 761 007d E601     		.2byte	0x1e6
 762 007f 48000000 		.4byte	0x48
 763 0083 02       		.uleb128 0x2
 764 0084 04       		.byte	0x4
 765 0085 04       		.byte	0x4
 766 0086 5B000000 		.4byte	.LASF11
 767 008a 02       		.uleb128 0x2
 768 008b 08       		.byte	0x8
 769 008c 04       		.byte	0x4
 770 008d F6000000 		.4byte	.LASF12
 771 0091 02       		.uleb128 0x2
 772 0092 01       		.byte	0x1
 773 0093 08       		.byte	0x8
 774 0094 57020000 		.4byte	.LASF13
 775 0098 05       		.uleb128 0x5
 776 0099 6B000000 		.4byte	0x6b
 777 009d 04       		.uleb128 0x4
 778 009e 00000000 		.4byte	.LASF14
 779 00a2 02       		.byte	0x2
 780 00a3 9002     		.2byte	0x290
 781 00a5 A9000000 		.4byte	0xa9
 782 00a9 05       		.uleb128 0x5
 783 00aa 77000000 		.4byte	0x77
 784 00ae 04       		.uleb128 0x4
 785 00af 6E010000 		.4byte	.LASF15
 786 00b3 02       		.byte	0x2
 787 00b4 A002     		.2byte	0x2a0
 788 00b6 BA000000 		.4byte	0xba
 789 00ba 06       		.uleb128 0x6
 790 00bb 04       		.byte	0x4
 791 00bc C0000000 		.4byte	0xc0
 792 00c0 07       		.uleb128 0x7
 793 00c1 02       		.uleb128 0x2
 794 00c2 08       		.byte	0x8
 795 00c3 04       		.byte	0x4
 796 00c4 9A020000 		.4byte	.LASF16
 797 00c8 02       		.uleb128 0x2
 798 00c9 04       		.byte	0x4
 799 00ca 07       		.byte	0x7
 800 00cb 40020000 		.4byte	.LASF17
 801 00cf 08       		.uleb128 0x8
 802 00d0 9E000000 		.4byte	.LASF34
 803 00d4 01       		.byte	0x1
 804 00d5 1F       		.byte	0x1f
 805 00d6 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 30


 806 00da 2C040000 		.4byte	.LFE0-.LFB0
 807 00de 01       		.uleb128 0x1
 808 00df 9C       		.byte	0x9c
 809 00e0 0C010000 		.4byte	0x10c
 810 00e4 09       		.uleb128 0x9
 811 00e5 D0000000 		.4byte	.LASF18
 812 00e9 01       		.byte	0x1
 813 00ea 21       		.byte	0x21
 814 00eb 77000000 		.4byte	0x77
 815 00ef 00000000 		.4byte	.LLST0
 816 00f3 09       		.uleb128 0x9
 817 00f4 CC020000 		.4byte	.LASF19
 818 00f8 01       		.byte	0x1
 819 00f9 22       		.byte	0x22
 820 00fa 77000000 		.4byte	0x77
 821 00fe 6B000000 		.4byte	.LLST1
 822 0102 0A       		.uleb128 0xa
 823 0103 A8020000 		.4byte	.LVL21
 824 0107 8B010000 		.4byte	0x18b
 825 010b 00       		.byte	0
 826 010c 0B       		.uleb128 0xb
 827 010d 82000000 		.4byte	.LASF20
 828 0111 03       		.byte	0x3
 829 0112 3B       		.byte	0x3b
 830 0113 AE000000 		.4byte	0xae
 831 0117 0B       		.uleb128 0xb
 832 0118 30020000 		.4byte	.LASF21
 833 011c 04       		.byte	0x4
 834 011d 1E       		.byte	0x1e
 835 011e 98000000 		.4byte	0x98
 836 0122 0B       		.uleb128 0xb
 837 0123 33000000 		.4byte	.LASF22
 838 0127 04       		.byte	0x4
 839 0128 21       		.byte	0x21
 840 0129 98000000 		.4byte	0x98
 841 012d 0B       		.uleb128 0xb
 842 012e 35010000 		.4byte	.LASF23
 843 0132 04       		.byte	0x4
 844 0133 24       		.byte	0x24
 845 0134 38010000 		.4byte	0x138
 846 0138 06       		.uleb128 0x6
 847 0139 04       		.byte	0x4
 848 013a 98000000 		.4byte	0x98
 849 013e 0B       		.uleb128 0xb
 850 013f E0000000 		.4byte	.LASF24
 851 0143 04       		.byte	0x4
 852 0144 25       		.byte	0x25
 853 0145 A9000000 		.4byte	0xa9
 854 0149 0B       		.uleb128 0xb
 855 014a 17010000 		.4byte	.LASF25
 856 014e 04       		.byte	0x4
 857 014f 26       		.byte	0x26
 858 0150 A9000000 		.4byte	0xa9
 859 0154 0B       		.uleb128 0xb
 860 0155 46000000 		.4byte	.LASF26
 861 0159 04       		.byte	0x4
 862 015a 29       		.byte	0x29
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 31


 863 015b 38010000 		.4byte	0x138
 864 015f 0B       		.uleb128 0xb
 865 0160 06000000 		.4byte	.LASF27
 866 0164 04       		.byte	0x4
 867 0165 2A       		.byte	0x2a
 868 0166 A9000000 		.4byte	0xa9
 869 016a 0B       		.uleb128 0xb
 870 016b 1C000000 		.4byte	.LASF28
 871 016f 04       		.byte	0x4
 872 0170 2B       		.byte	0x2b
 873 0171 A9000000 		.4byte	0xa9
 874 0175 0B       		.uleb128 0xb
 875 0176 A6020000 		.4byte	.LASF29
 876 017a 04       		.byte	0x4
 877 017b 2C       		.byte	0x2c
 878 017c A9000000 		.4byte	0xa9
 879 0180 0B       		.uleb128 0xb
 880 0181 FD000000 		.4byte	.LASF30
 881 0185 04       		.byte	0x4
 882 0186 2D       		.byte	0x2d
 883 0187 98000000 		.4byte	0x98
 884 018b 0C       		.uleb128 0xc
 885 018c 61000000 		.4byte	.LASF35
 886 0190 61000000 		.4byte	.LASF35
 887 0194 05       		.byte	0x5
 888 0195 1507     		.2byte	0x715
 889 0197 00       		.byte	0
 890              		.section	.debug_abbrev,"",%progbits
 891              	.Ldebug_abbrev0:
 892 0000 01       		.uleb128 0x1
 893 0001 11       		.uleb128 0x11
 894 0002 01       		.byte	0x1
 895 0003 25       		.uleb128 0x25
 896 0004 0E       		.uleb128 0xe
 897 0005 13       		.uleb128 0x13
 898 0006 0B       		.uleb128 0xb
 899 0007 03       		.uleb128 0x3
 900 0008 0E       		.uleb128 0xe
 901 0009 1B       		.uleb128 0x1b
 902 000a 0E       		.uleb128 0xe
 903 000b 55       		.uleb128 0x55
 904 000c 17       		.uleb128 0x17
 905 000d 11       		.uleb128 0x11
 906 000e 01       		.uleb128 0x1
 907 000f 10       		.uleb128 0x10
 908 0010 17       		.uleb128 0x17
 909 0011 00       		.byte	0
 910 0012 00       		.byte	0
 911 0013 02       		.uleb128 0x2
 912 0014 24       		.uleb128 0x24
 913 0015 00       		.byte	0
 914 0016 0B       		.uleb128 0xb
 915 0017 0B       		.uleb128 0xb
 916 0018 3E       		.uleb128 0x3e
 917 0019 0B       		.uleb128 0xb
 918 001a 03       		.uleb128 0x3
 919 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 32


 920 001c 00       		.byte	0
 921 001d 00       		.byte	0
 922 001e 03       		.uleb128 0x3
 923 001f 24       		.uleb128 0x24
 924 0020 00       		.byte	0
 925 0021 0B       		.uleb128 0xb
 926 0022 0B       		.uleb128 0xb
 927 0023 3E       		.uleb128 0x3e
 928 0024 0B       		.uleb128 0xb
 929 0025 03       		.uleb128 0x3
 930 0026 08       		.uleb128 0x8
 931 0027 00       		.byte	0
 932 0028 00       		.byte	0
 933 0029 04       		.uleb128 0x4
 934 002a 16       		.uleb128 0x16
 935 002b 00       		.byte	0
 936 002c 03       		.uleb128 0x3
 937 002d 0E       		.uleb128 0xe
 938 002e 3A       		.uleb128 0x3a
 939 002f 0B       		.uleb128 0xb
 940 0030 3B       		.uleb128 0x3b
 941 0031 05       		.uleb128 0x5
 942 0032 49       		.uleb128 0x49
 943 0033 13       		.uleb128 0x13
 944 0034 00       		.byte	0
 945 0035 00       		.byte	0
 946 0036 05       		.uleb128 0x5
 947 0037 35       		.uleb128 0x35
 948 0038 00       		.byte	0
 949 0039 49       		.uleb128 0x49
 950 003a 13       		.uleb128 0x13
 951 003b 00       		.byte	0
 952 003c 00       		.byte	0
 953 003d 06       		.uleb128 0x6
 954 003e 0F       		.uleb128 0xf
 955 003f 00       		.byte	0
 956 0040 0B       		.uleb128 0xb
 957 0041 0B       		.uleb128 0xb
 958 0042 49       		.uleb128 0x49
 959 0043 13       		.uleb128 0x13
 960 0044 00       		.byte	0
 961 0045 00       		.byte	0
 962 0046 07       		.uleb128 0x7
 963 0047 15       		.uleb128 0x15
 964 0048 00       		.byte	0
 965 0049 27       		.uleb128 0x27
 966 004a 19       		.uleb128 0x19
 967 004b 00       		.byte	0
 968 004c 00       		.byte	0
 969 004d 08       		.uleb128 0x8
 970 004e 2E       		.uleb128 0x2e
 971 004f 01       		.byte	0x1
 972 0050 3F       		.uleb128 0x3f
 973 0051 19       		.uleb128 0x19
 974 0052 03       		.uleb128 0x3
 975 0053 0E       		.uleb128 0xe
 976 0054 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 33


 977 0055 0B       		.uleb128 0xb
 978 0056 3B       		.uleb128 0x3b
 979 0057 0B       		.uleb128 0xb
 980 0058 27       		.uleb128 0x27
 981 0059 19       		.uleb128 0x19
 982 005a 11       		.uleb128 0x11
 983 005b 01       		.uleb128 0x1
 984 005c 12       		.uleb128 0x12
 985 005d 06       		.uleb128 0x6
 986 005e 40       		.uleb128 0x40
 987 005f 18       		.uleb128 0x18
 988 0060 9642     		.uleb128 0x2116
 989 0062 19       		.uleb128 0x19
 990 0063 01       		.uleb128 0x1
 991 0064 13       		.uleb128 0x13
 992 0065 00       		.byte	0
 993 0066 00       		.byte	0
 994 0067 09       		.uleb128 0x9
 995 0068 34       		.uleb128 0x34
 996 0069 00       		.byte	0
 997 006a 03       		.uleb128 0x3
 998 006b 0E       		.uleb128 0xe
 999 006c 3A       		.uleb128 0x3a
 1000 006d 0B       		.uleb128 0xb
 1001 006e 3B       		.uleb128 0x3b
 1002 006f 0B       		.uleb128 0xb
 1003 0070 49       		.uleb128 0x49
 1004 0071 13       		.uleb128 0x13
 1005 0072 02       		.uleb128 0x2
 1006 0073 17       		.uleb128 0x17
 1007 0074 00       		.byte	0
 1008 0075 00       		.byte	0
 1009 0076 0A       		.uleb128 0xa
 1010 0077 898201   		.uleb128 0x4109
 1011 007a 00       		.byte	0
 1012 007b 11       		.uleb128 0x11
 1013 007c 01       		.uleb128 0x1
 1014 007d 31       		.uleb128 0x31
 1015 007e 13       		.uleb128 0x13
 1016 007f 00       		.byte	0
 1017 0080 00       		.byte	0
 1018 0081 0B       		.uleb128 0xb
 1019 0082 34       		.uleb128 0x34
 1020 0083 00       		.byte	0
 1021 0084 03       		.uleb128 0x3
 1022 0085 0E       		.uleb128 0xe
 1023 0086 3A       		.uleb128 0x3a
 1024 0087 0B       		.uleb128 0xb
 1025 0088 3B       		.uleb128 0x3b
 1026 0089 0B       		.uleb128 0xb
 1027 008a 49       		.uleb128 0x49
 1028 008b 13       		.uleb128 0x13
 1029 008c 3F       		.uleb128 0x3f
 1030 008d 19       		.uleb128 0x19
 1031 008e 3C       		.uleb128 0x3c
 1032 008f 19       		.uleb128 0x19
 1033 0090 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 34


 1034 0091 00       		.byte	0
 1035 0092 0C       		.uleb128 0xc
 1036 0093 2E       		.uleb128 0x2e
 1037 0094 00       		.byte	0
 1038 0095 3F       		.uleb128 0x3f
 1039 0096 19       		.uleb128 0x19
 1040 0097 3C       		.uleb128 0x3c
 1041 0098 19       		.uleb128 0x19
 1042 0099 6E       		.uleb128 0x6e
 1043 009a 0E       		.uleb128 0xe
 1044 009b 03       		.uleb128 0x3
 1045 009c 0E       		.uleb128 0xe
 1046 009d 3A       		.uleb128 0x3a
 1047 009e 0B       		.uleb128 0xb
 1048 009f 3B       		.uleb128 0x3b
 1049 00a0 05       		.uleb128 0x5
 1050 00a1 00       		.byte	0
 1051 00a2 00       		.byte	0
 1052 00a3 00       		.byte	0
 1053              		.section	.debug_loc,"",%progbits
 1054              	.Ldebug_loc0:
 1055              	.LLST0:
 1056 0000 A0000000 		.4byte	.LVL2
 1057 0004 B0000000 		.4byte	.LVL3
 1058 0008 0100     		.2byte	0x1
 1059 000a 53       		.byte	0x53
 1060 000b B8000000 		.4byte	.LVL4
 1061 000f BE000000 		.4byte	.LVL5
 1062 0013 0100     		.2byte	0x1
 1063 0015 53       		.byte	0x53
 1064 0016 C4010000 		.4byte	.LVL6
 1065 001a CC010000 		.4byte	.LVL7
 1066 001e 0100     		.2byte	0x1
 1067 0020 53       		.byte	0x53
 1068 0021 D0010000 		.4byte	.LVL8
 1069 0025 D8010000 		.4byte	.LVL9
 1070 0029 0100     		.2byte	0x1
 1071 002b 53       		.byte	0x53
 1072 002c E2010000 		.4byte	.LVL10
 1073 0030 E6010000 		.4byte	.LVL11
 1074 0034 0100     		.2byte	0x1
 1075 0036 53       		.byte	0x53
 1076 0037 26020000 		.4byte	.LVL12
 1077 003b 2E020000 		.4byte	.LVL13
 1078 003f 0100     		.2byte	0x1
 1079 0041 50       		.byte	0x50
 1080 0042 30020000 		.4byte	.LVL14
 1081 0046 70020000 		.4byte	.LVL17
 1082 004a 0100     		.2byte	0x1
 1083 004c 50       		.byte	0x50
 1084 004d 7C020000 		.4byte	.LVL18
 1085 0051 9A020000 		.4byte	.LVL19
 1086 0055 0100     		.2byte	0x1
 1087 0057 53       		.byte	0x53
 1088 0058 A4020000 		.4byte	.LVL20
 1089 005c A7020000 		.4byte	.LVL21-1
 1090 0060 0100     		.2byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 35


 1091 0062 53       		.byte	0x53
 1092 0063 00000000 		.4byte	0
 1093 0067 00000000 		.4byte	0
 1094              	.LLST1:
 1095 006b 02000000 		.4byte	.LVL0
 1096 006f 34020000 		.4byte	.LVL15
 1097 0073 0200     		.2byte	0x2
 1098 0075 30       		.byte	0x30
 1099 0076 9F       		.byte	0x9f
 1100 0077 34020000 		.4byte	.LVL15
 1101 007b 70020000 		.4byte	.LVL17
 1102 007f 0100     		.2byte	0x1
 1103 0081 54       		.byte	0x54
 1104 0082 70020000 		.4byte	.LVL17
 1105 0086 BA020000 		.4byte	.LVL22
 1106 008a 0200     		.2byte	0x2
 1107 008c 30       		.byte	0x30
 1108 008d 9F       		.byte	0x9f
 1109 008e A0030000 		.4byte	.LVL23
 1110 0092 EE030000 		.4byte	.LVL24
 1111 0096 0200     		.2byte	0x2
 1112 0098 30       		.byte	0x30
 1113 0099 9F       		.byte	0x9f
 1114 009a 00000000 		.4byte	0
 1115 009e 00000000 		.4byte	0
 1116              		.section	.debug_aranges,"",%progbits
 1117 0000 1C000000 		.4byte	0x1c
 1118 0004 0200     		.2byte	0x2
 1119 0006 00000000 		.4byte	.Ldebug_info0
 1120 000a 04       		.byte	0x4
 1121 000b 00       		.byte	0
 1122 000c 0000     		.2byte	0
 1123 000e 0000     		.2byte	0
 1124 0010 00000000 		.4byte	.LFB0
 1125 0014 2C040000 		.4byte	.LFE0-.LFB0
 1126 0018 00000000 		.4byte	0
 1127 001c 00000000 		.4byte	0
 1128              		.section	.debug_ranges,"",%progbits
 1129              	.Ldebug_ranges0:
 1130 0000 00000000 		.4byte	.LFB0
 1131 0004 2C040000 		.4byte	.LFE0
 1132 0008 00000000 		.4byte	0
 1133 000c 00000000 		.4byte	0
 1134              		.section	.debug_line,"",%progbits
 1135              	.Ldebug_line0:
 1136 0000 44010000 		.section	.debug_str,"MS",%progbits,1
 1136      02008700 
 1136      00000201 
 1136      FB0E0D00 
 1136      01010101 
 1137              	.LASF14:
 1138 0000 72656733 		.ascii	"reg32\000"
 1138      3200
 1139              	.LASF27:
 1140 0006 455A4932 		.ascii	"EZI2C_CAM_slRdBufSize\000"
 1140      435F4341 
 1140      4D5F736C 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 36


 1140      52644275 
 1140      6653697A 
 1141              	.LASF28:
 1142 001c 455A4932 		.ascii	"EZI2C_CAM_slRdBufIndex\000"
 1142      435F4341 
 1142      4D5F736C 
 1142      52644275 
 1142      66496E64 
 1143              	.LASF22:
 1144 0033 455A4932 		.ascii	"EZI2C_CAM_slStatus\000"
 1144      435F4341 
 1144      4D5F736C 
 1144      53746174 
 1144      757300
 1145              	.LASF26:
 1146 0046 455A4932 		.ascii	"EZI2C_CAM_slRdBufPtr\000"
 1146      435F4341 
 1146      4D5F736C 
 1146      52644275 
 1146      66507472 
 1147              	.LASF11:
 1148 005b 666C6F61 		.ascii	"float\000"
 1148      7400
 1149              	.LASF35:
 1150 0061 455A4932 		.ascii	"EZI2C_CAM_I2CSlaveNackGeneration\000"
 1150      435F4341 
 1150      4D5F4932 
 1150      43536C61 
 1150      76654E61 
 1151              	.LASF20:
 1152 0082 455A4932 		.ascii	"EZI2C_CAM_customIntrHandler\000"
 1152      435F4341 
 1152      4D5F6375 
 1152      73746F6D 
 1152      496E7472 
 1153              	.LASF34:
 1154 009e 455A4932 		.ascii	"EZI2C_CAM_I2C_ISR\000"
 1154      435F4341 
 1154      4D5F4932 
 1154      435F4953 
 1154      5200
 1155              	.LASF1:
 1156 00b0 756E7369 		.ascii	"unsigned char\000"
 1156      676E6564 
 1156      20636861 
 1156      7200
 1157              	.LASF5:
 1158 00be 6C6F6E67 		.ascii	"long unsigned int\000"
 1158      20756E73 
 1158      69676E65 
 1158      6420696E 
 1158      7400
 1159              	.LASF18:
 1160 00d0 64696666 		.ascii	"diffCount\000"
 1160      436F756E 
 1160      7400
 1161              	.LASF9:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 37


 1162 00da 75696E74 		.ascii	"uint8\000"
 1162      3800
 1163              	.LASF24:
 1164 00e0 455A4932 		.ascii	"EZI2C_CAM_slWrBufSize\000"
 1164      435F4341 
 1164      4D5F736C 
 1164      57724275 
 1164      6653697A 
 1165              	.LASF12:
 1166 00f6 646F7562 		.ascii	"double\000"
 1166      6C6500
 1167              	.LASF30:
 1168 00fd 455A4932 		.ascii	"EZI2C_CAM_slOverFlowCount\000"
 1168      435F4341 
 1168      4D5F736C 
 1168      4F766572 
 1168      466C6F77 
 1169              	.LASF25:
 1170 0117 455A4932 		.ascii	"EZI2C_CAM_slWrBufIndex\000"
 1170      435F4341 
 1170      4D5F736C 
 1170      57724275 
 1170      66496E64 
 1171              	.LASF10:
 1172 012e 75696E74 		.ascii	"uint32\000"
 1172      333200
 1173              	.LASF23:
 1174 0135 455A4932 		.ascii	"EZI2C_CAM_slWrBufPtr\000"
 1174      435F4341 
 1174      4D5F736C 
 1174      57724275 
 1174      66507472 
 1175              	.LASF8:
 1176 014a 756E7369 		.ascii	"unsigned int\000"
 1176      676E6564 
 1176      20696E74 
 1176      00
 1177              	.LASF7:
 1178 0157 6C6F6E67 		.ascii	"long long unsigned int\000"
 1178      206C6F6E 
 1178      6720756E 
 1178      7369676E 
 1178      65642069 
 1179              	.LASF15:
 1180 016e 63796973 		.ascii	"cyisraddress\000"
 1180      72616464 
 1180      72657373 
 1180      00
 1181              	.LASF33:
 1182 017b 433A5C70 		.ascii	"C:\\psoc\\chamonix\\fixed_boot\\boot.cydsn\000"
 1182      736F635C 
 1182      6368616D 
 1182      6F6E6978 
 1182      5C666978 
 1183              	.LASF31:
 1184 01a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1184      43313120 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 38


 1184      352E342E 
 1184      31203230 
 1184      31363036 
 1185 01d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1185      20726576 
 1185      6973696F 
 1185      6E203233 
 1185      37373135 
 1186 0208 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1186      66756E63 
 1186      74696F6E 
 1186      2D736563 
 1186      74696F6E 
 1187              	.LASF21:
 1188 0230 455A4932 		.ascii	"EZI2C_CAM_state\000"
 1188      435F4341 
 1188      4D5F7374 
 1188      61746500 
 1189              	.LASF17:
 1190 0240 73697A65 		.ascii	"sizetype\000"
 1190      74797065 
 1190      00
 1191              	.LASF6:
 1192 0249 6C6F6E67 		.ascii	"long long int\000"
 1192      206C6F6E 
 1192      6720696E 
 1192      7400
 1193              	.LASF13:
 1194 0257 63686172 		.ascii	"char\000"
 1194      00
 1195              	.LASF2:
 1196 025c 73686F72 		.ascii	"short int\000"
 1196      7420696E 
 1196      7400
 1197              	.LASF32:
 1198 0266 47656E65 		.ascii	"Generated_Source\\PSoC4\\EZI2C_CAM_I2C_INT.c\000"
 1198      72617465 
 1198      645F536F 
 1198      75726365 
 1198      5C50536F 
 1199              	.LASF4:
 1200 0291 6C6F6E67 		.ascii	"long int\000"
 1200      20696E74 
 1200      00
 1201              	.LASF16:
 1202 029a 6C6F6E67 		.ascii	"long double\000"
 1202      20646F75 
 1202      626C6500 
 1203              	.LASF29:
 1204 02a6 455A4932 		.ascii	"EZI2C_CAM_slRdBufIndexTmp\000"
 1204      435F4341 
 1204      4D5F736C 
 1204      52644275 
 1204      66496E64 
 1205              	.LASF0:
 1206 02c0 7369676E 		.ascii	"signed char\000"
 1206      65642063 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccqTtES1.s 			page 39


 1206      68617200 
 1207              	.LASF19:
 1208 02cc 656E6454 		.ascii	"endTransfer\000"
 1208      72616E73 
 1208      66657200 
 1209              	.LASF3:
 1210 02d8 73686F72 		.ascii	"short unsigned int\000"
 1210      7420756E 
 1210      7369676E 
 1210      65642069 
 1210      6E7400
 1211              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
