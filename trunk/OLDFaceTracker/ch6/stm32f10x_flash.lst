
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\stm32f10x_flash.o:     file format elf32-littlearm
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\stm32f10x_flash.o

Disassembly of section .text.FLASH_SetLatency:

00000000 <FLASH_SetLatency>:
FLASH_SetLatency():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:133
  
  /* Check the parameters */
  assert_param(IS_FLASH_LATENCY(FLASH_Latency));
  
  /* Read the ACR register */
  tmpreg = FLASH->ACR;  
   0:	f242 0300 	movw	r3, #8192	; 0x2000
   4:	f2c4 0302 	movt	r3, #16386	; 0x4002
   8:	681a      	ldr	r2, [r3, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:136
  
  /* Sets the Latency value */
  tmpreg &= ACR_LATENCY_Mask;
   a:	f002 0238 	and.w	r2, r2, #56	; 0x38
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:137
  tmpreg |= FLASH_Latency;
   e:	4310      	orrs	r0, r2
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:140
  
  /* Write the ACR register */
  FLASH->ACR = tmpreg;
  10:	6018      	str	r0, [r3, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:141
}
  12:	4770      	bx	lr
Disassembly of section .text.FLASH_HalfCycleAccessCmd:

00000000 <FLASH_HalfCycleAccessCmd>:
FLASH_HalfCycleAccessCmd():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:157
{
  /* Check the parameters */
  assert_param(IS_FLASH_HALFCYCLEACCESS_STATE(FLASH_HalfCycleAccess));
  
  /* Enable or disable the Half cycle access */
  FLASH->ACR &= ACR_HLFCYA_Mask;
   0:	f242 0200 	movw	r2, #8192	; 0x2000
   4:	f2c4 0202 	movt	r2, #16386	; 0x4002
   8:	6813      	ldr	r3, [r2, #0]
   a:	f023 0308 	bic.w	r3, r3, #8	; 0x8
   e:	6013      	str	r3, [r2, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:158
  FLASH->ACR |= FLASH_HalfCycleAccess;
  10:	6811      	ldr	r1, [r2, #0]
  12:	4308      	orrs	r0, r1
  14:	6010      	str	r0, [r2, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:159
}
  16:	4770      	bx	lr
Disassembly of section .text.FLASH_PrefetchBufferCmd:

00000000 <FLASH_PrefetchBufferCmd>:
FLASH_PrefetchBufferCmd():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:175
{
  /* Check the parameters */
  assert_param(IS_FLASH_PREFETCHBUFFER_STATE(FLASH_PrefetchBuffer));
  
  /* Enable or disable the Prefetch Buffer */
  FLASH->ACR &= ACR_PRFTBE_Mask;
   0:	f242 0200 	movw	r2, #8192	; 0x2000
   4:	f2c4 0202 	movt	r2, #16386	; 0x4002
   8:	6813      	ldr	r3, [r2, #0]
   a:	f023 0310 	bic.w	r3, r3, #16	; 0x10
   e:	6013      	str	r3, [r2, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:176
  FLASH->ACR |= FLASH_PrefetchBuffer;
  10:	6811      	ldr	r1, [r2, #0]
  12:	4308      	orrs	r0, r1
  14:	6010      	str	r0, [r2, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:177
}
  16:	4770      	bx	lr
Disassembly of section .text.FLASH_Unlock:

00000000 <FLASH_Unlock>:
FLASH_Unlock():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:187
  * @retval None
  */
void FLASH_Unlock(void)
{
  /* Authorize the FPEC Access */
  FLASH->KEYR = FLASH_KEY1;
   0:	f242 0300 	movw	r3, #8192	; 0x2000
   4:	f240 1223 	movw	r2, #291	; 0x123
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:188
  FLASH->KEYR = FLASH_KEY2;
   8:	f648 11ab 	movw	r1, #35243	; 0x89ab
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:187
  * @retval None
  */
void FLASH_Unlock(void)
{
  /* Authorize the FPEC Access */
  FLASH->KEYR = FLASH_KEY1;
   c:	f2c4 0302 	movt	r3, #16386	; 0x4002
  10:	f2c4 5267 	movt	r2, #17767	; 0x4567
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:188
  FLASH->KEYR = FLASH_KEY2;
  14:	f6cc 51ef 	movt	r1, #52719	; 0xcdef
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:187
  * @retval None
  */
void FLASH_Unlock(void)
{
  /* Authorize the FPEC Access */
  FLASH->KEYR = FLASH_KEY1;
  18:	605a      	str	r2, [r3, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:188
  FLASH->KEYR = FLASH_KEY2;
  1a:	6059      	str	r1, [r3, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:189
}
  1c:	4770      	bx	lr
  1e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_Lock:

00000000 <FLASH_Lock>:
FLASH_Lock():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:199
  * @retval None
  */
void FLASH_Lock(void)
{
  /* Set the Lock Bit to lock the FPEC and the FCR */
  FLASH->CR |= CR_LOCK_Set;
   0:	f242 0200 	movw	r2, #8192	; 0x2000
   4:	f2c4 0202 	movt	r2, #16386	; 0x4002
   8:	6913      	ldr	r3, [r2, #16]
   a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   e:	6113      	str	r3, [r2, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:200
}
  10:	4770      	bx	lr
  12:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_GetUserOptionByte:

00000000 <FLASH_GetUserOptionByte>:
FLASH_GetUserOptionByte():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:645
  *   and RST_STDBY(Bit2).
  */
uint32_t FLASH_GetUserOptionByte(void)
{
  /* Return the User Option Byte */
  return (uint32_t)(FLASH->OBR >> 2);
   0:	f242 0300 	movw	r3, #8192	; 0x2000
   4:	f2c4 0302 	movt	r3, #16386	; 0x4002
   8:	69d8      	ldr	r0, [r3, #28]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:646
}
   a:	0880      	lsrs	r0, r0, #2
   c:	4770      	bx	lr
   e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_GetWriteProtectionOptionByte:

00000000 <FLASH_GetWriteProtectionOptionByte>:
FLASH_GetWriteProtectionOptionByte():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:656
  * @retval The FLASH Write Protection  Option Bytes Register value
  */
uint32_t FLASH_GetWriteProtectionOptionByte(void)
{
  /* Return the Falsh write protection Register value */
  return (uint32_t)(FLASH->WRPR);
   0:	f242 0300 	movw	r3, #8192	; 0x2000
   4:	f2c4 0302 	movt	r3, #16386	; 0x4002
   8:	6a18      	ldr	r0, [r3, #32]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:657
}
   a:	4770      	bx	lr
Disassembly of section .text.FLASH_GetReadOutProtectionStatus:

00000000 <FLASH_GetReadOutProtectionStatus>:
FLASH_GetReadOutProtectionStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:667
  * @retval FLASH ReadOut Protection Status(SET or RESET)
  */
FlagStatus FLASH_GetReadOutProtectionStatus(void)
{
  FlagStatus readoutstatus = RESET;
  if ((FLASH->OBR & RDPRT_Mask) != (uint32_t)RESET)
   0:	f242 0300 	movw	r3, #8192	; 0x2000
   4:	f2c4 0302 	movt	r3, #16386	; 0x4002
   8:	69d8      	ldr	r0, [r3, #28]
   a:	0840      	lsrs	r0, r0, #1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:676
  else
  {
    readoutstatus = RESET;
  }
  return readoutstatus;
}
   c:	f000 0001 	and.w	r0, r0, #1	; 0x1
  10:	4770      	bx	lr
  12:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_GetPrefetchBufferStatus:

00000000 <FLASH_GetPrefetchBufferStatus>:
FLASH_GetPrefetchBufferStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:687
  */
FlagStatus FLASH_GetPrefetchBufferStatus(void)
{
  FlagStatus bitstatus = RESET;
  
  if ((FLASH->ACR & ACR_PRFTBS_Mask) != (uint32_t)RESET)
   0:	f242 0300 	movw	r3, #8192	; 0x2000
   4:	f2c4 0302 	movt	r3, #16386	; 0x4002
   8:	6818      	ldr	r0, [r3, #0]
   a:	0940      	lsrs	r0, r0, #5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:697
  {
    bitstatus = RESET;
  }
  /* Return the new state of FLASH Prefetch Buffer Status (SET or RESET) */
  return bitstatus; 
}
   c:	f000 0001 	and.w	r0, r0, #1	; 0x1
  10:	4770      	bx	lr
  12:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_ITConfig:

00000000 <FLASH_ITConfig>:
FLASH_ITConfig():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:714
void FLASH_ITConfig(uint16_t FLASH_IT, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FLASH_IT(FLASH_IT)); 
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if(NewState != DISABLE)
   0:	b941      	cbnz	r1, 14 <FLASH_ITConfig+0x14>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:722
    FLASH->CR |= FLASH_IT;
  }
  else
  {
    /* Disable the interrupt sources */
    FLASH->CR &= ~(uint32_t)FLASH_IT;
   2:	f242 0300 	movw	r3, #8192	; 0x2000
   6:	f2c4 0302 	movt	r3, #16386	; 0x4002
   a:	6919      	ldr	r1, [r3, #16]
   c:	43c2      	mvns	r2, r0
   e:	400a      	ands	r2, r1
  10:	611a      	str	r2, [r3, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:724
  }
}
  12:	4770      	bx	lr
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:717
  assert_param(IS_FLASH_IT(FLASH_IT)); 
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if(NewState != DISABLE)
  {
    /* Enable the interrupt sources */
    FLASH->CR |= FLASH_IT;
  14:	f242 0200 	movw	r2, #8192	; 0x2000
  18:	f2c4 0202 	movt	r2, #16386	; 0x4002
  1c:	6913      	ldr	r3, [r2, #16]
  1e:	ea40 0303 	orr.w	r3, r0, r3
  22:	6113      	str	r3, [r2, #16]
  24:	e7f5      	b.n	12 <FLASH_ITConfig+0x12>
  26:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_GetFlagStatus:

00000000 <FLASH_GetFlagStatus>:
FLASH_GetFlagStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:742
FlagStatus FLASH_GetFlagStatus(uint16_t FLASH_FLAG)
{
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG)) ;
  if(FLASH_FLAG == FLASH_FLAG_OPTERR) 
   0:	2801      	cmp	r0, #1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:744
  {
    if((FLASH->OBR & FLASH_FLAG_OPTERR) != (uint32_t)RESET)
   2:	bf01      	itttt	eq
   4:	f242 0300 	movweq	r3, #8192	; 0x2000
   8:	f2c4 0302 	movteq	r3, #16386	; 0x4002
   c:	69da      	ldreq	r2, [r3, #28]
   e:	f002 0001 	andeq.w	r0, r2, #1	; 0x1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:742
FlagStatus FLASH_GetFlagStatus(uint16_t FLASH_FLAG)
{
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG)) ;
  if(FLASH_FLAG == FLASH_FLAG_OPTERR) 
  12:	d008      	beq.n	26 <FLASH_GetFlagStatus+0x26>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:755
      bitstatus = RESET;
    }
  }
  else
  {
   if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
  14:	f242 0300 	movw	r3, #8192	; 0x2000
  18:	f2c4 0302 	movt	r3, #16386	; 0x4002
  1c:	68da      	ldr	r2, [r3, #12]
  1e:	4210      	tst	r0, r2
  20:	bf0c      	ite	eq
  22:	2000      	moveq	r0, #0
  24:	2001      	movne	r0, #1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:766
      bitstatus = RESET;
    }
  }
  /* Return the new state of FLASH_FLAG (SET or RESET) */
  return bitstatus;
}
  26:	4770      	bx	lr
Disassembly of section .text.FLASH_ClearFlag:

00000000 <FLASH_ClearFlag>:
FLASH_ClearFlag():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:783
{
  /* Check the parameters */
  assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG)) ;
  
  /* Clear the flags */
  FLASH->SR = FLASH_FLAG;
   0:	f242 0300 	movw	r3, #8192	; 0x2000
   4:	f2c4 0302 	movt	r3, #16386	; 0x4002
   8:	60d8      	str	r0, [r3, #12]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:784
}
   a:	4770      	bx	lr
Disassembly of section .text.FLASH_GetStatus:

00000000 <FLASH_GetStatus>:
FLASH_GetStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:796
  */
FLASH_Status FLASH_GetStatus(void)
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
   0:	f242 0200 	movw	r2, #8192	; 0x2000
   4:	f2c4 0202 	movt	r2, #16386	; 0x4002
   8:	68d3      	ldr	r3, [r2, #12]
   a:	f013 0f01 	tst.w	r3, #1	; 0x1
   e:	d10c      	bne.n	2a <FLASH_GetStatus+0x2a>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:802
  {
    flashstatus = FLASH_BUSY;
  }
  else 
  {  
    if((FLASH->SR & FLASH_FLAG_PGERR) != 0)
  10:	68d3      	ldr	r3, [r2, #12]
  12:	f013 0f04 	tst.w	r3, #4	; 0x4
  16:	d106      	bne.n	26 <FLASH_GetStatus+0x26>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:808
    { 
      flashstatus = FLASH_ERROR_PG;
    }
    else 
    {
      if((FLASH->SR & FLASH_FLAG_WRPRTERR) != 0 )
  18:	68d3      	ldr	r3, [r2, #12]
  1a:	f013 0f10 	tst.w	r3, #16	; 0x10
  1e:	bf14      	ite	ne
  20:	2003      	movne	r0, #3
  22:	2004      	moveq	r0, #4
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:820
      }
    }
  }
  /* Return the Flash Status */
  return flashstatus;
}
  24:	4770      	bx	lr
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:802
  {
    flashstatus = FLASH_BUSY;
  }
  else 
  {  
    if((FLASH->SR & FLASH_FLAG_PGERR) != 0)
  26:	2002      	movs	r0, #2
  28:	e7fc      	b.n	24 <FLASH_GetStatus+0x24>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:796
  */
FLASH_Status FLASH_GetStatus(void)
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
  2a:	2001      	movs	r0, #1
  2c:	e7fa      	b.n	24 <FLASH_GetStatus+0x24>
  2e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_WaitForLastOperation:

00000000 <FLASH_WaitForLastOperation>:
FLASH_WaitForLastOperation():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:829
  * @param  Timeout: FLASH progamming Timeout
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_WaitForLastOperation(uint32_t Timeout)
{ 
   0:	b430      	push	{r4, r5}
FLASH_GetStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:796
  */
FLASH_Status FLASH_GetStatus(void)
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
   2:	f242 0200 	movw	r2, #8192	; 0x2000
   6:	f2c4 0202 	movt	r2, #16386	; 0x4002
   a:	68d3      	ldr	r3, [r2, #12]
FLASH_WaitForLastOperation():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:829
  * @param  Timeout: FLASH progamming Timeout
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_WaitForLastOperation(uint32_t Timeout)
{ 
   c:	b082      	sub	sp, #8
FLASH_GetStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:796
  */
FLASH_Status FLASH_GetStatus(void)
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
   e:	f013 0f01 	tst.w	r3, #1	; 0x1
  12:	d10a      	bne.n	2a <FLASH_WaitForLastOperation+0x2a>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:802
  {
    flashstatus = FLASH_BUSY;
  }
  else 
  {  
    if((FLASH->SR & FLASH_FLAG_PGERR) != 0)
  14:	68d3      	ldr	r3, [r2, #12]
  16:	f013 0f04 	tst.w	r3, #4	; 0x4
  1a:	d032      	beq.n	82 <FLASH_WaitForLastOperation+0x82>
  1c:	2302      	movs	r3, #2
FLASH_WaitForLastOperation():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:841
  {
    delay();
    status = FLASH_GetStatus();
    Timeout--;
  }
  if(Timeout == 0x00 )
  1e:	b900      	cbnz	r0, 22 <FLASH_WaitForLastOperation+0x22>
  20:	2305      	movs	r3, #5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:847
  {
    status = FLASH_TIMEOUT;
  }
  /* Return the operation status */
  return status;
}
  22:	4618      	mov	r0, r3
  24:	b002      	add	sp, #8
  26:	bc30      	pop	{r4, r5}
  28:	4770      	bx	lr
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:835
  FLASH_Status status = FLASH_COMPLETE;
   
  /* Check for the Flash Status */
  status = FLASH_GetStatus();
  /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  while((status == FLASH_BUSY) && (Timeout != 0x00))
  2a:	2800      	cmp	r0, #0
  2c:	d0f8      	beq.n	20 <FLASH_WaitForLastOperation+0x20>
delay():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:856
  * @param  None
  * @retval None
  */
static void delay(void)
{
  __IO uint32_t i = 0;
  2e:	2500      	movs	r5, #0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:857
  for(i = 0xFF; i != 0; i--)
  30:	24ff      	movs	r4, #255
FLASH_GetStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:796
  */
FLASH_Status FLASH_GetStatus(void)
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
  32:	4611      	mov	r1, r2
delay():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:856
  * @param  None
  * @retval None
  */
static void delay(void)
{
  __IO uint32_t i = 0;
  34:	9501      	str	r5, [sp, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:857
  for(i = 0xFF; i != 0; i--)
  36:	9401      	str	r4, [sp, #4]
  38:	9b01      	ldr	r3, [sp, #4]
  3a:	b12b      	cbz	r3, 48 <FLASH_WaitForLastOperation+0x48>
  3c:	9b01      	ldr	r3, [sp, #4]
  3e:	3b01      	subs	r3, #1
  40:	9301      	str	r3, [sp, #4]
  42:	9a01      	ldr	r2, [sp, #4]
  44:	2a00      	cmp	r2, #0
  46:	d1f9      	bne.n	3c <FLASH_WaitForLastOperation+0x3c>
FLASH_GetStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:796
  */
FLASH_Status FLASH_GetStatus(void)
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
  48:	68cb      	ldr	r3, [r1, #12]
  4a:	f242 0200 	movw	r2, #8192	; 0x2000
  4e:	f013 0f01 	tst.w	r3, #1	; 0x1
  52:	f2c4 0202 	movt	r2, #16386	; 0x4002
  56:	d108      	bne.n	6a <FLASH_WaitForLastOperation+0x6a>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:802
  {
    flashstatus = FLASH_BUSY;
  }
  else 
  {  
    if((FLASH->SR & FLASH_FLAG_PGERR) != 0)
  58:	68d3      	ldr	r3, [r2, #12]
  5a:	f013 0f04 	tst.w	r3, #4	; 0x4
  5e:	d008      	beq.n	72 <FLASH_WaitForLastOperation+0x72>
  60:	2302      	movs	r3, #2
FLASH_WaitForLastOperation():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:839
  /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  while((status == FLASH_BUSY) && (Timeout != 0x00))
  {
    delay();
    status = FLASH_GetStatus();
    Timeout--;
  62:	3801      	subs	r0, #1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:841
  }
  if(Timeout == 0x00 )
  64:	2800      	cmp	r0, #0
  66:	d0db      	beq.n	20 <FLASH_WaitForLastOperation+0x20>
  68:	e7db      	b.n	22 <FLASH_WaitForLastOperation+0x22>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:835
  FLASH_Status status = FLASH_COMPLETE;
   
  /* Check for the Flash Status */
  status = FLASH_GetStatus();
  /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  while((status == FLASH_BUSY) && (Timeout != 0x00))
  6a:	f110 30ff 	adds.w	r0, r0, #4294967295	; 0xffffffff
  6e:	d1e1      	bne.n	34 <FLASH_WaitForLastOperation+0x34>
  70:	e7d6      	b.n	20 <FLASH_WaitForLastOperation+0x20>
FLASH_GetStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:808
    { 
      flashstatus = FLASH_ERROR_PG;
    }
    else 
    {
      if((FLASH->SR & FLASH_FLAG_WRPRTERR) != 0 )
  72:	68d3      	ldr	r3, [r2, #12]
  74:	f013 0f10 	tst.w	r3, #16	; 0x10
  78:	bf0c      	ite	eq
  7a:	2304      	moveq	r3, #4
  7c:	2303      	movne	r3, #3
FLASH_WaitForLastOperation():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:839
  /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  while((status == FLASH_BUSY) && (Timeout != 0x00))
  {
    delay();
    status = FLASH_GetStatus();
    Timeout--;
  7e:	3801      	subs	r0, #1
  80:	e7f0      	b.n	64 <FLASH_WaitForLastOperation+0x64>
FLASH_GetStatus():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:808
    { 
      flashstatus = FLASH_ERROR_PG;
    }
    else 
    {
      if((FLASH->SR & FLASH_FLAG_WRPRTERR) != 0 )
  82:	68d3      	ldr	r3, [r2, #12]
  84:	f013 0f10 	tst.w	r3, #16	; 0x10
  88:	bf0c      	ite	eq
  8a:	2304      	moveq	r3, #4
  8c:	2303      	movne	r3, #3
  8e:	e7c6      	b.n	1e <FLASH_WaitForLastOperation+0x1e>
Disassembly of section .text.FLASH_UserOptionByteConfig:

00000000 <FLASH_UserOptionByteConfig>:
FLASH_UserOptionByteConfig():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:602
  *     @arg OB_STDBY_RST: Reset generated when entering in STANDBY
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG, 
  * FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_UserOptionByteConfig(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:611
  assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
  assert_param(IS_OB_STOP_SOURCE(OB_STOP));
  assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));

  /* Authorize the small information block programming */
  FLASH->OPTKEYR = FLASH_KEY1;
   4:	f240 1323 	movw	r3, #291	; 0x123
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:602
  *     @arg OB_STDBY_RST: Reset generated when entering in STANDBY
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG, 
  * FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_UserOptionByteConfig(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)
{
   8:	4617      	mov	r7, r2
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:611
  assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
  assert_param(IS_OB_STOP_SOURCE(OB_STOP));
  assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));

  /* Authorize the small information block programming */
  FLASH->OPTKEYR = FLASH_KEY1;
   a:	f242 0400 	movw	r4, #8192	; 0x2000
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:612
  FLASH->OPTKEYR = FLASH_KEY2;
   e:	f648 12ab 	movw	r2, #35243	; 0x89ab
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:611
  assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
  assert_param(IS_OB_STOP_SOURCE(OB_STOP));
  assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));

  /* Authorize the small information block programming */
  FLASH->OPTKEYR = FLASH_KEY1;
  12:	f2c4 0402 	movt	r4, #16386	; 0x4002
  16:	f2c4 5367 	movt	r3, #17767	; 0x4567
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:612
  FLASH->OPTKEYR = FLASH_KEY2;
  1a:	f6cc 52ef 	movt	r2, #52719	; 0xcdef
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:611
  assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
  assert_param(IS_OB_STOP_SOURCE(OB_STOP));
  assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));

  /* Authorize the small information block programming */
  FLASH->OPTKEYR = FLASH_KEY1;
  1e:	60a3      	str	r3, [r4, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:602
  *     @arg OB_STDBY_RST: Reset generated when entering in STANDBY
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG, 
  * FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_UserOptionByteConfig(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)
{
  20:	4605      	mov	r5, r0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:612
  assert_param(IS_OB_STOP_SOURCE(OB_STOP));
  assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));

  /* Authorize the small information block programming */
  FLASH->OPTKEYR = FLASH_KEY1;
  FLASH->OPTKEYR = FLASH_KEY2;
  22:	60a2      	str	r2, [r4, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:615
  
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  24:	200f      	movs	r0, #15
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:602
  *     @arg OB_STDBY_RST: Reset generated when entering in STANDBY
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG, 
  * FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_UserOptionByteConfig(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)
{
  26:	460e      	mov	r6, r1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:615
  /* Authorize the small information block programming */
  FLASH->OPTKEYR = FLASH_KEY1;
  FLASH->OPTKEYR = FLASH_KEY2;
  
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  28:	f7ff fffe 	bl	0 <FLASH_UserOptionByteConfig>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:617
  
  if(status == FLASH_COMPLETE)
  2c:	2804      	cmp	r0, #4
  2e:	d001      	beq.n	34 <FLASH_UserOptionByteConfig+0x34>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:634
      FLASH->CR &= CR_OPTPG_Reset;
    }
  }    
  /* Return the Option Byte program Status */
  return status;
}
  30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:620
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  
  if(status == FLASH_COMPLETE)
  {  
    /* Enable the Option Bytes Programming operation */
    FLASH->CR |= CR_OPTPG_Set; 
  34:	6923      	ldr	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:622
           
    OB->USER = OB_IWDG | (uint16_t)(OB_STOP | (uint16_t)(OB_STDBY | ((uint16_t)0xF8))); 
  36:	f045 02f8 	orr.w	r2, r5, #248	; 0xf8
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:620
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  
  if(status == FLASH_COMPLETE)
  {  
    /* Enable the Option Bytes Programming operation */
    FLASH->CR |= CR_OPTPG_Set; 
  3a:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  3e:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:622
           
    OB->USER = OB_IWDG | (uint16_t)(OB_STOP | (uint16_t)(OB_STDBY | ((uint16_t)0xF8))); 
  40:	ea46 0202 	orr.w	r2, r6, r2
  44:	f64f 0300 	movw	r3, #63488	; 0xf800
  48:	f6c1 73ff 	movt	r3, #8191	; 0x1fff
  4c:	ea47 0202 	orr.w	r2, r7, r2
  50:	805a      	strh	r2, [r3, #2]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:625
  
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
  52:	300b      	adds	r0, #11
  54:	f7ff fffe 	bl	0 <FLASH_UserOptionByteConfig>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:626
    if(status != FLASH_TIMEOUT)
  58:	2805      	cmp	r0, #5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:629
    {
      /* if the program operation is completed, disable the OPTPG Bit */
      FLASH->CR &= CR_OPTPG_Reset;
  5a:	bf1f      	itttt	ne
  5c:	f641 73ef 	movwne	r3, #8175	; 0x1fef
  60:	6922      	ldrne	r2, [r4, #16]
  62:	f2c0 0300 	movtne	r3, #0	; 0x0
  66:	4013      	andne	r3, r2
  68:	bf18      	it	ne
  6a:	6123      	strne	r3, [r4, #16]
  6c:	e7e0      	b.n	30 <FLASH_UserOptionByteConfig+0x30>
  6e:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_ReadOutProtection:

00000000 <FLASH_ReadOutProtection>:
FLASH_ReadOutProtection():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:534
  *   This parameter can be: ENABLE or DISABLE.
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_ReadOutProtection(FunctionalState NewState)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:538
  FLASH_Status status = FLASH_COMPLETE;
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  status = FLASH_WaitForLastOperation(EraseTimeout);
   4:	f640 70ff 	movw	r0, #4095	; 0xfff
   8:	f7ff fffe 	bl	0 <FLASH_ReadOutProtection>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:539
  if(status == FLASH_COMPLETE)
   c:	2804      	cmp	r0, #4
   e:	d000      	beq.n	12 <FLASH_ReadOutProtection+0x12>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:582
      }
    }
  }
  /* Return the protection operation Status */
  return status;      
}
  10:	bd70      	pop	{r4, r5, r6, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:542
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  status = FLASH_WaitForLastOperation(EraseTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  12:	f242 0400 	movw	r4, #8192	; 0x2000
  16:	f240 1323 	movw	r3, #291	; 0x123
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:543
    FLASH->OPTKEYR = FLASH_KEY2;
  1a:	f648 12ab 	movw	r2, #35243	; 0x89ab
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:542
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  status = FLASH_WaitForLastOperation(EraseTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  1e:	f2c4 0402 	movt	r4, #16386	; 0x4002
  22:	f2c4 5367 	movt	r3, #17767	; 0x4567
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:543
    FLASH->OPTKEYR = FLASH_KEY2;
  26:	f6cc 52ef 	movt	r2, #52719	; 0xcdef
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:542
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  status = FLASH_WaitForLastOperation(EraseTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  2a:	60a3      	str	r3, [r4, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:543
    FLASH->OPTKEYR = FLASH_KEY2;
  2c:	60a2      	str	r2, [r4, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:544
    FLASH->CR |= CR_OPTER_Set;
  2e:	6923      	ldr	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:547
    FLASH->CR |= CR_STRT_Set;
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
  30:	f640 70ff 	movw	r0, #4095	; 0xfff
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:544
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
    FLASH->OPTKEYR = FLASH_KEY2;
    FLASH->CR |= CR_OPTER_Set;
  34:	f043 0320 	orr.w	r3, r3, #32	; 0x20
  38:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:545
    FLASH->CR |= CR_STRT_Set;
  3a:	6922      	ldr	r2, [r4, #16]
  3c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  40:	6122      	str	r2, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:547
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
  42:	f7ff fffe 	bl	0 <FLASH_ReadOutProtection>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:548
    if(status == FLASH_COMPLETE)
  46:	2804      	cmp	r0, #4
  48:	d00a      	beq.n	60 <FLASH_ReadOutProtection+0x60>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:573
        FLASH->CR &= CR_OPTPG_Reset;
      }
    }
    else 
    {
      if(status != FLASH_TIMEOUT)
  4a:	2805      	cmp	r0, #5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:576
      {
        /* Disable the OPTER Bit */
        FLASH->CR &= CR_OPTER_Reset;
  4c:	bf1f      	itttt	ne
  4e:	f641 73df 	movwne	r3, #8159	; 0x1fdf
  52:	6922      	ldrne	r2, [r4, #16]
  54:	f2c0 0300 	movtne	r3, #0	; 0x0
  58:	4013      	andne	r3, r2
  5a:	bf18      	it	ne
  5c:	6123      	strne	r3, [r4, #16]
  5e:	e7d7      	b.n	10 <FLASH_ReadOutProtection+0x10>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:551
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
    if(status == FLASH_COMPLETE)
    {
      /* if the erase operation is completed, disable the OPTER Bit */
      FLASH->CR &= CR_OPTER_Reset;
  60:	6923      	ldr	r3, [r4, #16]
  62:	f641 72df 	movw	r2, #8159	; 0x1fdf
  66:	f2c0 0200 	movt	r2, #0	; 0x0
  6a:	ea03 0202 	and.w	r2, r3, r2
  6e:	6122      	str	r2, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:553
      /* Enable the Option Bytes Programming operation */
      FLASH->CR |= CR_OPTPG_Set; 
  70:	6923      	ldr	r3, [r4, #16]
  72:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  76:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:554
      if(NewState != DISABLE)
  78:	b9cd      	cbnz	r5, ae <FLASH_ReadOutProtection+0xae>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:560
      {
        OB->RDP = 0x00;
      }
      else
      {
        OB->RDP = RDP_Key;  
  7a:	f64f 0300 	movw	r3, #63488	; 0xf800
  7e:	f6c1 73ff 	movt	r3, #8191	; 0x1fff
  82:	f04f 02a5 	mov.w	r2, #165	; 0xa5
  86:	801a      	strh	r2, [r3, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:563
      }
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(EraseTimeout); 
  88:	f640 70ff 	movw	r0, #4095	; 0xfff
  8c:	f7ff fffe 	bl	0 <FLASH_ReadOutProtection>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:565
    
      if(status != FLASH_TIMEOUT)
  90:	2805      	cmp	r0, #5
  92:	d0bd      	beq.n	10 <FLASH_ReadOutProtection+0x10>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:568
      {
        /* if the program operation is completed, disable the OPTPG Bit */
        FLASH->CR &= CR_OPTPG_Reset;
  94:	f242 0300 	movw	r3, #8192	; 0x2000
  98:	f2c4 0302 	movt	r3, #16386	; 0x4002
  9c:	6919      	ldr	r1, [r3, #16]
  9e:	f641 72ef 	movw	r2, #8175	; 0x1fef
  a2:	f2c0 0200 	movt	r2, #0	; 0x0
  a6:	ea01 0202 	and.w	r2, r1, r2
  aa:	611a      	str	r2, [r3, #16]
  ac:	e7b0      	b.n	10 <FLASH_ReadOutProtection+0x10>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:556
      FLASH->CR &= CR_OPTER_Reset;
      /* Enable the Option Bytes Programming operation */
      FLASH->CR |= CR_OPTPG_Set; 
      if(NewState != DISABLE)
      {
        OB->RDP = 0x00;
  ae:	f64f 0300 	movw	r3, #63488	; 0xf800
  b2:	f6c1 73ff 	movt	r3, #8191	; 0x1fff
  b6:	f04f 0200 	mov.w	r2, #0	; 0x0
  ba:	801a      	strh	r2, [r3, #0]
  bc:	e7e4      	b.n	88 <FLASH_ReadOutProtection+0x88>
  be:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_EnableWriteProtection:

00000000 <FLASH_EnableWriteProtection>:
FLASH_EnableWriteProtection():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:461
  *     @arg FLASH_WRProt_AllPages
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_EnableWriteProtection(uint32_t FLASH_Pages)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4604      	mov	r4, r0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:476
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  WRP2_Data = (uint16_t)((FLASH_Pages & WRP2_Mask) >> 16);
  WRP3_Data = (uint16_t)((FLASH_Pages & WRP3_Mask) >> 24);
  
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
   4:	200f      	movs	r0, #15
   6:	f7ff fffe 	bl	0 <FLASH_EnableWriteProtection>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:478
  
  if(status == FLASH_COMPLETE)
   a:	2804      	cmp	r0, #4
   c:	d000      	beq.n	10 <FLASH_EnableWriteProtection+0x10>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:522
      FLASH->CR &= CR_OPTPG_Reset;
    }
  } 
  /* Return the write protection operation Status */
  return status;       
}
   e:	bd70      	pop	{r4, r5, r6, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:481
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  10:	f242 0100 	movw	r1, #8192	; 0x2000
  14:	f240 1323 	movw	r3, #291	; 0x123
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:482
    FLASH->OPTKEYR = FLASH_KEY2;
  18:	f648 12ab 	movw	r2, #35243	; 0x89ab
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:481
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  1c:	f2c4 0102 	movt	r1, #16386	; 0x4002
  20:	f2c4 5367 	movt	r3, #17767	; 0x4567
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:482
    FLASH->OPTKEYR = FLASH_KEY2;
  24:	f6cc 52ef 	movt	r2, #52719	; 0xcdef
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:481
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  28:	608b      	str	r3, [r1, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:482
    FLASH->OPTKEYR = FLASH_KEY2;
  2a:	608a      	str	r2, [r1, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:469
  FLASH_Status status = FLASH_COMPLETE;
  
  /* Check the parameters */
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  2c:	43e5      	mvns	r5, r4
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:483
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
    FLASH->OPTKEYR = FLASH_KEY2;
    FLASH->CR |= CR_OPTPG_Set;
  2e:	690b      	ldr	r3, [r1, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:470
  
  /* Check the parameters */
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  30:	b2ec      	uxtb	r4, r5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:483
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
    FLASH->OPTKEYR = FLASH_KEY2;
    FLASH->CR |= CR_OPTPG_Set;
  32:	f043 0310 	orr.w	r3, r3, #16	; 0x10
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:484
    if(WRP0_Data != 0xFF)
  36:	2cff      	cmp	r4, #255
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:483
  if(status == FLASH_COMPLETE)
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
    FLASH->OPTKEYR = FLASH_KEY2;
    FLASH->CR |= CR_OPTPG_Set;
  38:	610b      	str	r3, [r1, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:484
    if(WRP0_Data != 0xFF)
  3a:	d12b      	bne.n	94 <FLASH_EnableWriteProtection+0x94>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:471
  /* Check the parameters */
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  3c:	f405 437f 	and.w	r3, r5, #65280	; 0xff00
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:484
  {
    /* Authorizes the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
    FLASH->OPTKEYR = FLASH_KEY2;
    FLASH->CR |= CR_OPTPG_Set;
    if(WRP0_Data != 0xFF)
  40:	2101      	movs	r1, #1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:471
  /* Check the parameters */
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  42:	0a1c      	lsrs	r4, r3, #8
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:491
      OB->WRP0 = WRP0_Data;
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
    }
    if((status == FLASH_COMPLETE) && (WRP1_Data != 0xFF))
  44:	2cff      	cmp	r4, #255
  46:	bf0c      	ite	eq
  48:	2200      	moveq	r2, #0
  4a:	f001 0201 	andne.w	r2, r1, #1	; 0x1
  4e:	2a00      	cmp	r2, #0
  50:	d136      	bne.n	c0 <FLASH_EnableWriteProtection+0xc0>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:472
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  WRP2_Data = (uint16_t)((FLASH_Pages & WRP2_Mask) >> 16);
  52:	f405 037f 	and.w	r3, r5, #16711680	; 0xff0000
  56:	0c1c      	lsrs	r4, r3, #16
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:498
      OB->WRP1 = WRP1_Data;
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
    }
    if((status == FLASH_COMPLETE) && (WRP2_Data != 0xFF))
  58:	2cff      	cmp	r4, #255
  5a:	bf0c      	ite	eq
  5c:	2200      	moveq	r2, #0
  5e:	f001 0201 	andne.w	r2, r1, #1	; 0x1
  62:	2a00      	cmp	r2, #0
  64:	d142      	bne.n	ec <FLASH_EnableWriteProtection+0xec>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:473
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  WRP2_Data = (uint16_t)((FLASH_Pages & WRP2_Mask) >> 16);
  WRP3_Data = (uint16_t)((FLASH_Pages & WRP3_Mask) >> 24);
  66:	0e2a      	lsrs	r2, r5, #24
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:506
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
    }
    
    if((status == FLASH_COMPLETE)&& (WRP3_Data != 0xFF))
  68:	2aff      	cmp	r2, #255
  6a:	bf0c      	ite	eq
  6c:	2300      	moveq	r3, #0
  6e:	f001 0301 	andne.w	r3, r1, #1	; 0x1
  72:	2b00      	cmp	r3, #0
  74:	d14e      	bne.n	114 <FLASH_EnableWriteProtection+0x114>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:514
     
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
    }
          
    if(status != FLASH_TIMEOUT)
  76:	2805      	cmp	r0, #5
  78:	d0c9      	beq.n	e <FLASH_EnableWriteProtection+0xe>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:517
    {
      /* if the program operation is completed, disable the OPTPG Bit */
      FLASH->CR &= CR_OPTPG_Reset;
  7a:	f242 0300 	movw	r3, #8192	; 0x2000
  7e:	f2c4 0302 	movt	r3, #16386	; 0x4002
  82:	6919      	ldr	r1, [r3, #16]
  84:	f641 72ef 	movw	r2, #8175	; 0x1fef
  88:	f2c0 0200 	movt	r2, #0	; 0x0
  8c:	ea01 0202 	and.w	r2, r1, r2
  90:	611a      	str	r2, [r3, #16]
  92:	e7bc      	b.n	e <FLASH_EnableWriteProtection+0xe>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:486
    FLASH->OPTKEYR = FLASH_KEY1;
    FLASH->OPTKEYR = FLASH_KEY2;
    FLASH->CR |= CR_OPTPG_Set;
    if(WRP0_Data != 0xFF)
    {
      OB->WRP0 = WRP0_Data;
  94:	f64f 0300 	movw	r3, #63488	; 0xf800
  98:	f6c1 73ff 	movt	r3, #8191	; 0x1fff
  9c:	811c      	strh	r4, [r3, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:489
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  9e:	200f      	movs	r0, #15
  a0:	f7ff fffe 	bl	0 <FLASH_EnableWriteProtection>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:471
  /* Check the parameters */
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  a4:	f405 437f 	and.w	r3, r5, #65280	; 0xff00
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:489
    if(WRP0_Data != 0xFF)
    {
      OB->WRP0 = WRP0_Data;
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  a8:	2804      	cmp	r0, #4
  aa:	bf14      	ite	ne
  ac:	2100      	movne	r1, #0
  ae:	2101      	moveq	r1, #1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:471
  /* Check the parameters */
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  b0:	0a1c      	lsrs	r4, r3, #8
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:491
      OB->WRP0 = WRP0_Data;
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
    }
    if((status == FLASH_COMPLETE) && (WRP1_Data != 0xFF))
  b2:	2cff      	cmp	r4, #255
  b4:	bf0c      	ite	eq
  b6:	2200      	moveq	r2, #0
  b8:	f001 0201 	andne.w	r2, r1, #1	; 0x1
  bc:	2a00      	cmp	r2, #0
  be:	d0c8      	beq.n	52 <FLASH_EnableWriteProtection+0x52>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:493
    {
      OB->WRP1 = WRP1_Data;
  c0:	f64f 0300 	movw	r3, #63488	; 0xf800
  c4:	f6c1 73ff 	movt	r3, #8191	; 0x1fff
  c8:	815c      	strh	r4, [r3, #10]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:496
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  ca:	200f      	movs	r0, #15
  cc:	f7ff fffe 	bl	0 <FLASH_EnableWriteProtection>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:472
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  WRP2_Data = (uint16_t)((FLASH_Pages & WRP2_Mask) >> 16);
  d0:	f405 037f 	and.w	r3, r5, #16711680	; 0xff0000
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:496
    if((status == FLASH_COMPLETE) && (WRP1_Data != 0xFF))
    {
      OB->WRP1 = WRP1_Data;
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  d4:	2804      	cmp	r0, #4
  d6:	bf14      	ite	ne
  d8:	2100      	movne	r1, #0
  da:	2101      	moveq	r1, #1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:472
  assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  WRP2_Data = (uint16_t)((FLASH_Pages & WRP2_Mask) >> 16);
  dc:	0c1c      	lsrs	r4, r3, #16
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:498
      OB->WRP1 = WRP1_Data;
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
    }
    if((status == FLASH_COMPLETE) && (WRP2_Data != 0xFF))
  de:	2cff      	cmp	r4, #255
  e0:	bf0c      	ite	eq
  e2:	2200      	moveq	r2, #0
  e4:	f001 0201 	andne.w	r2, r1, #1	; 0x1
  e8:	2a00      	cmp	r2, #0
  ea:	d0bc      	beq.n	66 <FLASH_EnableWriteProtection+0x66>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:500
    {
      OB->WRP2 = WRP2_Data;
  ec:	f64f 0300 	movw	r3, #63488	; 0xf800
  f0:	f6c1 73ff 	movt	r3, #8191	; 0x1fff
  f4:	819c      	strh	r4, [r3, #12]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:503
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  f6:	200f      	movs	r0, #15
  f8:	f7ff fffe 	bl	0 <FLASH_EnableWriteProtection>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:473
  
  FLASH_Pages = (uint32_t)(~FLASH_Pages);
  WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
  WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
  WRP2_Data = (uint16_t)((FLASH_Pages & WRP2_Mask) >> 16);
  WRP3_Data = (uint16_t)((FLASH_Pages & WRP3_Mask) >> 24);
  fc:	0e2a      	lsrs	r2, r5, #24
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:503
    if((status == FLASH_COMPLETE) && (WRP2_Data != 0xFF))
    {
      OB->WRP2 = WRP2_Data;
      
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  fe:	2804      	cmp	r0, #4
 100:	bf14      	ite	ne
 102:	2100      	movne	r1, #0
 104:	2101      	moveq	r1, #1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:506
    }
    
    if((status == FLASH_COMPLETE)&& (WRP3_Data != 0xFF))
 106:	2aff      	cmp	r2, #255
 108:	bf0c      	ite	eq
 10a:	2300      	moveq	r3, #0
 10c:	f001 0301 	andne.w	r3, r1, #1	; 0x1
 110:	2b00      	cmp	r3, #0
 112:	d0b0      	beq.n	76 <FLASH_EnableWriteProtection+0x76>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:508
    {
      OB->WRP3 = WRP3_Data;
 114:	f64f 0300 	movw	r3, #63488	; 0xf800
 118:	f6c1 73ff 	movt	r3, #8191	; 0x1fff
 11c:	81da      	strh	r2, [r3, #14]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:511
     
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
 11e:	200f      	movs	r0, #15
 120:	f7ff fffe 	bl	0 <FLASH_EnableWriteProtection>
 124:	e7a7      	b.n	76 <FLASH_EnableWriteProtection+0x76>
 126:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_ProgramOptionByteData:

00000000 <FLASH_ProgramOptionByteData>:
FLASH_ProgramOptionByteData():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:419
  * @param  Data: specifies the data to be programmed.
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
  */
FLASH_Status FLASH_ProgramOptionByteData(uint32_t Address, uint8_t Data)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4606      	mov	r6, r0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:423
  FLASH_Status status = FLASH_COMPLETE;
  /* Check the parameters */
  assert_param(IS_OB_DATA_ADDRESS(Address));
  status = FLASH_WaitForLastOperation(ProgramTimeout);
   4:	200f      	movs	r0, #15
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:419
  * @param  Data: specifies the data to be programmed.
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
  */
FLASH_Status FLASH_ProgramOptionByteData(uint32_t Address, uint8_t Data)
{
   6:	460d      	mov	r5, r1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:423
  FLASH_Status status = FLASH_COMPLETE;
  /* Check the parameters */
  assert_param(IS_OB_DATA_ADDRESS(Address));
  status = FLASH_WaitForLastOperation(ProgramTimeout);
   8:	f7ff fffe 	bl	0 <FLASH_ProgramOptionByteData>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:424
  if(status == FLASH_COMPLETE)
   c:	2804      	cmp	r0, #4
   e:	d000      	beq.n	12 <FLASH_ProgramOptionByteData+0x12>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:443
      FLASH->CR &= CR_OPTPG_Reset;
    }
  }    
  /* Return the Option Byte Data Program Status */
  return status;
}
  10:	bd70      	pop	{r4, r5, r6, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:427
  assert_param(IS_OB_DATA_ADDRESS(Address));
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorize the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  12:	f242 0400 	movw	r4, #8192	; 0x2000
  16:	f240 1323 	movw	r3, #291	; 0x123
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:428
    FLASH->OPTKEYR = FLASH_KEY2;
  1a:	f648 12ab 	movw	r2, #35243	; 0x89ab
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:427
  assert_param(IS_OB_DATA_ADDRESS(Address));
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorize the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  1e:	f2c4 0402 	movt	r4, #16386	; 0x4002
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:428
    FLASH->OPTKEYR = FLASH_KEY2;
  22:	f6cc 52ef 	movt	r2, #52719	; 0xcdef
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:427
  assert_param(IS_OB_DATA_ADDRESS(Address));
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorize the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  26:	f2c4 5367 	movt	r3, #17767	; 0x4567
  2a:	60a3      	str	r3, [r4, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:428
    FLASH->OPTKEYR = FLASH_KEY2;
  2c:	60a2      	str	r2, [r4, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:430
    /* Enables the Option Bytes Programming operation */
    FLASH->CR |= CR_OPTPG_Set; 
  2e:	6923      	ldr	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:434
    *(__IO uint16_t*)Address = Data;
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
  30:	300b      	adds	r0, #11
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:430
  {
    /* Authorize the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
    FLASH->OPTKEYR = FLASH_KEY2;
    /* Enables the Option Bytes Programming operation */
    FLASH->CR |= CR_OPTPG_Set; 
  32:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  36:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:431
    *(__IO uint16_t*)Address = Data;
  38:	8035      	strh	r5, [r6, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:434
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
  3a:	f7ff fffe 	bl	0 <FLASH_ProgramOptionByteData>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:435
    if(status != FLASH_TIMEOUT)
  3e:	2805      	cmp	r0, #5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:438
    {
      /* if the program operation is completed, disable the OPTPG Bit */
      FLASH->CR &= CR_OPTPG_Reset;
  40:	bf1f      	itttt	ne
  42:	f641 73ef 	movwne	r3, #8175	; 0x1fef
  46:	6922      	ldrne	r2, [r4, #16]
  48:	f2c0 0300 	movtne	r3, #0	; 0x0
  4c:	4013      	andne	r3, r2
  4e:	bf18      	it	ne
  50:	6123      	strne	r3, [r4, #16]
  52:	e7dd      	b.n	10 <FLASH_ProgramOptionByteData+0x10>
Disassembly of section .text.FLASH_ProgramHalfWord:

00000000 <FLASH_ProgramHalfWord>:
FLASH_ProgramHalfWord():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:385
  * @param  Data: specifies the data to be programmed.
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
  */
FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4606      	mov	r6, r0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:390
  FLASH_Status status = FLASH_COMPLETE;
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
   4:	200f      	movs	r0, #15
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:385
  * @param  Data: specifies the data to be programmed.
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
  */
FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
{
   6:	460d      	mov	r5, r1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:390
  FLASH_Status status = FLASH_COMPLETE;
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
   8:	f7ff fffe 	bl	0 <FLASH_ProgramHalfWord>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:392
  
  if(status == FLASH_COMPLETE)
   c:	2804      	cmp	r0, #4
   e:	d000      	beq.n	12 <FLASH_ProgramHalfWord+0x12>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:408
      FLASH->CR &= CR_PG_Reset;
    }
  } 
  /* Return the Program Status */
  return status;
}
  10:	bd70      	pop	{r4, r5, r6, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:395
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  
  if(status == FLASH_COMPLETE)
  {
    /* if the previous operation is completed, proceed to program the new data */
    FLASH->CR |= CR_PG_Set;
  12:	f242 0400 	movw	r4, #8192	; 0x2000
  16:	f2c4 0402 	movt	r4, #16386	; 0x4002
  1a:	6923      	ldr	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:399
  
    *(__IO uint16_t*)Address = Data;
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
  1c:	300b      	adds	r0, #11
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:395
  status = FLASH_WaitForLastOperation(ProgramTimeout);
  
  if(status == FLASH_COMPLETE)
  {
    /* if the previous operation is completed, proceed to program the new data */
    FLASH->CR |= CR_PG_Set;
  1e:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  22:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:397
  
    *(__IO uint16_t*)Address = Data;
  24:	8035      	strh	r5, [r6, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:399
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
  26:	f7ff fffe 	bl	0 <FLASH_ProgramHalfWord>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:400
    if(status != FLASH_TIMEOUT)
  2a:	2805      	cmp	r0, #5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:403
    {
      /* if the program operation is completed, disable the PG Bit */
      FLASH->CR &= CR_PG_Reset;
  2c:	bf1f      	itttt	ne
  2e:	f641 73fe 	movwne	r3, #8190	; 0x1ffe
  32:	6922      	ldrne	r2, [r4, #16]
  34:	f2c0 0300 	movtne	r3, #0	; 0x0
  38:	4013      	andne	r3, r2
  3a:	bf18      	it	ne
  3c:	6123      	strne	r3, [r4, #16]
  3e:	e7e7      	b.n	10 <FLASH_ProgramHalfWord+0x10>
Disassembly of section .text.FLASH_ProgramWord:

00000000 <FLASH_ProgramWord>:
FLASH_ProgramWord():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:328
  * @param  Data: specifies the data to be programmed.
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
  */
FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:330
  FLASH_Status status = FLASH_COMPLETE;
  __IO uint32_t tmp = 0;
   2:	2300      	movs	r3, #0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:328
  * @param  Data: specifies the data to be programmed.
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
  */
FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
{
   4:	b082      	sub	sp, #8
   6:	4605      	mov	r5, r0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:335
  __IO uint32_t tmp = 0;

  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
   8:	200f      	movs	r0, #15
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:328
  * @param  Data: specifies the data to be programmed.
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
  */
FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
{
   a:	460e      	mov	r6, r1
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:330
  FLASH_Status status = FLASH_COMPLETE;
  __IO uint32_t tmp = 0;
   c:	9301      	str	r3, [sp, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:335

  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
   e:	f7ff fffe 	bl	0 <FLASH_ProgramWord>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:337
  
  if(status == FLASH_COMPLETE)
  12:	2804      	cmp	r0, #4
  14:	d001      	beq.n	1a <FLASH_ProgramWord+0x1a>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:375
      }
     }
  }
  /* Return the Program Status */
  return status;
}
  16:	b002      	add	sp, #8
  18:	bd70      	pop	{r4, r5, r6, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:341
  
  if(status == FLASH_COMPLETE)
  {
    /* if the previous operation is completed, proceed to program the new first 
    half word */
    FLASH->CR |= CR_PG_Set;
  1a:	f242 0400 	movw	r4, #8192	; 0x2000
  1e:	f2c4 0402 	movt	r4, #16386	; 0x4002
  22:	6923      	ldr	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:343
  
    *(__IO uint16_t*)Address = (uint16_t)Data;
  24:	b2b2      	uxth	r2, r6
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:341
  
  if(status == FLASH_COMPLETE)
  {
    /* if the previous operation is completed, proceed to program the new first 
    half word */
    FLASH->CR |= CR_PG_Set;
  26:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  2a:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:345
  
    *(__IO uint16_t*)Address = (uint16_t)Data;
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
  2c:	300b      	adds	r0, #11
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:343
  {
    /* if the previous operation is completed, proceed to program the new first 
    half word */
    FLASH->CR |= CR_PG_Set;
  
    *(__IO uint16_t*)Address = (uint16_t)Data;
  2e:	802a      	strh	r2, [r5, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:345
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
  30:	f7ff fffe 	bl	0 <FLASH_ProgramWord>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:347
 
    if(status == FLASH_COMPLETE)
  34:	2804      	cmp	r0, #4
  36:	d00a      	beq.n	4e <FLASH_ProgramWord+0x4e>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:366
        FLASH->CR &= CR_PG_Reset;
      }
    }
    else
    {
      if (status != FLASH_TIMEOUT)
  38:	2805      	cmp	r0, #5
  3a:	d0ec      	beq.n	16 <FLASH_ProgramWord+0x16>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:369
      {
        /* Disable the PG Bit */
        FLASH->CR &= CR_PG_Reset;
  3c:	6922      	ldr	r2, [r4, #16]
  3e:	f641 73fe 	movw	r3, #8190	; 0x1ffe
  42:	f2c0 0300 	movt	r3, #0	; 0x0
  46:	ea02 0303 	and.w	r3, r2, r3
  4a:	6123      	str	r3, [r4, #16]
  4c:	e7e3      	b.n	16 <FLASH_ProgramWord+0x16>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:351
 
    if(status == FLASH_COMPLETE)
    {
      /* if the previous operation is completed, proceed to program the new second 
      half word */
      tmp = Address + 2;
  4e:	1cab      	adds	r3, r5, #2
  50:	9301      	str	r3, [sp, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:353

      *(__IO uint16_t*) tmp = Data >> 16;
  52:	9a01      	ldr	r2, [sp, #4]
  54:	0c33      	lsrs	r3, r6, #16
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:356
    
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  56:	300b      	adds	r0, #11
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:353
    {
      /* if the previous operation is completed, proceed to program the new second 
      half word */
      tmp = Address + 2;

      *(__IO uint16_t*) tmp = Data >> 16;
  58:	8013      	strh	r3, [r2, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:356
    
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  5a:	f7ff fffe 	bl	0 <FLASH_ProgramWord>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:358
        
      if(status != FLASH_TIMEOUT)
  5e:	2805      	cmp	r0, #5
  60:	d1ec      	bne.n	3c <FLASH_ProgramWord+0x3c>
  62:	e7d8      	b.n	16 <FLASH_ProgramWord+0x16>
Disassembly of section .text.FLASH_EraseOptionBytes:

00000000 <FLASH_EraseOptionBytes>:
FLASH_EraseOptionBytes():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:272
  * @param  None
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_EraseOptionBytes(void)
{
   0:	b510      	push	{r4, lr}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:276
  FLASH_Status status = FLASH_COMPLETE;
  
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(EraseTimeout);
   2:	f640 70ff 	movw	r0, #4095	; 0xfff
   6:	f7ff fffe 	bl	0 <FLASH_EraseOptionBytes>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:277
  if(status == FLASH_COMPLETE)
   a:	2804      	cmp	r0, #4
   c:	d000      	beq.n	10 <FLASH_EraseOptionBytes+0x10>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:318
      }
    }  
  }
  /* Return the erase status */
  return status;
}
   e:	bd10      	pop	{r4, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:280
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(EraseTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorize the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  10:	f242 0400 	movw	r4, #8192	; 0x2000
  14:	f240 1323 	movw	r3, #291	; 0x123
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:281
    FLASH->OPTKEYR = FLASH_KEY2;
  18:	f648 12ab 	movw	r2, #35243	; 0x89ab
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:280
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(EraseTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorize the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  1c:	f2c4 0402 	movt	r4, #16386	; 0x4002
  20:	f2c4 5367 	movt	r3, #17767	; 0x4567
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:281
    FLASH->OPTKEYR = FLASH_KEY2;
  24:	f6cc 52ef 	movt	r2, #52719	; 0xcdef
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:280
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(EraseTimeout);
  if(status == FLASH_COMPLETE)
  {
    /* Authorize the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
  28:	60a3      	str	r3, [r4, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:281
    FLASH->OPTKEYR = FLASH_KEY2;
  2a:	60a2      	str	r2, [r4, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:284
    
    /* if the previous operation is completed, proceed to erase the option bytes */
    FLASH->CR |= CR_OPTER_Set;
  2c:	6923      	ldr	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:287
    FLASH->CR |= CR_STRT_Set;
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
  2e:	f640 70ff 	movw	r0, #4095	; 0xfff
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:284
    /* Authorize the small information block programming */
    FLASH->OPTKEYR = FLASH_KEY1;
    FLASH->OPTKEYR = FLASH_KEY2;
    
    /* if the previous operation is completed, proceed to erase the option bytes */
    FLASH->CR |= CR_OPTER_Set;
  32:	f043 0320 	orr.w	r3, r3, #32	; 0x20
  36:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:285
    FLASH->CR |= CR_STRT_Set;
  38:	6922      	ldr	r2, [r4, #16]
  3a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  3e:	6122      	str	r2, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:287
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
  40:	f7ff fffe 	bl	0 <FLASH_EraseOptionBytes>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:289
    
    if(status == FLASH_COMPLETE)
  44:	2804      	cmp	r0, #4
  46:	d00a      	beq.n	5e <FLASH_EraseOptionBytes+0x5e>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:309
        FLASH->CR &= CR_OPTPG_Reset;
      }
    }
    else
    {
      if (status != FLASH_TIMEOUT)
  48:	2805      	cmp	r0, #5
  4a:	d0e0      	beq.n	e <FLASH_EraseOptionBytes+0xe>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:312
      {
        /* Disable the OPTPG Bit */
        FLASH->CR &= CR_OPTPG_Reset;
  4c:	6922      	ldr	r2, [r4, #16]
  4e:	f641 73ef 	movw	r3, #8175	; 0x1fef
  52:	f2c0 0300 	movt	r3, #0	; 0x0
  56:	ea02 0303 	and.w	r3, r2, r3
  5a:	6123      	str	r3, [r4, #16]
  5c:	e7d7      	b.n	e <FLASH_EraseOptionBytes+0xe>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:292
    status = FLASH_WaitForLastOperation(EraseTimeout);
    
    if(status == FLASH_COMPLETE)
    {
      /* if the erase operation is completed, disable the OPTER Bit */
      FLASH->CR &= CR_OPTER_Reset;
  5e:	6922      	ldr	r2, [r4, #16]
  60:	f641 73df 	movw	r3, #8159	; 0x1fdf
  64:	f2c0 0300 	movt	r3, #0	; 0x0
  68:	ea02 0303 	and.w	r3, r2, r3
  6c:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:295
       
      /* Enable the Option Bytes Programming operation */
      FLASH->CR |= CR_OPTPG_Set;
  6e:	6922      	ldr	r2, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:297
      /* Enable the readout access */
      OB->RDP= RDP_Key; 
  70:	f64f 0300 	movw	r3, #63488	; 0xf800
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:295
    {
      /* if the erase operation is completed, disable the OPTER Bit */
      FLASH->CR &= CR_OPTER_Reset;
       
      /* Enable the Option Bytes Programming operation */
      FLASH->CR |= CR_OPTPG_Set;
  74:	f042 0210 	orr.w	r2, r2, #16	; 0x10
  78:	6122      	str	r2, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:297
      /* Enable the readout access */
      OB->RDP= RDP_Key; 
  7a:	f6c1 73ff 	movt	r3, #8191	; 0x1fff
  7e:	f04f 02a5 	mov.w	r2, #165	; 0xa5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:299
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  82:	300b      	adds	r0, #11
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:297
      FLASH->CR &= CR_OPTER_Reset;
       
      /* Enable the Option Bytes Programming operation */
      FLASH->CR |= CR_OPTPG_Set;
      /* Enable the readout access */
      OB->RDP= RDP_Key; 
  84:	801a      	strh	r2, [r3, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:299
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
  86:	f7ff fffe 	bl	0 <FLASH_EraseOptionBytes>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:301
 
      if(status != FLASH_TIMEOUT)
  8a:	2805      	cmp	r0, #5
  8c:	d1de      	bne.n	4c <FLASH_EraseOptionBytes+0x4c>
  8e:	e7be      	b.n	e <FLASH_EraseOptionBytes+0xe>
Disassembly of section .text.FLASH_EraseAllPages:

00000000 <FLASH_EraseAllPages>:
FLASH_EraseAllPages():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:242
  * @param  None
  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_EraseAllPages(void)
{
   0:	b510      	push	{r4, lr}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:245
  FLASH_Status status = FLASH_COMPLETE;
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(EraseTimeout);
   2:	f640 70ff 	movw	r0, #4095	; 0xfff
   6:	f7ff fffe 	bl	0 <FLASH_EraseAllPages>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:247
  
  if(status == FLASH_COMPLETE)
   a:	2804      	cmp	r0, #4
   c:	d000      	beq.n	10 <FLASH_EraseAllPages+0x10>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:263
      FLASH->CR &= CR_MER_Reset;
    }
  }	   
  /* Return the Erase Status */
  return status;
}
   e:	bd10      	pop	{r4, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:250
  status = FLASH_WaitForLastOperation(EraseTimeout);
  
  if(status == FLASH_COMPLETE)
  {
    /* if the previous operation is completed, proceed to erase all pages */
     FLASH->CR |= CR_MER_Set;
  10:	f242 0400 	movw	r4, #8192	; 0x2000
  14:	f2c4 0402 	movt	r4, #16386	; 0x4002
  18:	6923      	ldr	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:254
     FLASH->CR |= CR_STRT_Set;
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
  1a:	f640 70ff 	movw	r0, #4095	; 0xfff
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:250
  status = FLASH_WaitForLastOperation(EraseTimeout);
  
  if(status == FLASH_COMPLETE)
  {
    /* if the previous operation is completed, proceed to erase all pages */
     FLASH->CR |= CR_MER_Set;
  1e:	f043 0304 	orr.w	r3, r3, #4	; 0x4
  22:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:251
     FLASH->CR |= CR_STRT_Set;
  24:	6922      	ldr	r2, [r4, #16]
  26:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  2a:	6122      	str	r2, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:254
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
  2c:	f7ff fffe 	bl	0 <FLASH_EraseAllPages>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:255
    if(status != FLASH_TIMEOUT)
  30:	2805      	cmp	r0, #5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:258
    {
      /* if the erase operation is completed, disable the MER Bit */
      FLASH->CR &= CR_MER_Reset;
  32:	bf1f      	itttt	ne
  34:	f641 73fb 	movwne	r3, #8187	; 0x1ffb
  38:	6922      	ldrne	r2, [r4, #16]
  3a:	f2c0 0300 	movtne	r3, #0	; 0x0
  3e:	4013      	andne	r3, r2
  40:	bf18      	it	ne
  42:	6123      	strne	r3, [r4, #16]
  44:	e7e3      	b.n	e <FLASH_EraseAllPages+0xe>
  46:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.FLASH_ErasePage:

00000000 <FLASH_ErasePage>:
FLASH_ErasePage():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:209
  * @param  Page_Address: The page address to be erased.
  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
  *   FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
  */
FLASH_Status FLASH_ErasePage(uint32_t Page_Address)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:214
  FLASH_Status status = FLASH_COMPLETE;
  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Page_Address));
  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(EraseTimeout);
   4:	f640 70ff 	movw	r0, #4095	; 0xfff
   8:	f7ff fffe 	bl	0 <FLASH_ErasePage>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:216
  
  if(status == FLASH_COMPLETE)
   c:	2804      	cmp	r0, #4
   e:	d000      	beq.n	12 <FLASH_ErasePage+0x12>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:233
      FLASH->CR &= CR_PER_Reset;
    }
  }
  /* Return the Erase Status */
  return status;
}
  10:	bd70      	pop	{r4, r5, r6, pc}
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:219
  status = FLASH_WaitForLastOperation(EraseTimeout);
  
  if(status == FLASH_COMPLETE)
  { 
    /* if the previous operation is completed, proceed to erase the page */
    FLASH->CR|= CR_PER_Set;
  12:	f242 0400 	movw	r4, #8192	; 0x2000
  16:	f2c4 0402 	movt	r4, #16386	; 0x4002
  1a:	6923      	ldr	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:224
    FLASH->AR = Page_Address; 
    FLASH->CR|= CR_STRT_Set;
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
  1c:	f640 70ff 	movw	r0, #4095	; 0xfff
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:219
  status = FLASH_WaitForLastOperation(EraseTimeout);
  
  if(status == FLASH_COMPLETE)
  { 
    /* if the previous operation is completed, proceed to erase the page */
    FLASH->CR|= CR_PER_Set;
  20:	f043 0302 	orr.w	r3, r3, #2	; 0x2
  24:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:220
    FLASH->AR = Page_Address; 
  26:	6165      	str	r5, [r4, #20]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:221
    FLASH->CR|= CR_STRT_Set;
  28:	6923      	ldr	r3, [r4, #16]
  2a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  2e:	6123      	str	r3, [r4, #16]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:224
    
    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(EraseTimeout);
  30:	f7ff fffe 	bl	0 <FLASH_ErasePage>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:225
    if(status != FLASH_TIMEOUT)
  34:	2805      	cmp	r0, #5
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_flash.c:228
    {
      /* if the erase operation is completed, disable the PER Bit */
      FLASH->CR &= CR_PER_Reset;
  36:	bf1f      	itttt	ne
  38:	f641 73fd 	movwne	r3, #8189	; 0x1ffd
  3c:	6922      	ldrne	r2, [r4, #16]
  3e:	f2c0 0300 	movtne	r3, #0	; 0x0
  42:	4013      	andne	r3, r2
  44:	bf18      	it	ne
  46:	6123      	strne	r3, [r4, #16]
  48:	e7e2      	b.n	10 <FLASH_ErasePage+0x10>
  4a:	46c0      	nop			(mov r8, r8)
