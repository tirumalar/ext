
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\chr6dm_startup.o:     file format elf32-littlearm
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\chr6dm_startup.o

Disassembly of section .text.NVIC_Configuration:

00000000 <NVIC_Configuration>:
NVIC_Configuration():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:404
* Output         : None
* Return         : None
* Description    : Configures the vectored interrupt table on the IMU
*******************************************************************************/
void NVIC_Configuration(void)
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	b082      	sub	sp, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:415
    /* Enable the USART1 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
   4:	ad01      	add	r5, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:408
void NVIC_Configuration(void)
{
    NVIC_InitTypeDef NVIC_InitStructure;

    /* Configure the NVIC Preemption Priority Bits */  
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
   6:	f44f 60e0 	mov.w	r0, #1792	; 0x700
   a:	f7ff fffe 	bl	0 <NVIC_PriorityGroupConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:412

    /* Enable the USART1 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
   e:	2400      	movs	r4, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:414
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  10:	2601      	movs	r6, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:411

    /* Configure the NVIC Preemption Priority Bits */  
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);

    /* Enable the USART1 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
  12:	2325      	movs	r3, #37
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:415
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
  14:	4628      	mov	r0, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:411

    /* Configure the NVIC Preemption Priority Bits */  
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);

    /* Enable the USART1 Interrupt */
    NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
  16:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:412
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
  1a:	f88d 4005 	strb.w	r4, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:413
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
  1e:	f88d 4006 	strb.w	r4, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:414
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  22:	f88d 6007 	strb.w	r6, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:415
    NVIC_Init(&NVIC_InitStructure);
  26:	f7ff fffe 	bl	0 <NVIC_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:418

    // Enable the DMA1 channel1 interrupt
    NVIC_InitStructure.NVIC_IRQChannel = DMA1_Channel1_IRQn;
  2a:	230b      	movs	r3, #11
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:419
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
  2c:	2202      	movs	r2, #2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:422
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
  2e:	4628      	mov	r0, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:418
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);

    // Enable the DMA1 channel1 interrupt
    NVIC_InitStructure.NVIC_IRQChannel = DMA1_Channel1_IRQn;
  30:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:419
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
  34:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:420
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
  38:	f88d 4006 	strb.w	r4, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:421
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  3c:	f88d 6007 	strb.w	r6, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:422
    NVIC_Init(&NVIC_InitStructure);
  40:	f7ff fffe 	bl	0 <NVIC_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:426
	 
	 // Enable the TIM2 global Interrupt and set at lowest priority.
	 // This is used to tell the MCU to transmit newest state data over the UART
	 NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
  44:	231c      	movs	r3, #28
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:427
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
  46:	220f      	movs	r2, #15
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:430
	 NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	 NVIC_Init(&NVIC_InitStructure);
  48:	4628      	mov	r0, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:426
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    NVIC_Init(&NVIC_InitStructure);
	 
	 // Enable the TIM2 global Interrupt and set at lowest priority.
	 // This is used to tell the MCU to transmit newest state data over the UART
	 NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
  4a:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:427
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
  4e:	f88d 2005 	strb.w	r2, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:428
	 NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
  52:	f88d 2006 	strb.w	r2, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:429
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  56:	f88d 6007 	strb.w	r6, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:430
	 NVIC_Init(&NVIC_InitStructure);
  5a:	f7ff fffe 	bl	0 <NVIC_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:434
	 
	 // Enable and set EXTI Interrupt to highest priority (once an i2c transfer starts,
	 // it shouldn't be interrupted.
    NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
  5e:	2328      	movs	r3, #40
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:439
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;

    NVIC_Init(&NVIC_InitStructure);
  60:	4628      	mov	r0, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:434
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	 NVIC_Init(&NVIC_InitStructure);
	 
	 // Enable and set EXTI Interrupt to highest priority (once an i2c transfer starts,
	 // it shouldn't be interrupted.
    NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
  62:	f88d 3004 	strb.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:435
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
  66:	f88d 4005 	strb.w	r4, [sp, #5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:436
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
  6a:	f88d 4006 	strb.w	r4, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:437
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  6e:	f88d 6007 	strb.w	r6, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:439

    NVIC_Init(&NVIC_InitStructure);
  72:	f7ff fffe 	bl	0 <NVIC_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:449
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
	 NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	 NVIC_Init(&NVIC_InitStructure);
	 */
}
  76:	b002      	add	sp, #8
  78:	bd70      	pop	{r4, r5, r6, pc}
  7a:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.GPIO_Configuration:

00000000 <GPIO_Configuration>:
GPIO_Configuration():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:318
* Output         : None
* Return         : None
* Description    : Configures the GPIO ports on the IMU
*******************************************************************************/
void GPIO_Configuration(void)
{
   0:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:323
    GPIO_InitTypeDef GPIO_InitStructure;

    // Configure USART1 Rx as input floating
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
   4:	f04f 0a04 	mov.w	sl, #4	; 0x4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:318
* Output         : None
* Return         : None
* Description    : Configures the GPIO ports on the IMU
*******************************************************************************/
void GPIO_Configuration(void)
{
   8:	b082      	sub	sp, #8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:324
    GPIO_InitTypeDef GPIO_InitStructure;

    // Configure USART1 Rx as input floating
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
   a:	f640 0500 	movw	r5, #2048	; 0x800
   e:	eb0d 060a 	add.w	r6, sp, sl
  12:	f2c4 0501 	movt	r5, #16385	; 0x4001
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:322
void GPIO_Configuration(void)
{
    GPIO_InitTypeDef GPIO_InitStructure;

    // Configure USART1 Rx as input floating
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
  16:	f44f 6380 	mov.w	r3, #1024	; 0x400
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:324
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  1a:	4628      	mov	r0, r5
  1c:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:328

    // Configure USART1 Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  1e:	f04f 0803 	mov.w	r8, #3	; 0x3
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:329
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  22:	2418      	movs	r4, #24
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:322
void GPIO_Configuration(void)
{
    GPIO_InitTypeDef GPIO_InitStructure;

    // Configure USART1 Rx as input floating
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
  24:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:323
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  28:	f88d a007 	strb.w	sl, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:324
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  2c:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:327

    // Configure USART1 Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
  30:	f44f 7300 	mov.w	r3, #512	; 0x200
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:330
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  34:	4628      	mov	r0, r5
  36:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:327
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // Configure USART1 Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
  38:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:329
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  3c:	f88d 4007 	strb.w	r4, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:328
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // Configure USART1 Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  40:	f88d 8006 	strb.w	r8, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:330
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  44:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:333
	 
	 // Configure USART2 Rx as input floating
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
  48:	f04f 0308 	mov.w	r3, #8	; 0x8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:335
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  4c:	4628      	mov	r0, r5
  4e:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:333
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
	 
	 // Configure USART2 Rx as input floating
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
  50:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:334
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  54:	f88d a007 	strb.w	sl, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:335
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  58:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:341

    // Configure USART2 Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  5c:	4628      	mov	r0, r5
  5e:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:340
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // Configure USART2 Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  60:	f88d 4007 	strb.w	r4, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:338
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // Configure USART2 Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
  64:	f8ad a004 	strh.w	sl, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:339
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  68:	f88d 8006 	strb.w	r8, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:359
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // Configure PB0 and PB1 as analog inputs
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
    GPIO_Init(GPIOB, &GPIO_InitStructure);
  6c:	f640 4900 	movw	r9, #3072	; 0xc00
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:341

    // Configure USART2 Tx as alternate function push-pull
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  70:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:344
	 
	 // Temp - output clock on pin A8
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
  74:	f44f 7380 	mov.w	r3, #256	; 0x100
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:347
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  78:	4628      	mov	r0, r5
  7a:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:359
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // Configure PB0 and PB1 as analog inputs
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
    GPIO_Init(GPIOB, &GPIO_InitStructure);
  7c:	f2c4 0901 	movt	r9, #16385	; 0x4001
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:344
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
	 
	 // Temp - output clock on pin A8
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
  80:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:346
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  84:	f88d 4007 	strb.w	r4, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:345
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
	 
	 // Temp - output clock on pin A8
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  88:	f88d 8006 	strb.w	r8, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:353
	 
	 // CONFIGURE A/D PINS.  A/D INPUTS COME IN THROUGH CHANNELS 1 THROUGH 9

    // Configure PA.0,4,5,6,7 as analog inputs
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  8c:	3c18      	subs	r4, #24
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:347
	 
	 // Temp - output clock on pin A8
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  8e:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:352
	 
	 // CONFIGURE A/D PINS.  A/D INPUTS COME IN THROUGH CHANNELS 1 THROUGH 9

    // Configure PA.0,4,5,6,7 as analog inputs
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
  92:	f04f 03f1 	mov.w	r3, #241	; 0xf1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:354
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  96:	4628      	mov	r0, r5
  98:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:352
    GPIO_Init(GPIOA, &GPIO_InitStructure);
	 
	 // CONFIGURE A/D PINS.  A/D INPUTS COME IN THROUGH CHANNELS 1 THROUGH 9

    // Configure PA.0,4,5,6,7 as analog inputs
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
  9a:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:353
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  9e:	f88d 4007 	strb.w	r4, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:354
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  a2:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:359

    // Configure PB0 and PB1 as analog inputs
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
    GPIO_Init(GPIOB, &GPIO_InitStructure);
  a6:	4648      	mov	r0, r9
  a8:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:357
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
    GPIO_Init(GPIOA, &GPIO_InitStructure);

    // Configure PB0 and PB1 as analog inputs
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
  aa:	f8ad 8004 	strh.w	r8, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:358
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  ae:	f88d 4007 	strb.w	r4, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:359
    GPIO_Init(GPIOB, &GPIO_InitStructure);
  b2:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:364
	 
	 // Configure PA13 to use alternate function (default is
	 // JTAG - we want GPIO).  PA13 is used as the self-test control
	 // line.
	 GPIO_PinRemapConfig( GPIO_Remap_SWJ_JTAGDisable, ENABLE);
  b6:	f240 2000 	movw	r0, #512	; 0x200
  ba:	2101      	movs	r1, #1
  bc:	f2c0 0030 	movt	r0, #48	; 0x30
  c0:	f7ff fffe 	bl	0 <GPIO_PinRemapConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:365
	 GPIO_PinRemapConfig( GPIO_Remap_SWJ_Disable , ENABLE);
  c4:	f240 4000 	movw	r0, #1024	; 0x400
  c8:	2101      	movs	r1, #1
  ca:	f2c0 0030 	movt	r0, #48	; 0x30
  ce:	f7ff fffe 	bl	0 <GPIO_PinRemapConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:368
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  d2:	f04f 0b10 	mov.w	fp, #16	; 0x10
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:366
	 // Configure PA13 to use alternate function (default is
	 // JTAG - we want GPIO).  PA13 is used as the self-test control
	 // line.
	 GPIO_PinRemapConfig( GPIO_Remap_SWJ_JTAGDisable, ENABLE);
	 GPIO_PinRemapConfig( GPIO_Remap_SWJ_Disable , ENABLE);
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
  d6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:369
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  da:	4628      	mov	r0, r5
  dc:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:366
	 // Configure PA13 to use alternate function (default is
	 // JTAG - we want GPIO).  PA13 is used as the self-test control
	 // line.
	 GPIO_PinRemapConfig( GPIO_Remap_SWJ_JTAGDisable, ENABLE);
	 GPIO_PinRemapConfig( GPIO_Remap_SWJ_Disable , ENABLE);
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
  de:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:367
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  e2:	f88d 8006 	strb.w	r8, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:368
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  e6:	f88d b007 	strb.w	fp, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:369
    GPIO_Init(GPIOA, &GPIO_InitStructure);
  ea:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:372
	 
	 // Configure PA15 as input floating (alternate function, open-drain for PA15)
	 GPIO_PinRemapConfig( GPIO_PartialRemap1_TIM2, DISABLE);
  ee:	f240 1000 	movw	r0, #256	; 0x100
  f2:	4621      	mov	r1, r4
  f4:	f2c0 0018 	movt	r0, #24	; 0x18
  f8:	f7ff fffe 	bl	0 <GPIO_PinRemapConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:373
	 GPIO_PinRemapConfig( GPIO_PartialRemap2_TIM2, DISABLE);
  fc:	f240 2000 	movw	r0, #512	; 0x200
 100:	4621      	mov	r1, r4
 102:	f2c0 0018 	movt	r0, #24	; 0x18
 106:	f7ff fffe 	bl	0 <GPIO_PinRemapConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:374
	 GPIO_PinRemapConfig( GPIO_FullRemap_TIM2, DISABLE);
 10a:	f240 3000 	movw	r0, #768	; 0x300
 10e:	4621      	mov	r1, r4
 110:	f2c0 0018 	movt	r0, #24	; 0x18
 114:	f7ff fffe 	bl	0 <GPIO_PinRemapConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:375
	 GPIO_PinRemapConfig( GPIO_Remap_SPI1 , DISABLE);
 118:	2001      	movs	r0, #1
 11a:	4621      	mov	r1, r4
 11c:	f7ff fffe 	bl	0 <GPIO_PinRemapConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:376
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;
 120:	f248 0300 	movw	r3, #32768	; 0x8000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:380
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 //   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
 124:	4628      	mov	r0, r5
 126:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:376
	 // Configure PA15 as input floating (alternate function, open-drain for PA15)
	 GPIO_PinRemapConfig( GPIO_PartialRemap1_TIM2, DISABLE);
	 GPIO_PinRemapConfig( GPIO_PartialRemap2_TIM2, DISABLE);
	 GPIO_PinRemapConfig( GPIO_FullRemap_TIM2, DISABLE);
	 GPIO_PinRemapConfig( GPIO_Remap_SPI1 , DISABLE);
	 GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;
 128:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:377
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 12c:	f88d 8006 	strb.w	r8, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:379
 //   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 130:	f88d a007 	strb.w	sl, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:380
    GPIO_Init(GPIOA, &GPIO_InitStructure);
 134:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:383
	 
	 // Configure I2C1 pins: SCL and SDA
	 GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7;
 138:	f04f 03c0 	mov.w	r3, #192	; 0xc0
 13c:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:386
	 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
	 GPIO_Init(GPIOB, &GPIO_InitStructure);
 140:	4648      	mov	r0, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:385
    GPIO_Init(GPIOA, &GPIO_InitStructure);
	 
	 // Configure I2C1 pins: SCL and SDA
	 GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7;
	 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 142:	231c      	movs	r3, #28
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:386
	 GPIO_Init(GPIOB, &GPIO_InitStructure);
 144:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:385
    GPIO_Init(GPIOA, &GPIO_InitStructure);
	 
	 // Configure I2C1 pins: SCL and SDA
	 GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7;
	 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
 146:	f88d 3007 	strb.w	r3, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:384
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
    GPIO_Init(GPIOA, &GPIO_InitStructure);
	 
	 // Configure I2C1 pins: SCL and SDA
	 GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7;
	 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 14a:	f88d 8006 	strb.w	r8, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:386
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
	 GPIO_Init(GPIOB, &GPIO_InitStructure);
 14e:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:389
	 
	 // Set GPIO pin B5 as output Push-Pull
	 GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_5;
 152:	f04f 0320 	mov.w	r3, #32	; 0x20
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:392
	 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	 GPIO_Init(GPIOB, &GPIO_InitStructure);
 156:	4648      	mov	r0, r9
 158:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:389
	 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_OD;
	 GPIO_Init(GPIOB, &GPIO_InitStructure);
	 
	 // Set GPIO pin B5 as output Push-Pull
	 GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_5;
 15a:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:390
	 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 15e:	f88d 8006 	strb.w	r8, [sp, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:391
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 162:	f88d b007 	strb.w	fp, [sp, #7]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:392
	 GPIO_Init(GPIOB, &GPIO_InitStructure);
 166:	f7ff fffe 	bl	0 <GPIO_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:393
}   
 16a:	b002      	add	sp, #8
 16c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}
Disassembly of section .text.RCC_Configuration:

00000000 <RCC_Configuration>:
RCC_Configuration():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:230
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_Configuration(void)
{
   0:	b510      	push	{r4, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:233
	 ErrorStatus HSEStartUpStatus;
	 
	 RCC_DeInit();
   2:	f7ff fffe 	bl	0 <RCC_DeInit>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:239
	 
    /* Disable HSI */
//    RCC_HSICmd(ENABLE);
	 
	 /* Enable external oscillator */
	 RCC_HSEConfig(RCC_HSE_ON);
   6:	f44f 3080 	mov.w	r0, #65536	; 0x10000
   a:	f7ff fffe 	bl	0 <RCC_HSEConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:242
	 
	 /* Wait till HSE is ready */
	 HSEStartUpStatus = RCC_WaitForHSEStartUp();
   e:	f7ff fffe 	bl	0 <RCC_WaitForHSEStartUp>
  12:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:246
//	 while( RCC_WaitForHSEStartUp() != SUCCESS );
	 
	 /* Enable Prefetch Buffer */
    FLASH_PrefetchBufferCmd(FLASH_PrefetchBuffer_Enable);
  14:	2010      	movs	r0, #16
  16:	f7ff fffe 	bl	0 <FLASH_PrefetchBufferCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:249

    /* Flash 2 wait state */
    FLASH_SetLatency(FLASH_Latency_2);
  1a:	2002      	movs	r0, #2
  1c:	f7ff fffe 	bl	0 <FLASH_SetLatency>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:252

    /* HCLK = SYSCLK */
    RCC_HCLKConfig(RCC_SYSCLK_Div1);
  20:	2000      	movs	r0, #0
  22:	f7ff fffe 	bl	0 <RCC_HCLKConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:255

    /* PCLK2 = HCLK/1 */
    RCC_PCLK2Config(RCC_HCLK_Div1); 
  26:	2000      	movs	r0, #0
  28:	f7ff fffe 	bl	0 <RCC_PCLK2Config>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:258

    /* PCLK1 = HCLK/2 */
    RCC_PCLK1Config(RCC_HCLK_Div2);
  2c:	f44f 6080 	mov.w	r0, #1024	; 0x400
  30:	f7ff fffe 	bl	0 <RCC_PCLK1Config>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:261

    /* ADCCLK = PCLK2/6 */
    RCC_ADCCLKConfig(RCC_PCLK2_Div6); 
  34:	f44f 4000 	mov.w	r0, #32768	; 0x8000
  38:	f7ff fffe 	bl	0 <RCC_ADCCLKConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:263

	 if( HSEStartUpStatus == SUCCESS )
  3c:	2c01      	cmp	r4, #1
  3e:	d035      	beq.n	ac <RCC_Configuration+0xac>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:270
		  gClockInUse = 'E';
		  RCC_PLLConfig(RCC_PLLSource_HSE_Div1, RCC_PLLMul_9);	// 8 / 1 * 9 = 72 Mhz
	 }
	 else
	 {
		  gClockInUse = 'I';
  40:	f240 0300 	movw	r3, #0	; 0x0
  44:	f2c0 0300 	movt	r3, #0	; 0x0
  48:	2249      	movs	r2, #73
  4a:	701a      	strb	r2, [r3, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:271
		  RCC_PLLConfig(RCC_PLLSource_HSI_Div2, RCC_PLLMul_16);
  4c:	2000      	movs	r0, #0
  4e:	f44f 1160 	mov.w	r1, #3670016	; 0x380000
  52:	f7ff fffe 	bl	0 <RCC_PLLConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:275
	 }
	 
    /* Enable PLL */ 
    RCC_PLLCmd(ENABLE);
  56:	2001      	movs	r0, #1
  58:	f7ff fffe 	bl	0 <RCC_PLLCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:278

    /* Wait till PLL is ready */
    while(RCC_GetFlagStatus(RCC_FLAG_PLLRDY) == RESET)
  5c:	2039      	movs	r0, #57
  5e:	f7ff fffe 	bl	0 <RCC_GetFlagStatus>
  62:	2800      	cmp	r0, #0
  64:	d0fa      	beq.n	5c <RCC_Configuration+0x5c>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:282
     {;}

    /* Select PLL as system clock source */
    RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK);
  66:	2002      	movs	r0, #2
  68:	f7ff fffe 	bl	0 <RCC_SYSCLKConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:285

    /* Wait till PLL is used as system clock source */
    while(RCC_GetSYSCLKSource() != 0x08)
  6c:	f7ff fffe 	bl	0 <RCC_GetSYSCLKSource>
  70:	2808      	cmp	r0, #8
  72:	d1fb      	bne.n	6c <RCC_Configuration+0x6c>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:291
     {;}

    /* Enable peripheral clocks --------------------------------------------------*/

    /* Enable GPIO clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB | RCC_APB2Periph_AFIO | RCC_APB2Periph_USART1, ENABLE);
  74:	2101      	movs	r1, #1
  76:	f244 000d 	movw	r0, #16397	; 0x400d
  7a:	f7ff fffe 	bl	0 <RCC_APB2PeriphClockCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:294
    
    // Enable ADC1 and ADC2 clocks
    RCC_APB2PeriphClockCmd( RCC_APB2Periph_ADC1 | RCC_APB2Periph_ADC2, ENABLE );
  7e:	2101      	movs	r1, #1
  80:	f44f 60c0 	mov.w	r0, #1536	; 0x600
  84:	f7ff fffe 	bl	0 <RCC_APB2PeriphClockCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:297
                             
    // Enable DMA clock
    RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);
  88:	2001      	movs	r0, #1
  8a:	4601      	mov	r1, r0
  8c:	f7ff fffe 	bl	0 <RCC_AHBPeriphClockCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:300
			
	 // Enable TIM2 clock
	 RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
  90:	2001      	movs	r0, #1
  92:	4601      	mov	r1, r0
  94:	f7ff fffe 	bl	0 <RCC_APB1PeriphClockCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:303
			
	 // Enable TIM3 clock
	 RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
  98:	2002      	movs	r0, #2
  9a:	2101      	movs	r1, #1
  9c:	f7ff fffe 	bl	0 <RCC_APB1PeriphClockCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:306
			
	 // Enable i2c1 clock
	 RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C1, ENABLE);
  a0:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
  a4:	2101      	movs	r1, #1
  a6:	f7ff fffe 	bl	0 <RCC_APB1PeriphClockCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:308

}
  aa:	bd10      	pop	{r4, pc}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:265
    /* ADCCLK = PCLK2/6 */
    RCC_ADCCLKConfig(RCC_PCLK2_Div6); 

	 if( HSEStartUpStatus == SUCCESS )
	 {
		  gClockInUse = 'E';
  ac:	f240 0300 	movw	r3, #0	; 0x0
  b0:	f2c0 0300 	movt	r3, #0	; 0x0
  b4:	2245      	movs	r2, #69
  b6:	701a      	strb	r2, [r3, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:266
		  RCC_PLLConfig(RCC_PLLSource_HSE_Div1, RCC_PLLMul_9);	// 8 / 1 * 9 = 72 Mhz
  b8:	f44f 3080 	mov.w	r0, #65536	; 0x10000
  bc:	f44f 11e0 	mov.w	r1, #1835008	; 0x1c0000
  c0:	f7ff fffe 	bl	0 <RCC_PLLConfig>
  c4:	e7c7      	b.n	56 <RCC_PLLConfig+0x56>
  c6:	46c0      	nop			(mov r8, r8)
Disassembly of section .text.Initialize_IMU:

00000000 <Initialize_IMU>:
Initialize_IMU():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:23
* Output         : None
* Return         : None
* Description    : Initializes the system clock and all peripherals of the CHR-6d
*******************************************************************************/
void Initialize_IMU( void )
{
   0:	e92d 46f0 	stmdb	sp!, {r4, r5, r6, r7, r9, sl, lr}
   4:	b09d      	sub	sp, #116
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:32
	 TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
	 I2C_InitTypeDef   I2C_InitStructure;
	 EXTI_InitTypeDef EXTI_InitStructure;
	 	 
	 // System Clocks Configuration
    RCC_Configuration();
   6:	f7ff fffe 	bl	0 <Initialize_IMU>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:35
       
    // NVIC configuration
    NVIC_Configuration();
   a:	f7ff fffe 	bl	0 <Initialize_IMU>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:38

    // Configure the GPIO ports 
    GPIO_Configuration();
   e:	f7ff fffe 	bl	0 <Initialize_IMU>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:41

	 // DMA1 channel1 configuration
    DMA_DeInit(DMA1_Channel1);
  12:	f240 0008 	movw	r0, #8	; 0x8
  16:	f2c4 0002 	movt	r0, #16386	; 0x4002
  1a:	f7ff fffe 	bl	0 <DMA_DeInit>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:42
    DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_Address;
  1e:	f242 434c 	movw	r3, #9292	; 0x244c
  22:	f2c4 0301 	movt	r3, #16385	; 0x4001
  26:	9301      	str	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:43
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)ADC_DualConvertedValueTab;
  28:	f240 0200 	movw	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:45
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
  2c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:53
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
    DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
    DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
    DMA_Init(DMA1_Channel1, &DMA_InitStructure);
  30:	ac01      	add	r4, sp, #4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:43
    GPIO_Configuration();

	 // DMA1 channel1 configuration
    DMA_DeInit(DMA1_Channel1);
    DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_Address;
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)ADC_DualConvertedValueTab;
  32:	f2c0 0200 	movt	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:45
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
  36:	9304      	str	r3, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:53
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
    DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
    DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
    DMA_Init(DMA1_Channel1, &DMA_InitStructure);
  38:	f240 0008 	movw	r0, #8	; 0x8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:48
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)ADC_DualConvertedValueTab;
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
  3c:	f5a3 6360 	sub.w	r3, r3, #3584	; 0xe00
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:44

	 // DMA1 channel1 configuration
    DMA_DeInit(DMA1_Channel1);
    DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_Address;
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)ADC_DualConvertedValueTab;
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
  40:	2500      	movs	r5, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:50
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
    DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
  42:	2620      	movs	r6, #32
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:47
    DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_Address;
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)ADC_DualConvertedValueTab;
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
  44:	f04f 0980 	mov.w	r9, #128	; 0x80
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:53
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
    DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
    DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
    DMA_Init(DMA1_Channel1, &DMA_InitStructure);
  48:	4621      	mov	r1, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:43
    GPIO_Configuration();

	 // DMA1 channel1 configuration
    DMA_DeInit(DMA1_Channel1);
    DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_Address;
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)ADC_DualConvertedValueTab;
  4a:	9202      	str	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:48
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
  4c:	9307      	str	r3, [sp, #28]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:49
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
  4e:	f44f 6200 	mov.w	r2, #2048	; 0x800
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:51
    DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
  52:	f503 53f0 	add.w	r3, r3, #7680	; 0x1e00
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:53
    DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
    DMA_Init(DMA1_Channel1, &DMA_InitStructure);
  56:	f2c4 0002 	movt	r0, #16386	; 0x4002
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:51
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
    DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
  5a:	930a      	str	r3, [sp, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:49
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
  5c:	9208      	str	r2, [sp, #32]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:47
    DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_Address;
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)ADC_DualConvertedValueTab;
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
  5e:	f8cd 9018 	str.w	r9, [sp, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:50
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
    DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
  62:	9609      	str	r6, [sp, #36]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:44

	 // DMA1 channel1 configuration
    DMA_DeInit(DMA1_Channel1);
    DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_Address;
    DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)ADC_DualConvertedValueTab;
    DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
  64:	9503      	str	r5, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:46
    DMA_InitStructure.DMA_BufferSize = CHANNEL_COUNT*SAMPLES_PER_BUFFER;
    DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
  66:	9505      	str	r5, [sp, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:52
    DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
    DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Word;
    DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Word;
    DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
    DMA_InitStructure.DMA_Priority = DMA_Priority_High;
    DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
  68:	950b      	str	r5, [sp, #44]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:53
    DMA_Init(DMA1_Channel1, &DMA_InitStructure);
  6a:	f7ff fffe 	bl	0 <DMA_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:55
    /* Enable DMA1 Channel1 */
    DMA_Cmd(DMA1_Channel1, ENABLE);
  6e:	f240 0008 	movw	r0, #8	; 0x8
  72:	2101      	movs	r1, #1
  74:	f2c4 0002 	movt	r0, #16386	; 0x4002
  78:	f7ff fffe 	bl	0 <DMA_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:58
    
    // Enable the DMA1 interrupt for transfer complete and half-transfer complete on channel 1
    DMA_ITConfig( DMA1_Channel1, DMA_IT_TC, ENABLE );
  7c:	f240 0008 	movw	r0, #8	; 0x8
  80:	2102      	movs	r1, #2
  82:	2201      	movs	r2, #1
  84:	f2c4 0002 	movt	r0, #16386	; 0x4002
  88:	f7ff fffe 	bl	0 <DMA_ITConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:59
    DMA_ITConfig( DMA1_Channel1, DMA_IT_HT, ENABLE );
  8c:	f240 0008 	movw	r0, #8	; 0x8
  90:	2104      	movs	r1, #4
  92:	2201      	movs	r2, #1
  94:	f2c4 0002 	movt	r0, #16386	; 0x4002
  98:	f7ff fffe 	bl	0 <DMA_ITConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:62
	 
	 // USART1 RX DMA1 Channel (triggered by USARTy Rx event) Config 
	 DMA_DeInit(DMA1_Channel5);
  9c:	f240 0058 	movw	r0, #88	; 0x58
  a0:	f2c4 0002 	movt	r0, #16386	; 0x4002
  a4:	f7ff fffe 	bl	0 <DMA_DeInit>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:63
	 DMA_StructInit(&DMA_InitStructure);
  a8:	4620      	mov	r0, r4
  aa:	f7ff fffe 	bl	0 <DMA_StructInit>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:64
	 DMA_InitStructure.DMA_PeripheralBaseAddr = USART1_DR_Base;
  ae:	f643 0304 	movw	r3, #14340	; 0x3804
  b2:	f2c4 0301 	movt	r3, #16385	; 0x4001
  b6:	9301      	str	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:65
	 DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)gRXBuf;
  b8:	f240 0200 	movw	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:69
	 DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
	 DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
	 DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
	 DMA_InitStructure.DMA_BufferSize = RX_BUF_SIZE;
  bc:	2332      	movs	r3, #50
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:74
	 DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
	 DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
	 DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
	 
	 DMA_Init( DMA1_Channel5, &DMA_InitStructure );
  be:	f240 0058 	movw	r0, #88	; 0x58
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:65
	 
	 // USART1 RX DMA1 Channel (triggered by USARTy Rx event) Config 
	 DMA_DeInit(DMA1_Channel5);
	 DMA_StructInit(&DMA_InitStructure);
	 DMA_InitStructure.DMA_PeripheralBaseAddr = USART1_DR_Base;
	 DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)gRXBuf;
  c2:	f2c0 0200 	movt	r2, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:74
	 DMA_InitStructure.DMA_BufferSize = RX_BUF_SIZE;
	 DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
	 DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
	 DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
	 
	 DMA_Init( DMA1_Channel5, &DMA_InitStructure );
  c6:	4621      	mov	r1, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:69
	 DMA_InitStructure.DMA_PeripheralBaseAddr = USART1_DR_Base;
	 DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)gRXBuf;
	 DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
	 DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
	 DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
	 DMA_InitStructure.DMA_BufferSize = RX_BUF_SIZE;
  c8:	9304      	str	r3, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:74
	 DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
	 DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
	 DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
	 
	 DMA_Init( DMA1_Channel5, &DMA_InitStructure );
  ca:	f2c4 0002 	movt	r0, #16386	; 0x4002
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:72
	 DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
	 DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
	 DMA_InitStructure.DMA_BufferSize = RX_BUF_SIZE;
	 DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
	 DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
	 DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
  ce:	f44f 5340 	mov.w	r3, #12288	; 0x3000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:65
	 
	 // USART1 RX DMA1 Channel (triggered by USARTy Rx event) Config 
	 DMA_DeInit(DMA1_Channel5);
	 DMA_StructInit(&DMA_InitStructure);
	 DMA_InitStructure.DMA_PeripheralBaseAddr = USART1_DR_Base;
	 DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)gRXBuf;
  d2:	9202      	str	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:67
	 DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
	 DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
  d4:	f8cd 9018 	str.w	r9, [sp, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:70
	 DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
	 DMA_InitStructure.DMA_BufferSize = RX_BUF_SIZE;
	 DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
  d8:	9609      	str	r6, [sp, #36]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:72
	 DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
	 DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
  da:	930a      	str	r3, [sp, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:66
	 // USART1 RX DMA1 Channel (triggered by USARTy Rx event) Config 
	 DMA_DeInit(DMA1_Channel5);
	 DMA_StructInit(&DMA_InitStructure);
	 DMA_InitStructure.DMA_PeripheralBaseAddr = USART1_DR_Base;
	 DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)gRXBuf;
	 DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;
  dc:	9503      	str	r5, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:68
	 DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
	 DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
  de:	9505      	str	r5, [sp, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:71
	 DMA_InitStructure.DMA_BufferSize = RX_BUF_SIZE;
	 DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
	 DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;
  e0:	950b      	str	r5, [sp, #44]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:74
	 DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;
	 
	 DMA_Init( DMA1_Channel5, &DMA_InitStructure );
  e2:	f7ff fffe 	bl	0 <DMA_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:85
        - One Stop Bit
        - No parity
        - Hardware flow control disabled (RTS and CTS signals)
        - Receive and transmit enabled
    */
    USART_InitStructure.USART_BaudRate = 115200;
  e6:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:93
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;

    /* Configure USART1 */
    USART_Init(USART1, &USART_InitStructure);
  ea:	f643 0000 	movw	r0, #14336	; 0x3800
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:85
        - One Stop Bit
        - No parity
        - Hardware flow control disabled (RTS and CTS signals)
        - Receive and transmit enabled
    */
    USART_InitStructure.USART_BaudRate = 115200;
  ee:	9315      	str	r3, [sp, #84]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:93
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;

    /* Configure USART1 */
    USART_Init(USART1, &USART_InitStructure);
  f0:	f2c4 0001 	movt	r0, #16385	; 0x4001
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:90
    USART_InitStructure.USART_BaudRate = 115200;
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
  f4:	f04f 030c 	mov.w	r3, #12	; 0xc
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:93

    /* Configure USART1 */
    USART_Init(USART1, &USART_InitStructure);
  f8:	a915      	add	r1, sp, #84
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:90
    USART_InitStructure.USART_BaudRate = 115200;
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
    USART_InitStructure.USART_Parity = USART_Parity_No;
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
  fa:	f8ad 305e 	strh.w	r3, [sp, #94]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:86
        - No parity
        - Hardware flow control disabled (RTS and CTS signals)
        - Receive and transmit enabled
    */
    USART_InitStructure.USART_BaudRate = 115200;
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
  fe:	f8ad 5058 	strh.w	r5, [sp, #88]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:87
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
 102:	f8ad 505a 	strh.w	r5, [sp, #90]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:88
    USART_InitStructure.USART_Parity = USART_Parity_No;
 106:	f8ad 505c 	strh.w	r5, [sp, #92]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:89
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 10a:	f8ad 5060 	strh.w	r5, [sp, #96]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:93
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;

    /* Configure USART1 */
    USART_Init(USART1, &USART_InitStructure);
 10e:	f7ff fffe 	bl	0 <USART_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:97

    /* Enable USART1 Receive and Transmit interrupts */
//    USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
    USART_ITConfig(USART1, USART_IT_TC, ENABLE);
 112:	f643 0000 	movw	r0, #14336	; 0x3800
 116:	2201      	movs	r2, #1
 118:	f2c4 0001 	movt	r0, #16385	; 0x4001
 11c:	f240 6126 	movw	r1, #1574	; 0x626
 120:	f7ff fffe 	bl	0 <USART_ITConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:99
	 // Enable USART1 Receive DMA requests
	 USART_DMACmd(USART1, USART_DMAReq_Rx, ENABLE);
 124:	f643 0000 	movw	r0, #14336	; 0x3800
 128:	2201      	movs	r2, #1
 12a:	2140      	movs	r1, #64
 12c:	f2c4 0001 	movt	r0, #16385	; 0x4001
 130:	f7ff fffe 	bl	0 <USART_DMACmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:102
	 
	 // Enable DMA1 USART RX channel
	 DMA_Cmd(DMA1_Channel5, ENABLE);
 134:	f240 0058 	movw	r0, #88	; 0x58
 138:	2101      	movs	r1, #1
 13a:	f2c4 0002 	movt	r0, #16386	; 0x4002
 13e:	f7ff fffe 	bl	0 <DMA_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:105
    
    // Enable USART1
    USART_Cmd(USART1, ENABLE);
 142:	f643 0000 	movw	r0, #14336	; 0x3800
 146:	2101      	movs	r1, #1
 148:	f2c4 0001 	movt	r0, #16385	; 0x4001
 14c:	f7ff fffe 	bl	0 <USART_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:117
    ADC_InitStructure.ADC_ScanConvMode = ENABLE;
    ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
    ADC_InitStructure.ADC_NbrOfChannel = 4;
    ADC_Init(ADC1, &ADC_InitStructure);
 150:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 154:	f242 4000 	movw	r0, #9216	; 0x2400
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:112
	 // Enable internal temperature sensor
//	 ADC_TempSensorVrefintCmd( ENABLE );
	 
    /* ADC1 configuration ------------------------------------------------------*/
    ADC_InitStructure.ADC_Mode = ADC_Mode_RegSimult;
    ADC_InitStructure.ADC_ScanConvMode = ENABLE;
 158:	2401      	movs	r4, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:116
    ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
    ADC_InitStructure.ADC_NbrOfChannel = 4;
 15a:	3e1c      	subs	r6, #28
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:111
    
	 // Enable internal temperature sensor
//	 ADC_TempSensorVrefintCmd( ENABLE );
	 
    /* ADC1 configuration ------------------------------------------------------*/
    ADC_InitStructure.ADC_Mode = ADC_Mode_RegSimult;
 15c:	f44f 27c0 	mov.w	r7, #393216	; 0x60000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:114
    ADC_InitStructure.ADC_ScanConvMode = ENABLE;
    ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
 160:	f44f 2960 	mov.w	r9, #917504	; 0xe0000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:117
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
    ADC_InitStructure.ADC_NbrOfChannel = 4;
    ADC_Init(ADC1, &ADC_InitStructure);
 164:	f2c4 0001 	movt	r0, #16385	; 0x4001
 168:	4651      	mov	r1, sl
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:111
    
	 // Enable internal temperature sensor
//	 ADC_TempSensorVrefintCmd( ENABLE );
	 
    /* ADC1 configuration ------------------------------------------------------*/
    ADC_InitStructure.ADC_Mode = ADC_Mode_RegSimult;
 16a:	970c      	str	r7, [sp, #48]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:112
    ADC_InitStructure.ADC_ScanConvMode = ENABLE;
 16c:	f88d 4034 	strb.w	r4, [sp, #52]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:113
    ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
 170:	f88d 4035 	strb.w	r4, [sp, #53]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:114
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
 174:	f8cd 9038 	str.w	r9, [sp, #56]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:115
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 178:	950f      	str	r5, [sp, #60]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:116
    ADC_InitStructure.ADC_NbrOfChannel = 4;
 17a:	f88d 6040 	strb.w	r6, [sp, #64]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:117
    ADC_Init(ADC1, &ADC_InitStructure);
 17e:	f7ff fffe 	bl	0 <ADC_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:120
    /* ADC1 regular channels configuration */ 
	  
	 ADC_RegularChannelConfig(ADC1, ACCEL_X_CHANNEL, 1, ADC_SAMPLE_TIME);    
 182:	f242 4000 	movw	r0, #9216	; 0x2400
 186:	f2c4 0001 	movt	r0, #16385	; 0x4001
 18a:	2107      	movs	r1, #7
 18c:	4622      	mov	r2, r4
 18e:	4623      	mov	r3, r4
 190:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:121
    ADC_RegularChannelConfig(ADC1, ACCEL_Z_CHANNEL, 2, ADC_SAMPLE_TIME);
 194:	f242 4000 	movw	r0, #9216	; 0x2400
 198:	f2c4 0001 	movt	r0, #16385	; 0x4001
 19c:	2109      	movs	r1, #9
 19e:	2202      	movs	r2, #2
 1a0:	4623      	mov	r3, r4
 1a2:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:122
    ADC_RegularChannelConfig(ADC1, GYRO_Y_CHANNEL, 3, ADC_SAMPLE_TIME);
 1a6:	f242 4000 	movw	r0, #9216	; 0x2400
 1aa:	f2c4 0001 	movt	r0, #16385	; 0x4001
 1ae:	2106      	movs	r1, #6
 1b0:	2203      	movs	r2, #3
 1b2:	4623      	mov	r3, r4
 1b4:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:123
	 ADC_RegularChannelConfig(ADC1, VREF_XY_CHANNEL, 4, ADC_SAMPLE_TIME);
 1b8:	f242 4000 	movw	r0, #9216	; 0x2400
 1bc:	4632      	mov	r2, r6
 1be:	4623      	mov	r3, r4
 1c0:	f2c4 0001 	movt	r0, #16385	; 0x4001
 1c4:	2105      	movs	r1, #5
 1c6:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:126
	
    /* Enable ADC1 DMA */
    ADC_DMACmd(ADC1, ENABLE);
 1ca:	f242 4000 	movw	r0, #9216	; 0x2400
 1ce:	f2c4 0001 	movt	r0, #16385	; 0x4001
 1d2:	4621      	mov	r1, r4
 1d4:	f7ff fffe 	bl	0 <ADC_DMACmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:135
    ADC_InitStructure.ADC_ScanConvMode = ENABLE;
    ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
    ADC_InitStructure.ADC_NbrOfChannel = 4;
    ADC_Init(ADC2, &ADC_InitStructure);
 1d8:	f642 0000 	movw	r0, #10240	; 0x2800
 1dc:	f2c4 0001 	movt	r0, #16385	; 0x4001
 1e0:	4651      	mov	r1, sl
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:129
	
    /* Enable ADC1 DMA */
    ADC_DMACmd(ADC1, ENABLE);

    /* ADC2 configuration ------------------------------------------------------*/
    ADC_InitStructure.ADC_Mode = ADC_Mode_RegSimult;
 1e2:	970c      	str	r7, [sp, #48]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:130
    ADC_InitStructure.ADC_ScanConvMode = ENABLE;
 1e4:	f88d 4034 	strb.w	r4, [sp, #52]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:131
    ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
 1e8:	f88d 4035 	strb.w	r4, [sp, #53]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:132
    ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
 1ec:	f8cd 9038 	str.w	r9, [sp, #56]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:133
    ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 1f0:	950f      	str	r5, [sp, #60]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:134
    ADC_InitStructure.ADC_NbrOfChannel = 4;
 1f2:	f88d 6040 	strb.w	r6, [sp, #64]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:135
    ADC_Init(ADC2, &ADC_InitStructure);
 1f6:	f7ff fffe 	bl	0 <ADC_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:138
    /* ADC2 regular channels configuration */ 
	 
	 ADC_RegularChannelConfig(ADC2, ACCEL_Y_CHANNEL, 1, ADC_SAMPLE_TIME);
 1fa:	f642 0000 	movw	r0, #10240	; 0x2800
 1fe:	f2c4 0001 	movt	r0, #16385	; 0x4001
 202:	2108      	movs	r1, #8
 204:	4622      	mov	r2, r4
 206:	4623      	mov	r3, r4
 208:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:139
    ADC_RegularChannelConfig(ADC2, GYRO_X_CHANNEL, 2, ADC_SAMPLE_TIME);
 20c:	f642 0000 	movw	r0, #10240	; 0x2800
 210:	f2c4 0001 	movt	r0, #16385	; 0x4001
 214:	4631      	mov	r1, r6
 216:	2202      	movs	r2, #2
 218:	4623      	mov	r3, r4
 21a:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:140
    ADC_RegularChannelConfig(ADC2, GYRO_Z_CHANNEL, 3, ADC_SAMPLE_TIME);
 21e:	f642 0000 	movw	r0, #10240	; 0x2800
 222:	f2c4 0001 	movt	r0, #16385	; 0x4001
 226:	4629      	mov	r1, r5
 228:	2203      	movs	r2, #3
 22a:	4623      	mov	r3, r4
 22c:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:141
	 ADC_RegularChannelConfig(ADC2, VREF_XY_CHANNEL, 4, ADC_SAMPLE_TIME);
 230:	f642 0000 	movw	r0, #10240	; 0x2800
 234:	4632      	mov	r2, r6
 236:	4623      	mov	r3, r4
 238:	f2c4 0001 	movt	r0, #16385	; 0x4001
 23c:	2105      	movs	r1, #5
 23e:	f7ff fffe 	bl	0 <ADC_RegularChannelConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:144
	
    /* Enable ADC2 external trigger conversion (to be controlled by ADC1)*/
    ADC_ExternalTrigConvCmd(ADC2, ENABLE);
 242:	f642 0000 	movw	r0, #10240	; 0x2800
 246:	f2c4 0001 	movt	r0, #16385	; 0x4001
 24a:	4621      	mov	r1, r4
 24c:	f7ff fffe 	bl	0 <ADC_ExternalTrigConvCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:147

    /* Enable ADC1 */
    ADC_Cmd(ADC1, ENABLE);
 250:	f242 4000 	movw	r0, #9216	; 0x2400
 254:	f2c4 0001 	movt	r0, #16385	; 0x4001
 258:	4621      	mov	r1, r4
 25a:	f7ff fffe 	bl	0 <ADC_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:149
    /* Enable Vrefint channel17 */
    ADC_TempSensorVrefintCmd(ENABLE);
 25e:	4620      	mov	r0, r4
 260:	f7ff fffe 	bl	0 <ADC_TempSensorVrefintCmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:152

    /* Enable ADC1 reset calibration register */   
    ADC_ResetCalibration(ADC1);
 264:	f242 4000 	movw	r0, #9216	; 0x2400
 268:	f2c4 0001 	movt	r0, #16385	; 0x4001
 26c:	f7ff fffe 	bl	0 <ADC_ResetCalibration>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:154
    /* Check the end of ADC1 reset calibration register */
    while(ADC_GetResetCalibrationStatus(ADC1));
 270:	f242 4000 	movw	r0, #9216	; 0x2400
 274:	f2c4 0001 	movt	r0, #16385	; 0x4001
 278:	f7ff fffe 	bl	0 <ADC_GetResetCalibrationStatus>
 27c:	2800      	cmp	r0, #0
 27e:	d1f7      	bne.n	270 <Initialize_IMU+0x270>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:157

    /* Start ADC1 calibaration */
    ADC_StartCalibration(ADC1);
 280:	f242 4000 	movw	r0, #9216	; 0x2400
 284:	f2c4 0001 	movt	r0, #16385	; 0x4001
 288:	f7ff fffe 	bl	0 <ADC_StartCalibration>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:159
    /* Check the end of ADC1 calibration */
    while(ADC_GetCalibrationStatus(ADC1));
 28c:	f242 4000 	movw	r0, #9216	; 0x2400
 290:	f2c4 0001 	movt	r0, #16385	; 0x4001
 294:	f7ff fffe 	bl	0 <ADC_GetCalibrationStatus>
 298:	2800      	cmp	r0, #0
 29a:	d1f7      	bne.n	28c <Initialize_IMU+0x28c>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:162

    /* Enable ADC2 */
    ADC_Cmd(ADC2, ENABLE);
 29c:	f642 0000 	movw	r0, #10240	; 0x2800
 2a0:	f2c4 0001 	movt	r0, #16385	; 0x4001
 2a4:	2101      	movs	r1, #1
 2a6:	f7ff fffe 	bl	0 <ADC_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:165

    /* Enable ADC2 reset calibaration register */   
    ADC_ResetCalibration(ADC2);
 2aa:	f642 0000 	movw	r0, #10240	; 0x2800
 2ae:	f2c4 0001 	movt	r0, #16385	; 0x4001
 2b2:	f7ff fffe 	bl	0 <ADC_ResetCalibration>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:167
    /* Check the end of ADC2 reset calibration register */
    while(ADC_GetResetCalibrationStatus(ADC2));
 2b6:	f642 0000 	movw	r0, #10240	; 0x2800
 2ba:	f2c4 0001 	movt	r0, #16385	; 0x4001
 2be:	f7ff fffe 	bl	0 <ADC_GetResetCalibrationStatus>
 2c2:	2800      	cmp	r0, #0
 2c4:	d1f7      	bne.n	2b6 <Initialize_IMU+0x2b6>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:170

    /* Start ADC2 calibaration */
    ADC_StartCalibration(ADC2);
 2c6:	f642 0000 	movw	r0, #10240	; 0x2800
 2ca:	f2c4 0001 	movt	r0, #16385	; 0x4001
 2ce:	f7ff fffe 	bl	0 <ADC_StartCalibration>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:172
    /* Check the end of ADC2 calibration */
    while(ADC_GetCalibrationStatus(ADC2));
 2d2:	f642 0000 	movw	r0, #10240	; 0x2800
 2d6:	f2c4 0001 	movt	r0, #16385	; 0x4001
 2da:	f7ff fffe 	bl	0 <ADC_GetCalibrationStatus>
 2de:	4605      	mov	r5, r0
 2e0:	2800      	cmp	r0, #0
 2e2:	d1f6      	bne.n	2d2 <Initialize_IMU+0x2d2>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:186
	 TIM_TimeBaseStructure.TIM_Period = 1000;
	 TIM_TimeBaseStructure.TIM_Prescaler = 1;
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;

	 TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 2e4:	f10d 0466 	add.w	r4, sp, #102	; 0x66
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:181
/*	 TIM_TimeBaseStructure.TIM_Period = 30000;
	 TIM_TimeBaseStructure.TIM_Prescaler = 100;
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
	*/ 
	 TIM_TimeBaseStructure.TIM_Period = 1000;
 2e8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 2ec:	f8ad 306a 	strh.w	r3, [sp, #106]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:183
	 TIM_TimeBaseStructure.TIM_Prescaler = 1;
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 2f0:	f8ad 006c 	strh.w	r0, [sp, #108]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:182
	 TIM_TimeBaseStructure.TIM_Prescaler = 100;
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
	*/ 
	 TIM_TimeBaseStructure.TIM_Period = 1000;
	 TIM_TimeBaseStructure.TIM_Prescaler = 1;
 2f4:	f04f 0301 	mov.w	r3, #1	; 0x1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:184
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 2f8:	f8ad 0068 	strh.w	r0, [sp, #104]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:186

	 TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 2fc:	4621      	mov	r1, r4
 2fe:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:182
	 TIM_TimeBaseStructure.TIM_Prescaler = 100;
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
	*/ 
	 TIM_TimeBaseStructure.TIM_Period = 1000;
	 TIM_TimeBaseStructure.TIM_Prescaler = 1;
 302:	f8ad 3066 	strh.w	r3, [sp, #102]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:186
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;

	 TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 306:	f7ff fffe 	bl	0 <TIM_TimeBaseInit>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:190

	 // Configure Timer3 for prediction loop (used to compute elapsed time between
	 // state measurement updates)
	 TIM_TimeBaseStructure.TIM_Period = 0xFFFF;
 30a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:195
	 TIM_TimeBaseStructure.TIM_Prescaler = 72;
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;

	 TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
 30e:	f240 4000 	movw	r0, #1024	; 0x400
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:190

	 TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);

	 // Configure Timer3 for prediction loop (used to compute elapsed time between
	 // state measurement updates)
	 TIM_TimeBaseStructure.TIM_Period = 0xFFFF;
 312:	f8ad 306a 	strh.w	r3, [sp, #106]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:195
	 TIM_TimeBaseStructure.TIM_Prescaler = 72;
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;

	 TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
 316:	4621      	mov	r1, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:191
	 TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);

	 // Configure Timer3 for prediction loop (used to compute elapsed time between
	 // state measurement updates)
	 TIM_TimeBaseStructure.TIM_Period = 0xFFFF;
	 TIM_TimeBaseStructure.TIM_Prescaler = 72;
 318:	f04f 0348 	mov.w	r3, #72	; 0x48
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:195
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;

	 TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
 31c:	f2c4 0000 	movt	r0, #16384	; 0x4000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:191
	 TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);

	 // Configure Timer3 for prediction loop (used to compute elapsed time between
	 // state measurement updates)
	 TIM_TimeBaseStructure.TIM_Period = 0xFFFF;
	 TIM_TimeBaseStructure.TIM_Prescaler = 72;
 320:	f8ad 3066 	strh.w	r3, [sp, #102]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:192
	 TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 324:	f8ad 506c 	strh.w	r5, [sp, #108]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:193
	 TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 328:	f8ad 5068 	strh.w	r5, [sp, #104]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:195

	 TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
 32c:	f7ff fffe 	bl	0 <TIM_TimeBaseInit>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:198
	 
	 // Pull Self-Test pin low
	 GPIO_WriteBit( GPIOA, GPIO_Pin_13, Bit_RESET );
 330:	f640 0000 	movw	r0, #2048	; 0x800
 334:	462a      	mov	r2, r5
 336:	f2c4 0001 	movt	r0, #16385	; 0x4001
 33a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 33e:	f7ff fffe 	bl	0 <GPIO_WriteBit>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:201
	 
	 // Enable I2C
	 I2C_Cmd(I2C1, ENABLE);
 342:	f245 4000 	movw	r0, #21504	; 0x5400
 346:	2101      	movs	r1, #1
 348:	f2c4 0000 	movt	r0, #16384	; 0x4000
 34c:	f7ff fffe 	bl	0 <I2C_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:205
	 
	 // I2C1 configuration
	 I2C_InitStructure.I2C_Mode = I2C_Mode_I2C;
	 I2C_InitStructure.I2C_DutyCycle = I2C_DutyCycle_2;
 350:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 354:	f8ad 304a 	strh.w	r3, [sp, #74]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:206
	 I2C_InitStructure.I2C_OwnAddress1 = THIS_SLAVE_ADDRESS7;
 358:	f04f 0330 	mov.w	r3, #48	; 0x30
 35c:	f8ad 304c 	strh.w	r3, [sp, #76]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:207
	 I2C_InitStructure.I2C_Ack = I2C_Ack_Enable;
 360:	f44f 6380 	mov.w	r3, #1024	; 0x400
 364:	f8ad 304e 	strh.w	r3, [sp, #78]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:208
	 I2C_InitStructure.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 368:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 36c:	f8ad 3050 	strh.w	r3, [sp, #80]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:209
	 I2C_InitStructure.I2C_ClockSpeed = I2C_CLOCK_SPEED;
 370:	f640 5340 	movw	r3, #3392	; 0xd40
 374:	a91c      	add	r1, sp, #112
 376:	f2c0 0303 	movt	r3, #3	; 0x3
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:210
	 I2C_Init(I2C1, &I2C_InitStructure);
 37a:	f245 4000 	movw	r0, #21504	; 0x5400
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:209
	 I2C_InitStructure.I2C_Mode = I2C_Mode_I2C;
	 I2C_InitStructure.I2C_DutyCycle = I2C_DutyCycle_2;
	 I2C_InitStructure.I2C_OwnAddress1 = THIS_SLAVE_ADDRESS7;
	 I2C_InitStructure.I2C_Ack = I2C_Ack_Enable;
	 I2C_InitStructure.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
	 I2C_InitStructure.I2C_ClockSpeed = I2C_CLOCK_SPEED;
 37e:	f841 3d2c 	str.w	r3, [r1, #-44]!
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:210
	 I2C_Init(I2C1, &I2C_InitStructure);
 382:	f2c4 0000 	movt	r0, #16384	; 0x4000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:204
	 
	 // Enable I2C
	 I2C_Cmd(I2C1, ENABLE);
	 
	 // I2C1 configuration
	 I2C_InitStructure.I2C_Mode = I2C_Mode_I2C;
 386:	f8ad 5048 	strh.w	r5, [sp, #72]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:210
	 I2C_InitStructure.I2C_DutyCycle = I2C_DutyCycle_2;
	 I2C_InitStructure.I2C_OwnAddress1 = THIS_SLAVE_ADDRESS7;
	 I2C_InitStructure.I2C_Ack = I2C_Ack_Enable;
	 I2C_InitStructure.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
	 I2C_InitStructure.I2C_ClockSpeed = I2C_CLOCK_SPEED;
	 I2C_Init(I2C1, &I2C_InitStructure);
 38a:	f7ff fffe 	bl	0 <I2C_Init>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:214
	 
	 // Enable external interrupt 15 (DRDY pin for magnetometer)
	 // Map PA15 to EXTI 15
	 GPIO_EXTILineConfig(GPIO_PortSourceGPIOA, GPIO_PinSource15);
 38e:	4628      	mov	r0, r5
 390:	210f      	movs	r1, #15
 392:	f7ff fffe 	bl	0 <GPIO_EXTILineConfig>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_startup.c:219

    
	 
	 // (Interrupt priority for EXTI line set in NVIC configuration function)
}
 396:	b01d      	add	sp, #116
 398:	e8bd 86f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, pc}
