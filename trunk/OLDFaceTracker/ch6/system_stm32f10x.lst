
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\system_stm32f10x.o:     file format elf32-littlearm
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\system_stm32f10x.o

Disassembly of section .text.SystemInit:

00000000 <SystemInit>:
SystemInit():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:191
  */
void SystemInit (void)
{
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
   0:	f241 0100 	movw	r1, #4096	; 0x1000
   4:	f2c4 0102 	movt	r1, #16386	; 0x4002
   8:	680b      	ldr	r3, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:188
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
   a:	b082      	sub	sp, #8
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:191
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
   c:	f043 0301 	orr.w	r3, r3, #1	; 0x1
  10:	600b      	str	r3, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:197

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#ifndef STM32F10X_CL
  RCC->CFGR &= (uint32_t)0xF8FF0000;
#else
  RCC->CFGR &= (uint32_t)0xF0FF0000;
  12:	684a      	ldr	r2, [r1, #4]
  14:	f240 0300 	movw	r3, #0	; 0x0
  18:	f2cf 03ff 	movt	r3, #61695	; 0xf0ff
  1c:	ea02 0303 	and.w	r3, r2, r3
  20:	604b      	str	r3, [r1, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:201
#endif /* STM32F10X_CL */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
  22:	680a      	ldr	r2, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:217
#else
  /* Reset PLL2ON and PLL3ON bits */
  RCC->CR &= (uint32_t)0xEBFFFFFF;

  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x00FF0000;
  24:	f44f 007f 	mov.w	r0, #16711680	; 0xff0000
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:201
#else
  RCC->CFGR &= (uint32_t)0xF0FF0000;
#endif /* STM32F10X_CL */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
  28:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
  2c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
  30:	600a      	str	r2, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:204

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
  32:	680b      	ldr	r3, [r1, #0]
  34:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
  38:	600b      	str	r3, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:207

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
  3a:	684a      	ldr	r2, [r1, #4]
  3c:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
  40:	604a      	str	r2, [r1, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:214
#ifndef STM32F10X_CL
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000;
#else
  /* Reset PLL2ON and PLL3ON bits */
  RCC->CR &= (uint32_t)0xEBFFFFFF;
  42:	680b      	ldr	r3, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:220

  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x00FF0000;

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000;
  44:	2200      	movs	r2, #0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:214
#ifndef STM32F10X_CL
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000;
#else
  /* Reset PLL2ON and PLL3ON bits */
  RCC->CR &= (uint32_t)0xEBFFFFFF;
  46:	f023 53a0 	bic.w	r3, r3, #335544320	; 0x14000000
  4a:	600b      	str	r3, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:217

  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x00FF0000;
  4c:	6088      	str	r0, [r1, #8]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:220

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000;
  4e:	62ca      	str	r2, [r1, #44]
SetSysClockTo72():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:820
  * @param  None
  * @retval None
  */
static void SetSysClockTo72(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  50:	9201      	str	r2, [sp, #4]
  52:	9200      	str	r2, [sp, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:824
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
  /* Enable HSE */    
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  54:	680b      	ldr	r3, [r1, #0]
  56:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  5a:	600b      	str	r3, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:829
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
  5c:	680b      	ldr	r3, [r1, #0]
  5e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
  62:	9300      	str	r3, [sp, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:830
    StartUpCounter++;  
  64:	9a01      	ldr	r2, [sp, #4]
  66:	3201      	adds	r2, #1
  68:	9201      	str	r2, [sp, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:831
  } while((HSEStatus == 0) && (StartUpCounter != HSEStartUp_TimeOut));
  6a:	9b00      	ldr	r3, [sp, #0]
  6c:	b91b      	cbnz	r3, 76 <SystemInit+0x76>
  6e:	9b01      	ldr	r3, [sp, #4]
  70:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
  74:	d1f2      	bne.n	5c <SystemInit+0x5c>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:833

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
  76:	f241 0300 	movw	r3, #4096	; 0x1000
  7a:	f2c4 0302 	movt	r3, #16386	; 0x4002
  7e:	681a      	ldr	r2, [r3, #0]
  80:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:839
  {
    HSEStatus = (uint32_t)0x01;
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
  84:	bf08      	it	eq
  86:	9200      	streq	r2, [sp, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:833
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
    StartUpCounter++;  
  } while((HSEStatus == 0) && (StartUpCounter != HSEStartUp_TimeOut));

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
  88:	d001      	beq.n	8e <SystemInit+0x8e>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:835
  {
    HSEStatus = (uint32_t)0x01;
  8a:	2301      	movs	r3, #1
  8c:	9300      	str	r3, [sp, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:842
  else
  {
    HSEStatus = (uint32_t)0x00;
  }  

  if (HSEStatus == (uint32_t)0x01)
  8e:	9b00      	ldr	r3, [sp, #0]
  90:	2b01      	cmp	r3, #1
  92:	d000      	beq.n	96 <SystemInit+0x96>
  94:	e7fe      	b.n	94 <SystemInit+0x94>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:845
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
  96:	f242 0000 	movw	r0, #8192	; 0x2000
  9a:	f2c4 0002 	movt	r0, #16386	; 0x4002
  9e:	6803      	ldr	r3, [r0, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:853
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
  a0:	f241 0100 	movw	r1, #4096	; 0x1000
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:845
  }  

  if (HSEStatus == (uint32_t)0x01)
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
  a4:	f043 0310 	orr.w	r3, r3, #16	; 0x10
  a8:	6003      	str	r3, [r0, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:848

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
  aa:	6802      	ldr	r2, [r0, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:853
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
  ac:	f2c4 0102 	movt	r1, #16386	; 0x4002
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:848
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
  b0:	f022 0203 	bic.w	r2, r2, #3	; 0x3
  b4:	6002      	str	r2, [r0, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:849
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
  b6:	6803      	ldr	r3, [r0, #0]
  b8:	f043 0302 	orr.w	r3, r3, #2	; 0x2
  bc:	6003      	str	r3, [r0, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:853

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
  be:	684b      	ldr	r3, [r1, #4]
  c0:	604b      	str	r3, [r1, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:856
      
    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
  c2:	684a      	ldr	r2, [r1, #4]
  c4:	604a      	str	r2, [r1, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:859
    
    /* PCLK1 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
  c6:	684b      	ldr	r3, [r1, #4]
  c8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
  cc:	604b      	str	r3, [r1, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:866
#ifdef STM32F10X_CL
    /* Configure PLLs ------------------------------------------------------*/
    /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
    /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
        
    RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
  ce:	6aca      	ldr	r2, [r1, #44]
  d0:	f24f 0300 	movw	r3, #61440	; 0xf000
  d4:	f6cf 73fe 	movt	r3, #65534	; 0xfffe
  d8:	ea02 0303 	and.w	r3, r2, r3
  dc:	62cb      	str	r3, [r1, #44]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:868
                              RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
    RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
  de:	6aca      	ldr	r2, [r1, #44]
  e0:	f442 3282 	orr.w	r2, r2, #66560	; 0x10400
  e4:	f442 7211 	orr.w	r2, r2, #580	; 0x244
  e8:	62ca      	str	r2, [r1, #44]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:872
                             RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
  
    /* Enable PLL2 */
    RCC->CR |= RCC_CR_PLL2ON;
  ea:	680b      	ldr	r3, [r1, #0]
  ec:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
  f0:	600b      	str	r3, [r1, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:874
    /* Wait till PLL2 is ready */
    while((RCC->CR & RCC_CR_PLL2RDY) == 0)
  f2:	680b      	ldr	r3, [r1, #0]
  f4:	f241 0000 	movw	r0, #4096	; 0x1000
  f8:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
  fc:	f2c4 0002 	movt	r0, #16386	; 0x4002
 100:	d0f7      	beq.n	f2 <SystemInit+0xf2>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:880
    {
    }
    
   
    /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
    RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 102:	6843      	ldr	r3, [r0, #4]
 104:	f423 137c 	bic.w	r3, r3, #4128768	; 0x3f0000
 108:	6043      	str	r3, [r0, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:881
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 10a:	6842      	ldr	r2, [r0, #4]
 10c:	f442 12e8 	orr.w	r2, r2, #1900544	; 0x1d0000
 110:	6042      	str	r2, [r0, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:891
                                        RCC_CFGR_PLLMULL));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 112:	6803      	ldr	r3, [r0, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:894

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 114:	4602      	mov	r2, r0
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:891
                                        RCC_CFGR_PLLMULL));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 116:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 11a:	6003      	str	r3, [r0, #0]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:894

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 11c:	6813      	ldr	r3, [r2, #0]
 11e:	f241 0100 	movw	r1, #4096	; 0x1000
 122:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 126:	f2c4 0102 	movt	r1, #16386	; 0x4002
 12a:	d0f7      	beq.n	11c <SystemInit+0x11c>
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:899
    {
    }
    
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 12c:	684b      	ldr	r3, [r1, #4]
 12e:	f023 0303 	bic.w	r3, r3, #3	; 0x3
 132:	604b      	str	r3, [r1, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:900
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 134:	684a      	ldr	r2, [r1, #4]
 136:	f042 0202 	orr.w	r2, r2, #2	; 0x2
 13a:	604a      	str	r2, [r1, #4]
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:903

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 13c:	460a      	mov	r2, r1
 13e:	6853      	ldr	r3, [r2, #4]
 140:	f003 030c 	and.w	r3, r3, #12	; 0xc
 144:	2b08      	cmp	r3, #8
 146:	d1fa      	bne.n	13e <SystemInit+0x13e>
SystemInit():
C:\Program Files (x86)\Raisonance\Ride\lib\ARM\STM32F10x_LIB_V3.0.1\Libraries\CMSIS\Core\CM3/system_stm32f10x.c:227
    
  /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
  /* Configure the Flash Latency cycles and enable prefetch buffer */
  SetSysClock();

}
 148:	b002      	add	sp, #8
 14a:	4770      	bx	lr
