
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\chr6dm_states.o:     file format elf32-littlearm
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease\chr6dm_states.o

Disassembly of section .text.EKF_Init:

00000000 <EKF_Init>:
EKF_Init():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:26
* Output         : Pre-initialized state estimate structure
* Return         : None
* Description    : Fills an AHRS_states structure with zero initial values.
*******************************************************************************/
void EKF_Init( AHRS_states* estimated_states )
{
   0:	b430      	push	{r4, r5}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:37
	 
	 estimated_states->phi_dot = 0;
	 estimated_states->theta_dot = 0;
	 estimated_states->psi_dot = 0;
	 
	 estimated_states->P.data[0][0] = .01;
   2:	f24d 720a 	movw	r2, #55050	; 0xd70a
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:39
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;	 
   6:	f240 0400 	movw	r4, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:29
*******************************************************************************/
void EKF_Init( AHRS_states* estimated_states )
{
	 int i, j;
	 
	 estimated_states->phi = 0;
   a:	2300      	movs	r3, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:37
	 
	 estimated_states->phi_dot = 0;
	 estimated_states->theta_dot = 0;
	 estimated_states->psi_dot = 0;
	 
	 estimated_states->P.data[0][0] = .01;
   c:	f6c3 4223 	movt	r2, #15395	; 0x3c23
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:39
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;	 
  10:	f2c0 0400 	movt	r4, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:52
				gEstimatedStates.Rmag.data[i][j] = 0;
				gEstimatedStates.P.data[i][j] = 0;
				
				if ( i == j )
				{
					 gEstimatedStates.P.data[i][j] = .1;
  14:	f64c 4ccd 	movw	ip, #52429	; 0xcccd
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:29
*******************************************************************************/
void EKF_Init( AHRS_states* estimated_states )
{
	 int i, j;
	 
	 estimated_states->phi = 0;
  18:	6083      	str	r3, [r0, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:30
	 estimated_states->theta = 0;
  1a:	6043      	str	r3, [r0, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:31
	 estimated_states->psi = 0;
  1c:	6003      	str	r3, [r0, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:33
	 
	 estimated_states->phi_dot = 0;
  1e:	6143      	str	r3, [r0, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:34
	 estimated_states->theta_dot = 0;
  20:	6103      	str	r3, [r0, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:35
	 estimated_states->psi_dot = 0;
  22:	60c3      	str	r3, [r0, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:37
	 
	 estimated_states->P.data[0][0] = .01;
  24:	f8c0 2084 	str.w	r2, [r0, #132]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:39
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;	 
  28:	f8c0 2094 	str.w	r2, [r0, #148]
  2c:	4625      	mov	r5, r4
  2e:	2100      	movs	r1, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:45
	 
	 for (i = 0; i < 3; i++ )
	 {
		  for (j = 0; j < 3; j++)
		  {
				gEstimatedStates.Q.data[i][j] = 0;
  30:	4618      	mov	r0, r3
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:52
				gEstimatedStates.Rmag.data[i][j] = 0;
				gEstimatedStates.P.data[i][j] = 0;
				
				if ( i == j )
				{
					 gEstimatedStates.P.data[i][j] = .1;
  32:	f6c3 5ccc 	movt	ip, #15820	; 0x3dcc
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:41
	 
	 estimated_states->P.data[0][0] = .01;
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;	 
	 
	 for (i = 0; i < 3; i++ )
  36:	008a      	lsls	r2, r1, #2
  38:	010b      	lsls	r3, r1, #4
  3a:	1a9b      	subs	r3, r3, r2
  3c:	3318      	adds	r3, #24
  3e:	18e3      	adds	r3, r4, r3
  40:	2200      	movs	r2, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:50
				gEstimatedStates.Q.data[i][j] = 0;
				gEstimatedStates.Racc.data[i][j] = 0;
				gEstimatedStates.Rmag.data[i][j] = 0;
				gEstimatedStates.P.data[i][j] = 0;
				
				if ( i == j )
  42:	4291      	cmp	r1, r2
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:48
		  for (j = 0; j < 3; j++)
		  {
				gEstimatedStates.Q.data[i][j] = 0;
				gEstimatedStates.Racc.data[i][j] = 0;
				gEstimatedStates.Rmag.data[i][j] = 0;
				gEstimatedStates.P.data[i][j] = 0;
  44:	66d8      	str	r0, [r3, #108]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:52
				
				if ( i == j )
				{
					 gEstimatedStates.P.data[i][j] = .1;
  46:	bf08      	it	eq
  48:	f8c5 c084 	streq.w	ip, [r5, #132]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:43
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;	 
	 
	 for (i = 0; i < 3; i++ )
	 {
		  for (j = 0; j < 3; j++)
  4c:	3201      	adds	r2, #1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:45
		  {
				gEstimatedStates.Q.data[i][j] = 0;
  4e:	6018      	str	r0, [r3, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:46
				gEstimatedStates.Racc.data[i][j] = 0;
  50:	6258      	str	r0, [r3, #36]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:47
				gEstimatedStates.Rmag.data[i][j] = 0;
  52:	6498      	str	r0, [r3, #72]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:43
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;	 
	 
	 for (i = 0; i < 3; i++ )
	 {
		  for (j = 0; j < 3; j++)
  54:	3304      	adds	r3, #4
  56:	2a03      	cmp	r2, #3
  58:	d1f3      	bne.n	42 <EKF_Init+0x42>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:41
	 
	 estimated_states->P.data[0][0] = .01;
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;	 
	 
	 for (i = 0; i < 3; i++ )
  5a:	3101      	adds	r1, #1
  5c:	3510      	adds	r5, #16
  5e:	2903      	cmp	r1, #3
  60:	d1e9      	bne.n	36 <EKF_Init+0x36>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:58
				}
		  }
	 }
 
	 // Set process noise matrix
	 gEstimatedStates.Q.data[0][0] = gConfig.process_covariance;
  62:	f240 0100 	movw	r1, #0	; 0x0
  66:	f2c0 0100 	movt	r1, #0	; 0x0
  6a:	6a4b      	ldr	r3, [r1, #36]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:63
	 gEstimatedStates.Q.data[1][1] = gConfig.process_covariance;
	 gEstimatedStates.Q.data[2][2] = gConfig.process_covariance;
	 
	 // Set measurement noise matrices
	 gEstimatedStates.Racc.data[0][0] = gConfig.accel_covariance;
  6c:	6a8a      	ldr	r2, [r1, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:58
				}
		  }
	 }
 
	 // Set process noise matrix
	 gEstimatedStates.Q.data[0][0] = gConfig.process_covariance;
  6e:	61a3      	str	r3, [r4, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:59
	 gEstimatedStates.Q.data[1][1] = gConfig.process_covariance;
  70:	62a3      	str	r3, [r4, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:60
	 gEstimatedStates.Q.data[2][2] = gConfig.process_covariance;
  72:	63a3      	str	r3, [r4, #56]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:67
	 // Set measurement noise matrices
	 gEstimatedStates.Racc.data[0][0] = gConfig.accel_covariance;
	 gEstimatedStates.Racc.data[1][1] = gConfig.accel_covariance;
	 gEstimatedStates.Racc.data[2][2] = gConfig.accel_covariance;
	 
	 gEstimatedStates.Rmag.data[0][0] = gConfig.mag_covariance;
  74:	6acb      	ldr	r3, [r1, #44]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:63
	 gEstimatedStates.Q.data[0][0] = gConfig.process_covariance;
	 gEstimatedStates.Q.data[1][1] = gConfig.process_covariance;
	 gEstimatedStates.Q.data[2][2] = gConfig.process_covariance;
	 
	 // Set measurement noise matrices
	 gEstimatedStates.Racc.data[0][0] = gConfig.accel_covariance;
  76:	63e2      	str	r2, [r4, #60]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:64
	 gEstimatedStates.Racc.data[1][1] = gConfig.accel_covariance;
  78:	64e2      	str	r2, [r4, #76]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:65
	 gEstimatedStates.Racc.data[2][2] = gConfig.accel_covariance;
  7a:	65e2      	str	r2, [r4, #92]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:67
	 
	 gEstimatedStates.Rmag.data[0][0] = gConfig.mag_covariance;
  7c:	6623      	str	r3, [r4, #96]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:68
	 gEstimatedStates.Rmag.data[1][1] = gConfig.mag_covariance;
  7e:	6723      	str	r3, [r4, #112]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:69
	 gEstimatedStates.Rmag.data[2][2] = gConfig.mag_covariance;
  80:	f8c4 3080 	str.w	r3, [r4, #128]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:70
}
  84:	bc30      	pop	{r4, r5}
  86:	4770      	bx	lr
Disassembly of section .text.unroll_states:

00000000 <unroll_states>:
unroll_states():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:548
* Output         : None
* Return         : None
* Description    : Keeps all angle estimates in the range of -360 to 360 degrees
*******************************************************************************/
void unroll_states( AHRS_states* states )
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:549
	 while( states->phi > 360 )
   2:	6884      	ldr	r4, [r0, #8]
   4:	f240 0100 	movw	r1, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:548
* Output         : None
* Return         : None
* Description    : Keeps all angle estimates in the range of -360 to 360 degrees
*******************************************************************************/
void unroll_states( AHRS_states* states )
{
   8:	4605      	mov	r5, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:549
	 while( states->phi > 360 )
   a:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
   e:	4620      	mov	r0, r4
  10:	f7ff fffe 	bl	0 <__aeabi_fcmpgt>
  14:	b180      	cbz	r0, 38 <unroll_states+0x38>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:551
	 {
		  states->phi -= 360;
  16:	f240 0100 	movw	r1, #0	; 0x0
  1a:	4620      	mov	r0, r4
  1c:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
  20:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:549
* Return         : None
* Description    : Keeps all angle estimates in the range of -360 to 360 degrees
*******************************************************************************/
void unroll_states( AHRS_states* states )
{
	 while( states->phi > 360 )
  24:	f240 0100 	movw	r1, #0	; 0x0
  28:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:551
	 {
		  states->phi -= 360;
  2c:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:549
* Return         : None
* Description    : Keeps all angle estimates in the range of -360 to 360 degrees
*******************************************************************************/
void unroll_states( AHRS_states* states )
{
	 while( states->phi > 360 )
  2e:	f7ff fffe 	bl	0 <__aeabi_fcmpgt>
  32:	2800      	cmp	r0, #0
  34:	d1ef      	bne.n	16 <unroll_states+0x16>
  36:	60ac      	str	r4, [r5, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:553
	 {
		  states->phi -= 360;
	 }
	 while( states->phi < -360 )
  38:	f240 0100 	movw	r1, #0	; 0x0
  3c:	4620      	mov	r0, r4
  3e:	f2cc 31b4 	movt	r1, #50100	; 0xc3b4
  42:	f7ff fffe 	bl	0 <__aeabi_fcmplt>
  46:	b180      	cbz	r0, 6a <unroll_states+0x6a>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:555
	 {
		  states->phi += 360;
  48:	f240 0100 	movw	r1, #0	; 0x0
  4c:	4620      	mov	r0, r4
  4e:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
  52:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:553
{
	 while( states->phi > 360 )
	 {
		  states->phi -= 360;
	 }
	 while( states->phi < -360 )
  56:	f240 0100 	movw	r1, #0	; 0x0
  5a:	f2cc 31b4 	movt	r1, #50100	; 0xc3b4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:555
	 {
		  states->phi += 360;
  5e:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:553
{
	 while( states->phi > 360 )
	 {
		  states->phi -= 360;
	 }
	 while( states->phi < -360 )
  60:	f7ff fffe 	bl	0 <__aeabi_fcmplt>
  64:	2800      	cmp	r0, #0
  66:	d1ef      	bne.n	48 <unroll_states+0x48>
  68:	60ac      	str	r4, [r5, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:558
	 {
		  states->phi += 360;
	 }
	 
	 while( states->theta > 360 )
  6a:	686c      	ldr	r4, [r5, #4]
  6c:	f240 0100 	movw	r1, #0	; 0x0
  70:	4620      	mov	r0, r4
  72:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
  76:	f7ff fffe 	bl	0 <__aeabi_fcmpgt>
  7a:	b180      	cbz	r0, 9e <unroll_states+0x9e>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:560
	 {
		  states->theta -= 360;
  7c:	f240 0100 	movw	r1, #0	; 0x0
  80:	4620      	mov	r0, r4
  82:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
  86:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:558
	 while( states->phi < -360 )
	 {
		  states->phi += 360;
	 }
	 
	 while( states->theta > 360 )
  8a:	f240 0100 	movw	r1, #0	; 0x0
  8e:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:560
	 {
		  states->theta -= 360;
  92:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:558
	 while( states->phi < -360 )
	 {
		  states->phi += 360;
	 }
	 
	 while( states->theta > 360 )
  94:	f7ff fffe 	bl	0 <__aeabi_fcmpgt>
  98:	2800      	cmp	r0, #0
  9a:	d1ef      	bne.n	7c <unroll_states+0x7c>
  9c:	606c      	str	r4, [r5, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:562
	 {
		  states->theta -= 360;
	 }
	 while( states->theta < -360 )
  9e:	f240 0100 	movw	r1, #0	; 0x0
  a2:	4620      	mov	r0, r4
  a4:	f2cc 31b4 	movt	r1, #50100	; 0xc3b4
  a8:	f7ff fffe 	bl	0 <__aeabi_fcmplt>
  ac:	b180      	cbz	r0, d0 <unroll_states+0xd0>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:564
	 {
		  states->theta += 360;
  ae:	f240 0100 	movw	r1, #0	; 0x0
  b2:	4620      	mov	r0, r4
  b4:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
  b8:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:562
	 
	 while( states->theta > 360 )
	 {
		  states->theta -= 360;
	 }
	 while( states->theta < -360 )
  bc:	f240 0100 	movw	r1, #0	; 0x0
  c0:	f2cc 31b4 	movt	r1, #50100	; 0xc3b4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:564
	 {
		  states->theta += 360;
  c4:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:562
	 
	 while( states->theta > 360 )
	 {
		  states->theta -= 360;
	 }
	 while( states->theta < -360 )
  c6:	f7ff fffe 	bl	0 <__aeabi_fcmplt>
  ca:	2800      	cmp	r0, #0
  cc:	d1ef      	bne.n	ae <unroll_states+0xae>
  ce:	606c      	str	r4, [r5, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:567
	 {
		  states->theta += 360;
	 }
	 
	 while( states->psi > 360 )
  d0:	682c      	ldr	r4, [r5, #0]
  d2:	f240 0100 	movw	r1, #0	; 0x0
  d6:	4620      	mov	r0, r4
  d8:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
  dc:	f7ff fffe 	bl	0 <__aeabi_fcmpgt>
  e0:	b180      	cbz	r0, 104 <unroll_states+0x104>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:569
	 {
		  states->psi -= 360;
  e2:	f240 0100 	movw	r1, #0	; 0x0
  e6:	4620      	mov	r0, r4
  e8:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
  ec:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:567
	 while( states->theta < -360 )
	 {
		  states->theta += 360;
	 }
	 
	 while( states->psi > 360 )
  f0:	f240 0100 	movw	r1, #0	; 0x0
  f4:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:569
	 {
		  states->psi -= 360;
  f8:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:567
	 while( states->theta < -360 )
	 {
		  states->theta += 360;
	 }
	 
	 while( states->psi > 360 )
  fa:	f7ff fffe 	bl	0 <__aeabi_fcmpgt>
  fe:	2800      	cmp	r0, #0
 100:	d1ef      	bne.n	e2 <unroll_states+0xe2>
 102:	602c      	str	r4, [r5, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:571
	 {
		  states->psi -= 360;
	 }
	 while( states->psi < -360 )
 104:	f240 0100 	movw	r1, #0	; 0x0
 108:	4620      	mov	r0, r4
 10a:	f2cc 31b4 	movt	r1, #50100	; 0xc3b4
 10e:	f7ff fffe 	bl	0 <__aeabi_fcmplt>
 112:	b180      	cbz	r0, 136 <unroll_states+0x136>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:573
	 {
		  states->psi += 360;
 114:	f240 0100 	movw	r1, #0	; 0x0
 118:	4620      	mov	r0, r4
 11a:	f2c4 31b4 	movt	r1, #17332	; 0x43b4
 11e:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:571
	 
	 while( states->psi > 360 )
	 {
		  states->psi -= 360;
	 }
	 while( states->psi < -360 )
 122:	f240 0100 	movw	r1, #0	; 0x0
 126:	f2cc 31b4 	movt	r1, #50100	; 0xc3b4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:573
	 {
		  states->psi += 360;
 12a:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:571
	 
	 while( states->psi > 360 )
	 {
		  states->psi -= 360;
	 }
	 while( states->psi < -360 )
 12c:	f7ff fffe 	bl	0 <__aeabi_fcmplt>
 130:	2800      	cmp	r0, #0
 132:	d1ef      	bne.n	114 <__aeabi_fcmplt+0x114>
 134:	602c      	str	r4, [r5, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:576
	 {
		  states->psi += 360;
	 }
	 
 136:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.EKF_Update:

00000000 <EKF_Update>:
EKF_Update():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:284
						 and magnetic sensors to correct yaw errors.  Compensation is
						 only applied when new data is available, as specified by the
						 new_mag_data and new_accel_data flags in the sensor_data structure.
*******************************************************************************/
void EKF_Update( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b0ef      	sub	sp, #444
   6:	4683      	mov	fp, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:287
	 fmat3x3 R, L, C, Ctrans, PCtrans, LC, temp, I;
	 
	 CreateIdentity3x3( &I );
   8:	a81a      	add	r0, sp, #104
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:284
						 and magnetic sensors to correct yaw errors.  Compensation is
						 only applied when new data is available, as specified by the
						 new_mag_data and new_accel_data flags in the sensor_data structure.
*******************************************************************************/
void EKF_Update( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
   a:	9116      	str	r1, [sp, #88]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:287
	 fmat3x3 R, L, C, Ctrans, PCtrans, LC, temp, I;
	 
	 CreateIdentity3x3( &I );
   c:	f7ff fffe 	bl	0 <CreateIdentity3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:290
	 
	 // If new accelerometer data is available, perform update
	 if( sensor_data->new_accel_data && (gConfig.EKF_config & ACCEL_UPDATE_ENABLED) )
  10:	9a16      	ldr	r2, [sp, #88]
  12:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
  16:	b14b      	cbz	r3, 16 <gConfig+0x16>
  18:	f240 0700 	movw	r7, #0	; 0x0
  1c:	f2c0 0700 	movt	r7, #0	; 0x0
  20:	f897 3020 	ldrb.w	r3, [r7, #32]
  24:	f013 0f02 	tst.w	r3, #2	; 0x2
  28:	f040 81a9 	bne.w	37e <EKF_Update+0x37e>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:409
		  // "Unroll" angle estimates to be in the range from -360 to 360 degrees
		  unroll_states( estimated_states );
	 }
	 
	 // If new magnetometer data is available, perform update
	 if( sensor_data->new_mag_data && (gConfig.EKF_config & MAG_UPDATE_ENABLED) )
  2c:	9a16      	ldr	r2, [sp, #88]
  2e:	f9b2 3014 	ldrsh.w	r3, [r2, #20]
  32:	b143      	cbz	r3, 14 <gConfig+0x14>
  34:	f240 0700 	movw	r7, #0	; 0x0
  38:	f2c0 0700 	movt	r7, #0	; 0x0
  3c:	f897 3020 	ldrb.w	r3, [r7, #32]
  40:	f013 0f01 	tst.w	r3, #1	; 0x1
  44:	d102      	bne.n	4c <EKF_Update+0x4c>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:538
		  estimated_states->psi = estimated_states->psi + correction.data[2];
		  
		  // "Unroll" angle estimates to be in the range from -360 to 360 degrees
		  unroll_states( estimated_states );
	 }
}
  46:	b06f      	add	sp, #444
  48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:411
	 }
	 
	 // If new magnetometer data is available, perform update
	 if( sensor_data->new_mag_data && (gConfig.EKF_config & MAG_UPDATE_ENABLED) )
	 {
		  sensor_data->new_mag_data = 0;
  4c:	f04f 0300 	mov.w	r3, #0	; 0x0
  50:	8293      	strh	r3, [r2, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:417
		  
		  float theta = estimated_states->theta;
		  float phi = estimated_states->phi;
		  float psi = estimated_states->psi;
		  
		  float cos_phi = cos(phi*3.14159/180);
  52:	f8db 0008 	ldr.w	r0, [fp, #8]
  56:	f7ff fffe 	bl	0 <__aeabi_f2d>
  5a:	a3b1      	add	r3, pc, #708	(adr r3, 320 <EKF_Update+0x320>)
  5c:	e9d3 2300 	ldrd	r2, r3, [r3]
  60:	f7ff fffe 	bl	0 <__aeabi_dmul>
  64:	a3b0      	add	r3, pc, #704	(adr r3, 328 <EKF_Update+0x328>)
  66:	e9d3 2300 	ldrd	r2, r3, [r3]
  6a:	f7ff fffe 	bl	0 <__aeabi_ddiv>
  6e:	e9cd 0106 	strd	r0, r1, [sp, #24]
  72:	f7ff fffe 	bl	0 <cos>
  76:	f7ff fffe 	bl	0 <__aeabi_d2f>
  7a:	9005      	str	r0, [sp, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:418
		  float cos_theta = cos(theta*3.14159/180);
  7c:	f8db 0004 	ldr.w	r0, [fp, #4]
  80:	f7ff fffe 	bl	0 <__aeabi_f2d>
  84:	a3a6      	add	r3, pc, #664	(adr r3, 320 <EKF_Update+0x320>)
  86:	e9d3 2300 	ldrd	r2, r3, [r3]
  8a:	f7ff fffe 	bl	0 <__aeabi_dmul>
  8e:	a3a6      	add	r3, pc, #664	(adr r3, 328 <EKF_Update+0x328>)
  90:	e9d3 2300 	ldrd	r2, r3, [r3]
  94:	f7ff fffe 	bl	0 <__aeabi_ddiv>
  98:	4680      	mov	r8, r0
  9a:	4689      	mov	r9, r1
  9c:	f7ff fffe 	bl	0 <cos>
  a0:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:419
		  float cos_psi = cos(psi*3.14159/180);
  a4:	465a      	mov	r2, fp
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:418
		  float theta = estimated_states->theta;
		  float phi = estimated_states->phi;
		  float psi = estimated_states->psi;
		  
		  float cos_phi = cos(phi*3.14159/180);
		  float cos_theta = cos(theta*3.14159/180);
  a6:	9004      	str	r0, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:419
		  float cos_psi = cos(psi*3.14159/180);
  a8:	f852 0b84 	ldr.w	r0, [r2], #132
  ac:	9219      	str	r2, [sp, #100]
  ae:	f7ff fffe 	bl	0 <__aeabi_f2d>
  b2:	a39b      	add	r3, pc, #620	(adr r3, 320 <EKF_Update+0x320>)
  b4:	e9d3 2300 	ldrd	r2, r3, [r3]
  b8:	f7ff fffe 	bl	0 <__aeabi_dmul>
  bc:	a39a      	add	r3, pc, #616	(adr r3, 328 <EKF_Update+0x328>)
  be:	e9d3 2300 	ldrd	r2, r3, [r3]
  c2:	f7ff fffe 	bl	0 <__aeabi_ddiv>
  c6:	4604      	mov	r4, r0
  c8:	460d      	mov	r5, r1
  ca:	f7ff fffe 	bl	0 <cos>
  ce:	f7ff fffe 	bl	0 <__aeabi_d2f>
  d2:	9003      	str	r0, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:421
		  
		  float sin_phi = sin(phi*3.14159/180);
  d4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  d8:	f7ff fffe 	bl	0 <sin>
  dc:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:422
		  float sin_theta = sin(theta*3.14159/180);
  e0:	4649      	mov	r1, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:421
		  
		  float cos_phi = cos(phi*3.14159/180);
		  float cos_theta = cos(theta*3.14159/180);
		  float cos_psi = cos(psi*3.14159/180);
		  
		  float sin_phi = sin(phi*3.14159/180);
  e2:	9002      	str	r0, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:422
		  float sin_theta = sin(theta*3.14159/180);
  e4:	4640      	mov	r0, r8
  e6:	f7ff fffe 	bl	0 <sin>
  ea:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:423
		  float sin_psi = sin(psi*3.14159/180);
  ee:	4629      	mov	r1, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:422
		  float cos_phi = cos(phi*3.14159/180);
		  float cos_theta = cos(theta*3.14159/180);
		  float cos_psi = cos(psi*3.14159/180);
		  
		  float sin_phi = sin(phi*3.14159/180);
		  float sin_theta = sin(theta*3.14159/180);
  f0:	9001      	str	r0, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:423
		  float sin_psi = sin(psi*3.14159/180);
  f2:	4620      	mov	r0, r4
  f4:	f7ff fffe 	bl	0 <sin>
  f8:	f7ff fffe 	bl	0 <__aeabi_d2f>
  fc:	4680      	mov	r8, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:427
		  
		  // Compute magnetic field reference vector
		  fvect3x1 mag_ref;
		  mag_ref.data[0] = (float)gConfig.mag_ref_vector[0];
  fe:	f9b7 009c 	ldrsh.w	r0, [r7, #156]
 102:	f7ff fffe 	bl	0 <__aeabi_i2f>
 106:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:428
		  mag_ref.data[1] = (float)gConfig.mag_ref_vector[1];
 108:	f9b7 009e 	ldrsh.w	r0, [r7, #158]
 10c:	f7ff fffe 	bl	0 <__aeabi_i2f>
 110:	4605      	mov	r5, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:429
		  mag_ref.data[2] = (float)gConfig.mag_ref_vector[2];
 112:	f9b7 00a0 	ldrsh.w	r0, [r7, #160]
 116:	f7ff fffe 	bl	0 <__aeabi_i2f>
 11a:	4606      	mov	r6, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:433
		  
		  
		  // Subtract magnetic field bias vector
		  mag_ref.data[0] = mag_ref.data[0] - (float)gConfig.x_mag_bias;
 11c:	f9b7 001a 	ldrsh.w	r0, [r7, #26]
 120:	f7ff fffe 	bl	0 <__aeabi_i2f>
 124:	4601      	mov	r1, r0
 126:	4620      	mov	r0, r4
 128:	f7ff fffe 	bl	0 <__aeabi_fsub>
 12c:	9068      	str	r0, [sp, #416]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:434
		  mag_ref.data[1] = mag_ref.data[1] - (float)gConfig.y_mag_bias;
 12e:	f9b7 001c 	ldrsh.w	r0, [r7, #28]
 132:	f7ff fffe 	bl	0 <__aeabi_i2f>
 136:	4601      	mov	r1, r0
 138:	4628      	mov	r0, r5
 13a:	f7ff fffe 	bl	0 <__aeabi_fsub>
 13e:	9069      	str	r0, [sp, #420]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:435
		  mag_ref.data[2] = mag_ref.data[2] - (float)gConfig.z_mag_bias;
 140:	f9b7 001e 	ldrsh.w	r0, [r7, #30]
 144:	f7ff fffe 	bl	0 <__aeabi_i2f>
 148:	4601      	mov	r1, r0
 14a:	4630      	mov	r0, r6
 14c:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:438
		  
		  // Apply mag. calibration matrix to mag reference vector
		  MatVectMult3( &gConfig.mag_cal, &mag_ref, &mag_ref );
 150:	f50d 79d0 	add.w	r9, sp, #416	; 0x1a0
 154:	464a      	mov	r2, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:435
		  
		  
		  // Subtract magnetic field bias vector
		  mag_ref.data[0] = mag_ref.data[0] - (float)gConfig.x_mag_bias;
		  mag_ref.data[1] = mag_ref.data[1] - (float)gConfig.y_mag_bias;
		  mag_ref.data[2] = mag_ref.data[2] - (float)gConfig.z_mag_bias;
 156:	906a      	str	r0, [sp, #424]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:438
		  
		  // Apply mag. calibration matrix to mag reference vector
		  MatVectMult3( &gConfig.mag_cal, &mag_ref, &mag_ref );
 158:	4649      	mov	r1, r9
 15a:	f107 0078 	add.w	r0, r7, #120	; 0x78
 15e:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:442
		  
		  // Compute C based on magnetic field data in inertial frame
		  float mx = mag_ref.data[0];
		  float my = mag_ref.data[1];
 162:	f8dd a1a4 	ldr.w	sl, [sp, #420]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:445
		  float mz = mag_ref.data[2];
		  
		  C.data[0][0] = 0;
 166:	2500      	movs	r5, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:447
		  C.data[0][1] = 0;
		  C.data[0][2] = my*cos_psi - mx*sin_psi;
 168:	9903      	ldr	r1, [sp, #12]
 16a:	4650      	mov	r0, sl
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:445
		  // Compute C based on magnetic field data in inertial frame
		  float mx = mag_ref.data[0];
		  float my = mag_ref.data[1];
		  float mz = mag_ref.data[2];
		  
		  C.data[0][0] = 0;
 16c:	9547      	str	r5, [sp, #284]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:446
		  C.data[0][1] = 0;
 16e:	9548      	str	r5, [sp, #288]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:447
		  C.data[0][2] = my*cos_psi - mx*sin_psi;
 170:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:441
		  
		  // Apply mag. calibration matrix to mag reference vector
		  MatVectMult3( &gConfig.mag_cal, &mag_ref, &mag_ref );
		  
		  // Compute C based on magnetic field data in inertial frame
		  float mx = mag_ref.data[0];
 174:	9c68      	ldr	r4, [sp, #416]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:447
		  float my = mag_ref.data[1];
		  float mz = mag_ref.data[2];
		  
		  C.data[0][0] = 0;
		  C.data[0][1] = 0;
		  C.data[0][2] = my*cos_psi - mx*sin_psi;
 176:	4606      	mov	r6, r0
 178:	4641      	mov	r1, r8
 17a:	4620      	mov	r0, r4
 17c:	f7ff fffe 	bl	0 <__aeabi_fmul>
 180:	4601      	mov	r1, r0
 182:	4630      	mov	r0, r6
 184:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:451
		  
		  C.data[1][0] = 0;
		  C.data[1][1] = 0;
		  C.data[1][2] = -mx*cos_psi - my*sin_psi;
 188:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
 18c:	9903      	ldr	r1, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:447
		  float my = mag_ref.data[1];
		  float mz = mag_ref.data[2];
		  
		  C.data[0][0] = 0;
		  C.data[0][1] = 0;
		  C.data[0][2] = my*cos_psi - mx*sin_psi;
 18e:	9049      	str	r0, [sp, #292]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:451
		  
		  C.data[1][0] = 0;
		  C.data[1][1] = 0;
		  C.data[1][2] = -mx*cos_psi - my*sin_psi;
 190:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:449
		  
		  C.data[0][0] = 0;
		  C.data[0][1] = 0;
		  C.data[0][2] = my*cos_psi - mx*sin_psi;
		  
		  C.data[1][0] = 0;
 192:	954a      	str	r5, [sp, #296]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:450
		  C.data[1][1] = 0;
 194:	954b      	str	r5, [sp, #300]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:451
		  C.data[1][2] = -mx*cos_psi - my*sin_psi;
 196:	f7ff fffe 	bl	0 <__aeabi_fmul>
 19a:	4641      	mov	r1, r8
 19c:	4604      	mov	r4, r0
 19e:	4650      	mov	r0, sl
 1a0:	f7ff fffe 	bl	0 <__aeabi_fmul>
 1a4:	4601      	mov	r1, r0
 1a6:	4620      	mov	r0, r4
 1a8:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:458
		  C.data[2][0] = 0;
		  C.data[2][1] = 0;
		  C.data[2][2] = 0;
		  
		  // Rotate reference vector into vehicle-1 frame
		  R.data[0][0] = cos_psi;
 1ac:	9b03      	ldr	r3, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:470
		  
		  R.data[2][0] = 0;
		  R.data[2][1] = 0;
		  R.data[2][2] = 1;
		  
		  MatVectMult3( &R, &mag_ref, &mag_ref );		  
 1ae:	f50d 7ab2 	add.w	sl, sp, #356	; 0x164
 1b2:	4649      	mov	r1, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:451
		  C.data[0][1] = 0;
		  C.data[0][2] = my*cos_psi - mx*sin_psi;
		  
		  C.data[1][0] = 0;
		  C.data[1][1] = 0;
		  C.data[1][2] = -mx*cos_psi - my*sin_psi;
 1b4:	904c      	str	r0, [sp, #304]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:458
		  C.data[2][0] = 0;
		  C.data[2][1] = 0;
		  C.data[2][2] = 0;
		  
		  // Rotate reference vector into vehicle-1 frame
		  R.data[0][0] = cos_psi;
 1b6:	9359      	str	r3, [sp, #356]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:459
		  R.data[0][1] = sin_psi;
 1b8:	f8cd 8168 	str.w	r8, [sp, #360]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:463
		  R.data[0][2] = 0;
		  
		  R.data[1][0] = -sin_psi;
		  R.data[1][1] = cos_psi;
 1bc:	935d      	str	r3, [sp, #372]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:470
		  
		  R.data[2][0] = 0;
		  R.data[2][1] = 0;
		  R.data[2][2] = 1;
		  
		  MatVectMult3( &R, &mag_ref, &mag_ref );		  
 1be:	464a      	mov	r2, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:468
		  R.data[1][1] = cos_psi;
		  R.data[1][2] = 0;
		  
		  R.data[2][0] = 0;
		  R.data[2][1] = 0;
		  R.data[2][2] = 1;
 1c0:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:462
		  // Rotate reference vector into vehicle-1 frame
		  R.data[0][0] = cos_psi;
		  R.data[0][1] = sin_psi;
		  R.data[0][2] = 0;
		  
		  R.data[1][0] = -sin_psi;
 1c4:	f108 4800 	add.w	r8, r8, #2147483648	; 0x80000000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:470
		  
		  R.data[2][0] = 0;
		  R.data[2][1] = 0;
		  R.data[2][2] = 1;
		  
		  MatVectMult3( &R, &mag_ref, &mag_ref );		  
 1c8:	4650      	mov	r0, sl
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:468
		  R.data[1][1] = cos_psi;
		  R.data[1][2] = 0;
		  
		  R.data[2][0] = 0;
		  R.data[2][1] = 0;
		  R.data[2][2] = 1;
 1ca:	9361      	str	r3, [sp, #388]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:453
		  
		  C.data[1][0] = 0;
		  C.data[1][1] = 0;
		  C.data[1][2] = -mx*cos_psi - my*sin_psi;
		  
		  C.data[2][0] = 0;
 1cc:	954d      	str	r5, [sp, #308]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:454
		  C.data[2][1] = 0;
 1ce:	954e      	str	r5, [sp, #312]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:455
		  C.data[2][2] = 0;
 1d0:	954f      	str	r5, [sp, #316]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:460
		  
		  // Rotate reference vector into vehicle-1 frame
		  R.data[0][0] = cos_psi;
		  R.data[0][1] = sin_psi;
		  R.data[0][2] = 0;
 1d2:	955b      	str	r5, [sp, #364]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:462
		  
		  R.data[1][0] = -sin_psi;
 1d4:	f8cd 8170 	str.w	r8, [sp, #368]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:464
		  R.data[1][1] = cos_psi;
		  R.data[1][2] = 0;
 1d8:	955e      	str	r5, [sp, #376]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:466
		  
		  R.data[2][0] = 0;
 1da:	955f      	str	r5, [sp, #380]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:467
		  R.data[2][1] = 0;
 1dc:	9560      	str	r5, [sp, #384]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:470
		  R.data[2][2] = 1;
		  
		  MatVectMult3( &R, &mag_ref, &mag_ref );		  
 1de:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:474
		  
		  fvect3x1 mag_vect, correction;
		  // Get magnetic field measurement
		  mag_vect.data[0] = (float)sensor_data->mag_x;
 1e2:	9a16      	ldr	r2, [sp, #88]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:485
		  mag_vect.data[0] = mag_vect.data[0] - (float)gConfig.x_mag_bias;
		  mag_vect.data[1] = mag_vect.data[1] - (float)gConfig.y_mag_bias;
		  mag_vect.data[2] = mag_vect.data[2] - (float)gConfig.z_mag_bias;
		  
		  // Apply mag calibration matrix to sensor data
		  MatVectMult3( &gConfig.mag_cal, &mag_vect, &mag_vect );
 1e4:	f50d 79ca 	add.w	r9, sp, #404	; 0x194
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:474
		  
		  MatVectMult3( &R, &mag_ref, &mag_ref );		  
		  
		  fvect3x1 mag_vect, correction;
		  // Get magnetic field measurement
		  mag_vect.data[0] = (float)sensor_data->mag_x;
 1e8:	f9b2 000e 	ldrsh.w	r0, [r2, #14]
 1ec:	f7ff fffe 	bl	0 <__aeabi_i2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:475
		  mag_vect.data[1] = (float)sensor_data->mag_y;
 1f0:	9b16      	ldr	r3, [sp, #88]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:474
		  
		  MatVectMult3( &R, &mag_ref, &mag_ref );		  
		  
		  fvect3x1 mag_vect, correction;
		  // Get magnetic field measurement
		  mag_vect.data[0] = (float)sensor_data->mag_x;
 1f2:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:475
		  mag_vect.data[1] = (float)sensor_data->mag_y;
 1f4:	f9b3 0010 	ldrsh.w	r0, [r3, #16]
 1f8:	f7ff fffe 	bl	0 <__aeabi_i2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:476
		  mag_vect.data[2] = (float)sensor_data->mag_z;
 1fc:	9a16      	ldr	r2, [sp, #88]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:475
		  MatVectMult3( &R, &mag_ref, &mag_ref );		  
		  
		  fvect3x1 mag_vect, correction;
		  // Get magnetic field measurement
		  mag_vect.data[0] = (float)sensor_data->mag_x;
		  mag_vect.data[1] = (float)sensor_data->mag_y;
 1fe:	4606      	mov	r6, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:476
		  mag_vect.data[2] = (float)sensor_data->mag_z;
 200:	f9b2 0012 	ldrsh.w	r0, [r2, #18]
 204:	f7ff fffe 	bl	0 <__aeabi_i2f>
 208:	4680      	mov	r8, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:480
		  
		  
		  // Subtract magnetic field bias
		  mag_vect.data[0] = mag_vect.data[0] - (float)gConfig.x_mag_bias;
 20a:	f9b7 001a 	ldrsh.w	r0, [r7, #26]
 20e:	f7ff fffe 	bl	0 <__aeabi_i2f>
 212:	4601      	mov	r1, r0
 214:	4620      	mov	r0, r4
 216:	f7ff fffe 	bl	0 <__aeabi_fsub>
 21a:	9065      	str	r0, [sp, #404]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:481
		  mag_vect.data[1] = mag_vect.data[1] - (float)gConfig.y_mag_bias;
 21c:	f9b7 001c 	ldrsh.w	r0, [r7, #28]
 220:	f7ff fffe 	bl	0 <__aeabi_i2f>
 224:	4601      	mov	r1, r0
 226:	4630      	mov	r0, r6
 228:	f7ff fffe 	bl	0 <__aeabi_fsub>
 22c:	9066      	str	r0, [sp, #408]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:482
		  mag_vect.data[2] = mag_vect.data[2] - (float)gConfig.z_mag_bias;
 22e:	f9b7 001e 	ldrsh.w	r0, [r7, #30]
 232:	f7ff fffe 	bl	0 <__aeabi_i2f>
 236:	4601      	mov	r1, r0
 238:	4640      	mov	r0, r8
 23a:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:485
		  
		  // Apply mag calibration matrix to sensor data
		  MatVectMult3( &gConfig.mag_cal, &mag_vect, &mag_vect );
 23e:	464a      	mov	r2, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:482
		  
		  
		  // Subtract magnetic field bias
		  mag_vect.data[0] = mag_vect.data[0] - (float)gConfig.x_mag_bias;
		  mag_vect.data[1] = mag_vect.data[1] - (float)gConfig.y_mag_bias;
		  mag_vect.data[2] = mag_vect.data[2] - (float)gConfig.z_mag_bias;
 240:	9067      	str	r0, [sp, #412]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:485
		  
		  // Apply mag calibration matrix to sensor data
		  MatVectMult3( &gConfig.mag_cal, &mag_vect, &mag_vect );
 242:	4649      	mov	r1, r9
 244:	f107 0078 	add.w	r0, r7, #120	; 0x78
 248:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:494
		  /*
		  [  cos(theta), sin(phi)*sin(theta), cos(phi)*sin(theta)]
		  [           0,            cos(phi),           -sin(phi)]
		  [ -sin(theta), cos(theta)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_theta;
 24c:	9b04      	ldr	r3, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:495
		  R.data[0][1] = sin_phi*sin_theta;
 24e:	9901      	ldr	r1, [sp, #4]
 250:	9802      	ldr	r0, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:494
		  /*
		  [  cos(theta), sin(phi)*sin(theta), cos(phi)*sin(theta)]
		  [           0,            cos(phi),           -sin(phi)]
		  [ -sin(theta), cos(theta)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_theta;
 252:	9359      	str	r3, [sp, #356]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:495
		  R.data[0][1] = sin_phi*sin_theta;
 254:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:496
		  R.data[0][2] = cos_phi*sin_theta;
 258:	9901      	ldr	r1, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:495
		  [  cos(theta), sin(phi)*sin(theta), cos(phi)*sin(theta)]
		  [           0,            cos(phi),           -sin(phi)]
		  [ -sin(theta), cos(theta)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_theta;
		  R.data[0][1] = sin_phi*sin_theta;
 25a:	905a      	str	r0, [sp, #360]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:496
		  R.data[0][2] = cos_phi*sin_theta;
 25c:	9805      	ldr	r0, [sp, #20]
 25e:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:499
		  
		  R.data[1][0] = 0;
		  R.data[1][1] = cos_phi;
 262:	9a05      	ldr	r2, [sp, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:503
		  R.data[1][2] = -sin_phi;
		  
		  R.data[2][0] = -sin_theta;
		  R.data[2][1] = cos_theta*sin_phi;
 264:	9902      	ldr	r1, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:499
		  R.data[0][0] = cos_theta;
		  R.data[0][1] = sin_phi*sin_theta;
		  R.data[0][2] = cos_phi*sin_theta;
		  
		  R.data[1][0] = 0;
		  R.data[1][1] = cos_phi;
 266:	925d      	str	r2, [sp, #372]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:500
		  R.data[1][2] = -sin_phi;
 268:	9a02      	ldr	r2, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:496
		  [           0,            cos(phi),           -sin(phi)]
		  [ -sin(theta), cos(theta)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_theta;
		  R.data[0][1] = sin_phi*sin_theta;
		  R.data[0][2] = cos_phi*sin_theta;
 26a:	905b      	str	r0, [sp, #364]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:500
		  
		  R.data[1][0] = 0;
		  R.data[1][1] = cos_phi;
		  R.data[1][2] = -sin_phi;
 26c:	f102 4300 	add.w	r3, r2, #2147483648	; 0x80000000
 270:	935e      	str	r3, [sp, #376]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:502
		  
		  R.data[2][0] = -sin_theta;
 272:	9b01      	ldr	r3, [sp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:503
		  R.data[2][1] = cos_theta*sin_phi;
 274:	9804      	ldr	r0, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:502
		  
		  R.data[1][0] = 0;
		  R.data[1][1] = cos_phi;
		  R.data[1][2] = -sin_phi;
		  
		  R.data[2][0] = -sin_theta;
 276:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 27a:	9300      	str	r3, [sp, #0]
 27c:	9a00      	ldr	r2, [sp, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:498
		  */
		  R.data[0][0] = cos_theta;
		  R.data[0][1] = sin_phi*sin_theta;
		  R.data[0][2] = cos_phi*sin_theta;
		  
		  R.data[1][0] = 0;
 27e:	955c      	str	r5, [sp, #368]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:502
		  R.data[1][1] = cos_phi;
		  R.data[1][2] = -sin_phi;
		  
		  R.data[2][0] = -sin_theta;
 280:	925f      	str	r2, [sp, #380]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:503
		  R.data[2][1] = cos_theta*sin_phi;
 282:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:504
		  R.data[2][2] = cos_phi*cos_theta;
 286:	9904      	ldr	r1, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:503
		  R.data[1][0] = 0;
		  R.data[1][1] = cos_phi;
		  R.data[1][2] = -sin_phi;
		  
		  R.data[2][0] = -sin_theta;
		  R.data[2][1] = cos_theta*sin_phi;
 288:	9060      	str	r0, [sp, #384]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:504
		  R.data[2][2] = cos_phi*cos_theta;
 28a:	9805      	ldr	r0, [sp, #20]
 28c:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:507
		  
		  // Rotate measurement into vehicle-1 frame
		  MatVectMult3( &R, &mag_vect, &mag_vect );
 290:	464a      	mov	r2, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:504
		  R.data[1][1] = cos_phi;
		  R.data[1][2] = -sin_phi;
		  
		  R.data[2][0] = -sin_theta;
		  R.data[2][1] = cos_theta*sin_phi;
		  R.data[2][2] = cos_phi*cos_theta;
 292:	9061      	str	r0, [sp, #388]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:507
		  
		  // Rotate measurement into vehicle-1 frame
		  MatVectMult3( &R, &mag_vect, &mag_vect );
 294:	4649      	mov	r1, r9
 296:	4650      	mov	r0, sl
 298:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:510

		  // Subtract reference vector
		  mag_vect.data[0] = mag_vect.data[0] - mag_ref.data[0];
 29c:	9865      	ldr	r0, [sp, #404]
 29e:	9968      	ldr	r1, [sp, #416]
 2a0:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:511
		  mag_vect.data[1] = mag_vect.data[1] - mag_ref.data[1];
 2a4:	9969      	ldr	r1, [sp, #420]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:510
		  
		  // Rotate measurement into vehicle-1 frame
		  MatVectMult3( &R, &mag_vect, &mag_vect );

		  // Subtract reference vector
		  mag_vect.data[0] = mag_vect.data[0] - mag_ref.data[0];
 2a6:	9065      	str	r0, [sp, #404]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:511
		  mag_vect.data[1] = mag_vect.data[1] - mag_ref.data[1];
 2a8:	9866      	ldr	r0, [sp, #408]
 2aa:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:512
		  mag_vect.data[2] = mag_vect.data[2] - mag_ref.data[2];
 2ae:	996a      	ldr	r1, [sp, #424]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:511
		  // Rotate measurement into vehicle-1 frame
		  MatVectMult3( &R, &mag_vect, &mag_vect );

		  // Subtract reference vector
		  mag_vect.data[0] = mag_vect.data[0] - mag_ref.data[0];
		  mag_vect.data[1] = mag_vect.data[1] - mag_ref.data[1];
 2b0:	9066      	str	r0, [sp, #408]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:512
		  mag_vect.data[2] = mag_vect.data[2] - mag_ref.data[2];
 2b2:	9867      	ldr	r0, [sp, #412]
 2b4:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:515
		  
		  // Compute Kalman gain: L = PC^T * (R + CPC^T)^(-1)
		  MatTrans3x3( &C, &Ctrans );
 2b8:	f50d 788e 	add.w	r8, sp, #284	; 0x11c
 2bc:	ac3e      	add	r4, sp, #248
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:516
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
 2be:	ad35      	add	r5, sp, #212
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:512
		  MatVectMult3( &R, &mag_vect, &mag_vect );

		  // Subtract reference vector
		  mag_vect.data[0] = mag_vect.data[0] - mag_ref.data[0];
		  mag_vect.data[1] = mag_vect.data[1] - mag_ref.data[1];
		  mag_vect.data[2] = mag_vect.data[2] - mag_ref.data[2];
 2c0:	9067      	str	r0, [sp, #412]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:515
		  
		  // Compute Kalman gain: L = PC^T * (R + CPC^T)^(-1)
		  MatTrans3x3( &C, &Ctrans );
 2c2:	4621      	mov	r1, r4
 2c4:	4640      	mov	r0, r8
 2c6:	f7ff fffe 	bl	0 <MatTrans3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:516
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
 2ca:	4621      	mov	r1, r4
 2cc:	462a      	mov	r2, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:517
		  MatMult3x3( &C, &PCtrans, &temp );
 2ce:	ac23      	add	r4, sp, #140
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:516
		  mag_vect.data[1] = mag_vect.data[1] - mag_ref.data[1];
		  mag_vect.data[2] = mag_vect.data[2] - mag_ref.data[2];
		  
		  // Compute Kalman gain: L = PC^T * (R + CPC^T)^(-1)
		  MatTrans3x3( &C, &Ctrans );
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
 2d0:	9819      	ldr	r0, [sp, #100]
 2d2:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:517
		  MatMult3x3( &C, &PCtrans, &temp );
 2d6:	4629      	mov	r1, r5
 2d8:	4622      	mov	r2, r4
 2da:	4640      	mov	r0, r8
 2dc:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:518
		  MatAdd3x3( &temp, &estimated_states->Rmag, &temp );
 2e0:	4622      	mov	r2, r4
 2e2:	f10b 0160 	add.w	r1, fp, #96	; 0x60
 2e6:	4620      	mov	r0, r4
 2e8:	f7ff fffe 	bl	0 <MatAdd3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:520
		  MatInv3x3( &temp, &temp );
		  MatMult3x3( &PCtrans, &temp, &L );
 2ec:	ae50      	add	r6, sp, #320
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:519
		  // Compute Kalman gain: L = PC^T * (R + CPC^T)^(-1)
		  MatTrans3x3( &C, &Ctrans );
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
		  MatMult3x3( &C, &PCtrans, &temp );
		  MatAdd3x3( &temp, &estimated_states->Rmag, &temp );
		  MatInv3x3( &temp, &temp );
 2ee:	4621      	mov	r1, r4
 2f0:	4620      	mov	r0, r4
 2f2:	f7ff fffe 	bl	0 <MatInv3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:520
		  MatMult3x3( &PCtrans, &temp, &L );
 2f6:	4621      	mov	r1, r4
 2f8:	4632      	mov	r2, r6
 2fa:	4628      	mov	r0, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:523
		  
		  // Compute new covariance
		  MatMult3x3( &L, &C, &LC );
 2fc:	ad2c      	add	r5, sp, #176
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:520
		  MatTrans3x3( &C, &Ctrans );
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
		  MatMult3x3( &C, &PCtrans, &temp );
		  MatAdd3x3( &temp, &estimated_states->Rmag, &temp );
		  MatInv3x3( &temp, &temp );
		  MatMult3x3( &PCtrans, &temp, &L );
 2fe:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:523
		  
		  // Compute new covariance
		  MatMult3x3( &L, &C, &LC );
 302:	4641      	mov	r1, r8
 304:	462a      	mov	r2, r5
 306:	4630      	mov	r0, r6
 308:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:524
		  ScalarMatMult3x3( -1, &LC, &temp );
 30c:	f240 0000 	movw	r0, #0	; 0x0
 310:	4629      	mov	r1, r5
 312:	4622      	mov	r2, r4
 314:	f6cb 7080 	movt	r0, #49024	; 0xbf80
 318:	f7ff fffe 	bl	0 <ScalarMatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:525
		  MatAdd3x3( &I, &temp, &temp );
 31c:	4621      	mov	r1, r4
 31e:	e007      	b.n	330 <EKF_Update+0x330>
 320:	f01b866e 	.word	0xf01b866e
 324:	400921f9 	.word	0x400921f9
 328:	00000000 	.word	0x00000000
 32c:	40668000 	.word	0x40668000
 330:	4622      	mov	r2, r4
 332:	a81a      	add	r0, sp, #104
 334:	f7ff fffe 	bl	0 <MatAdd3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:526
		  MatMult3x3( &temp, &estimated_states->P, &estimated_states->P );
 338:	9919      	ldr	r1, [sp, #100]
 33a:	4620      	mov	r0, r4
 33c:	460a      	mov	r2, r1
 33e:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:529
		  
		  // Perform state update
		  MatVectMult3( &L, &mag_vect, &correction );
 342:	aa62      	add	r2, sp, #392
 344:	4649      	mov	r1, r9
 346:	4630      	mov	r0, r6
 348:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:531
				  
		  estimated_states->phi = estimated_states->phi + correction.data[0];
 34c:	f8db 0008 	ldr.w	r0, [fp, #8]
 350:	9962      	ldr	r1, [sp, #392]
 352:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:532
		  estimated_states->theta = estimated_states->theta + correction.data[1];
 356:	9963      	ldr	r1, [sp, #396]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:531
		  MatMult3x3( &temp, &estimated_states->P, &estimated_states->P );
		  
		  // Perform state update
		  MatVectMult3( &L, &mag_vect, &correction );
				  
		  estimated_states->phi = estimated_states->phi + correction.data[0];
 358:	f8cb 0008 	str.w	r0, [fp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:532
		  estimated_states->theta = estimated_states->theta + correction.data[1];
 35c:	f8db 0004 	ldr.w	r0, [fp, #4]
 360:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:533
		  estimated_states->psi = estimated_states->psi + correction.data[2];
 364:	9964      	ldr	r1, [sp, #400]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:532
		  
		  // Perform state update
		  MatVectMult3( &L, &mag_vect, &correction );
				  
		  estimated_states->phi = estimated_states->phi + correction.data[0];
		  estimated_states->theta = estimated_states->theta + correction.data[1];
 366:	f8cb 0004 	str.w	r0, [fp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:533
		  estimated_states->psi = estimated_states->psi + correction.data[2];
 36a:	f8db 0000 	ldr.w	r0, [fp]
 36e:	f7ff fffe 	bl	0 <__aeabi_fadd>
 372:	f8cb 0000 	str.w	r0, [fp]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:536
		  
		  // "Unroll" angle estimates to be in the range from -360 to 360 degrees
		  unroll_states( estimated_states );
 376:	4658      	mov	r0, fp
 378:	f7ff fffe 	bl	0 <EKF_Update>
 37c:	e663      	b.n	46 <EKF_Update+0x46>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:292
	 CreateIdentity3x3( &I );
	 
	 // If new accelerometer data is available, perform update
	 if( sensor_data->new_accel_data && (gConfig.EKF_config & ACCEL_UPDATE_ENABLED) )
	 {
		  sensor_data->new_accel_data = 0;
 37e:	f04f 0300 	mov.w	r3, #0	; 0x0
 382:	8193      	strh	r3, [r2, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:298
		  
		  float theta = estimated_states->theta;
		  float phi = estimated_states->phi;
		  float psi = estimated_states->psi;
		  
		  float cos_phi = cos(phi*3.14159/180);
 384:	f8db 0008 	ldr.w	r0, [fp, #8]
 388:	f7ff fffe 	bl	0 <__aeabi_f2d>
 38c:	a3ae      	add	r3, pc, #696	(adr r3, 648 <EKF_Update+0x648>)
 38e:	e9d3 2300 	ldrd	r2, r3, [r3]
 392:	f7ff fffe 	bl	0 <__aeabi_dmul>
 396:	a3ae      	add	r3, pc, #696	(adr r3, 650 <EKF_Update+0x650>)
 398:	e9d3 2300 	ldrd	r2, r3, [r3]
 39c:	f7ff fffe 	bl	0 <__aeabi_ddiv>
 3a0:	e9cd 0114 	strd	r0, r1, [sp, #80]
 3a4:	f7ff fffe 	bl	0 <cos>
 3a8:	f7ff fffe 	bl	0 <__aeabi_d2f>
 3ac:	9013      	str	r0, [sp, #76]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:299
		  float cos_theta = cos(theta*3.14159/180);
 3ae:	f8db 0004 	ldr.w	r0, [fp, #4]
 3b2:	f7ff fffe 	bl	0 <__aeabi_f2d>
 3b6:	a3a4      	add	r3, pc, #656	(adr r3, 648 <EKF_Update+0x648>)
 3b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 3bc:	f7ff fffe 	bl	0 <__aeabi_dmul>
 3c0:	a3a3      	add	r3, pc, #652	(adr r3, 650 <EKF_Update+0x650>)
 3c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 3c6:	f7ff fffe 	bl	0 <__aeabi_ddiv>
 3ca:	4680      	mov	r8, r0
 3cc:	4689      	mov	r9, r1
 3ce:	f7ff fffe 	bl	0 <cos>
 3d2:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:300
		  float cos_psi = cos(psi*3.14159/180);
 3d6:	465a      	mov	r2, fp
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:299
		  float theta = estimated_states->theta;
		  float phi = estimated_states->phi;
		  float psi = estimated_states->psi;
		  
		  float cos_phi = cos(phi*3.14159/180);
		  float cos_theta = cos(theta*3.14159/180);
 3d8:	9012      	str	r0, [sp, #72]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:300
		  float cos_psi = cos(psi*3.14159/180);
 3da:	f852 0b84 	ldr.w	r0, [r2], #132
 3de:	9217      	str	r2, [sp, #92]
 3e0:	f7ff fffe 	bl	0 <__aeabi_f2d>
 3e4:	a398      	add	r3, pc, #608	(adr r3, 648 <EKF_Update+0x648>)
 3e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 3ea:	f7ff fffe 	bl	0 <__aeabi_dmul>
 3ee:	a398      	add	r3, pc, #608	(adr r3, 650 <EKF_Update+0x650>)
 3f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 3f4:	f7ff fffe 	bl	0 <__aeabi_ddiv>
 3f8:	4604      	mov	r4, r0
 3fa:	460d      	mov	r5, r1
 3fc:	f7ff fffe 	bl	0 <cos>
 400:	f7ff fffe 	bl	0 <__aeabi_d2f>
 404:	9011      	str	r0, [sp, #68]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:302
		  
		  float sin_phi = sin(phi*3.14159/180);
 406:	e9dd 0114 	ldrd	r0, r1, [sp, #80]
 40a:	f7ff fffe 	bl	0 <sin>
 40e:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:303
		  float sin_theta = sin(theta*3.14159/180);
 412:	4649      	mov	r1, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:302
		  
		  float cos_phi = cos(phi*3.14159/180);
		  float cos_theta = cos(theta*3.14159/180);
		  float cos_psi = cos(psi*3.14159/180);
		  
		  float sin_phi = sin(phi*3.14159/180);
 414:	4682      	mov	sl, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:303
		  float sin_theta = sin(theta*3.14159/180);
 416:	4640      	mov	r0, r8
 418:	f7ff fffe 	bl	0 <sin>
 41c:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:304
		  float sin_psi = sin(psi*3.14159/180);
 420:	4629      	mov	r1, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:303
		  float cos_phi = cos(phi*3.14159/180);
		  float cos_theta = cos(theta*3.14159/180);
		  float cos_psi = cos(psi*3.14159/180);
		  
		  float sin_phi = sin(phi*3.14159/180);
		  float sin_theta = sin(theta*3.14159/180);
 422:	4681      	mov	r9, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:304
		  float sin_psi = sin(psi*3.14159/180);
 424:	4620      	mov	r0, r4
 426:	f7ff fffe 	bl	0 <sin>
 42a:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:312
		  /*
				[                              cos(psi)*cos(theta),                              cos(theta)*sin(psi),         -sin(theta)]
				[ cos(psi)*sin(phi)*sin(theta) - cos(phi)*sin(psi), cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta), cos(theta)*sin(phi)]
				[ sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta), cos(phi)*sin(psi)*sin(theta) - cos(psi)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_psi*cos_theta;
 42e:	9912      	ldr	r1, [sp, #72]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:304
		  float cos_theta = cos(theta*3.14159/180);
		  float cos_psi = cos(psi*3.14159/180);
		  
		  float sin_phi = sin(phi*3.14159/180);
		  float sin_theta = sin(theta*3.14159/180);
		  float sin_psi = sin(psi*3.14159/180);
 430:	9010      	str	r0, [sp, #64]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:312
		  /*
				[                              cos(psi)*cos(theta),                              cos(theta)*sin(psi),         -sin(theta)]
				[ cos(psi)*sin(phi)*sin(theta) - cos(phi)*sin(psi), cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta), cos(theta)*sin(phi)]
				[ sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta), cos(phi)*sin(psi)*sin(theta) - cos(psi)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_psi*cos_theta;
 432:	9811      	ldr	r0, [sp, #68]
 434:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:313
		  R.data[0][1] = cos_theta*sin_psi;
 438:	9910      	ldr	r1, [sp, #64]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:312
		  /*
				[                              cos(psi)*cos(theta),                              cos(theta)*sin(psi),         -sin(theta)]
				[ cos(psi)*sin(phi)*sin(theta) - cos(phi)*sin(psi), cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta), cos(theta)*sin(phi)]
				[ sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta), cos(phi)*sin(psi)*sin(theta) - cos(psi)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_psi*cos_theta;
 43a:	9059      	str	r0, [sp, #356]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:313
		  R.data[0][1] = cos_theta*sin_psi;
 43c:	9812      	ldr	r0, [sp, #72]
 43e:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:314
		  R.data[0][2] = -sin_theta;
 442:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:313
				[                              cos(psi)*cos(theta),                              cos(theta)*sin(psi),         -sin(theta)]
				[ cos(psi)*sin(phi)*sin(theta) - cos(phi)*sin(psi), cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta), cos(theta)*sin(phi)]
				[ sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta), cos(phi)*sin(psi)*sin(theta) - cos(psi)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_psi*cos_theta;
		  R.data[0][1] = cos_theta*sin_psi;
 446:	905a      	str	r0, [sp, #360]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:316
		  R.data[0][2] = -sin_theta;
		  
		  R.data[1][0] = cos_psi*sin_phi*sin_theta - cos_phi*sin_psi;
 448:	4651      	mov	r1, sl
 44a:	9811      	ldr	r0, [sp, #68]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:314
				[ cos(psi)*sin(phi)*sin(theta) - cos(phi)*sin(psi), cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta), cos(theta)*sin(phi)]
				[ sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta), cos(phi)*sin(psi)*sin(theta) - cos(psi)*sin(phi), cos(phi)*cos(theta)]
		  */
		  R.data[0][0] = cos_psi*cos_theta;
		  R.data[0][1] = cos_theta*sin_psi;
		  R.data[0][2] = -sin_theta;
 44c:	935b      	str	r3, [sp, #364]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:316
		  
		  R.data[1][0] = cos_psi*sin_phi*sin_theta - cos_phi*sin_psi;
 44e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 452:	4649      	mov	r1, r9
 454:	900f      	str	r0, [sp, #60]
 456:	f7ff fffe 	bl	0 <__aeabi_fmul>
 45a:	9910      	ldr	r1, [sp, #64]
 45c:	900e      	str	r0, [sp, #56]
 45e:	9813      	ldr	r0, [sp, #76]
 460:	f7ff fffe 	bl	0 <__aeabi_fmul>
 464:	900d      	str	r0, [sp, #52]
 466:	990d      	ldr	r1, [sp, #52]
 468:	980e      	ldr	r0, [sp, #56]
 46a:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:317
		  R.data[1][1] = cos_phi*cos_psi + sin_phi*sin_psi*sin_theta;
 46e:	9911      	ldr	r1, [sp, #68]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:316
		  */
		  R.data[0][0] = cos_psi*cos_theta;
		  R.data[0][1] = cos_theta*sin_psi;
		  R.data[0][2] = -sin_theta;
		  
		  R.data[1][0] = cos_psi*sin_phi*sin_theta - cos_phi*sin_psi;
 470:	905c      	str	r0, [sp, #368]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:317
		  R.data[1][1] = cos_phi*cos_psi + sin_phi*sin_psi*sin_theta;
 472:	9813      	ldr	r0, [sp, #76]
 474:	f7ff fffe 	bl	0 <__aeabi_fmul>
 478:	9910      	ldr	r1, [sp, #64]
 47a:	4605      	mov	r5, r0
 47c:	4650      	mov	r0, sl
 47e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 482:	4649      	mov	r1, r9
 484:	4604      	mov	r4, r0
 486:	f7ff fffe 	bl	0 <__aeabi_fmul>
 48a:	4601      	mov	r1, r0
 48c:	4628      	mov	r0, r5
 48e:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:318
		  R.data[1][2] = cos_theta*sin_phi;
 492:	4651      	mov	r1, sl
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:317
		  R.data[0][0] = cos_psi*cos_theta;
		  R.data[0][1] = cos_theta*sin_psi;
		  R.data[0][2] = -sin_theta;
		  
		  R.data[1][0] = cos_psi*sin_phi*sin_theta - cos_phi*sin_psi;
		  R.data[1][1] = cos_phi*cos_psi + sin_phi*sin_psi*sin_theta;
 494:	900c      	str	r0, [sp, #48]
 496:	905d      	str	r0, [sp, #372]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:318
		  R.data[1][2] = cos_theta*sin_phi;
 498:	9812      	ldr	r0, [sp, #72]
 49a:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:320
		  
		  R.data[2][0] = sin_phi*sin_psi + cos_phi*cos_psi*sin_theta;
 49e:	4629      	mov	r1, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:318
		  R.data[0][1] = cos_theta*sin_psi;
		  R.data[0][2] = -sin_theta;
		  
		  R.data[1][0] = cos_psi*sin_phi*sin_theta - cos_phi*sin_psi;
		  R.data[1][1] = cos_phi*cos_psi + sin_phi*sin_psi*sin_theta;
		  R.data[1][2] = cos_theta*sin_phi;
 4a0:	905e      	str	r0, [sp, #376]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:320
		  
		  R.data[2][0] = sin_phi*sin_psi + cos_phi*cos_psi*sin_theta;
 4a2:	4648      	mov	r0, r9
 4a4:	f7ff fffe 	bl	0 <__aeabi_fmul>
 4a8:	4601      	mov	r1, r0
 4aa:	4620      	mov	r0, r4
 4ac:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:321
		  R.data[2][1] = cos_phi*sin_psi*sin_theta - cos_psi*sin_phi;
 4b0:	990d      	ldr	r1, [sp, #52]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:320
		  
		  R.data[1][0] = cos_psi*sin_phi*sin_theta - cos_phi*sin_psi;
		  R.data[1][1] = cos_phi*cos_psi + sin_phi*sin_psi*sin_theta;
		  R.data[1][2] = cos_theta*sin_phi;
		  
		  R.data[2][0] = sin_phi*sin_psi + cos_phi*cos_psi*sin_theta;
 4b2:	900b      	str	r0, [sp, #44]
 4b4:	905f      	str	r0, [sp, #380]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:321
		  R.data[2][1] = cos_phi*sin_psi*sin_theta - cos_psi*sin_phi;
 4b6:	4648      	mov	r0, r9
 4b8:	f7ff fffe 	bl	0 <__aeabi_fmul>
 4bc:	990f      	ldr	r1, [sp, #60]
 4be:	900a      	str	r0, [sp, #40]
 4c0:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:322
		  R.data[2][2] = cos_phi*cos_theta;
 4c4:	9912      	ldr	r1, [sp, #72]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:321
		  R.data[1][0] = cos_psi*sin_phi*sin_theta - cos_phi*sin_psi;
		  R.data[1][1] = cos_phi*cos_psi + sin_phi*sin_psi*sin_theta;
		  R.data[1][2] = cos_theta*sin_phi;
		  
		  R.data[2][0] = sin_phi*sin_psi + cos_phi*cos_psi*sin_theta;
		  R.data[2][1] = cos_phi*sin_psi*sin_theta - cos_psi*sin_phi;
 4c6:	9060      	str	r0, [sp, #384]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:322
		  R.data[2][2] = cos_phi*cos_theta;
 4c8:	9813      	ldr	r0, [sp, #76]
 4ca:	f7ff fffe 	bl	0 <__aeabi_fmul>
 4ce:	9061      	str	r0, [sp, #388]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:325
		  
		  fvect3x1 accel_ref;
		  accel_ref.data[0] = gConfig.accel_ref_vector[0];
 4d0:	f9b7 00a2 	ldrsh.w	r0, [r7, #162]
 4d4:	f7ff fffe 	bl	0 <__aeabi_i2f>
 4d8:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:326
		  accel_ref.data[1] = gConfig.accel_ref_vector[1];
 4da:	f9b7 00a4 	ldrsh.w	r0, [r7, #164]
 4de:	f7ff fffe 	bl	0 <__aeabi_i2f>
 4e2:	4605      	mov	r5, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:327
		  accel_ref.data[2] = gConfig.accel_ref_vector[2];
 4e4:	f9b7 00a6 	ldrsh.w	r0, [r7, #166]
 4e8:	f7ff fffe 	bl	0 <__aeabi_i2f>
 4ec:	4606      	mov	r6, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:330
		  
		  // Subtract accel bias vector
		  accel_ref.data[0] = accel_ref.data[0] - (float)gConfig.x_accel_bias;
 4ee:	f9b7 0000 	ldrsh.w	r0, [r7]
 4f2:	f7ff fffe 	bl	0 <__aeabi_i2f>
 4f6:	4601      	mov	r1, r0
 4f8:	4620      	mov	r0, r4
 4fa:	f7ff fffe 	bl	0 <__aeabi_fsub>
 4fe:	906b      	str	r0, [sp, #428]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:331
		  accel_ref.data[1] = accel_ref.data[1] - (float)gConfig.y_accel_bias;
 500:	f9b7 0002 	ldrsh.w	r0, [r7, #2]
 504:	f7ff fffe 	bl	0 <__aeabi_i2f>
 508:	4601      	mov	r1, r0
 50a:	4628      	mov	r0, r5
 50c:	f7ff fffe 	bl	0 <__aeabi_fsub>
 510:	906c      	str	r0, [sp, #432]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:332
		  accel_ref.data[2] = accel_ref.data[2] - (float)gConfig.z_accel_bias;
 512:	f9b7 0004 	ldrsh.w	r0, [r7, #4]
 516:	f7ff fffe 	bl	0 <__aeabi_i2f>
 51a:	4601      	mov	r1, r0
 51c:	4630      	mov	r0, r6
 51e:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:335
		  
		  // Multiply accel reference vector by calibration matrix
		  MatVectMult3( &gConfig.accel_alignment, &accel_ref, &accel_ref );
 522:	ac6b      	add	r4, sp, #428
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:332
		  accel_ref.data[2] = gConfig.accel_ref_vector[2];
		  
		  // Subtract accel bias vector
		  accel_ref.data[0] = accel_ref.data[0] - (float)gConfig.x_accel_bias;
		  accel_ref.data[1] = accel_ref.data[1] - (float)gConfig.y_accel_bias;
		  accel_ref.data[2] = accel_ref.data[2] - (float)gConfig.z_accel_bias;
 524:	906d      	str	r0, [sp, #436]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:335
		  
		  // Multiply accel reference vector by calibration matrix
		  MatVectMult3( &gConfig.accel_alignment, &accel_ref, &accel_ref );
 526:	4621      	mov	r1, r4
 528:	4622      	mov	r2, r4
 52a:	f107 0054 	add.w	r0, r7, #84	; 0x54
 52e:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:337
		  
		  float ax = accel_ref.data[0];
 532:	f8dd 81ac 	ldr.w	r8, [sp, #428]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:339
		  float ay = accel_ref.data[1];
		  float az = accel_ref.data[2];
 536:	9b6d      	ldr	r3, [sp, #436]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:344
		  
		  fvect3x1 acc_hat;
		  	  
		  // Compute expected accelerometer output based on yaw, pitch, and roll angles
		  MatVectMult3( &R, &accel_ref, &acc_hat );
 538:	aa62      	add	r2, sp, #392
 53a:	4621      	mov	r1, r4
 53c:	a859      	add	r0, sp, #356
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:338
		  
		  // Multiply accel reference vector by calibration matrix
		  MatVectMult3( &gConfig.accel_alignment, &accel_ref, &accel_ref );
		  
		  float ax = accel_ref.data[0];
		  float ay = accel_ref.data[1];
 53e:	9e6c      	ldr	r6, [sp, #432]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:339
		  float az = accel_ref.data[2];
 540:	9318      	str	r3, [sp, #96]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:344
		  
		  fvect3x1 acc_hat;
		  	  
		  // Compute expected accelerometer output based on yaw, pitch, and roll angles
		  MatVectMult3( &R, &accel_ref, &acc_hat );
 542:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:352
		  /*
		  [                                                                                                                                      0,                          - az*cos(theta) - ax*cos(psi)*sin(theta) - ay*sin(psi)*sin(theta),                                                                 ay*cos(psi)*cos(theta) - ax*cos(theta)*sin(psi)]
		  [ ax*(sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta)) - ay*(cos(psi)*sin(phi) - cos(phi)*sin(psi)*sin(theta)) + az*cos(phi)*cos(theta), ax*cos(psi)*cos(theta)*sin(phi) - az*sin(phi)*sin(theta) + ay*cos(theta)*sin(phi)*sin(psi), - ax*(cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta)) - ay*(cos(phi)*sin(psi) - cos(psi)*sin(phi)*sin(theta))]
		  [ ax*(cos(phi)*sin(psi) - cos(psi)*sin(phi)*sin(theta)) - ay*(cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta)) - az*cos(theta)*sin(phi), ax*cos(phi)*cos(psi)*cos(theta) - az*cos(phi)*sin(theta) + ay*cos(phi)*cos(theta)*sin(psi),   ax*(cos(psi)*sin(phi) - cos(phi)*sin(psi)*sin(theta)) + ay*(sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta))]
		  */
		  C.data[0][0] = 0;
 546:	2300      	movs	r3, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:353
		  C.data[0][1] = -az*cos_theta - ax*cos_psi*sin_theta - ay*sin_psi*sin_theta;
 548:	9911      	ldr	r1, [sp, #68]
 54a:	4640      	mov	r0, r8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:352
		  /*
		  [                                                                                                                                      0,                          - az*cos(theta) - ax*cos(psi)*sin(theta) - ay*sin(psi)*sin(theta),                                                                 ay*cos(psi)*cos(theta) - ax*cos(theta)*sin(psi)]
		  [ ax*(sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta)) - ay*(cos(psi)*sin(phi) - cos(phi)*sin(psi)*sin(theta)) + az*cos(phi)*cos(theta), ax*cos(psi)*cos(theta)*sin(phi) - az*sin(phi)*sin(theta) + ay*cos(theta)*sin(phi)*sin(psi), - ax*(cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta)) - ay*(cos(phi)*sin(psi) - cos(psi)*sin(phi)*sin(theta))]
		  [ ax*(cos(phi)*sin(psi) - cos(psi)*sin(phi)*sin(theta)) - ay*(cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta)) - az*cos(theta)*sin(phi), ax*cos(phi)*cos(psi)*cos(theta) - az*cos(phi)*sin(theta) + ay*cos(phi)*cos(theta)*sin(psi),   ax*(cos(psi)*sin(phi) - cos(phi)*sin(psi)*sin(theta)) + ay*(sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta))]
		  */
		  C.data[0][0] = 0;
 54c:	9347      	str	r3, [sp, #284]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:353
		  C.data[0][1] = -az*cos_theta - ax*cos_psi*sin_theta - ay*sin_psi*sin_theta;
 54e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 552:	9a18      	ldr	r2, [sp, #96]
 554:	4605      	mov	r5, r0
 556:	9912      	ldr	r1, [sp, #72]
 558:	f102 4000 	add.w	r0, r2, #2147483648	; 0x80000000
 55c:	f7ff fffe 	bl	0 <__aeabi_fmul>
 560:	4649      	mov	r1, r9
 562:	4604      	mov	r4, r0
 564:	4628      	mov	r0, r5
 566:	f7ff fffe 	bl	0 <__aeabi_fmul>
 56a:	4601      	mov	r1, r0
 56c:	4620      	mov	r0, r4
 56e:	f7ff fffe 	bl	0 <__aeabi_fsub>
 572:	9910      	ldr	r1, [sp, #64]
 574:	4604      	mov	r4, r0
 576:	4630      	mov	r0, r6
 578:	f7ff fffe 	bl	0 <__aeabi_fmul>
 57c:	4649      	mov	r1, r9
 57e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 582:	4601      	mov	r1, r0
 584:	4620      	mov	r0, r4
 586:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:354
		  C.data[0][2] = ay*cos_psi*cos_theta - ax*cos_theta*sin_psi;
 58a:	9911      	ldr	r1, [sp, #68]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:353
		  [                                                                                                                                      0,                          - az*cos(theta) - ax*cos(psi)*sin(theta) - ay*sin(psi)*sin(theta),                                                                 ay*cos(psi)*cos(theta) - ax*cos(theta)*sin(psi)]
		  [ ax*(sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta)) - ay*(cos(psi)*sin(phi) - cos(phi)*sin(psi)*sin(theta)) + az*cos(phi)*cos(theta), ax*cos(psi)*cos(theta)*sin(phi) - az*sin(phi)*sin(theta) + ay*cos(theta)*sin(phi)*sin(psi), - ax*(cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta)) - ay*(cos(phi)*sin(psi) - cos(psi)*sin(phi)*sin(theta))]
		  [ ax*(cos(phi)*sin(psi) - cos(psi)*sin(phi)*sin(theta)) - ay*(cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta)) - az*cos(theta)*sin(phi), ax*cos(phi)*cos(psi)*cos(theta) - az*cos(phi)*sin(theta) + ay*cos(phi)*cos(theta)*sin(psi),   ax*(cos(psi)*sin(phi) - cos(phi)*sin(psi)*sin(theta)) + ay*(sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta))]
		  */
		  C.data[0][0] = 0;
		  C.data[0][1] = -az*cos_theta - ax*cos_psi*sin_theta - ay*sin_psi*sin_theta;
 58c:	9048      	str	r0, [sp, #288]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:354
		  C.data[0][2] = ay*cos_psi*cos_theta - ax*cos_theta*sin_psi;
 58e:	4630      	mov	r0, r6
 590:	f7ff fffe 	bl	0 <__aeabi_fmul>
 594:	9912      	ldr	r1, [sp, #72]
 596:	f7ff fffe 	bl	0 <__aeabi_fmul>
 59a:	9912      	ldr	r1, [sp, #72]
 59c:	4604      	mov	r4, r0
 59e:	4640      	mov	r0, r8
 5a0:	f7ff fffe 	bl	0 <__aeabi_fmul>
 5a4:	9910      	ldr	r1, [sp, #64]
 5a6:	f7ff fffe 	bl	0 <__aeabi_fmul>
 5aa:	4601      	mov	r1, r0
 5ac:	4620      	mov	r0, r4
 5ae:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:356
		  
		  C.data[1][0] = ax*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta) - ay*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + az*cos_phi*cos_theta;
 5b2:	990a      	ldr	r1, [sp, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:354
		  [ ax*(sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta)) - ay*(cos(psi)*sin(phi) - cos(phi)*sin(psi)*sin(theta)) + az*cos(phi)*cos(theta), ax*cos(psi)*cos(theta)*sin(phi) - az*sin(phi)*sin(theta) + ay*cos(theta)*sin(phi)*sin(psi), - ax*(cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta)) - ay*(cos(phi)*sin(psi) - cos(psi)*sin(phi)*sin(theta))]
		  [ ax*(cos(phi)*sin(psi) - cos(psi)*sin(phi)*sin(theta)) - ay*(cos(phi)*cos(psi) + sin(phi)*sin(psi)*sin(theta)) - az*cos(theta)*sin(phi), ax*cos(phi)*cos(psi)*cos(theta) - az*cos(phi)*sin(theta) + ay*cos(phi)*cos(theta)*sin(psi),   ax*(cos(psi)*sin(phi) - cos(phi)*sin(psi)*sin(theta)) + ay*(sin(phi)*sin(psi) + cos(phi)*cos(psi)*sin(theta))]
		  */
		  C.data[0][0] = 0;
		  C.data[0][1] = -az*cos_theta - ax*cos_psi*sin_theta - ay*sin_psi*sin_theta;
		  C.data[0][2] = ay*cos_psi*cos_theta - ax*cos_theta*sin_psi;
 5b4:	9049      	str	r0, [sp, #292]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:356
		  
		  C.data[1][0] = ax*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta) - ay*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + az*cos_phi*cos_theta;
 5b6:	980f      	ldr	r0, [sp, #60]
 5b8:	f7ff fffe 	bl	0 <__aeabi_fsub>
 5bc:	9913      	ldr	r1, [sp, #76]
 5be:	9009      	str	r0, [sp, #36]
 5c0:	9818      	ldr	r0, [sp, #96]
 5c2:	f7ff fffe 	bl	0 <__aeabi_fmul>
 5c6:	4641      	mov	r1, r8
 5c8:	9008      	str	r0, [sp, #32]
 5ca:	980b      	ldr	r0, [sp, #44]
 5cc:	f7ff fffe 	bl	0 <__aeabi_fmul>
 5d0:	4631      	mov	r1, r6
 5d2:	4604      	mov	r4, r0
 5d4:	9809      	ldr	r0, [sp, #36]
 5d6:	f7ff fffe 	bl	0 <__aeabi_fmul>
 5da:	4601      	mov	r1, r0
 5dc:	4620      	mov	r0, r4
 5de:	f7ff fffe 	bl	0 <__aeabi_fsub>
 5e2:	9912      	ldr	r1, [sp, #72]
 5e4:	4604      	mov	r4, r0
 5e6:	9808      	ldr	r0, [sp, #32]
 5e8:	f7ff fffe 	bl	0 <__aeabi_fmul>
 5ec:	4601      	mov	r1, r0
 5ee:	4620      	mov	r0, r4
 5f0:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:357
		  C.data[1][1] = ax*cos_psi*cos_theta*sin_phi - az*sin_phi*sin_theta + ay*cos_theta*sin_phi*sin_psi;
 5f4:	4629      	mov	r1, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:356
		  */
		  C.data[0][0] = 0;
		  C.data[0][1] = -az*cos_theta - ax*cos_psi*sin_theta - ay*sin_psi*sin_theta;
		  C.data[0][2] = ay*cos_psi*cos_theta - ax*cos_theta*sin_psi;
		  
		  C.data[1][0] = ax*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta) - ay*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + az*cos_phi*cos_theta;
 5f6:	904a      	str	r0, [sp, #296]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:357
		  C.data[1][1] = ax*cos_psi*cos_theta*sin_phi - az*sin_phi*sin_theta + ay*cos_theta*sin_phi*sin_psi;
 5f8:	9812      	ldr	r0, [sp, #72]
 5fa:	f7ff fffe 	bl	0 <__aeabi_fmul>
 5fe:	4651      	mov	r1, sl
 600:	f7ff fffe 	bl	0 <__aeabi_fmul>
 604:	4651      	mov	r1, sl
 606:	4604      	mov	r4, r0
 608:	9818      	ldr	r0, [sp, #96]
 60a:	f7ff fffe 	bl	0 <__aeabi_fmul>
 60e:	4649      	mov	r1, r9
 610:	f7ff fffe 	bl	0 <__aeabi_fmul>
 614:	4601      	mov	r1, r0
 616:	4620      	mov	r0, r4
 618:	f7ff fffe 	bl	0 <__aeabi_fsub>
 61c:	9912      	ldr	r1, [sp, #72]
 61e:	4604      	mov	r4, r0
 620:	4630      	mov	r0, r6
 622:	f7ff fffe 	bl	0 <__aeabi_fmul>
 626:	4651      	mov	r1, sl
 628:	f7ff fffe 	bl	0 <__aeabi_fmul>
 62c:	9910      	ldr	r1, [sp, #64]
 62e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 632:	4601      	mov	r1, r0
 634:	4620      	mov	r0, r4
 636:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:358
		  C.data[1][2] = -ax*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - ay*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta);
 63a:	990e      	ldr	r1, [sp, #56]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:357
		  C.data[0][0] = 0;
		  C.data[0][1] = -az*cos_theta - ax*cos_psi*sin_theta - ay*sin_psi*sin_theta;
		  C.data[0][2] = ay*cos_psi*cos_theta - ax*cos_theta*sin_psi;
		  
		  C.data[1][0] = ax*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta) - ay*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + az*cos_phi*cos_theta;
		  C.data[1][1] = ax*cos_psi*cos_theta*sin_phi - az*sin_phi*sin_theta + ay*cos_theta*sin_phi*sin_psi;
 63c:	904b      	str	r0, [sp, #300]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:358
		  C.data[1][2] = -ax*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - ay*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta);
 63e:	980d      	ldr	r0, [sp, #52]
 640:	f7ff fffe 	bl	0 <__aeabi_fsub>
 644:	e008      	b.n	658 <EKF_Update+0x658>
 646:	46c0      	nop			(mov r8, r8)
 648:	f01b866e 	.word	0xf01b866e
 64c:	400921f9 	.word	0x400921f9
 650:	00000000 	.word	0x00000000
 654:	40668000 	.word	0x40668000
 658:	f108 4100 	add.w	r1, r8, #2147483648	; 0x80000000
 65c:	4605      	mov	r5, r0
 65e:	980c      	ldr	r0, [sp, #48]
 660:	f7ff fffe 	bl	0 <__aeabi_fmul>
 664:	4631      	mov	r1, r6
 666:	4604      	mov	r4, r0
 668:	4628      	mov	r0, r5
 66a:	f7ff fffe 	bl	0 <__aeabi_fmul>
 66e:	4601      	mov	r1, r0
 670:	4620      	mov	r0, r4
 672:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:360
		  
		  C.data[2][0] = ax*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta) - ay*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - az*cos_theta*sin_phi;
 676:	4629      	mov	r1, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:358
		  C.data[0][1] = -az*cos_theta - ax*cos_psi*sin_theta - ay*sin_psi*sin_theta;
		  C.data[0][2] = ay*cos_psi*cos_theta - ax*cos_theta*sin_psi;
		  
		  C.data[1][0] = ax*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta) - ay*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + az*cos_phi*cos_theta;
		  C.data[1][1] = ax*cos_psi*cos_theta*sin_phi - az*sin_phi*sin_theta + ay*cos_theta*sin_phi*sin_psi;
		  C.data[1][2] = -ax*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - ay*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta);
 678:	904c      	str	r0, [sp, #304]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:360
		  
		  C.data[2][0] = ax*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta) - ay*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - az*cos_theta*sin_phi;
 67a:	4640      	mov	r0, r8
 67c:	f7ff fffe 	bl	0 <__aeabi_fmul>
 680:	4631      	mov	r1, r6
 682:	4604      	mov	r4, r0
 684:	980c      	ldr	r0, [sp, #48]
 686:	f7ff fffe 	bl	0 <__aeabi_fmul>
 68a:	4601      	mov	r1, r0
 68c:	4620      	mov	r0, r4
 68e:	f7ff fffe 	bl	0 <__aeabi_fsub>
 692:	9912      	ldr	r1, [sp, #72]
 694:	4604      	mov	r4, r0
 696:	9818      	ldr	r0, [sp, #96]
 698:	f7ff fffe 	bl	0 <__aeabi_fmul>
 69c:	4651      	mov	r1, sl
 69e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6a2:	4601      	mov	r1, r0
 6a4:	4620      	mov	r0, r4
 6a6:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:361
		  C.data[2][1] = ax*cos_phi*cos_psi*cos_theta - az*cos_phi*sin_theta + ay*cos_phi*cos_theta*sin_psi;
 6aa:	9913      	ldr	r1, [sp, #76]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:360
		  
		  C.data[1][0] = ax*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta) - ay*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + az*cos_phi*cos_theta;
		  C.data[1][1] = ax*cos_psi*cos_theta*sin_phi - az*sin_phi*sin_theta + ay*cos_theta*sin_phi*sin_psi;
		  C.data[1][2] = -ax*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - ay*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta);
		  
		  C.data[2][0] = ax*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta) - ay*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - az*cos_theta*sin_phi;
 6ac:	904d      	str	r0, [sp, #308]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:361
		  C.data[2][1] = ax*cos_phi*cos_psi*cos_theta - az*cos_phi*sin_theta + ay*cos_phi*cos_theta*sin_psi;
 6ae:	4640      	mov	r0, r8
 6b0:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6b4:	9911      	ldr	r1, [sp, #68]
 6b6:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6ba:	9912      	ldr	r1, [sp, #72]
 6bc:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6c0:	9908      	ldr	r1, [sp, #32]
 6c2:	4604      	mov	r4, r0
 6c4:	4648      	mov	r0, r9
 6c6:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6ca:	4601      	mov	r1, r0
 6cc:	4620      	mov	r0, r4
 6ce:	f7ff fffe 	bl	0 <__aeabi_fsub>
 6d2:	9913      	ldr	r1, [sp, #76]
 6d4:	4604      	mov	r4, r0
 6d6:	4630      	mov	r0, r6
 6d8:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6dc:	9912      	ldr	r1, [sp, #72]
 6de:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6e2:	9910      	ldr	r1, [sp, #64]
 6e4:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6e8:	4601      	mov	r1, r0
 6ea:	4620      	mov	r0, r4
 6ec:	f7ff fffe 	bl	0 <__aeabi_fadd>
 6f0:	904e      	str	r0, [sp, #312]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:362
		  C.data[2][2] = ax*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + ay*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta);
 6f2:	9909      	ldr	r1, [sp, #36]
 6f4:	4640      	mov	r0, r8
 6f6:	f7ff fffe 	bl	0 <__aeabi_fmul>
 6fa:	4631      	mov	r1, r6
 6fc:	4604      	mov	r4, r0
 6fe:	980b      	ldr	r0, [sp, #44]
 700:	f7ff fffe 	bl	0 <__aeabi_fmul>
 704:	4601      	mov	r1, r0
 706:	4620      	mov	r0, r4
 708:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:365
		  
		  // Compute Kalman gain: L = PC^T * (R + CPC^T)^(-1)
		  MatTrans3x3( &C, &Ctrans );
 70c:	ae47      	add	r6, sp, #284
 70e:	ac3e      	add	r4, sp, #248
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:366
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
 710:	ad35      	add	r5, sp, #212
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:362
		  C.data[1][1] = ax*cos_psi*cos_theta*sin_phi - az*sin_phi*sin_theta + ay*cos_theta*sin_phi*sin_psi;
		  C.data[1][2] = -ax*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - ay*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta);
		  
		  C.data[2][0] = ax*(cos_phi*sin_psi - cos_psi*sin_phi*sin_theta) - ay*(cos_phi*cos_psi + sin_phi*sin_psi*sin_theta) - az*cos_theta*sin_phi;
		  C.data[2][1] = ax*cos_phi*cos_psi*cos_theta - az*cos_phi*sin_theta + ay*cos_phi*cos_theta*sin_psi;
		  C.data[2][2] = ax*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + ay*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta);
 712:	904f      	str	r0, [sp, #316]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:365
		  
		  // Compute Kalman gain: L = PC^T * (R + CPC^T)^(-1)
		  MatTrans3x3( &C, &Ctrans );
 714:	4621      	mov	r1, r4
 716:	4630      	mov	r0, r6
 718:	f7ff fffe 	bl	0 <MatTrans3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:366
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
 71c:	4621      	mov	r1, r4
 71e:	462a      	mov	r2, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:367
		  MatMult3x3( &C, &PCtrans, &temp );
 720:	ac23      	add	r4, sp, #140
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:366
		  C.data[2][1] = ax*cos_phi*cos_psi*cos_theta - az*cos_phi*sin_theta + ay*cos_phi*cos_theta*sin_psi;
		  C.data[2][2] = ax*(cos_psi*sin_phi - cos_phi*sin_psi*sin_theta) + ay*(sin_phi*sin_psi + cos_phi*cos_psi*sin_theta);
		  
		  // Compute Kalman gain: L = PC^T * (R + CPC^T)^(-1)
		  MatTrans3x3( &C, &Ctrans );
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
 722:	9817      	ldr	r0, [sp, #92]
 724:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:367
		  MatMult3x3( &C, &PCtrans, &temp );
 728:	4629      	mov	r1, r5
 72a:	4622      	mov	r2, r4
 72c:	4630      	mov	r0, r6
 72e:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:368
		  MatAdd3x3( &temp, &estimated_states->Racc, &temp );
 732:	4622      	mov	r2, r4
 734:	f10b 013c 	add.w	r1, fp, #60	; 0x3c
 738:	4620      	mov	r0, r4
 73a:	f7ff fffe 	bl	0 <MatAdd3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:370
		  MatInv3x3( &temp, &temp );
		  MatMult3x3( &PCtrans, &temp, &L );		
 73e:	f50d 78a0 	add.w	r8, sp, #320	; 0x140
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:369
		  // Compute Kalman gain: L = PC^T * (R + CPC^T)^(-1)
		  MatTrans3x3( &C, &Ctrans );
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
		  MatMult3x3( &C, &PCtrans, &temp );
		  MatAdd3x3( &temp, &estimated_states->Racc, &temp );
		  MatInv3x3( &temp, &temp );
 742:	4621      	mov	r1, r4
 744:	4620      	mov	r0, r4
 746:	f7ff fffe 	bl	0 <MatInv3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:370
		  MatMult3x3( &PCtrans, &temp, &L );		
 74a:	4621      	mov	r1, r4
 74c:	4642      	mov	r2, r8
 74e:	4628      	mov	r0, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:373

		  // Compute new covariance
		  MatMult3x3( &L, &C, &LC );
 750:	ad2c      	add	r5, sp, #176
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:370
		  MatTrans3x3( &C, &Ctrans );
		  MatMult3x3( &estimated_states->P, &Ctrans, &PCtrans );
		  MatMult3x3( &C, &PCtrans, &temp );
		  MatAdd3x3( &temp, &estimated_states->Racc, &temp );
		  MatInv3x3( &temp, &temp );
		  MatMult3x3( &PCtrans, &temp, &L );		
 752:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:373

		  // Compute new covariance
		  MatMult3x3( &L, &C, &LC );
 756:	4631      	mov	r1, r6
 758:	462a      	mov	r2, r5
 75a:	4640      	mov	r0, r8
 75c:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:374
		  ScalarMatMult3x3( -1, &LC, &temp );
 760:	f240 0000 	movw	r0, #0	; 0x0
 764:	4629      	mov	r1, r5
 766:	4622      	mov	r2, r4
 768:	f6cb 7080 	movt	r0, #49024	; 0xbf80
 76c:	f7ff fffe 	bl	0 <ScalarMatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:375
		  MatAdd3x3( &I, &temp, &temp );
 770:	4621      	mov	r1, r4
 772:	4622      	mov	r2, r4
 774:	a81a      	add	r0, sp, #104
 776:	f7ff fffe 	bl	0 <MatAdd3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:376
		  MatMult3x3( &temp, &estimated_states->P, &estimated_states->P );
 77a:	9917      	ldr	r1, [sp, #92]
 77c:	4620      	mov	r0, r4
 77e:	460a      	mov	r2, r1
 780:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:379
		  
		  fvect3x1 acc_vect, correction;
		  acc_vect.data[0] = sensor_data->accel_x;
 784:	9b16      	ldr	r3, [sp, #88]
 786:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 78a:	f7ff fffe 	bl	0 <__aeabi_i2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:380
		  acc_vect.data[1] = sensor_data->accel_y;
 78e:	9a16      	ldr	r2, [sp, #88]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:379
		  ScalarMatMult3x3( -1, &LC, &temp );
		  MatAdd3x3( &I, &temp, &temp );
		  MatMult3x3( &temp, &estimated_states->P, &estimated_states->P );
		  
		  fvect3x1 acc_vect, correction;
		  acc_vect.data[0] = sensor_data->accel_x;
 790:	4604      	mov	r4, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:380
		  acc_vect.data[1] = sensor_data->accel_y;
 792:	f9b2 0008 	ldrsh.w	r0, [r2, #8]
 796:	f7ff fffe 	bl	0 <__aeabi_i2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:381
		  acc_vect.data[2] = sensor_data->accel_z;
 79a:	9b16      	ldr	r3, [sp, #88]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:380
		  MatAdd3x3( &I, &temp, &temp );
		  MatMult3x3( &temp, &estimated_states->P, &estimated_states->P );
		  
		  fvect3x1 acc_vect, correction;
		  acc_vect.data[0] = sensor_data->accel_x;
		  acc_vect.data[1] = sensor_data->accel_y;
 79c:	4605      	mov	r5, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:381
		  acc_vect.data[2] = sensor_data->accel_z;
 79e:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 7a2:	f7ff fffe 	bl	0 <__aeabi_i2f>
 7a6:	4606      	mov	r6, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:384
		  
		  // Subtract accel bias
		  acc_vect.data[0] = acc_vect.data[0] - (float)gConfig.x_accel_bias;
 7a8:	f9b7 0000 	ldrsh.w	r0, [r7]
 7ac:	f7ff fffe 	bl	0 <__aeabi_i2f>
 7b0:	4601      	mov	r1, r0
 7b2:	4620      	mov	r0, r4
 7b4:	f7ff fffe 	bl	0 <__aeabi_fsub>
 7b8:	9065      	str	r0, [sp, #404]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:385
		  acc_vect.data[1] = acc_vect.data[1] - (float)gConfig.y_accel_bias;
 7ba:	f9b7 0002 	ldrsh.w	r0, [r7, #2]
 7be:	f7ff fffe 	bl	0 <__aeabi_i2f>
 7c2:	4601      	mov	r1, r0
 7c4:	4628      	mov	r0, r5
 7c6:	f7ff fffe 	bl	0 <__aeabi_fsub>
 7ca:	9066      	str	r0, [sp, #408]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:386
		  acc_vect.data[2] = acc_vect.data[2] - (float)gConfig.z_accel_bias;
 7cc:	f9b7 0004 	ldrsh.w	r0, [r7, #4]
 7d0:	f7ff fffe 	bl	0 <__aeabi_i2f>
 7d4:	4601      	mov	r1, r0
 7d6:	4630      	mov	r0, r6
 7d8:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:389
		  
		  // Apply alignment correction
		  MatVectMult3( &gConfig.accel_alignment, &acc_vect, &acc_vect );
 7dc:	ac65      	add	r4, sp, #404
 7de:	4622      	mov	r2, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:386
		  acc_vect.data[2] = sensor_data->accel_z;
		  
		  // Subtract accel bias
		  acc_vect.data[0] = acc_vect.data[0] - (float)gConfig.x_accel_bias;
		  acc_vect.data[1] = acc_vect.data[1] - (float)gConfig.y_accel_bias;
		  acc_vect.data[2] = acc_vect.data[2] - (float)gConfig.z_accel_bias;
 7e0:	9067      	str	r0, [sp, #412]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:389
		  
		  // Apply alignment correction
		  MatVectMult3( &gConfig.accel_alignment, &acc_vect, &acc_vect );
 7e2:	4621      	mov	r1, r4
 7e4:	f107 0054 	add.w	r0, r7, #84	; 0x54
 7e8:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:392
		  
		  // Now subtract the reference vector
		  acc_vect.data[0] = acc_vect.data[0] - acc_hat.data[0];
 7ec:	9865      	ldr	r0, [sp, #404]
 7ee:	9962      	ldr	r1, [sp, #392]
 7f0:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:393
		  acc_vect.data[1] = acc_vect.data[1] - acc_hat.data[1];
 7f4:	9963      	ldr	r1, [sp, #396]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:392
		  
		  // Apply alignment correction
		  MatVectMult3( &gConfig.accel_alignment, &acc_vect, &acc_vect );
		  
		  // Now subtract the reference vector
		  acc_vect.data[0] = acc_vect.data[0] - acc_hat.data[0];
 7f6:	9065      	str	r0, [sp, #404]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:393
		  acc_vect.data[1] = acc_vect.data[1] - acc_hat.data[1];
 7f8:	9866      	ldr	r0, [sp, #408]
 7fa:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:394
		  acc_vect.data[2] = acc_vect.data[2] - acc_hat.data[2];
 7fe:	9964      	ldr	r1, [sp, #400]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:393
		  // Apply alignment correction
		  MatVectMult3( &gConfig.accel_alignment, &acc_vect, &acc_vect );
		  
		  // Now subtract the reference vector
		  acc_vect.data[0] = acc_vect.data[0] - acc_hat.data[0];
		  acc_vect.data[1] = acc_vect.data[1] - acc_hat.data[1];
 800:	9066      	str	r0, [sp, #408]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:394
		  acc_vect.data[2] = acc_vect.data[2] - acc_hat.data[2];
 802:	9867      	ldr	r0, [sp, #412]
 804:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:397
		  
		  // Multiply by Kalman gain
		  MatVectMult3( &L, &acc_vect, &correction );
 808:	aa68      	add	r2, sp, #416
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:394
		  MatVectMult3( &gConfig.accel_alignment, &acc_vect, &acc_vect );
		  
		  // Now subtract the reference vector
		  acc_vect.data[0] = acc_vect.data[0] - acc_hat.data[0];
		  acc_vect.data[1] = acc_vect.data[1] - acc_hat.data[1];
		  acc_vect.data[2] = acc_vect.data[2] - acc_hat.data[2];
 80a:	9067      	str	r0, [sp, #412]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:397
		  
		  // Multiply by Kalman gain
		  MatVectMult3( &L, &acc_vect, &correction );
 80c:	4621      	mov	r1, r4
 80e:	4640      	mov	r0, r8
 810:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:400
		  
		  // Apply correction
		  estimated_states->phi = estimated_states->phi + correction.data[0];
 814:	f8db 0008 	ldr.w	r0, [fp, #8]
 818:	9968      	ldr	r1, [sp, #416]
 81a:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:401
		  estimated_states->theta = estimated_states->theta + correction.data[1];
 81e:	9969      	ldr	r1, [sp, #420]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:400
		  
		  // Multiply by Kalman gain
		  MatVectMult3( &L, &acc_vect, &correction );
		  
		  // Apply correction
		  estimated_states->phi = estimated_states->phi + correction.data[0];
 820:	f8cb 0008 	str.w	r0, [fp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:401
		  estimated_states->theta = estimated_states->theta + correction.data[1];
 824:	f8db 0004 	ldr.w	r0, [fp, #4]
 828:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:402
		  estimated_states->psi = estimated_states->psi + correction.data[2];
 82c:	996a      	ldr	r1, [sp, #424]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:401
		  // Multiply by Kalman gain
		  MatVectMult3( &L, &acc_vect, &correction );
		  
		  // Apply correction
		  estimated_states->phi = estimated_states->phi + correction.data[0];
		  estimated_states->theta = estimated_states->theta + correction.data[1];
 82e:	f8cb 0004 	str.w	r0, [fp, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:402
		  estimated_states->psi = estimated_states->psi + correction.data[2];
 832:	f8db 0000 	ldr.w	r0, [fp]
 836:	f7ff fffe 	bl	0 <__aeabi_fadd>
 83a:	f8cb 0000 	str.w	r0, [fp]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:405
		  
		  // "Unroll" angle estimates to be in the range from -360 to 360 degrees
		  unroll_states( estimated_states );
 83e:	4658      	mov	r0, fp
 840:	f7ff fffe 	bl	0 <EKF_Update>
 844:	f7ff bbf2 	b.w	2c <EKF_Update+0x2c>
Disassembly of section .text.EKF_Predict:

00000000 <EKF_Predict>:
EKF_Predict():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:163
* Return         : None
* Description    : EKF prediction step.  Uses rate gyros to make new orientation
						 estimate.
*******************************************************************************/
void EKF_Predict( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:206
	 TIM_SetCounter(TIM3,0);
	 TIM_Cmd(TIM3, ENABLE);
	 
	 T = (float)(0.000001)*(float)timer_value;
	 
	 float cos_phi = cos(phi*3.14159/180);
   4:	f20f 29b8 	addw	r9, pc, #696	; 0x2b8
   8:	e9d9 8900 	ldrd	r8, r9, [r9]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:163
* Return         : None
* Description    : EKF prediction step.  Uses rate gyros to make new orientation
						 estimate.
*******************************************************************************/
void EKF_Predict( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
   c:	b0bf      	sub	sp, #252
   e:	4607      	mov	r7, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:177
	 
	 int32_t i;
	 
	 // Multiply gyro outputs by gyro alignment matrix
	 fvect3x1 pqr;
	 pqr.data[0] = gConfig.x_gyro_scale*(float)sensor_data->gyro_x;
  10:	f9b1 0000 	ldrsh.w	r0, [r1]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:163
* Return         : None
* Description    : EKF prediction step.  Uses rate gyros to make new orientation
						 estimate.
*******************************************************************************/
void EKF_Predict( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
  14:	460d      	mov	r5, r1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:177
	 
	 int32_t i;
	 
	 // Multiply gyro outputs by gyro alignment matrix
	 fvect3x1 pqr;
	 pqr.data[0] = gConfig.x_gyro_scale*(float)sensor_data->gyro_x;
  16:	f7ff fffe 	bl	0 <__aeabi_i2f>
  1a:	f240 0400 	movw	r4, #0	; 0x0
  1e:	f2c0 0400 	movt	r4, #0	; 0x0
  22:	4601      	mov	r1, r0
  24:	68a0      	ldr	r0, [r4, #8]
  26:	f7ff fffe 	bl	0 <__aeabi_fmul>
  2a:	903b      	str	r0, [sp, #236]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:178
	 pqr.data[1] = gConfig.y_gyro_scale*(float)sensor_data->gyro_y;
  2c:	f9b5 0002 	ldrsh.w	r0, [r5, #2]
  30:	f7ff fffe 	bl	0 <__aeabi_i2f>
  34:	4601      	mov	r1, r0
  36:	68e0      	ldr	r0, [r4, #12]
  38:	f7ff fffe 	bl	0 <__aeabi_fmul>
  3c:	903c      	str	r0, [sp, #240]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:179
	 pqr.data[2] = gConfig.z_gyro_scale*(float)sensor_data->gyro_z;
  3e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
  42:	f7ff fffe 	bl	0 <__aeabi_i2f>
  46:	4601      	mov	r1, r0
  48:	6920      	ldr	r0, [r4, #16]
  4a:	f7ff fffe 	bl	0 <__aeabi_fmul>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:181
	 
	 MatVectMult3( &gConfig.gyro_alignment, &pqr, &pqr );
  4e:	a93b      	add	r1, sp, #236
  50:	460a      	mov	r2, r1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:179
	 
	 // Multiply gyro outputs by gyro alignment matrix
	 fvect3x1 pqr;
	 pqr.data[0] = gConfig.x_gyro_scale*(float)sensor_data->gyro_x;
	 pqr.data[1] = gConfig.y_gyro_scale*(float)sensor_data->gyro_y;
	 pqr.data[2] = gConfig.z_gyro_scale*(float)sensor_data->gyro_z;
  52:	903d      	str	r0, [sp, #244]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:181
	 
	 MatVectMult3( &gConfig.gyro_alignment, &pqr, &pqr );
  54:	f104 0030 	add.w	r0, r4, #48	; 0x30
  58:	f7ff fffe 	bl	0 <MatVectMult3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:184
	 
	 // Retrieve angular rates from vector
	 p = pqr.data[0];
  5c:	9b3b      	ldr	r3, [sp, #236]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:199
	 // to increment once every microsecond.  It is a 16-bit timer, which means
	 // that a maximum of 2^16 = 65536 microseconds can pass before overflow.
	 // The prediction step should thus be run at least once every 65 milliseconds (15.6 Hz),
	 // but preferably more quickly.  This shouldn't be a problem - the prediction step
	 // should nominally run at roughly 400 Hz or greater).
	 TIM_Cmd(TIM3, DISABLE);
  5e:	f240 4400 	movw	r4, #1024	; 0x400
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:184
	 pqr.data[2] = gConfig.z_gyro_scale*(float)sensor_data->gyro_z;
	 
	 MatVectMult3( &gConfig.gyro_alignment, &pqr, &pqr );
	 
	 // Retrieve angular rates from vector
	 p = pqr.data[0];
  62:	930b      	str	r3, [sp, #44]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:185
	 q = pqr.data[1];
  64:	9b3c      	ldr	r3, [sp, #240]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:199
	 // to increment once every microsecond.  It is a 16-bit timer, which means
	 // that a maximum of 2^16 = 65536 microseconds can pass before overflow.
	 // The prediction step should thus be run at least once every 65 milliseconds (15.6 Hz),
	 // but preferably more quickly.  This shouldn't be a problem - the prediction step
	 // should nominally run at roughly 400 Hz or greater).
	 TIM_Cmd(TIM3, DISABLE);
  66:	f2c4 0400 	movt	r4, #16384	; 0x4000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:185
	 
	 MatVectMult3( &gConfig.gyro_alignment, &pqr, &pqr );
	 
	 // Retrieve angular rates from vector
	 p = pqr.data[0];
	 q = pqr.data[1];
  6a:	930c      	str	r3, [sp, #48]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:186
	 r = pqr.data[2];
  6c:	9b3d      	ldr	r3, [sp, #244]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:199
	 // to increment once every microsecond.  It is a 16-bit timer, which means
	 // that a maximum of 2^16 = 65536 microseconds can pass before overflow.
	 // The prediction step should thus be run at least once every 65 milliseconds (15.6 Hz),
	 // but preferably more quickly.  This shouldn't be a problem - the prediction step
	 // should nominally run at roughly 400 Hz or greater).
	 TIM_Cmd(TIM3, DISABLE);
  6e:	2100      	movs	r1, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:186
	 MatVectMult3( &gConfig.gyro_alignment, &pqr, &pqr );
	 
	 // Retrieve angular rates from vector
	 p = pqr.data[0];
	 q = pqr.data[1];
	 r = pqr.data[2];
  70:	930d      	str	r3, [sp, #52]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:189

	 // Get current state estimates
	 phi = estimated_states->phi;
  72:	68bb      	ldr	r3, [r7, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:199
	 // to increment once every microsecond.  It is a 16-bit timer, which means
	 // that a maximum of 2^16 = 65536 microseconds can pass before overflow.
	 // The prediction step should thus be run at least once every 65 milliseconds (15.6 Hz),
	 // but preferably more quickly.  This shouldn't be a problem - the prediction step
	 // should nominally run at roughly 400 Hz or greater).
	 TIM_Cmd(TIM3, DISABLE);
  74:	4620      	mov	r0, r4
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:189
	 p = pqr.data[0];
	 q = pqr.data[1];
	 r = pqr.data[2];

	 // Get current state estimates
	 phi = estimated_states->phi;
  76:	9308      	str	r3, [sp, #32]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:190
	 theta = estimated_states->theta;
  78:	687b      	ldr	r3, [r7, #4]
  7a:	9309      	str	r3, [sp, #36]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:191
	 psi = estimated_states->psi;
  7c:	683b      	ldr	r3, [r7, #0]
  7e:	930a      	str	r3, [sp, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:199
	 // to increment once every microsecond.  It is a 16-bit timer, which means
	 // that a maximum of 2^16 = 65536 microseconds can pass before overflow.
	 // The prediction step should thus be run at least once every 65 milliseconds (15.6 Hz),
	 // but preferably more quickly.  This shouldn't be a problem - the prediction step
	 // should nominally run at roughly 400 Hz or greater).
	 TIM_Cmd(TIM3, DISABLE);
  80:	f7ff fffe 	bl	0 <TIM_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:200
	 timer_value = TIM_GetCounter(TIM3);
  84:	4620      	mov	r0, r4
  86:	f7ff fffe 	bl	0 <TIM_GetCounter>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:201
	 TIM_SetCounter(TIM3,0);
  8a:	2100      	movs	r1, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:200
	 // that a maximum of 2^16 = 65536 microseconds can pass before overflow.
	 // The prediction step should thus be run at least once every 65 milliseconds (15.6 Hz),
	 // but preferably more quickly.  This shouldn't be a problem - the prediction step
	 // should nominally run at roughly 400 Hz or greater).
	 TIM_Cmd(TIM3, DISABLE);
	 timer_value = TIM_GetCounter(TIM3);
  8c:	4605      	mov	r5, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:201
	 TIM_SetCounter(TIM3,0);
  8e:	4620      	mov	r0, r4
  90:	f7ff fffe 	bl	0 <TIM_SetCounter>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:202
	 TIM_Cmd(TIM3, ENABLE);
  94:	2101      	movs	r1, #1
  96:	4620      	mov	r0, r4
  98:	f7ff fffe 	bl	0 <TIM_Cmd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:204
	 
	 T = (float)(0.000001)*(float)timer_value;
  9c:	4628      	mov	r0, r5
  9e:	f7ff fffe 	bl	0 <__aeabi_ui2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:206
	 
	 float cos_phi = cos(phi*3.14159/180);
  a2:	a589      	add	r5, pc, #548	(adr r5, 2c8 <EKF_Predict+0x2c8>)
  a4:	e9d5 4500 	ldrd	r4, r5, [r5]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:204
	 TIM_Cmd(TIM3, DISABLE);
	 timer_value = TIM_GetCounter(TIM3);
	 TIM_SetCounter(TIM3,0);
	 TIM_Cmd(TIM3, ENABLE);
	 
	 T = (float)(0.000001)*(float)timer_value;
  a8:	f243 71bd 	movw	r1, #14269	; 0x37bd
  ac:	f2c3 5186 	movt	r1, #13702	; 0x3586
  b0:	f7ff fffe 	bl	0 <__aeabi_fmul>
  b4:	9007      	str	r0, [sp, #28]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:206
	 
	 float cos_phi = cos(phi*3.14159/180);
  b6:	9808      	ldr	r0, [sp, #32]
  b8:	f7ff fffe 	bl	0 <__aeabi_f2d>
  bc:	4642      	mov	r2, r8
  be:	464b      	mov	r3, r9
  c0:	f7ff fffe 	bl	0 <__aeabi_dmul>
  c4:	4622      	mov	r2, r4
  c6:	462b      	mov	r3, r5
  c8:	f7ff fffe 	bl	0 <__aeabi_ddiv>
  cc:	4682      	mov	sl, r0
  ce:	468b      	mov	fp, r1
  d0:	f7ff fffe 	bl	0 <cos>
  d4:	f7ff fffe 	bl	0 <__aeabi_d2f>
  d8:	9006      	str	r0, [sp, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:207
	 float tan_theta = tan(theta*3.14159/180);
  da:	9809      	ldr	r0, [sp, #36]
  dc:	f7ff fffe 	bl	0 <__aeabi_f2d>
  e0:	4642      	mov	r2, r8
  e2:	464b      	mov	r3, r9
  e4:	f7ff fffe 	bl	0 <__aeabi_dmul>
  e8:	4622      	mov	r2, r4
  ea:	462b      	mov	r3, r5
  ec:	f7ff fffe 	bl	0 <__aeabi_ddiv>
  f0:	4604      	mov	r4, r0
  f2:	460d      	mov	r5, r1
  f4:	f7ff fffe 	bl	0 <tan>
  f8:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:208
	 float sin_phi = sin(phi*3.14159/180);
  fc:	4659      	mov	r1, fp
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:207
	 TIM_Cmd(TIM3, ENABLE);
	 
	 T = (float)(0.000001)*(float)timer_value;
	 
	 float cos_phi = cos(phi*3.14159/180);
	 float tan_theta = tan(theta*3.14159/180);
  fe:	4606      	mov	r6, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:208
	 float sin_phi = sin(phi*3.14159/180);
 100:	4650      	mov	r0, sl
 102:	f7ff fffe 	bl	0 <sin>
 106:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:209
	 float cos_theta = cos(theta*3.14159/180);
 10a:	4629      	mov	r1, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:208
	 
	 T = (float)(0.000001)*(float)timer_value;
	 
	 float cos_phi = cos(phi*3.14159/180);
	 float tan_theta = tan(theta*3.14159/180);
	 float sin_phi = sin(phi*3.14159/180);
 10c:	4680      	mov	r8, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:209
	 float cos_theta = cos(theta*3.14159/180);
 10e:	4620      	mov	r0, r4
 110:	f7ff fffe 	bl	0 <cos>
 114:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:210
	 float sin_theta = sin(theta*3.14159/180);
 118:	4629      	mov	r1, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:209
	 T = (float)(0.000001)*(float)timer_value;
	 
	 float cos_phi = cos(phi*3.14159/180);
	 float tan_theta = tan(theta*3.14159/180);
	 float sin_phi = sin(phi*3.14159/180);
	 float cos_theta = cos(theta*3.14159/180);
 11a:	4681      	mov	r9, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:210
	 float sin_theta = sin(theta*3.14159/180);
 11c:	4620      	mov	r0, r4
 11e:	f7ff fffe 	bl	0 <sin>
 122:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:214
	 
	 // Compute expected angle rates based on gyro outputs.  Note that to do this, the measured rotations
	 // must be transformed into the inertial frame (we can't just integrate the gyro outputs).
	 phi_dot = p + sin_phi*tan_theta*q + cos_phi*tan_theta*r;
 126:	4631      	mov	r1, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:210
	 
	 float cos_phi = cos(phi*3.14159/180);
	 float tan_theta = tan(theta*3.14159/180);
	 float sin_phi = sin(phi*3.14159/180);
	 float cos_theta = cos(theta*3.14159/180);
	 float sin_theta = sin(theta*3.14159/180);
 128:	9005      	str	r0, [sp, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:214
	 
	 // Compute expected angle rates based on gyro outputs.  Note that to do this, the measured rotations
	 // must be transformed into the inertial frame (we can't just integrate the gyro outputs).
	 phi_dot = p + sin_phi*tan_theta*q + cos_phi*tan_theta*r;
 12a:	4640      	mov	r0, r8
 12c:	f7ff fffe 	bl	0 <__aeabi_fmul>
 130:	990c      	ldr	r1, [sp, #48]
 132:	f7ff fffe 	bl	0 <__aeabi_fmul>
 136:	990b      	ldr	r1, [sp, #44]
 138:	f7ff fffe 	bl	0 <__aeabi_fadd>
 13c:	4631      	mov	r1, r6
 13e:	4604      	mov	r4, r0
 140:	9806      	ldr	r0, [sp, #24]
 142:	f7ff fffe 	bl	0 <__aeabi_fmul>
 146:	990d      	ldr	r1, [sp, #52]
 148:	f7ff fffe 	bl	0 <__aeabi_fmul>
 14c:	4601      	mov	r1, r0
 14e:	4620      	mov	r0, r4
 150:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:215
	 theta_dot = cos_phi*q - sin_phi*r;
 154:	990c      	ldr	r1, [sp, #48]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:214
	 float cos_theta = cos(theta*3.14159/180);
	 float sin_theta = sin(theta*3.14159/180);
	 
	 // Compute expected angle rates based on gyro outputs.  Note that to do this, the measured rotations
	 // must be transformed into the inertial frame (we can't just integrate the gyro outputs).
	 phi_dot = p + sin_phi*tan_theta*q + cos_phi*tan_theta*r;
 156:	9004      	str	r0, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:215
	 theta_dot = cos_phi*q - sin_phi*r;
 158:	9806      	ldr	r0, [sp, #24]
 15a:	f7ff fffe 	bl	0 <__aeabi_fmul>
 15e:	990d      	ldr	r1, [sp, #52]
 160:	4682      	mov	sl, r0
 162:	4640      	mov	r0, r8
 164:	f7ff fffe 	bl	0 <__aeabi_fmul>
 168:	4683      	mov	fp, r0
 16a:	4659      	mov	r1, fp
 16c:	4650      	mov	r0, sl
 16e:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:216
	 psi_dot = (sin_phi/cos_theta)*q + (cos_phi/cos_theta)*r;
 172:	4649      	mov	r1, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:215
	 float sin_theta = sin(theta*3.14159/180);
	 
	 // Compute expected angle rates based on gyro outputs.  Note that to do this, the measured rotations
	 // must be transformed into the inertial frame (we can't just integrate the gyro outputs).
	 phi_dot = p + sin_phi*tan_theta*q + cos_phi*tan_theta*r;
	 theta_dot = cos_phi*q - sin_phi*r;
 174:	9003      	str	r0, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:216
	 psi_dot = (sin_phi/cos_theta)*q + (cos_phi/cos_theta)*r;
 176:	4640      	mov	r0, r8
 178:	f7ff fffe 	bl	0 <__aeabi_fdiv>
 17c:	990c      	ldr	r1, [sp, #48]
 17e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 182:	4649      	mov	r1, r9
 184:	4604      	mov	r4, r0
 186:	9806      	ldr	r0, [sp, #24]
 188:	f7ff fffe 	bl	0 <__aeabi_fdiv>
 18c:	990d      	ldr	r1, [sp, #52]
 18e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 192:	4601      	mov	r1, r0
 194:	4620      	mov	r0, r4
 196:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:218
	 
	 estimated_states->phi_dot = phi_dot;
 19a:	9b04      	ldr	r3, [sp, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:216
	 
	 // Compute expected angle rates based on gyro outputs.  Note that to do this, the measured rotations
	 // must be transformed into the inertial frame (we can't just integrate the gyro outputs).
	 phi_dot = p + sin_phi*tan_theta*q + cos_phi*tan_theta*r;
	 theta_dot = cos_phi*q - sin_phi*r;
	 psi_dot = (sin_phi/cos_theta)*q + (cos_phi/cos_theta)*r;
 19c:	9002      	str	r0, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:218
	 
	 estimated_states->phi_dot = phi_dot;
 19e:	617b      	str	r3, [r7, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:219
	 estimated_states->theta_dot = theta_dot;
 1a0:	9b03      	ldr	r3, [sp, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:235
	 [                         - r*cos(phi) - q*sin(phi),                                                                           0, 0]
	 [ (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta), (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2, 0]
	 */
	 
//	 A.data[0][0] = q*cos(phi)*tan(theta) - r*sin(phi)*tan(theta);
	 A.data[0][0] = q*cos_phi*tan_theta - r*sin_phi*tan_theta;
 1a2:	4630      	mov	r0, r6
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:219
	 phi_dot = p + sin_phi*tan_theta*q + cos_phi*tan_theta*r;
	 theta_dot = cos_phi*q - sin_phi*r;
	 psi_dot = (sin_phi/cos_theta)*q + (cos_phi/cos_theta)*r;
	 
	 estimated_states->phi_dot = phi_dot;
	 estimated_states->theta_dot = theta_dot;
 1a4:	613b      	str	r3, [r7, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:220
	 estimated_states->psi_dot = psi_dot;
 1a6:	9b02      	ldr	r3, [sp, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:235
	 [                         - r*cos(phi) - q*sin(phi),                                                                           0, 0]
	 [ (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta), (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2, 0]
	 */
	 
//	 A.data[0][0] = q*cos(phi)*tan(theta) - r*sin(phi)*tan(theta);
	 A.data[0][0] = q*cos_phi*tan_theta - r*sin_phi*tan_theta;
 1a8:	4651      	mov	r1, sl
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:220
	 theta_dot = cos_phi*q - sin_phi*r;
	 psi_dot = (sin_phi/cos_theta)*q + (cos_phi/cos_theta)*r;
	 
	 estimated_states->phi_dot = phi_dot;
	 estimated_states->theta_dot = theta_dot;
	 estimated_states->psi_dot = psi_dot;
 1aa:	60fb      	str	r3, [r7, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:235
	 [                         - r*cos(phi) - q*sin(phi),                                                                           0, 0]
	 [ (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta), (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2, 0]
	 */
	 
//	 A.data[0][0] = q*cos(phi)*tan(theta) - r*sin(phi)*tan(theta);
	 A.data[0][0] = q*cos_phi*tan_theta - r*sin_phi*tan_theta;
 1ac:	f7ff fffe 	bl	0 <__aeabi_fmul>
 1b0:	4659      	mov	r1, fp
 1b2:	4604      	mov	r4, r0
 1b4:	4630      	mov	r0, r6
 1b6:	f7ff fffe 	bl	0 <__aeabi_fmul>
 1ba:	4601      	mov	r1, r0
 1bc:	4620      	mov	r0, r4
 1be:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:238
	 
//	 A.data[0][1] = r*cos(phi)*(tan(theta)^2 + 1) + q*sin(phi)*(tan(theta)^2 + 1);
	 A.data[0][1] = r*cos_phi*(tan_theta*tan_theta + 1) + q*sin_phi*(tan_theta*tan_theta + 1);
 1c2:	9906      	ldr	r1, [sp, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:235
	 [                         - r*cos(phi) - q*sin(phi),                                                                           0, 0]
	 [ (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta), (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2, 0]
	 */
	 
//	 A.data[0][0] = q*cos(phi)*tan(theta) - r*sin(phi)*tan(theta);
	 A.data[0][0] = q*cos_phi*tan_theta - r*sin_phi*tan_theta;
 1c4:	9032      	str	r0, [sp, #200]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:238
	 
//	 A.data[0][1] = r*cos(phi)*(tan(theta)^2 + 1) + q*sin(phi)*(tan(theta)^2 + 1);
	 A.data[0][1] = r*cos_phi*(tan_theta*tan_theta + 1) + q*sin_phi*(tan_theta*tan_theta + 1);
 1c6:	980d      	ldr	r0, [sp, #52]
 1c8:	f7ff fffe 	bl	0 <__aeabi_fmul>
 1cc:	4631      	mov	r1, r6
 1ce:	9001      	str	r0, [sp, #4]
 1d0:	4630      	mov	r0, r6
 1d2:	f7ff fffe 	bl	0 <__aeabi_fmul>
 1d6:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 1da:	f7ff fffe 	bl	0 <__aeabi_fadd>
 1de:	4641      	mov	r1, r8
 1e0:	4605      	mov	r5, r0
 1e2:	980c      	ldr	r0, [sp, #48]
 1e4:	f7ff fffe 	bl	0 <__aeabi_fmul>
 1e8:	4629      	mov	r1, r5
 1ea:	4606      	mov	r6, r0
 1ec:	9801      	ldr	r0, [sp, #4]
 1ee:	f7ff fffe 	bl	0 <__aeabi_fmul>
 1f2:	4631      	mov	r1, r6
 1f4:	4604      	mov	r4, r0
 1f6:	4628      	mov	r0, r5
 1f8:	f7ff fffe 	bl	0 <__aeabi_fmul>
 1fc:	4601      	mov	r1, r0
 1fe:	4620      	mov	r0, r4
 200:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:243
	 
	 A.data[0][2] = 0;
	 
//	 A.data[1][0] = -r*cos(phi) - q*sin(phi);
	 A.data[1][0] = -r*cos_phi - q*sin_phi;
 204:	9b0d      	ldr	r3, [sp, #52]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:240
	 A.data[0][0] = q*cos_phi*tan_theta - r*sin_phi*tan_theta;
	 
//	 A.data[0][1] = r*cos(phi)*(tan(theta)^2 + 1) + q*sin(phi)*(tan(theta)^2 + 1);
	 A.data[0][1] = r*cos_phi*(tan_theta*tan_theta + 1) + q*sin_phi*(tan_theta*tan_theta + 1);
	 
	 A.data[0][2] = 0;
 206:	f04f 0800 	mov.w	r8, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:243
	 
//	 A.data[1][0] = -r*cos(phi) - q*sin(phi);
	 A.data[1][0] = -r*cos_phi - q*sin_phi;
 20a:	9906      	ldr	r1, [sp, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:238
	 
//	 A.data[0][0] = q*cos(phi)*tan(theta) - r*sin(phi)*tan(theta);
	 A.data[0][0] = q*cos_phi*tan_theta - r*sin_phi*tan_theta;
	 
//	 A.data[0][1] = r*cos(phi)*(tan(theta)^2 + 1) + q*sin(phi)*(tan(theta)^2 + 1);
	 A.data[0][1] = r*cos_phi*(tan_theta*tan_theta + 1) + q*sin_phi*(tan_theta*tan_theta + 1);
 20c:	9033      	str	r0, [sp, #204]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:243
	 
	 A.data[0][2] = 0;
	 
//	 A.data[1][0] = -r*cos(phi) - q*sin(phi);
	 A.data[1][0] = -r*cos_phi - q*sin_phi;
 20e:	f103 4000 	add.w	r0, r3, #2147483648	; 0x80000000
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:240
	 A.data[0][0] = q*cos_phi*tan_theta - r*sin_phi*tan_theta;
	 
//	 A.data[0][1] = r*cos(phi)*(tan(theta)^2 + 1) + q*sin(phi)*(tan(theta)^2 + 1);
	 A.data[0][1] = r*cos_phi*(tan_theta*tan_theta + 1) + q*sin_phi*(tan_theta*tan_theta + 1);
	 
	 A.data[0][2] = 0;
 212:	f8cd 80d0 	str.w	r8, [sp, #208]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:243
	 
//	 A.data[1][0] = -r*cos(phi) - q*sin(phi);
	 A.data[1][0] = -r*cos_phi - q*sin_phi;
 216:	f7ff fffe 	bl	0 <__aeabi_fmul>
 21a:	4631      	mov	r1, r6
 21c:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:250
	 A.data[1][1] = 0;
	 
	 A.data[1][2] = 0;
	 
//	 A.data[2][0] = (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta);
	 A.data[2][0] = (q*cos_phi)/cos_theta - (r*sin_phi)/cos_theta;
 220:	4649      	mov	r1, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:243
	 A.data[0][1] = r*cos_phi*(tan_theta*tan_theta + 1) + q*sin_phi*(tan_theta*tan_theta + 1);
	 
	 A.data[0][2] = 0;
	 
//	 A.data[1][0] = -r*cos(phi) - q*sin(phi);
	 A.data[1][0] = -r*cos_phi - q*sin_phi;
 222:	9035      	str	r0, [sp, #212]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:250
	 A.data[1][1] = 0;
	 
	 A.data[1][2] = 0;
	 
//	 A.data[2][0] = (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta);
	 A.data[2][0] = (q*cos_phi)/cos_theta - (r*sin_phi)/cos_theta;
 224:	4650      	mov	r0, sl
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:245
	 A.data[0][2] = 0;
	 
//	 A.data[1][0] = -r*cos(phi) - q*sin(phi);
	 A.data[1][0] = -r*cos_phi - q*sin_phi;
	 
	 A.data[1][1] = 0;
 226:	f8cd 80d8 	str.w	r8, [sp, #216]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:247
	 
	 A.data[1][2] = 0;
 22a:	f8cd 80dc 	str.w	r8, [sp, #220]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:250
	 
//	 A.data[2][0] = (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta);
	 A.data[2][0] = (q*cos_phi)/cos_theta - (r*sin_phi)/cos_theta;
 22e:	f7ff fffe 	bl	0 <__aeabi_fdiv>
 232:	4649      	mov	r1, r9
 234:	4604      	mov	r4, r0
 236:	4658      	mov	r0, fp
 238:	f7ff fffe 	bl	0 <__aeabi_fdiv>
 23c:	4601      	mov	r1, r0
 23e:	4620      	mov	r0, r4
 240:	f7ff fffe 	bl	0 <__aeabi_fsub>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:253
	 
//	 A.data[2][1] = (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2;
	 A.data[2][1] = (r*cos_phi*sin_theta)/(cos_theta*cos_theta) + (q*sin_phi*sin_theta)/(cos_theta*cos_theta);
 244:	4649      	mov	r1, r9
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:250
	 A.data[1][1] = 0;
	 
	 A.data[1][2] = 0;
	 
//	 A.data[2][0] = (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta);
	 A.data[2][0] = (q*cos_phi)/cos_theta - (r*sin_phi)/cos_theta;
 246:	9038      	str	r0, [sp, #224]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:253
	 
//	 A.data[2][1] = (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2;
	 A.data[2][1] = (r*cos_phi*sin_theta)/(cos_theta*cos_theta) + (q*sin_phi*sin_theta)/(cos_theta*cos_theta);
 248:	4648      	mov	r0, r9
 24a:	f7ff fffe 	bl	0 <__aeabi_fmul>
 24e:	9901      	ldr	r1, [sp, #4]
 250:	4604      	mov	r4, r0
 252:	9805      	ldr	r0, [sp, #20]
 254:	f7ff fffe 	bl	0 <__aeabi_fmul>
 258:	4621      	mov	r1, r4
 25a:	f7ff fffe 	bl	0 <__aeabi_fdiv>
 25e:	4631      	mov	r1, r6
 260:	4605      	mov	r5, r0
 262:	9805      	ldr	r0, [sp, #20]
 264:	f7ff fffe 	bl	0 <__aeabi_fmul>
 268:	4621      	mov	r1, r4
 26a:	f7ff fffe 	bl	0 <__aeabi_fdiv>
 26e:	4601      	mov	r1, r0
 270:	4628      	mov	r0, r5
 272:	f7ff fffe 	bl	0 <__aeabi_fadd>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:258
	 
	 A.data[2][2] = 0;
	 
	 // Compute new covariance: P = P + T*(AP + PA^T + Q)
	 MatMult3x3( &A, &estimated_states->P, &AP );
 276:	f107 0684 	add.w	r6, r7, #132	; 0x84
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:253
	 
//	 A.data[2][0] = (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta);
	 A.data[2][0] = (q*cos_phi)/cos_theta - (r*sin_phi)/cos_theta;
	 
//	 A.data[2][1] = (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2;
	 A.data[2][1] = (r*cos_phi*sin_theta)/(cos_theta*cos_theta) + (q*sin_phi*sin_theta)/(cos_theta*cos_theta);
 27a:	9039      	str	r0, [sp, #228]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:258
	 
	 A.data[2][2] = 0;
	 
	 // Compute new covariance: P = P + T*(AP + PA^T + Q)
	 MatMult3x3( &A, &estimated_states->P, &AP );
 27c:	ad32      	add	r5, sp, #200
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:255
	 A.data[2][0] = (q*cos_phi)/cos_theta - (r*sin_phi)/cos_theta;
	 
//	 A.data[2][1] = (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2;
	 A.data[2][1] = (r*cos_phi*sin_theta)/(cos_theta*cos_theta) + (q*sin_phi*sin_theta)/(cos_theta*cos_theta);
	 
	 A.data[2][2] = 0;
 27e:	f8cd 80e8 	str.w	r8, [sp, #232]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:258
	 
	 // Compute new covariance: P = P + T*(AP + PA^T + Q)
	 MatMult3x3( &A, &estimated_states->P, &AP );
 282:	f10d 0880 	add.w	r8, sp, #128	; 0x80
 286:	4642      	mov	r2, r8
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:259
	 MatTrans3x3( &A, &A_transpose );
 288:	ac29      	add	r4, sp, #164
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:258
	 A.data[2][1] = (r*cos_phi*sin_theta)/(cos_theta*cos_theta) + (q*sin_phi*sin_theta)/(cos_theta*cos_theta);
	 
	 A.data[2][2] = 0;
	 
	 // Compute new covariance: P = P + T*(AP + PA^T + Q)
	 MatMult3x3( &A, &estimated_states->P, &AP );
 28a:	4628      	mov	r0, r5
 28c:	4631      	mov	r1, r6
 28e:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:259
	 MatTrans3x3( &A, &A_transpose );
 292:	4621      	mov	r1, r4
 294:	4628      	mov	r0, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:260
	 MatMult3x3( &estimated_states->P, &A_transpose, &PA_transpose );
 296:	ad17      	add	r5, sp, #92
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:259
	 
	 A.data[2][2] = 0;
	 
	 // Compute new covariance: P = P + T*(AP + PA^T + Q)
	 MatMult3x3( &A, &estimated_states->P, &AP );
	 MatTrans3x3( &A, &A_transpose );
 298:	f7ff fffe 	bl	0 <MatTrans3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:260
	 MatMult3x3( &estimated_states->P, &A_transpose, &PA_transpose );
 29c:	4621      	mov	r1, r4
 29e:	462a      	mov	r2, r5
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:261
	 MatAdd3x3( &AP, &PA_transpose, &temp );
 2a0:	ac0e      	add	r4, sp, #56
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:260
	 A.data[2][2] = 0;
	 
	 // Compute new covariance: P = P + T*(AP + PA^T + Q)
	 MatMult3x3( &A, &estimated_states->P, &AP );
	 MatTrans3x3( &A, &A_transpose );
	 MatMult3x3( &estimated_states->P, &A_transpose, &PA_transpose );
 2a2:	4630      	mov	r0, r6
 2a4:	f7ff fffe 	bl	0 <MatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:261
	 MatAdd3x3( &AP, &PA_transpose, &temp );
 2a8:	4629      	mov	r1, r5
 2aa:	4622      	mov	r2, r4
 2ac:	4640      	mov	r0, r8
 2ae:	f7ff fffe 	bl	0 <MatAdd3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:262
	 MatAdd3x3( &temp, &estimated_states->Q, &temp );
 2b2:	f107 0118 	add.w	r1, r7, #24	; 0x18
 2b6:	4622      	mov	r2, r4
 2b8:	e00a      	b.n	2d0 <EKF_Predict+0x2d0>
 2ba:	46c0      	nop			(mov r8, r8)
 2bc:	46c0      	nop			(mov r8, r8)
 2be:	46c0      	nop			(mov r8, r8)
 2c0:	f01b866e 	.word	0xf01b866e
 2c4:	400921f9 	.word	0x400921f9
 2c8:	00000000 	.word	0x00000000
 2cc:	40668000 	.word	0x40668000
 2d0:	4620      	mov	r0, r4
 2d2:	f7ff fffe 	bl	0 <MatAdd3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:263
	 ScalarMatMult3x3( T, &temp, &temp );
 2d6:	4621      	mov	r1, r4
 2d8:	4622      	mov	r2, r4
 2da:	9807      	ldr	r0, [sp, #28]
 2dc:	f7ff fffe 	bl	0 <ScalarMatMult3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:264
	 MatAdd3x3( &temp, &estimated_states->P, &estimated_states->P );
 2e0:	4632      	mov	r2, r6
 2e2:	4631      	mov	r1, r6
 2e4:	4620      	mov	r0, r4
 2e6:	f7ff fffe 	bl	0 <MatAdd3x3>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:268

	 
	 // Update states estimates in data structure
	 estimated_states->phi = phi;
 2ea:	9904      	ldr	r1, [sp, #16]
 2ec:	9807      	ldr	r0, [sp, #28]
 2ee:	f7ff fffe 	bl	0 <__aeabi_fmul>
 2f2:	9908      	ldr	r1, [sp, #32]
 2f4:	f7ff fffe 	bl	0 <__aeabi_fadd>
 2f8:	60b8      	str	r0, [r7, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:269
	 estimated_states->theta = theta;
 2fa:	9903      	ldr	r1, [sp, #12]
 2fc:	9807      	ldr	r0, [sp, #28]
 2fe:	f7ff fffe 	bl	0 <__aeabi_fmul>
 302:	9909      	ldr	r1, [sp, #36]
 304:	f7ff fffe 	bl	0 <__aeabi_fadd>
 308:	6078      	str	r0, [r7, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:270
	 estimated_states->psi = psi;
 30a:	9902      	ldr	r1, [sp, #8]
 30c:	9807      	ldr	r0, [sp, #28]
 30e:	f7ff fffe 	bl	0 <__aeabi_fmul>
 312:	990a      	ldr	r1, [sp, #40]
 314:	f7ff fffe 	bl	0 <__aeabi_fadd>
 318:	6038      	str	r0, [r7, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:271
}
 31a:	b03f      	add	sp, #252
 31c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
Disassembly of section .text.EKF_EstimateStates:

00000000 <EKF_EstimateStates>:
EKF_EstimateStates():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:137
* Output         : None
* Return         : None
* Description    : 
*******************************************************************************/
void EKF_EstimateStates( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:140
	 static int initialized = 0;
	 
	 if( !initialized )
   2:	f240 0400 	movw	r4, #0	; 0x0
   6:	f2c0 0400 	movt	r4, #0	; 0x0
   a:	6823      	ldr	r3, [r4, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:137
* Output         : None
* Return         : None
* Description    : 
*******************************************************************************/
void EKF_EstimateStates( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
   c:	4605      	mov	r5, r0
   e:	460e      	mov	r6, r1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:140
	 static int initialized = 0;
	 
	 if( !initialized )
  10:	b91b      	cbnz	r3, 1a <EKF_EstimateStates+0x1a>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:143
	 {
//		  EKF_InitFromSensors( estimated_states, sensor_data );
		  EKF_Init( estimated_states );
  12:	f7ff fffe 	bl	0 <EKF_EstimateStates>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:144
		  initialized = 1;
  16:	2301      	movs	r3, #1
  18:	6023      	str	r3, [r4, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:148
	 }
	 
	 // Run EKF prediction step
	 EKF_Predict( estimated_states, sensor_data );
  1a:	4628      	mov	r0, r5
  1c:	4631      	mov	r1, r6
  1e:	f7ff fffe 	bl	0 <EKF_EstimateStates>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:151
	 
	 // Run EKF update step
	 EKF_Update( estimated_states, sensor_data );
  22:	4628      	mov	r0, r5
  24:	4631      	mov	r1, r6
  26:	f7ff fffe 	bl	0 <EKF_EstimateStates>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:152
}
  2a:	bd70      	pop	{r4, r5, r6, pc}
Disassembly of section .text.EKF_InitFromSensors:

00000000 <EKF_InitFromSensors>:
EKF_InitFromSensors():
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:84
						 roll guess, while the magnetomer is used to compute an initial
						 heading guess.
						 Gyro outputs are copied directly into estimated angular rate states.
*******************************************************************************/
void EKF_InitFromSensors( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
   0:	e92d 4ef0 	stmdb	sp!, {r4, r5, r6, r7, r9, sl, fp, lr}
   4:	4606      	mov	r6, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:88
	 int i, j;
	 
	 // Compute initial roll and pitch angles
	 float theta_a = -(180/3.14159)*atan2( (float)sensor_data->accel_x, (float)sensor_data->accel_z );
   6:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:84
						 roll guess, while the magnetomer is used to compute an initial
						 heading guess.
						 Gyro outputs are copied directly into estimated angular rate states.
*******************************************************************************/
void EKF_InitFromSensors( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
   a:	4689      	mov	r9, r1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:88
	 int i, j;
	 
	 // Compute initial roll and pitch angles
	 float theta_a = -(180/3.14159)*atan2( (float)sensor_data->accel_x, (float)sensor_data->accel_z );
   c:	f7ff fffe 	bl	0 <__aeabi_i2f>
  10:	f7ff fffe 	bl	0 <__aeabi_f2d>
  14:	4604      	mov	r4, r0
  16:	f9b9 000a 	ldrsh.w	r0, [r9, #10]
  1a:	460d      	mov	r5, r1
  1c:	f7ff fffe 	bl	0 <__aeabi_i2f>
  20:	f7ff fffe 	bl	0 <__aeabi_f2d>
  24:	4602      	mov	r2, r0
  26:	460b      	mov	r3, r1
  28:	4620      	mov	r0, r4
  2a:	4629      	mov	r1, r5
  2c:	f7ff fffe 	bl	0 <atan2>
  30:	4682      	mov	sl, r0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:89
	 float phi_a = -(180/3.14159)*atan2( (float)sensor_data->accel_y, (float)sensor_data->accel_z );
  32:	f9b9 0008 	ldrsh.w	r0, [r9, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:88
void EKF_InitFromSensors( AHRS_states* estimated_states, RawSensorData* sensor_data )
{
	 int i, j;
	 
	 // Compute initial roll and pitch angles
	 float theta_a = -(180/3.14159)*atan2( (float)sensor_data->accel_x, (float)sensor_data->accel_z );
  36:	468b      	mov	fp, r1
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:89
	 float phi_a = -(180/3.14159)*atan2( (float)sensor_data->accel_y, (float)sensor_data->accel_z );
  38:	f7ff fffe 	bl	0 <__aeabi_i2f>
  3c:	f7ff fffe 	bl	0 <__aeabi_f2d>
  40:	4604      	mov	r4, r0
  42:	f9b9 000a 	ldrsh.w	r0, [r9, #10]
  46:	460d      	mov	r5, r1
  48:	f7ff fffe 	bl	0 <__aeabi_i2f>
  4c:	f7ff fffe 	bl	0 <__aeabi_f2d>
  50:	4602      	mov	r2, r0
  52:	460b      	mov	r3, r1
  54:	4620      	mov	r0, r4
  56:	4629      	mov	r1, r5
  58:	f7ff fffe 	bl	0 <atan2>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:91
	 
	 estimated_states->phi = phi_a;
  5c:	a322      	add	r3, pc, #136	(adr r3, e8 <EKF_InitFromSensors+0xe8>)
  5e:	e9d3 2300 	ldrd	r2, r3, [r3]
  62:	f7ff fffe 	bl	0 <__aeabi_dmul>
  66:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:92
	 estimated_states->theta = theta_a;
  6a:	a31f      	add	r3, pc, #124	(adr r3, e8 <EKF_InitFromSensors+0xe8>)
  6c:	e9d3 2300 	ldrd	r2, r3, [r3]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:91
	 
	 // Compute initial roll and pitch angles
	 float theta_a = -(180/3.14159)*atan2( (float)sensor_data->accel_x, (float)sensor_data->accel_z );
	 float phi_a = -(180/3.14159)*atan2( (float)sensor_data->accel_y, (float)sensor_data->accel_z );
	 
	 estimated_states->phi = phi_a;
  70:	60b0      	str	r0, [r6, #8]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:92
	 estimated_states->theta = theta_a;
  72:	4659      	mov	r1, fp
  74:	4650      	mov	r0, sl
  76:	f7ff fffe 	bl	0 <__aeabi_dmul>
  7a:	f7ff fffe 	bl	0 <__aeabi_d2f>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:99
	 
	 estimated_states->phi_dot = 0;
	 estimated_states->theta_dot = 0;
	 estimated_states->psi_dot = 0;
	 
	 estimated_states->P.data[0][0] = .01;
  7e:	f24d 730a 	movw	r3, #55050	; 0xd70a
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:92
	 // Compute initial roll and pitch angles
	 float theta_a = -(180/3.14159)*atan2( (float)sensor_data->accel_x, (float)sensor_data->accel_z );
	 float phi_a = -(180/3.14159)*atan2( (float)sensor_data->accel_y, (float)sensor_data->accel_z );
	 
	 estimated_states->phi = phi_a;
	 estimated_states->theta = theta_a;
  82:	6070      	str	r0, [r6, #4]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:101
	 estimated_states->theta_dot = 0;
	 estimated_states->psi_dot = 0;
	 
	 estimated_states->P.data[0][0] = .01;
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;
  84:	f240 0000 	movw	r0, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:93
	 float theta_a = -(180/3.14159)*atan2( (float)sensor_data->accel_x, (float)sensor_data->accel_z );
	 float phi_a = -(180/3.14159)*atan2( (float)sensor_data->accel_y, (float)sensor_data->accel_z );
	 
	 estimated_states->phi = phi_a;
	 estimated_states->theta = theta_a;
	 estimated_states->psi = 0;
  88:	2200      	movs	r2, #0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:99
	 
	 estimated_states->phi_dot = 0;
	 estimated_states->theta_dot = 0;
	 estimated_states->psi_dot = 0;
	 
	 estimated_states->P.data[0][0] = .01;
  8a:	f6c3 4323 	movt	r3, #15395	; 0x3c23
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:101
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;
  8e:	f2c0 0000 	movt	r0, #0	; 0x0
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:99
	 
	 estimated_states->phi_dot = 0;
	 estimated_states->theta_dot = 0;
	 estimated_states->psi_dot = 0;
	 
	 estimated_states->P.data[0][0] = .01;
  92:	f8c6 3084 	str.w	r3, [r6, #132]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:101
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;
  96:	f8c6 3094 	str.w	r3, [r6, #148]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:93
	 float theta_a = -(180/3.14159)*atan2( (float)sensor_data->accel_x, (float)sensor_data->accel_z );
	 float phi_a = -(180/3.14159)*atan2( (float)sensor_data->accel_y, (float)sensor_data->accel_z );
	 
	 estimated_states->phi = phi_a;
	 estimated_states->theta = theta_a;
	 estimated_states->psi = 0;
  9a:	6032      	str	r2, [r6, #0]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:95
	 
	 estimated_states->phi_dot = 0;
  9c:	6172      	str	r2, [r6, #20]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:96
	 estimated_states->theta_dot = 0;
  9e:	6132      	str	r2, [r6, #16]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:97
	 estimated_states->psi_dot = 0;
  a0:	60f2      	str	r2, [r6, #12]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:101
	 
	 estimated_states->P.data[0][0] = .01;
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;
  a2:	4603      	mov	r3, r0
  a4:	f100 0124 	add.w	r1, r0, #36	; 0x24
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:107
	 
	 for (i = 0; i < 3; i++ )
	 {
		  for (j = 0; j < 3; j++)
		  {
				gEstimatedStates.Q.data[i][j] = 0;
  a8:	619a      	str	r2, [r3, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:108
				gEstimatedStates.Racc.data[i][j] = 0;
  aa:	63da      	str	r2, [r3, #60]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:109
				gEstimatedStates.Rmag.data[i][j] = 0;
  ac:	661a      	str	r2, [r3, #96]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:107
	 
	 for (i = 0; i < 3; i++ )
	 {
		  for (j = 0; j < 3; j++)
		  {
				gEstimatedStates.Q.data[i][j] = 0;
  ae:	61da      	str	r2, [r3, #28]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:108
				gEstimatedStates.Racc.data[i][j] = 0;
  b0:	641a      	str	r2, [r3, #64]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:109
				gEstimatedStates.Rmag.data[i][j] = 0;
  b2:	665a      	str	r2, [r3, #100]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:107
	 
	 for (i = 0; i < 3; i++ )
	 {
		  for (j = 0; j < 3; j++)
		  {
				gEstimatedStates.Q.data[i][j] = 0;
  b4:	621a      	str	r2, [r3, #32]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:108
				gEstimatedStates.Racc.data[i][j] = 0;
  b6:	645a      	str	r2, [r3, #68]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:109
				gEstimatedStates.Rmag.data[i][j] = 0;
  b8:	669a      	str	r2, [r3, #104]
  ba:	330c      	adds	r3, #12
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:103
	 
	 estimated_states->P.data[0][0] = .01;
	 estimated_states->P.data[1][1] = .01;
	 estimated_states->P.data[1][1] = .01;
	 
	 for (i = 0; i < 3; i++ )
  bc:	428b      	cmp	r3, r1
  be:	d1f3      	bne.n	a8 <EKF_InitFromSensors+0xa8>
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:114
				gEstimatedStates.Rmag.data[i][j] = 0;
		  }
	 }
 
	 // Set process noise matrix
	 gEstimatedStates.Q.data[0][0] = gConfig.process_covariance;
  c0:	f240 0100 	movw	r1, #0	; 0x0
  c4:	f2c0 0100 	movt	r1, #0	; 0x0
  c8:	6a4b      	ldr	r3, [r1, #36]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:119
	 gEstimatedStates.Q.data[1][1] = gConfig.process_covariance;
	 gEstimatedStates.Q.data[2][2] = gConfig.process_covariance;
	 
	 // Set measurement noise matrices
	 gEstimatedStates.Racc.data[0][0] = gConfig.accel_covariance;
  ca:	6a8a      	ldr	r2, [r1, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:114
				gEstimatedStates.Rmag.data[i][j] = 0;
		  }
	 }
 
	 // Set process noise matrix
	 gEstimatedStates.Q.data[0][0] = gConfig.process_covariance;
  cc:	6183      	str	r3, [r0, #24]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:115
	 gEstimatedStates.Q.data[1][1] = gConfig.process_covariance;
  ce:	6283      	str	r3, [r0, #40]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:116
	 gEstimatedStates.Q.data[2][2] = gConfig.process_covariance;
  d0:	6383      	str	r3, [r0, #56]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:123
	 // Set measurement noise matrices
	 gEstimatedStates.Racc.data[0][0] = gConfig.accel_covariance;
	 gEstimatedStates.Racc.data[1][1] = gConfig.accel_covariance;
	 gEstimatedStates.Racc.data[2][2] = gConfig.accel_covariance;
	 
	 gEstimatedStates.Rmag.data[0][0] = gConfig.mag_covariance;
  d2:	6acb      	ldr	r3, [r1, #44]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:119
	 gEstimatedStates.Q.data[0][0] = gConfig.process_covariance;
	 gEstimatedStates.Q.data[1][1] = gConfig.process_covariance;
	 gEstimatedStates.Q.data[2][2] = gConfig.process_covariance;
	 
	 // Set measurement noise matrices
	 gEstimatedStates.Racc.data[0][0] = gConfig.accel_covariance;
  d4:	63c2      	str	r2, [r0, #60]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:120
	 gEstimatedStates.Racc.data[1][1] = gConfig.accel_covariance;
  d6:	64c2      	str	r2, [r0, #76]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:121
	 gEstimatedStates.Racc.data[2][2] = gConfig.accel_covariance;
  d8:	65c2      	str	r2, [r0, #92]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:123
	 
	 gEstimatedStates.Rmag.data[0][0] = gConfig.mag_covariance;
  da:	6603      	str	r3, [r0, #96]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:124
	 gEstimatedStates.Rmag.data[1][1] = gConfig.mag_covariance;
  dc:	6703      	str	r3, [r0, #112]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:125
	 gEstimatedStates.Rmag.data[2][2] = gConfig.mag_covariance;
  de:	f8c0 3080 	str.w	r3, [r0, #128]
C:\Users\Caleb\Documents\Ride\projects\CHR6dmRelease/chr6dm_states.c:126
}
  e2:	e8bd 8ef0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, fp, pc}
  e6:	46c0      	nop			(mov r8, r8)
  e8:	b05cc3e8 	.word	0xb05cc3e8
  ec:	c04ca5dd 	.word	0xc04ca5dd
