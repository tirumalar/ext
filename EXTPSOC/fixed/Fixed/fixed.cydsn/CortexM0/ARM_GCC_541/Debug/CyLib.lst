ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 124 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 4


  48              	.LFE0:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB1:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 140 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 149 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 150 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 5


  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB2:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 430 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 434 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 437 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 448 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 451 0
 112 0014 1460     		str	r4, [r2]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 453 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 454:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 454 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 11


 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB3:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 474 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 476 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 478 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 12


 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 482 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 484 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 498 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 13


 187              	.LFB4:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 511 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 515 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 525 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 528 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 531 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 14


 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE4:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB5:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 566 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 15


 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 569 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 571 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 573 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 572 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 571 0
 257 001e 2360     		str	r3, [r4]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 576 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 577 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE5:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysLvdDisable,"ax",%progbits
 273              		.align	2
 274              		.global	CySysLvdDisable
 275              		.code	16
 276              		.thumb_func
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 16


 277              		.type	CySysLvdDisable, %function
 278              	CySysLvdDisable:
 279              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 17


 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 18


 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 19


 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 27


1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 28


1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 29


1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 30


1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 31


1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 32


1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 33


1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 34


1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 35


1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 36


1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 37


1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 38


1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 39


1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 40


1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 41


2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 42


2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 43


2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 2149 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 285              		.loc 1 2150 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0221     		movs	r1, #2
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 291              		.loc 1 2151 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1368     		ldr	r3, [r2]
 294 000e 0139     		subs	r1, r1, #1
 295 0010 8B43     		bics	r3, r1
 296 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 2152 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 44


 298              		@ sp needed
 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 08000B40 		.word	1074462728
 304 001c 18000B40 		.word	1074462744
 305              		.cfi_endproc
 306              	.LFE8:
 307              		.size	CySysLvdDisable, .-CySysLvdDisable
 308              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 309              		.align	2
 310              		.global	CySysLvdGetInterruptSource
 311              		.code	16
 312              		.thumb_func
 313              		.type	CySysLvdGetInterruptSource, %function
 314              	CySysLvdGetInterruptSource:
 315              	.LFB9:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 316              		.loc 1 2167 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 321              		.loc 1 2168 0
 322 0000 024B     		ldr	r3, .L25
 323 0002 1B68     		ldr	r3, [r3]
 324 0004 0220     		movs	r0, #2
 325 0006 1840     		ands	r0, r3
2169:Generated_Source\PSoC4/CyLib.c ****     }
 326              		.loc 1 2169 0
 327              		@ sp needed
 328 0008 7047     		bx	lr
 329              	.L26:
 330 000a C046     		.align	2
 331              	.L25:
 332 000c 04000B40 		.word	1074462724
 333              		.cfi_endproc
 334              	.LFE9:
 335              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 336              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 337              		.align	2
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 45


 338              		.global	CySysLvdClearInterrupt
 339              		.code	16
 340              		.thumb_func
 341              		.type	CySysLvdClearInterrupt, %function
 342              	CySysLvdClearInterrupt:
 343              	.LFB10:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 344              		.loc 1 2183 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 349              		.loc 1 2184 0
 350 0000 0222     		movs	r2, #2
 351 0002 014B     		ldr	r3, .L28
 352 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 353              		.loc 1 2185 0
 354              		@ sp needed
 355 0006 7047     		bx	lr
 356              	.L29:
 357              		.align	2
 358              	.L28:
 359 0008 04000B40 		.word	1074462724
 360              		.cfi_endproc
 361              	.LFE10:
 362              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 363              		.section	.text.CySysGetResetReason,"ax",%progbits
 364              		.align	2
 365              		.global	CySysGetResetReason
 366              		.code	16
 367              		.thumb_func
 368              		.type	CySysGetResetReason, %function
 369              	CySysGetResetReason:
 370              	.LFB11:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 46


2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 371              		.loc 1 2209 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL16:
 377 0000 0200     		movs	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 378              		.loc 1 2212 0
 379 0002 1920     		movs	r0, #25
 380              	.LVL17:
 381 0004 0240     		ands	r2, r0
 382              	.LVL18:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 383              		.loc 1 2213 0
 384 0006 0249     		ldr	r1, .L31
 385 0008 0B68     		ldr	r3, [r1]
 386 000a 1840     		ands	r0, r3
 387              	.LVL19:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 388              		.loc 1 2215 0
 389 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 390              		.loc 1 2218 0
 391              		@ sp needed
 392 000e 7047     		bx	lr
 393              	.L32:
 394              		.align	2
 395              	.L31:
 396 0010 00030B40 		.word	1074463488
 397              		.cfi_endproc
 398              	.LFE11:
 399              		.size	CySysGetResetReason, .-CySysGetResetReason
 400              		.section	.text.CyDisableInts,"ax",%progbits
 401              		.align	2
 402              		.global	CyDisableInts
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 47


 403              		.code	16
 404              		.thumb_func
 405              		.type	CyDisableInts, %function
 406              	CyDisableInts:
 407              	.LFB12:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 408              		.loc 1 2232 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 413              		.loc 1 2236 0
 414 0000 024B     		ldr	r3, .L34
 415 0002 1868     		ldr	r0, [r3]
 416              	.LVL20:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 417              		.loc 1 2239 0
 418 0004 0122     		movs	r2, #1
 419 0006 5242     		rsbs	r2, r2, #0
 420 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 421              		.loc 1 2242 0
 422              		@ sp needed
 423 000a 7047     		bx	lr
 424              	.L35:
 425              		.align	2
 426              	.L34:
 427 000c 80E100E0 		.word	-536813184
 428              		.cfi_endproc
 429              	.LFE12:
 430              		.size	CyDisableInts, .-CyDisableInts
 431              		.section	.text.CyEnableInts,"ax",%progbits
 432              		.align	2
 433              		.global	CyEnableInts
 434              		.code	16
 435              		.thumb_func
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 48


 436              		.type	CyEnableInts, %function
 437              	CyEnableInts:
 438              	.LFB13:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 439              		.loc 1 2255 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              	.LVL21:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 445              		.loc 1 2256 0
 446 0000 014B     		ldr	r3, .L37
 447 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 448              		.loc 1 2257 0
 449              		@ sp needed
 450 0004 7047     		bx	lr
 451              	.L38:
 452 0006 C046     		.align	2
 453              	.L37:
 454 0008 00E100E0 		.word	-536813312
 455              		.cfi_endproc
 456              	.LFE13:
 457              		.size	CyEnableInts, .-CyEnableInts
 458              		.section	.text.CyIntEnable,"ax",%progbits
 459              		.align	2
 460              		.global	CyIntEnable
 461              		.code	16
 462              		.thumb_func
 463              		.type	CyIntEnable, %function
 464              	CyIntEnable:
 465              	.LFB20:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 49


2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 50


2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 51


2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 466              		.loc 1 2438 0
 467              		.cfi_startproc
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 52


 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL22:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 472              		.loc 1 2439 0
 473 0000 1F23     		movs	r3, #31
 474 0002 1840     		ands	r0, r3
 475              	.LVL23:
 476 0004 1E3B     		subs	r3, r3, #30
 477 0006 8340     		lsls	r3, r3, r0
 478 0008 014A     		ldr	r2, .L40
 479 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** }
 480              		.loc 1 2440 0
 481              		@ sp needed
 482 000c 7047     		bx	lr
 483              	.L41:
 484 000e C046     		.align	2
 485              	.L40:
 486 0010 00E100E0 		.word	-536813312
 487              		.cfi_endproc
 488              	.LFE20:
 489              		.size	CyIntEnable, .-CyIntEnable
 490              		.section	.text.CyIntGetState,"ax",%progbits
 491              		.align	2
 492              		.global	CyIntGetState
 493              		.code	16
 494              		.thumb_func
 495              		.type	CyIntGetState, %function
 496              	CyIntGetState:
 497              	.LFB21:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 498              		.loc 1 2456 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL24:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 504              		.loc 1 2458 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 53


 505 0000 044B     		ldr	r3, .L43
 506 0002 1B68     		ldr	r3, [r3]
 507 0004 1F22     		movs	r2, #31
 508 0006 1040     		ands	r0, r2
 509              	.LVL25:
 510 0008 C340     		lsrs	r3, r3, r0
 511 000a 1800     		movs	r0, r3
 512 000c 0123     		movs	r3, #1
 513 000e 1840     		ands	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2459 0
 515              		@ sp needed
 516 0010 7047     		bx	lr
 517              	.L44:
 518 0012 C046     		.align	2
 519              	.L43:
 520 0014 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE21:
 523              		.size	CyIntGetState, .-CyIntGetState
 524              		.section	.text.CyIntDisable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntDisable
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntDisable, %function
 530              	CyIntDisable:
 531              	.LFB22:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2472 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL26:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 2473 0
 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL27:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 54


 546              		.loc 1 2474 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 80E100E0 		.word	-536813184
 553              		.cfi_endproc
 554              	.LFE22:
 555              		.size	CyIntDisable, .-CyIntDisable
 556              		.section	.text.CyIntSetPending,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntSetPending
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntSetPending, %function
 562              	CyIntSetPending:
 563              	.LFB23:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 564              		.loc 1 2486 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL28:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 570              		.loc 1 2487 0
 571 0000 1F23     		movs	r3, #31
 572 0002 1840     		ands	r0, r3
 573              	.LVL29:
 574 0004 1E3B     		subs	r3, r3, #30
 575 0006 8340     		lsls	r3, r3, r0
 576 0008 014A     		ldr	r2, .L49
 577 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** }
 578              		.loc 1 2488 0
 579              		@ sp needed
 580 000c 7047     		bx	lr
 581              	.L50:
 582 000e C046     		.align	2
 583              	.L49:
 584 0010 00E200E0 		.word	-536813056
 585              		.cfi_endproc
 586              	.LFE23:
 587              		.size	CyIntSetPending, .-CyIntSetPending
 588              		.section	.text.CyIntClearPending,"ax",%progbits
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 55


 589              		.align	2
 590              		.global	CyIntClearPending
 591              		.code	16
 592              		.thumb_func
 593              		.type	CyIntClearPending, %function
 594              	CyIntClearPending:
 595              	.LFB24:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 596              		.loc 1 2501 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL30:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 602              		.loc 1 2502 0
 603 0000 1F23     		movs	r3, #31
 604 0002 1840     		ands	r0, r3
 605              	.LVL31:
 606 0004 1E3B     		subs	r3, r3, #30
 607 0006 8340     		lsls	r3, r3, r0
 608 0008 014A     		ldr	r2, .L52
 609 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** }
 610              		.loc 1 2503 0
 611              		@ sp needed
 612 000c 7047     		bx	lr
 613              	.L53:
 614 000e C046     		.align	2
 615              	.L52:
 616 0010 80E200E0 		.word	-536812928
 617              		.cfi_endproc
 618              	.LFE24:
 619              		.size	CyIntClearPending, .-CyIntClearPending
 620              		.section	.text.CyHalt,"ax",%progbits
 621              		.align	2
 622              		.global	CyHalt
 623              		.code	16
 624              		.thumb_func
 625              		.type	CyHalt, %function
 626              	CyHalt:
 627              	.LFB25:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 56


2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 628              		.loc 1 2516 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL32:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 634              		.loc 1 2525 0
 635              		.syntax divided
 636              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 637 0000 01BE     		    bkpt    1
 638              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 639              		.loc 1 2529 0
 640              		.thumb
 641              		.syntax unified
 642              		@ sp needed
 643 0002 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE25:
 646              		.size	CyHalt, .-CyHalt
 647              		.section	.text.CyIntSetSysVector,"ax",%progbits
 648              		.align	2
 649              		.global	CyIntSetSysVector
 650              		.code	16
 651              		.thumb_func
 652              		.type	CyIntSetSysVector, %function
 653              	CyIntSetSysVector:
 654              	.LFB14:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 655              		.loc 1 2280 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              	.LVL33:
 660 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 57


 661              		.cfi_def_cfa_offset 16
 662              		.cfi_offset 4, -16
 663              		.cfi_offset 5, -12
 664              		.cfi_offset 6, -8
 665              		.cfi_offset 14, -4
 666 0002 0400     		movs	r4, r0
 667 0004 0D00     		movs	r5, r1
 668              	.LVL34:
2284:Generated_Source\PSoC4/CyLib.c **** 
 669              		.loc 1 2284 0
 670 0006 0F28     		cmp	r0, #15
 671 0008 02D9     		bls	.L56
2284:Generated_Source\PSoC4/CyLib.c **** 
 672              		.loc 1 2284 0 is_stmt 0 discriminator 1
 673 000a 0020     		movs	r0, #0
 674              	.LVL35:
 675 000c FFF7FEFF 		bl	CyHalt
 676              	.LVL36:
 677              	.L56:
2287:Generated_Source\PSoC4/CyLib.c **** 
 678              		.loc 1 2287 0 is_stmt 1
 679 0010 A400     		lsls	r4, r4, #2
 680 0012 8023     		movs	r3, #128
 681 0014 9B05     		lsls	r3, r3, #22
 682 0016 9C46     		mov	ip, r3
 683 0018 6444     		add	r4, r4, ip
 684 001a 2068     		ldr	r0, [r4]
 685              	.LVL37:
2290:Generated_Source\PSoC4/CyLib.c **** 
 686              		.loc 1 2290 0
 687 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 688              		.loc 1 2293 0
 689              		@ sp needed
 690              	.LVL38:
 691 001e 70BD     		pop	{r4, r5, r6, pc}
 692              		.cfi_endproc
 693              	.LFE14:
 694              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 695              		.section	.text.CyIntGetSysVector,"ax",%progbits
 696              		.align	2
 697              		.global	CyIntGetSysVector
 698              		.code	16
 699              		.thumb_func
 700              		.type	CyIntGetSysVector, %function
 701              	CyIntGetSysVector:
 702              	.LFB15:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 703              		.loc 1 2314 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LVL39:
 708 0000 10B5     		push	{r4, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 4, -8
 711              		.cfi_offset 14, -4
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 58


 712 0002 0400     		movs	r4, r0
 713              	.LVL40:
2317:Generated_Source\PSoC4/CyLib.c **** 
 714              		.loc 1 2317 0
 715 0004 0F28     		cmp	r0, #15
 716 0006 02D9     		bls	.L58
2317:Generated_Source\PSoC4/CyLib.c **** 
 717              		.loc 1 2317 0 is_stmt 0 discriminator 1
 718 0008 0020     		movs	r0, #0
 719              	.LVL41:
 720 000a FFF7FEFF 		bl	CyHalt
 721              	.LVL42:
 722              	.L58:
2319:Generated_Source\PSoC4/CyLib.c **** }
 723              		.loc 1 2319 0 is_stmt 1
 724 000e A400     		lsls	r4, r4, #2
 725 0010 8023     		movs	r3, #128
 726 0012 9B05     		lsls	r3, r3, #22
 727 0014 9C46     		mov	ip, r3
 728 0016 6444     		add	r4, r4, ip
 729 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 730              		.loc 1 2320 0
 731              		@ sp needed
 732 001a 10BD     		pop	{r4, pc}
 733              		.cfi_endproc
 734              	.LFE15:
 735              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 736              		.section	.text.CyIntSetVector,"ax",%progbits
 737              		.align	2
 738              		.global	CyIntSetVector
 739              		.code	16
 740              		.thumb_func
 741              		.type	CyIntSetVector, %function
 742              	CyIntSetVector:
 743              	.LFB16:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 744              		.loc 1 2336 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL43:
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 755 0002 0400     		movs	r4, r0
 756 0004 0D00     		movs	r5, r1
 757              	.LVL44:
2340:Generated_Source\PSoC4/CyLib.c **** 
 758              		.loc 1 2340 0
 759 0006 1F28     		cmp	r0, #31
 760 0008 02D9     		bls	.L60
2340:Generated_Source\PSoC4/CyLib.c **** 
 761              		.loc 1 2340 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 59


 762 000a 0020     		movs	r0, #0
 763              	.LVL45:
 764 000c FFF7FEFF 		bl	CyHalt
 765              	.LVL46:
 766              	.L60:
2343:Generated_Source\PSoC4/CyLib.c **** 
 767              		.loc 1 2343 0 is_stmt 1
 768 0010 1034     		adds	r4, r4, #16
 769 0012 A400     		lsls	r4, r4, #2
 770 0014 8023     		movs	r3, #128
 771 0016 9B05     		lsls	r3, r3, #22
 772 0018 9C46     		mov	ip, r3
 773 001a 6444     		add	r4, r4, ip
 774 001c 2068     		ldr	r0, [r4]
 775              	.LVL47:
2346:Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2346 0
 777 001e 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 778              		.loc 1 2349 0
 779              		@ sp needed
 780              	.LVL48:
 781 0020 70BD     		pop	{r4, r5, r6, pc}
 782              		.cfi_endproc
 783              	.LFE16:
 784              		.size	CyIntSetVector, .-CyIntSetVector
 785 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 786              		.align	2
 787              		.global	CyIntGetVector
 788              		.code	16
 789              		.thumb_func
 790              		.type	CyIntGetVector, %function
 791              	CyIntGetVector:
 792              	.LFB17:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 793              		.loc 1 2364 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL49:
 798 0000 10B5     		push	{r4, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 4, -8
 801              		.cfi_offset 14, -4
 802 0002 0400     		movs	r4, r0
 803              	.LVL50:
2367:Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 2367 0
 805 0004 1F28     		cmp	r0, #31
 806 0006 02D9     		bls	.L62
2367:Generated_Source\PSoC4/CyLib.c **** 
 807              		.loc 1 2367 0 is_stmt 0 discriminator 1
 808 0008 0020     		movs	r0, #0
 809              	.LVL51:
 810 000a FFF7FEFF 		bl	CyHalt
 811              	.LVL52:
 812              	.L62:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 60


2369:Generated_Source\PSoC4/CyLib.c **** }
 813              		.loc 1 2369 0 is_stmt 1
 814 000e 1034     		adds	r4, r4, #16
 815 0010 A400     		lsls	r4, r4, #2
 816 0012 8023     		movs	r3, #128
 817 0014 9B05     		lsls	r3, r3, #22
 818 0016 9C46     		mov	ip, r3
 819 0018 6444     		add	r4, r4, ip
 820 001a 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2370 0
 822              		@ sp needed
 823 001c 10BD     		pop	{r4, pc}
 824              		.cfi_endproc
 825              	.LFE17:
 826              		.size	CyIntGetVector, .-CyIntGetVector
 827 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 828              		.align	2
 829              		.global	CyIntSetPriority
 830              		.code	16
 831              		.thumb_func
 832              		.type	CyIntSetPriority, %function
 833              	CyIntSetPriority:
 834              	.LFB18:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 835              		.loc 1 2383 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
 839              	.LVL53:
 840 0000 70B5     		push	{r4, r5, r6, lr}
 841              		.cfi_def_cfa_offset 16
 842              		.cfi_offset 4, -16
 843              		.cfi_offset 5, -12
 844              		.cfi_offset 6, -8
 845              		.cfi_offset 14, -4
 846 0002 0400     		movs	r4, r0
 847 0004 0E00     		movs	r6, r1
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 848              		.loc 1 2388 0
 849 0006 0329     		cmp	r1, #3
 850 0008 02D9     		bls	.L64
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 851              		.loc 1 2388 0 is_stmt 0 discriminator 1
 852 000a 0020     		movs	r0, #0
 853              	.LVL54:
 854 000c FFF7FEFF 		bl	CyHalt
 855              	.LVL55:
 856              	.L64:
2389:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2389 0 is_stmt 1
 858 0010 1F2C     		cmp	r4, #31
 859 0012 02D9     		bls	.L65
2389:Generated_Source\PSoC4/CyLib.c **** 
 860              		.loc 1 2389 0 is_stmt 0 discriminator 1
 861 0014 0020     		movs	r0, #0
 862 0016 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 61


 863              	.LVL56:
 864              	.L65:
2391:Generated_Source\PSoC4/CyLib.c **** 
 865              		.loc 1 2391 0 is_stmt 1
 866 001a 0325     		movs	r5, #3
 867 001c 2540     		ands	r5, r4
 868 001e ED00     		lsls	r5, r5, #3
 869 0020 0635     		adds	r5, r5, #6
 870              	.LVL57:
2393:Generated_Source\PSoC4/CyLib.c **** 
 871              		.loc 1 2393 0
 872 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 873              	.LVL58:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 874              		.loc 1 2395 0
 875 0026 A408     		lsrs	r4, r4, #2
 876 0028 A400     		lsls	r4, r4, #2
 877 002a 074B     		ldr	r3, .L66
 878 002c 9C46     		mov	ip, r3
 879 002e 6444     		add	r4, r4, ip
 880 0030 2168     		ldr	r1, [r4]
 881              	.LVL59:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 882              		.loc 1 2396 0
 883 0032 0323     		movs	r3, #3
 884 0034 AB40     		lsls	r3, r3, r5
 885 0036 9943     		bics	r1, r3
 886              	.LVL60:
 887 0038 0B00     		movs	r3, r1
 888              	.LVL61:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 889              		.loc 1 2397 0
 890 003a 3100     		movs	r1, r6
 891              	.LVL62:
 892 003c A940     		lsls	r1, r1, r5
 893 003e 1943     		orrs	r1, r3
 894              	.LVL63:
2398:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2398 0
 896 0040 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 897              		.loc 1 2400 0
 898 0042 FFF7FEFF 		bl	CyExitCriticalSection
 899              	.LVL64:
2401:Generated_Source\PSoC4/CyLib.c **** 
 900              		.loc 1 2401 0
 901              		@ sp needed
 902              	.LVL65:
 903 0046 70BD     		pop	{r4, r5, r6, pc}
 904              	.L67:
 905              		.align	2
 906              	.L66:
 907 0048 00E400E0 		.word	-536812544
 908              		.cfi_endproc
 909              	.LFE18:
 910              		.size	CyIntSetPriority, .-CyIntSetPriority
 911              		.section	.text.CyIntGetPriority,"ax",%progbits
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 62


 912              		.align	2
 913              		.global	CyIntGetPriority
 914              		.code	16
 915              		.thumb_func
 916              		.type	CyIntGetPriority, %function
 917              	CyIntGetPriority:
 918              	.LFB19:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 919              		.loc 1 2417 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              	.LVL66:
 924 0000 10B5     		push	{r4, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 4, -8
 927              		.cfi_offset 14, -4
 928 0002 0400     		movs	r4, r0
2420:Generated_Source\PSoC4/CyLib.c **** 
 929              		.loc 1 2420 0
 930 0004 1F28     		cmp	r0, #31
 931 0006 02D9     		bls	.L69
2420:Generated_Source\PSoC4/CyLib.c **** 
 932              		.loc 1 2420 0 is_stmt 0 discriminator 1
 933 0008 0020     		movs	r0, #0
 934              	.LVL67:
 935 000a FFF7FEFF 		bl	CyHalt
 936              	.LVL68:
 937              	.L69:
2422:Generated_Source\PSoC4/CyLib.c **** 
 938              		.loc 1 2422 0 is_stmt 1
 939 000e A308     		lsrs	r3, r4, #2
 940 0010 9B00     		lsls	r3, r3, #2
 941 0012 054A     		ldr	r2, .L70
 942 0014 9446     		mov	ip, r2
 943 0016 6344     		add	r3, r3, ip
 944 0018 1868     		ldr	r0, [r3]
 945 001a 0323     		movs	r3, #3
 946 001c 1C40     		ands	r4, r3
 947 001e E400     		lsls	r4, r4, #3
 948 0020 0634     		adds	r4, r4, #6
 949 0022 E040     		lsrs	r0, r0, r4
 950              	.LVL69:
2424:Generated_Source\PSoC4/CyLib.c **** }
 951              		.loc 1 2424 0
 952 0024 1840     		ands	r0, r3
 953              	.LVL70:
2425:Generated_Source\PSoC4/CyLib.c **** 
 954              		.loc 1 2425 0
 955              		@ sp needed
 956 0026 10BD     		pop	{r4, pc}
 957              	.L71:
 958              		.align	2
 959              	.L70:
 960 0028 00E400E0 		.word	-536812544
 961              		.cfi_endproc
 962              	.LFE19:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 63


 963              		.size	CyIntGetPriority, .-CyIntGetPriority
 964              		.section	.text.CySoftwareReset,"ax",%progbits
 965              		.align	2
 966              		.global	CySoftwareReset
 967              		.code	16
 968              		.thumb_func
 969              		.type	CySoftwareReset, %function
 970              	CySoftwareReset:
 971              	.LFB26:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 972              		.loc 1 2540 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 977              		.loc 1 2545 0
 978 0000 034A     		ldr	r2, .L73
 979 0002 1368     		ldr	r3, [r2]
 980 0004 1B04     		lsls	r3, r3, #16
 981 0006 1B0C     		lsrs	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 982              		.loc 1 2546 0
 983 0008 0249     		ldr	r1, .L73+4
 984 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 985              		.loc 1 2545 0
 986 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 987              		.loc 1 2547 0
 988              		@ sp needed
 989 000e 7047     		bx	lr
 990              	.L74:
 991              		.align	2
 992              	.L73:
 993 0010 0CED00E0 		.word	-536810228
 994 0014 0400FA05 		.word	100270084
 995              		.cfi_endproc
 996              	.LFE26:
 997              		.size	CySoftwareReset, .-CySoftwareReset
 998              		.section	.text.CyDelay,"ax",%progbits
 999              		.align	2
 1000              		.global	CyDelay
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 64


 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	CyDelay, %function
 1004              	CyDelay:
 1005              	.LFB27:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1006              		.loc 1 2560 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL71:
 1011 0000 10B5     		push	{r4, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 4, -8
 1014              		.cfi_offset 14, -4
 1015 0002 0400     		movs	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1016              		.loc 1 2561 0
 1017 0004 06E0     		b	.L76
 1018              	.LVL72:
 1019              	.L77:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1020              		.loc 1 2566 0
 1021 0006 084B     		ldr	r3, .L78
 1022 0008 5868     		ldr	r0, [r3, #4]
 1023 000a FFF7FEFF 		bl	CyDelayCycles
 1024              	.LVL73:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1025              		.loc 1 2567 0
 1026 000e 074B     		ldr	r3, .L78+4
 1027 0010 9C46     		mov	ip, r3
 1028 0012 6444     		add	r4, r4, ip
 1029              	.LVL74:
 1030              	.L76:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 2561 0
 1032 0014 8023     		movs	r3, #128
 1033 0016 1B02     		lsls	r3, r3, #8
 1034 0018 9C42     		cmp	r4, r3
 1035 001a F4D8     		bhi	.L77
2568:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 65


2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1036              		.loc 1 2570 0
 1037 001c 024B     		ldr	r3, .L78
 1038 001e 9868     		ldr	r0, [r3, #8]
 1039 0020 6043     		muls	r0, r4
 1040 0022 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL75:
2571:Generated_Source\PSoC4/CyLib.c **** }
 1042              		.loc 1 2571 0
 1043              		@ sp needed
 1044              	.LVL76:
 1045 0026 10BD     		pop	{r4, pc}
 1046              	.L79:
 1047              		.align	2
 1048              	.L78:
 1049 0028 00000000 		.word	.LANCHOR0
 1050 002c 0080FFFF 		.word	-32768
 1051              		.cfi_endproc
 1052              	.LFE27:
 1053              		.size	CyDelay, .-CyDelay
 1054              		.section	.text.CyDelayUs,"ax",%progbits
 1055              		.align	2
 1056              		.global	CyDelayUs
 1057              		.code	16
 1058              		.thumb_func
 1059              		.type	CyDelayUs, %function
 1060              	CyDelayUs:
 1061              	.LFB28:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1062              		.loc 1 2583 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              	.LVL77:
 1067 0000 10B5     		push	{r4, lr}
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 4, -8
 1070              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1071              		.loc 1 2584 0
 1072 0002 034B     		ldr	r3, .L81
 1073 0004 1B7B     		ldrb	r3, [r3, #12]
 1074 0006 5843     		muls	r0, r3
 1075              	.LVL78:
 1076 0008 FFF7FEFF 		bl	CyDelayCycles
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 66


 1077              	.LVL79:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1078              		.loc 1 2585 0
 1079              		@ sp needed
 1080 000c 10BD     		pop	{r4, pc}
 1081              	.L82:
 1082 000e C046     		.align	2
 1083              	.L81:
 1084 0010 00000000 		.word	.LANCHOR0
 1085              		.cfi_endproc
 1086              	.LFE28:
 1087              		.size	CyDelayUs, .-CyDelayUs
 1088              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1089              		.align	2
 1090              		.global	CySysClkWriteImoFreq
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	CySysClkWriteImoFreq, %function
 1094              	CySysClkWriteImoFreq:
 1095              	.LFB6:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1096              		.loc 1 624 0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              	.LVL80:
 1101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1102              		.cfi_def_cfa_offset 20
 1103              		.cfi_offset 4, -20
 1104              		.cfi_offset 5, -16
 1105              		.cfi_offset 6, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 5746     		mov	r7, r10
 1109 0004 4E46     		mov	r6, r9
 1110 0006 C0B4     		push	{r6, r7}
 1111              		.cfi_def_cfa_offset 28
 1112              		.cfi_offset 9, -28
 1113              		.cfi_offset 10, -24
 1114 0008 83B0     		sub	sp, sp, #12
 1115              		.cfi_def_cfa_offset 40
 1116 000a 0400     		movs	r4, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 1117              		.loc 1 647 0
 1118 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1119              	.LVL81:
 1120 0010 0190     		str	r0, [sp, #4]
 1121              	.LVL82:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1122              		.loc 1 697 0
 1123 0012 E71E     		subs	r7, r4, #3
 1124 0014 2D2F     		cmp	r7, #45
 1125 0016 74D8     		bhi	.L84
 699:Generated_Source\PSoC4/CyLib.c ****             {
 1126              		.loc 1 699 0
 1127 0018 3F4B     		ldr	r3, .L94
 1128 001a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 67


 1129 001c DBB2     		uxtb	r3, r3
 1130 001e 9C42     		cmp	r4, r3
 1131 0020 08D8     		bhi	.L85
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1132              		.loc 1 701 0
 1133 0022 3E4B     		ldr	r3, .L94+4
 1134 0024 1B78     		ldrb	r3, [r3]
 1135 0026 DBB2     		uxtb	r3, r3
 1136 0028 9A46     		mov	r10, r3
 1137              	.LVL83:
 702:Generated_Source\PSoC4/CyLib.c ****             }
 1138              		.loc 1 702 0
 1139 002a 3D4B     		ldr	r3, .L94+8
 1140 002c 1B78     		ldrb	r3, [r3]
 1141 002e DBB2     		uxtb	r3, r3
 1142 0030 9946     		mov	r9, r3
 1143              	.LVL84:
 1144 0032 31E0     		b	.L86
 1145              	.LVL85:
 1146              	.L85:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 1147              		.loc 1 704 0
 1148 0034 3B4B     		ldr	r3, .L94+12
 1149 0036 1B78     		ldrb	r3, [r3]
 1150 0038 DBB2     		uxtb	r3, r3
 1151 003a 9C42     		cmp	r4, r3
 1152 003c 08D8     		bhi	.L87
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1153              		.loc 1 706 0
 1154 003e 3A4B     		ldr	r3, .L94+16
 1155 0040 1B78     		ldrb	r3, [r3]
 1156 0042 DBB2     		uxtb	r3, r3
 1157 0044 9A46     		mov	r10, r3
 1158              	.LVL86:
 707:Generated_Source\PSoC4/CyLib.c ****             }
 1159              		.loc 1 707 0
 1160 0046 394B     		ldr	r3, .L94+20
 1161 0048 1B78     		ldrb	r3, [r3]
 1162 004a DBB2     		uxtb	r3, r3
 1163 004c 9946     		mov	r9, r3
 1164              	.LVL87:
 1165 004e 23E0     		b	.L86
 1166              	.LVL88:
 1167              	.L87:
 709:Generated_Source\PSoC4/CyLib.c ****             {
 1168              		.loc 1 709 0
 1169 0050 374B     		ldr	r3, .L94+24
 1170 0052 1B78     		ldrb	r3, [r3]
 1171 0054 DBB2     		uxtb	r3, r3
 1172 0056 9C42     		cmp	r4, r3
 1173 0058 08D8     		bhi	.L88
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1174              		.loc 1 711 0
 1175 005a 364B     		ldr	r3, .L94+28
 1176 005c 1B78     		ldrb	r3, [r3]
 1177 005e DBB2     		uxtb	r3, r3
 1178 0060 9A46     		mov	r10, r3
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 68


 1179              	.LVL89:
 712:Generated_Source\PSoC4/CyLib.c ****             }
 1180              		.loc 1 712 0
 1181 0062 354B     		ldr	r3, .L94+32
 1182 0064 1B78     		ldrb	r3, [r3]
 1183 0066 DBB2     		uxtb	r3, r3
 1184 0068 9946     		mov	r9, r3
 1185              	.LVL90:
 1186 006a 15E0     		b	.L86
 1187              	.LVL91:
 1188              	.L88:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 1189              		.loc 1 714 0
 1190 006c 334B     		ldr	r3, .L94+36
 1191 006e 1B78     		ldrb	r3, [r3]
 1192 0070 DBB2     		uxtb	r3, r3
 1193 0072 9C42     		cmp	r4, r3
 1194 0074 08D8     		bhi	.L89
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1195              		.loc 1 716 0
 1196 0076 324B     		ldr	r3, .L94+40
 1197 0078 1B78     		ldrb	r3, [r3]
 1198 007a DBB2     		uxtb	r3, r3
 1199 007c 9A46     		mov	r10, r3
 1200              	.LVL92:
 717:Generated_Source\PSoC4/CyLib.c ****             }
 1201              		.loc 1 717 0
 1202 007e 314B     		ldr	r3, .L94+44
 1203 0080 1B78     		ldrb	r3, [r3]
 1204 0082 DBB2     		uxtb	r3, r3
 1205 0084 9946     		mov	r9, r3
 1206              	.LVL93:
 1207 0086 07E0     		b	.L86
 1208              	.LVL94:
 1209              	.L89:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1210              		.loc 1 721 0
 1211 0088 2F4B     		ldr	r3, .L94+48
 1212 008a 1B78     		ldrb	r3, [r3]
 1213 008c DBB2     		uxtb	r3, r3
 1214 008e 9A46     		mov	r10, r3
 1215              	.LVL95:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1216              		.loc 1 722 0
 1217 0090 2E4B     		ldr	r3, .L94+52
 1218 0092 1B78     		ldrb	r3, [r3]
 1219 0094 DBB2     		uxtb	r3, r3
 1220 0096 9946     		mov	r9, r3
 1221              	.LVL96:
 1222              	.L86:
 726:Generated_Source\PSoC4/CyLib.c **** 
 1223              		.loc 1 726 0
 1224 0098 2D4B     		ldr	r3, .L94+56
 1225 009a DE5D     		ldrb	r6, [r3, r7]
 1226              	.LVL97:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1227              		.loc 1 738 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 69


 1228 009c 2F2E     		cmp	r6, #47
 1229 009e 09D9     		bls	.L90
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1230              		.loc 1 738 0 is_stmt 0 discriminator 1
 1231 00a0 2A2C     		cmp	r4, #42
 1232 00a2 07D9     		bls	.L90
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1233              		.loc 1 741 0 is_stmt 1
 1234 00a4 1922     		movs	r2, #25
 1235 00a6 2B4B     		ldr	r3, .L94+60
 1236 00a8 1A60     		str	r2, [r3]
 1237              	.LVL98:
 744:Generated_Source\PSoC4/CyLib.c **** 
 1238              		.loc 1 744 0
 1239 00aa 0520     		movs	r0, #5
 1240 00ac FFF7FEFF 		bl	CyDelayCycles
 1241              	.LVL99:
 746:Generated_Source\PSoC4/CyLib.c ****             }
 1242              		.loc 1 746 0
 1243 00b0 1925     		movs	r5, #25
 1244 00b2 03E0     		b	.L91
 1245              	.LVL100:
 1246              	.L90:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 1247              		.loc 1 750 0
 1248 00b4 274B     		ldr	r3, .L94+60
 1249 00b6 1D68     		ldr	r5, [r3]
 1250 00b8 3F23     		movs	r3, #63
 1251 00ba 1D40     		ands	r5, r3
 1252              	.LVL101:
 1253              	.L91:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 762 0
 1255 00bc B542     		cmp	r5, r6
 1256 00be 06D9     		bls	.L92
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1257              		.loc 1 765 0
 1258 00c0 234B     		ldr	r3, .L94+56
 1259 00c2 DA5D     		ldrb	r2, [r3, r7]
 1260 00c4 234B     		ldr	r3, .L94+60
 1261 00c6 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****             }
 1262              		.loc 1 766 0
 1263 00c8 0520     		movs	r0, #5
 1264 00ca FFF7FEFF 		bl	CyDelayCycles
 1265              	.LVL102:
 1266              	.L92:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1267              		.loc 1 785 0
 1268 00ce 1F4B     		ldr	r3, .L94+52
 1269 00d0 9C46     		mov	ip, r3
 1270 00d2 6444     		add	r4, r4, ip
 1271              	.LVL103:
 1272 00d4 2378     		ldrb	r3, [r4]
 1273 00d6 DBB2     		uxtb	r3, r3
 1274              	.LVL104:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 70


 1275              		.loc 1 789 0
 1276 00d8 1F4A     		ldr	r2, .L94+64
 1277 00da 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1278              		.loc 1 790 0
 1279 00dc 1F4B     		ldr	r3, .L94+68
 1280              	.LVL105:
 1281 00de 5246     		mov	r2, r10
 1282              	.LVL106:
 1283 00e0 1A60     		str	r2, [r3]
 1284              	.LVL107:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1285              		.loc 1 791 0
 1286 00e2 1F4B     		ldr	r3, .L94+72
 1287 00e4 4A46     		mov	r2, r9
 1288 00e6 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1289              		.loc 1 792 0
 1290 00e8 0520     		movs	r0, #5
 1291 00ea FFF7FEFF 		bl	CyDelayUs
 1292              	.LVL108:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1293              		.loc 1 794 0
 1294 00ee B542     		cmp	r5, r6
 1295 00f0 0AD2     		bcs	.L93
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1296              		.loc 1 797 0
 1297 00f2 174B     		ldr	r3, .L94+56
 1298 00f4 DA5D     		ldrb	r2, [r3, r7]
 1299 00f6 174B     		ldr	r3, .L94+60
 1300 00f8 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1301              		.loc 1 798 0
 1302 00fa 0520     		movs	r0, #5
 1303 00fc FFF7FEFF 		bl	CyDelayCycles
 1304              	.LVL109:
 1305 0100 02E0     		b	.L93
 1306              	.LVL110:
 1307              	.L84:
 804:Generated_Source\PSoC4/CyLib.c ****         }
 1308              		.loc 1 804 0 discriminator 1
 1309 0102 0020     		movs	r0, #0
 1310 0104 FFF7FEFF 		bl	CyHalt
 1311              	.LVL111:
 1312              	.L93:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1313              		.loc 1 823 0
 1314 0108 0198     		ldr	r0, [sp, #4]
 1315 010a FFF7FEFF 		bl	CyExitCriticalSection
 1316              	.LVL112:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 824 0
 1318 010e 03B0     		add	sp, sp, #12
 1319              		@ sp needed
 1320              	.LVL113:
 1321 0110 0CBC     		pop	{r2, r3}
 1322 0112 9146     		mov	r9, r2
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 71


 1323 0114 9A46     		mov	r10, r3
 1324 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1325              	.L95:
 1326              		.align	2
 1327              	.L94:
 1328 0118 C0F1FF0F 		.word	268431808
 1329 011c C1F1FF0F 		.word	268431809
 1330 0120 C2F1FF0F 		.word	268431810
 1331 0124 C3F1FF0F 		.word	268431811
 1332 0128 C4F1FF0F 		.word	268431812
 1333 012c C5F1FF0F 		.word	268431813
 1334 0130 C6F1FF0F 		.word	268431814
 1335 0134 C7F1FF0F 		.word	268431815
 1336 0138 C8F1FF0F 		.word	268431816
 1337 013c C9F1FF0F 		.word	268431817
 1338 0140 CAF1FF0F 		.word	268431818
 1339 0144 CBF1FF0F 		.word	268431819
 1340 0148 CCF1FF0F 		.word	268431820
 1341 014c CDF1FF0F 		.word	268431821
 1342 0150 00000000 		.word	.LANCHOR1
 1343 0154 2CFF0B40 		.word	1074528044
 1344 0158 28FF0B40 		.word	1074528040
 1345 015c 1CFF0B40 		.word	1074528028
 1346 0160 20FF0B40 		.word	1074528032
 1347              		.cfi_endproc
 1348              	.LFE6:
 1349              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1350              		.section	.text.CySysLvdEnable,"ax",%progbits
 1351              		.align	2
 1352              		.global	CySysLvdEnable
 1353              		.code	16
 1354              		.thumb_func
 1355              		.type	CySysLvdEnable, %function
 1356              	CySysLvdEnable:
 1357              	.LFB7:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1358              		.loc 1 2119 0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 0, uses_anonymous_args = 0
 1362              	.LVL114:
 1363 0000 70B5     		push	{r4, r5, r6, lr}
 1364              		.cfi_def_cfa_offset 16
 1365              		.cfi_offset 4, -16
 1366              		.cfi_offset 5, -12
 1367              		.cfi_offset 6, -8
 1368              		.cfi_offset 14, -4
 1369 0002 0300     		movs	r3, r0
2121:Generated_Source\PSoC4/CyLib.c **** 
 1370              		.loc 1 2121 0
 1371 0004 0D4C     		ldr	r4, .L97
 1372 0006 2268     		ldr	r2, [r4]
 1373 0008 0225     		movs	r5, #2
 1374 000a AA43     		bics	r2, r5
 1375 000c 2260     		str	r2, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1376              		.loc 1 2124 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 72


 1377 000e 0C4A     		ldr	r2, .L97+4
 1378 0010 1168     		ldr	r1, [r2]
 1379 0012 1E20     		movs	r0, #30
 1380              	.LVL115:
 1381 0014 8143     		bics	r1, r0
2125:Generated_Source\PSoC4/CyLib.c **** 
 1382              		.loc 1 2125 0
 1383 0016 5B00     		lsls	r3, r3, #1
 1384              	.LVL116:
 1385 0018 1840     		ands	r0, r3
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1386              		.loc 1 2124 0
 1387 001a 0843     		orrs	r0, r1
 1388 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 1389              		.loc 1 2128 0
 1390 001e 1168     		ldr	r1, [r2]
 1391 0020 0123     		movs	r3, #1
 1392 0022 0B43     		orrs	r3, r1
 1393 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1394              		.loc 1 2131 0
 1395 0026 FA20     		movs	r0, #250
 1396 0028 8000     		lsls	r0, r0, #2
 1397 002a FFF7FEFF 		bl	CyDelayUs
 1398              	.LVL117:
2134:Generated_Source\PSoC4/CyLib.c **** 
 1399              		.loc 1 2134 0
 1400 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1401              	.LVL118:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1402              		.loc 1 2137 0
 1403 0032 2368     		ldr	r3, [r4]
 1404 0034 1D43     		orrs	r5, r3
 1405 0036 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1406              		.loc 1 2138 0
 1407              		@ sp needed
 1408 0038 70BD     		pop	{r4, r5, r6, pc}
 1409              	.L98:
 1410 003a C046     		.align	2
 1411              	.L97:
 1412 003c 08000B40 		.word	1074462728
 1413 0040 18000B40 		.word	1074462744
 1414              		.cfi_endproc
 1415              	.LFE7:
 1416              		.size	CySysLvdEnable, .-CySysLvdEnable
 1417              		.global	__aeabi_uidiv
 1418              		.section	.text.CyDelayFreq,"ax",%progbits
 1419              		.align	2
 1420              		.global	CyDelayFreq
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	CyDelayFreq, %function
 1424              	CyDelayFreq:
 1425              	.LFB29:
2586:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 73


2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1426              		.loc 1 2597 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 0, uses_anonymous_args = 0
 1430              	.LVL119:
 1431 0000 70B5     		push	{r4, r5, r6, lr}
 1432              		.cfi_def_cfa_offset 16
 1433              		.cfi_offset 4, -16
 1434              		.cfi_offset 5, -12
 1435              		.cfi_offset 6, -8
 1436              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1437              		.loc 1 2598 0
 1438 0002 0028     		cmp	r0, #0
 1439 0004 02D0     		beq	.L100
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1440              		.loc 1 2600 0
 1441 0006 0C4B     		ldr	r3, .L102
 1442 0008 1861     		str	r0, [r3, #16]
 1443 000a 02E0     		b	.L101
 1444              	.L100:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1445              		.loc 1 2604 0
 1446 000c 0B4A     		ldr	r2, .L102+4
 1447 000e 0A4B     		ldr	r3, .L102
 1448 0010 1A61     		str	r2, [r3, #16]
 1449              	.L101:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1450              		.loc 1 2607 0
 1451 0012 094C     		ldr	r4, .L102
 1452 0014 2569     		ldr	r5, [r4, #16]
 1453 0016 0A4B     		ldr	r3, .L102+8
 1454 0018 E818     		adds	r0, r5, r3
 1455              	.LVL120:
 1456 001a 0A49     		ldr	r1, .L102+12
 1457 001c FFF7FEFF 		bl	__aeabi_uidiv
 1458              	.LVL121:
 1459 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1460              		.loc 1 2608 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 74


 1461 0022 094B     		ldr	r3, .L102+16
 1462 0024 E818     		adds	r0, r5, r3
 1463 0026 FA21     		movs	r1, #250
 1464 0028 8900     		lsls	r1, r1, #2
 1465 002a FFF7FEFF 		bl	__aeabi_uidiv
 1466              	.LVL122:
 1467 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1468              		.loc 1 2609 0
 1469 0030 C003     		lsls	r0, r0, #15
 1470 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1471              		.loc 1 2610 0
 1472              		@ sp needed
 1473 0034 70BD     		pop	{r4, r5, r6, pc}
 1474              	.L103:
 1475 0036 C046     		.align	2
 1476              	.L102:
 1477 0038 00000000 		.word	.LANCHOR0
 1478 003c 006CDC02 		.word	48000000
 1479 0040 3F420F00 		.word	999999
 1480 0044 40420F00 		.word	1000000
 1481 0048 E7030000 		.word	999
 1482              		.cfi_endproc
 1483              	.LFE29:
 1484              		.size	CyDelayFreq, .-CyDelayFreq
 1485              		.section	.text.CySysTickStop,"ax",%progbits
 1486              		.align	2
 1487              		.global	CySysTickStop
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	CySysTickStop, %function
 1491              	CySysTickStop:
 1492              	.LFB33:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 75


2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 76


2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 1493              		.loc 1 2706 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 1497              		@ link register save eliminated.
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1498              		.loc 1 2707 0
 1499 0000 024A     		ldr	r2, .L105
 1500 0002 1368     		ldr	r3, [r2]
 1501 0004 0121     		movs	r1, #1
 1502 0006 8B43     		bics	r3, r1
 1503 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** }
 1504              		.loc 1 2708 0
 1505              		@ sp needed
 1506 000a 7047     		bx	lr
 1507              	.L106:
 1508              		.align	2
 1509              	.L105:
 1510 000c 10E000E0 		.word	-536813552
 1511              		.cfi_endproc
 1512              	.LFE33:
 1513              		.size	CySysTickStop, .-CySysTickStop
 1514              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1515              		.align	2
 1516              		.global	CySysTickEnableInterrupt
 1517              		.code	16
 1518              		.thumb_func
 1519              		.type	CySysTickEnableInterrupt, %function
 1520              	CySysTickEnableInterrupt:
 1521              	.LFB34:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 77


2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 1522              		.loc 1 2722 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 0
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              		@ link register save eliminated.
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1527              		.loc 1 2723 0
 1528 0000 024A     		ldr	r2, .L108
 1529 0002 1168     		ldr	r1, [r2]
 1530 0004 0223     		movs	r3, #2
 1531 0006 0B43     		orrs	r3, r1
 1532 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** }
 1533              		.loc 1 2724 0
 1534              		@ sp needed
 1535 000a 7047     		bx	lr
 1536              	.L109:
 1537              		.align	2
 1538              	.L108:
 1539 000c 10E000E0 		.word	-536813552
 1540              		.cfi_endproc
 1541              	.LFE34:
 1542              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1543              		.section	.text.CySysTickEnable,"ax",%progbits
 1544              		.align	2
 1545              		.global	CySysTickEnable
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	CySysTickEnable, %function
 1549              	CySysTickEnable:
 1550              	.LFB32:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1551              		.loc 1 2689 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 0, uses_anonymous_args = 0
 1555 0000 10B5     		push	{r4, lr}
 1556              		.cfi_def_cfa_offset 8
 1557              		.cfi_offset 4, -8
 1558              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1559              		.loc 1 2690 0
 1560 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1561              	.LVL123:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1562              		.loc 1 2691 0
 1563 0006 034A     		ldr	r2, .L111
 1564 0008 1168     		ldr	r1, [r2]
 1565 000a 0123     		movs	r3, #1
 1566 000c 0B43     		orrs	r3, r1
 1567 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1568              		.loc 1 2692 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 78


 1569              		@ sp needed
 1570 0010 10BD     		pop	{r4, pc}
 1571              	.L112:
 1572 0012 C046     		.align	2
 1573              	.L111:
 1574 0014 10E000E0 		.word	-536813552
 1575              		.cfi_endproc
 1576              	.LFE32:
 1577              		.size	CySysTickEnable, .-CySysTickEnable
 1578              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1579              		.align	2
 1580              		.global	CySysTickDisableInterrupt
 1581              		.code	16
 1582              		.thumb_func
 1583              		.type	CySysTickDisableInterrupt, %function
 1584              	CySysTickDisableInterrupt:
 1585              	.LFB35:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 1586              		.loc 1 2738 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              		@ link register save eliminated.
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1591              		.loc 1 2739 0
 1592 0000 024A     		ldr	r2, .L114
 1593 0002 1368     		ldr	r3, [r2]
 1594 0004 0221     		movs	r1, #2
 1595 0006 8B43     		bics	r3, r1
 1596 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** }
 1597              		.loc 1 2740 0
 1598              		@ sp needed
 1599 000a 7047     		bx	lr
 1600              	.L115:
 1601              		.align	2
 1602              	.L114:
 1603 000c 10E000E0 		.word	-536813552
 1604              		.cfi_endproc
 1605              	.LFE35:
 1606              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1607              		.section	.text.CySysTickSetReload,"ax",%progbits
 1608              		.align	2
 1609              		.global	CySysTickSetReload
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 79


 1610              		.code	16
 1611              		.thumb_func
 1612              		.type	CySysTickSetReload, %function
 1613              	CySysTickSetReload:
 1614              	.LFB36:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 1615              		.loc 1 2755 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
 1620              	.LVL124:
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1621              		.loc 1 2756 0
 1622 0000 0002     		lsls	r0, r0, #8
 1623              	.LVL125:
 1624 0002 000A     		lsrs	r0, r0, #8
 1625 0004 014B     		ldr	r3, .L117
 1626 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 1627              		.loc 1 2757 0
 1628              		@ sp needed
 1629 0008 7047     		bx	lr
 1630              	.L118:
 1631 000a C046     		.align	2
 1632              	.L117:
 1633 000c 14E000E0 		.word	-536813548
 1634              		.cfi_endproc
 1635              	.LFE36:
 1636              		.size	CySysTickSetReload, .-CySysTickSetReload
 1637              		.section	.text.CySysTickGetReload,"ax",%progbits
 1638              		.align	2
 1639              		.global	CySysTickGetReload
 1640              		.code	16
 1641              		.thumb_func
 1642              		.type	CySysTickGetReload, %function
 1643              	CySysTickGetReload:
 1644              	.LFB37:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 80


2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 1645              		.loc 1 2771 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 0
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 1649              		@ link register save eliminated.
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1650              		.loc 1 2772 0
 1651 0000 024B     		ldr	r3, .L120
 1652 0002 1868     		ldr	r0, [r3]
 1653 0004 0002     		lsls	r0, r0, #8
 1654 0006 000A     		lsrs	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 1655              		.loc 1 2773 0
 1656              		@ sp needed
 1657 0008 7047     		bx	lr
 1658              	.L121:
 1659 000a C046     		.align	2
 1660              	.L120:
 1661 000c 14E000E0 		.word	-536813548
 1662              		.cfi_endproc
 1663              	.LFE37:
 1664              		.size	CySysTickGetReload, .-CySysTickGetReload
 1665              		.section	.text.CySysTickGetValue,"ax",%progbits
 1666              		.align	2
 1667              		.global	CySysTickGetValue
 1668              		.code	16
 1669              		.thumb_func
 1670              		.type	CySysTickGetValue, %function
 1671              	CySysTickGetValue:
 1672              	.LFB38:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 1673              		.loc 1 2787 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 81


 1677              		@ link register save eliminated.
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1678              		.loc 1 2788 0
 1679 0000 024B     		ldr	r3, .L123
 1680 0002 1868     		ldr	r0, [r3]
 1681 0004 0002     		lsls	r0, r0, #8
 1682 0006 000A     		lsrs	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 1683              		.loc 1 2789 0
 1684              		@ sp needed
 1685 0008 7047     		bx	lr
 1686              	.L124:
 1687 000a C046     		.align	2
 1688              	.L123:
 1689 000c 18E000E0 		.word	-536813544
 1690              		.cfi_endproc
 1691              	.LFE38:
 1692              		.size	CySysTickGetValue, .-CySysTickGetValue
 1693              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1694              		.align	2
 1695              		.global	CySysTickGetCountFlag
 1696              		.code	16
 1697              		.thumb_func
 1698              		.type	CySysTickGetCountFlag, %function
 1699              	CySysTickGetCountFlag:
 1700              	.LFB39:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 82


2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2846:Generated_Source\PSoC4/CyLib.c ****     }
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 1701              		.loc 1 2867 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 0, uses_anonymous_args = 0
 1705              		@ link register save eliminated.
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1706              		.loc 1 2868 0
 1707 0000 024B     		ldr	r3, .L126
 1708 0002 1868     		ldr	r0, [r3]
 1709 0004 000C     		lsrs	r0, r0, #16
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 83


 1710 0006 0123     		movs	r3, #1
 1711 0008 1840     		ands	r0, r3
2869:Generated_Source\PSoC4/CyLib.c **** }
 1712              		.loc 1 2869 0
 1713              		@ sp needed
 1714 000a 7047     		bx	lr
 1715              	.L127:
 1716              		.align	2
 1717              	.L126:
 1718 000c 10E000E0 		.word	-536813552
 1719              		.cfi_endproc
 1720              	.LFE39:
 1721              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1722              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1723              		.align	2
 1724              		.code	16
 1725              		.thumb_func
 1726              		.type	CySysTickServiceCallbacks, %function
 1727              	CySysTickServiceCallbacks:
 1728              	.LFB43:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 84


2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 1729              		.loc 1 2952 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733 0000 10B5     		push	{r4, lr}
 1734              		.cfi_def_cfa_offset 8
 1735              		.cfi_offset 4, -8
 1736              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 85


2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1737              		.loc 1 2956 0
 1738 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1739              	.LVL126:
 1740 0006 0128     		cmp	r0, #1
 1741 0008 0BD1     		bne	.L128
 1742 000a 07E0     		b	.L133
 1743              	.LVL127:
 1744              	.L132:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1745              		.loc 1 2960 0
 1746 000c A300     		lsls	r3, r4, #2
 1747 000e 054A     		ldr	r2, .L134
 1748 0010 9B58     		ldr	r3, [r3, r2]
 1749 0012 002B     		cmp	r3, #0
 1750 0014 00D0     		beq	.L131
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1751              		.loc 1 2962 0
 1752 0016 9847     		blx	r3
 1753              	.LVL128:
 1754              	.L131:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1755              		.loc 1 2958 0 discriminator 2
 1756 0018 0134     		adds	r4, r4, #1
 1757              	.LVL129:
 1758 001a 00E0     		b	.L129
 1759              	.LVL130:
 1760              	.L133:
 1761 001c 0024     		movs	r4, #0
 1762              	.L129:
 1763              	.LVL131:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1764              		.loc 1 2958 0 is_stmt 0 discriminator 1
 1765 001e 042C     		cmp	r4, #4
 1766 0020 F4D9     		bls	.L132
 1767              	.LVL132:
 1768              	.L128:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 2966 0 is_stmt 1
 1770              		@ sp needed
 1771 0022 10BD     		pop	{r4, pc}
 1772              	.L135:
 1773              		.align	2
 1774              	.L134:
 1775 0024 00000000 		.word	.LANCHOR2
 1776              		.cfi_endproc
 1777              	.LFE43:
 1778              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1779              		.section	.text.CySysTickClear,"ax",%progbits
 1780              		.align	2
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 86


 1781              		.global	CySysTickClear
 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CySysTickClear, %function
 1785              	CySysTickClear:
 1786              	.LFB40:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1787              		.loc 1 2880 0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 0
 1790              		@ frame_needed = 0, uses_anonymous_args = 0
 1791              		@ link register save eliminated.
2881:Generated_Source\PSoC4/CyLib.c **** }
 1792              		.loc 1 2881 0
 1793 0000 0022     		movs	r2, #0
 1794 0002 014B     		ldr	r3, .L137
 1795 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1796              		.loc 1 2882 0
 1797              		@ sp needed
 1798 0006 7047     		bx	lr
 1799              	.L138:
 1800              		.align	2
 1801              	.L137:
 1802 0008 18E000E0 		.word	-536813544
 1803              		.cfi_endproc
 1804              	.LFE40:
 1805              		.size	CySysTickClear, .-CySysTickClear
 1806              		.section	.text.CySysTickInit,"ax",%progbits
 1807              		.align	2
 1808              		.global	CySysTickInit
 1809              		.code	16
 1810              		.thumb_func
 1811              		.type	CySysTickInit, %function
 1812              	CySysTickInit:
 1813              	.LFB31:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1814              		.loc 1 2658 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 0
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818 0000 10B5     		push	{r4, lr}
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 4, -8
 1821              		.cfi_offset 14, -4
 1822              	.LVL133:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1823              		.loc 1 2661 0
 1824 0002 0023     		movs	r3, #0
 1825 0004 04E0     		b	.L140
 1826              	.LVL134:
 1827              	.L141:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1828              		.loc 1 2663 0 discriminator 3
 1829 0006 9900     		lsls	r1, r3, #2
 1830 0008 0020     		movs	r0, #0
 1831 000a 0B4A     		ldr	r2, .L142
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 87


 1832 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1833              		.loc 1 2661 0 discriminator 3
 1834 000e 0133     		adds	r3, r3, #1
 1835              	.LVL135:
 1836              	.L140:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1837              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1838 0010 042B     		cmp	r3, #4
 1839 0012 F8D9     		bls	.L141
2666:Generated_Source\PSoC4/CyLib.c **** 
 1840              		.loc 1 2666 0 is_stmt 1
 1841 0014 0949     		ldr	r1, .L142+4
 1842 0016 0F20     		movs	r0, #15
 1843 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1844              	.LVL136:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1845              		.loc 1 2672 0
 1846 001c 084B     		ldr	r3, .L142+8
 1847 001e 1869     		ldr	r0, [r3, #16]
 1848 0020 FA21     		movs	r1, #250
 1849 0022 8900     		lsls	r1, r1, #2
 1850 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1851              	.LVL137:
 1852 0028 FFF7FEFF 		bl	CySysTickSetReload
 1853              	.LVL138:
2673:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1854              		.loc 1 2673 0
 1855 002c FFF7FEFF 		bl	CySysTickClear
 1856              	.LVL139:
2674:Generated_Source\PSoC4/CyLib.c **** }
 1857              		.loc 1 2674 0
 1858 0030 0F20     		movs	r0, #15
 1859 0032 FFF7FEFF 		bl	CyIntEnable
 1860              	.LVL140:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1861              		.loc 1 2675 0
 1862              		@ sp needed
 1863 0036 10BD     		pop	{r4, pc}
 1864              	.L143:
 1865              		.align	2
 1866              	.L142:
 1867 0038 00000000 		.word	.LANCHOR2
 1868 003c 00000000 		.word	CySysTickServiceCallbacks
 1869 0040 00000000 		.word	.LANCHOR0
 1870              		.cfi_endproc
 1871              	.LFE31:
 1872              		.size	CySysTickInit, .-CySysTickInit
 1873              		.section	.text.CySysTickStart,"ax",%progbits
 1874              		.align	2
 1875              		.global	CySysTickStart
 1876              		.code	16
 1877              		.thumb_func
 1878              		.type	CySysTickStart, %function
 1879              	CySysTickStart:
 1880              	.LFB30:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 88


 1881              		.loc 1 2629 0
 1882              		.cfi_startproc
 1883              		@ args = 0, pretend = 0, frame = 0
 1884              		@ frame_needed = 0, uses_anonymous_args = 0
 1885 0000 10B5     		push	{r4, lr}
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 4, -8
 1888              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1889              		.loc 1 2630 0
 1890 0002 064B     		ldr	r3, .L146
 1891 0004 5B69     		ldr	r3, [r3, #20]
 1892 0006 002B     		cmp	r3, #0
 1893 0008 04D1     		bne	.L145
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1894              		.loc 1 2632 0
 1895 000a FFF7FEFF 		bl	CySysTickInit
 1896              	.LVL141:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1897              		.loc 1 2633 0
 1898 000e 0122     		movs	r2, #1
 1899 0010 024B     		ldr	r3, .L146
 1900 0012 5A61     		str	r2, [r3, #20]
 1901              	.L145:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1902              		.loc 1 2636 0
 1903 0014 FFF7FEFF 		bl	CySysTickEnable
 1904              	.LVL142:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1905              		.loc 1 2637 0
 1906              		@ sp needed
 1907 0018 10BD     		pop	{r4, pc}
 1908              	.L147:
 1909 001a C046     		.align	2
 1910              	.L146:
 1911 001c 00000000 		.word	.LANCHOR2
 1912              		.cfi_endproc
 1913              	.LFE30:
 1914              		.size	CySysTickStart, .-CySysTickStart
 1915              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1916              		.align	2
 1917              		.global	CySysTickSetCallback
 1918              		.code	16
 1919              		.thumb_func
 1920              		.type	CySysTickSetCallback, %function
 1921              	CySysTickSetCallback:
 1922              	.LFB41:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1923              		.loc 1 2915 0
 1924              		.cfi_startproc
 1925              		@ args = 0, pretend = 0, frame = 0
 1926              		@ frame_needed = 0, uses_anonymous_args = 0
 1927              		@ link register save eliminated.
 1928              	.LVL143:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1929              		.loc 1 2918 0
 1930 0000 024A     		ldr	r2, .L149
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 89


 1931 0002 8300     		lsls	r3, r0, #2
 1932 0004 9858     		ldr	r0, [r3, r2]
 1933              	.LVL144:
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1934              		.loc 1 2919 0
 1935 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 1936              		.loc 1 2921 0
 1937              		@ sp needed
 1938 0008 7047     		bx	lr
 1939              	.L150:
 1940 000a C046     		.align	2
 1941              	.L149:
 1942 000c 00000000 		.word	.LANCHOR2
 1943              		.cfi_endproc
 1944              	.LFE41:
 1945              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1946              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1947              		.align	2
 1948              		.global	CySysTickGetCallback
 1949              		.code	16
 1950              		.thumb_func
 1951              		.type	CySysTickGetCallback, %function
 1952              	CySysTickGetCallback:
 1953              	.LFB42:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1954              		.loc 1 2939 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958              		@ link register save eliminated.
 1959              	.LVL145:
2940:Generated_Source\PSoC4/CyLib.c **** }
 1960              		.loc 1 2940 0
 1961 0000 8000     		lsls	r0, r0, #2
 1962              	.LVL146:
 1963 0002 014B     		ldr	r3, .L152
 1964 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 1965              		.loc 1 2941 0
 1966              		@ sp needed
 1967 0006 7047     		bx	lr
 1968              	.L153:
 1969              		.align	2
 1970              	.L152:
 1971 0008 00000000 		.word	.LANCHOR2
 1972              		.cfi_endproc
 1973              	.LFE42:
 1974              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1975              		.section	.text.CyGetUniqueId,"ax",%progbits
 1976              		.align	2
 1977              		.global	CyGetUniqueId
 1978              		.code	16
 1979              		.thumb_func
 1980              		.type	CyGetUniqueId, %function
 1981              	CyGetUniqueId:
 1982              	.LFB44:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 90


2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 1983              		.loc 1 2984 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 0
 1986              		@ frame_needed = 0, uses_anonymous_args = 0
 1987              		@ link register save eliminated.
 1988              	.LVL147:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1989              		.loc 1 2986 0
 1990 0000 134B     		ldr	r3, .L155
 1991 0002 1B78     		ldrb	r3, [r3]
 1992 0004 DAB2     		uxtb	r2, r3
 1993 0006 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1994              		.loc 1 2987 0
 1995 0008 124B     		ldr	r3, .L155+4
 1996 000a 1B78     		ldrb	r3, [r3]
 1997 000c 1B02     		lsls	r3, r3, #8
 1998 000e 1343     		orrs	r3, r2
 1999 0010 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2000              		.loc 1 2988 0
 2001 0012 114A     		ldr	r2, .L155+8
 2002 0014 1278     		ldrb	r2, [r2]
 2003 0016 1204     		lsls	r2, r2, #16
 2004 0018 1343     		orrs	r3, r2
 2005 001a 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2006              		.loc 1 2989 0
 2007 001c 0F4A     		ldr	r2, .L155+12
 2008 001e 1278     		ldrb	r2, [r2]
 2009 0020 1206     		lsls	r2, r2, #24
 2010 0022 1343     		orrs	r3, r2
 2011 0024 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2012              		.loc 1 2991 0
 2013 0026 0E4B     		ldr	r3, .L155+16
 2014 0028 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 91


 2015 002a DAB2     		uxtb	r2, r3
 2016 002c 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2017              		.loc 1 2992 0
 2018 002e 0D4B     		ldr	r3, .L155+20
 2019 0030 1B78     		ldrb	r3, [r3]
 2020 0032 1B02     		lsls	r3, r3, #8
 2021 0034 1343     		orrs	r3, r2
 2022 0036 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2023              		.loc 1 2993 0
 2024 0038 0B4A     		ldr	r2, .L155+24
 2025 003a 1278     		ldrb	r2, [r2]
 2026 003c 1204     		lsls	r2, r2, #16
 2027 003e 1343     		orrs	r3, r2
 2028 0040 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2029              		.loc 1 2994 0
 2030 0042 0A4A     		ldr	r2, .L155+28
 2031 0044 1278     		ldrb	r2, [r2]
 2032 0046 1206     		lsls	r2, r2, #24
 2033 0048 1343     		orrs	r3, r2
 2034 004a 4360     		str	r3, [r0, #4]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2035              		.loc 1 3006 0
 2036              		@ sp needed
 2037 004c 7047     		bx	lr
 2038              	.L156:
 2039 004e C046     		.align	2
 2040              	.L155:
 2041 0050 78F1FF0F 		.word	268431736
 2042 0054 79F1FF0F 		.word	268431737
 2043 0058 7AF1FF0F 		.word	268431738
 2044 005c 7BF1FF0F 		.word	268431739
 2045 0060 7CF1FF0F 		.word	268431740
 2046 0064 7DF1FF0F 		.word	268431741
 2047 0068 7EF1FF0F 		.word	268431742
 2048 006c 7FF1FF0F 		.word	268431743
 2049              		.cfi_endproc
 2050              	.LFE44:
 2051              		.size	CyGetUniqueId, .-CyGetUniqueId
 2052              		.global	CySysClkPumpConfig
 2053              		.global	cyImoFreqMhz2Reg
 2054              		.global	CySysTickInitVar
 2055              		.global	cydelay32kMs
 2056              		.global	cydelayFreqMhz
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 92


 2057              		.global	cydelayFreqKhz
 2058              		.global	cydelayFreqHz
 2059              		.section	.rodata
 2060              		.align	2
 2061              		.set	.LANCHOR1,. + 0
 2062              		.type	cyImoFreqMhz2Reg, %object
 2063              		.size	cyImoFreqMhz2Reg, 46
 2064              	cyImoFreqMhz2Reg:
 2065 0000 03       		.byte	3
 2066 0001 04       		.byte	4
 2067 0002 05       		.byte	5
 2068 0003 06       		.byte	6
 2069 0004 07       		.byte	7
 2070 0005 08       		.byte	8
 2071 0006 09       		.byte	9
 2072 0007 0A       		.byte	10
 2073 0008 0B       		.byte	11
 2074 0009 0C       		.byte	12
 2075 000a 0E       		.byte	14
 2076 000b 0F       		.byte	15
 2077 000c 10       		.byte	16
 2078 000d 11       		.byte	17
 2079 000e 12       		.byte	18
 2080 000f 13       		.byte	19
 2081 0010 14       		.byte	20
 2082 0011 15       		.byte	21
 2083 0012 16       		.byte	22
 2084 0013 17       		.byte	23
 2085 0014 18       		.byte	24
 2086 0015 19       		.byte	25
 2087 0016 1B       		.byte	27
 2088 0017 1C       		.byte	28
 2089 0018 1D       		.byte	29
 2090 0019 1E       		.byte	30
 2091 001a 1F       		.byte	31
 2092 001b 20       		.byte	32
 2093 001c 21       		.byte	33
 2094 001d 22       		.byte	34
 2095 001e 23       		.byte	35
 2096 001f 25       		.byte	37
 2097 0020 26       		.byte	38
 2098 0021 27       		.byte	39
 2099 0022 28       		.byte	40
 2100 0023 29       		.byte	41
 2101 0024 2A       		.byte	42
 2102 0025 2B       		.byte	43
 2103 0026 2E       		.byte	46
 2104 0027 2F       		.byte	47
 2105 0028 30       		.byte	48
 2106 0029 31       		.byte	49
 2107 002a 32       		.byte	50
 2108 002b 33       		.byte	51
 2109 002c 34       		.byte	52
 2110 002d 35       		.byte	53
 2111              		.data
 2112              		.align	2
 2113              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 93


 2114              		.type	CySysClkPumpConfig, %object
 2115              		.size	CySysClkPumpConfig, 4
 2116              	CySysClkPumpConfig:
 2117 0000 01000000 		.word	1
 2118              		.type	cydelay32kMs, %object
 2119              		.size	cydelay32kMs, 4
 2120              	cydelay32kMs:
 2121 0004 0000C05D 		.word	1572864000
 2122              		.type	cydelayFreqKhz, %object
 2123              		.size	cydelayFreqKhz, 4
 2124              	cydelayFreqKhz:
 2125 0008 80BB0000 		.word	48000
 2126              		.type	cydelayFreqMhz, %object
 2127              		.size	cydelayFreqMhz, 1
 2128              	cydelayFreqMhz:
 2129 000c 30       		.byte	48
 2130 000d 000000   		.space	3
 2131              		.type	cydelayFreqHz, %object
 2132              		.size	cydelayFreqHz, 4
 2133              	cydelayFreqHz:
 2134 0010 006CDC02 		.word	48000000
 2135              		.bss
 2136              		.align	2
 2137              		.set	.LANCHOR2,. + 0
 2138              		.type	CySysTickCallbacks, %object
 2139              		.size	CySysTickCallbacks, 20
 2140              	CySysTickCallbacks:
 2141 0000 00000000 		.space	20
 2141      00000000 
 2141      00000000 
 2141      00000000 
 2141      00000000 
 2142              		.type	CySysTickInitVar, %object
 2143              		.size	CySysTickInitVar, 4
 2144              	CySysTickInitVar:
 2145 0014 00000000 		.space	4
 2146              		.text
 2147              	.Letext0:
 2148              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2149              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2150              		.section	.debug_info,"",%progbits
 2151              	.Ldebug_info0:
 2152 0000 070B0000 		.4byte	0xb07
 2153 0004 0400     		.2byte	0x4
 2154 0006 00000000 		.4byte	.Ldebug_abbrev0
 2155 000a 04       		.byte	0x4
 2156 000b 01       		.uleb128 0x1
 2157 000c 90000000 		.4byte	.LASF105
 2158 0010 0C       		.byte	0xc
 2159 0011 49060000 		.4byte	.LASF106
 2160 0015 98010000 		.4byte	.LASF107
 2161 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2162 001d 00000000 		.4byte	0
 2163 0021 00000000 		.4byte	.Ldebug_line0
 2164 0025 02       		.uleb128 0x2
 2165 0026 01       		.byte	0x1
 2166 0027 06       		.byte	0x6
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 94


 2167 0028 5A000000 		.4byte	.LASF0
 2168 002c 02       		.uleb128 0x2
 2169 002d 01       		.byte	0x1
 2170 002e 08       		.byte	0x8
 2171 002f 07050000 		.4byte	.LASF1
 2172 0033 02       		.uleb128 0x2
 2173 0034 02       		.byte	0x2
 2174 0035 05       		.byte	0x5
 2175 0036 15050000 		.4byte	.LASF2
 2176 003a 02       		.uleb128 0x2
 2177 003b 02       		.byte	0x2
 2178 003c 07       		.byte	0x7
 2179 003d 6B030000 		.4byte	.LASF3
 2180 0041 02       		.uleb128 0x2
 2181 0042 04       		.byte	0x4
 2182 0043 05       		.byte	0x5
 2183 0044 F2010000 		.4byte	.LASF4
 2184 0048 02       		.uleb128 0x2
 2185 0049 04       		.byte	0x4
 2186 004a 07       		.byte	0x7
 2187 004b F3020000 		.4byte	.LASF5
 2188 004f 02       		.uleb128 0x2
 2189 0050 08       		.byte	0x8
 2190 0051 05       		.byte	0x5
 2191 0052 8A010000 		.4byte	.LASF6
 2192 0056 02       		.uleb128 0x2
 2193 0057 08       		.byte	0x8
 2194 0058 07       		.byte	0x7
 2195 0059 1E010000 		.4byte	.LASF7
 2196 005d 03       		.uleb128 0x3
 2197 005e 04       		.byte	0x4
 2198 005f 05       		.byte	0x5
 2199 0060 696E7400 		.ascii	"int\000"
 2200 0064 02       		.uleb128 0x2
 2201 0065 04       		.byte	0x4
 2202 0066 07       		.byte	0x7
 2203 0067 D7020000 		.4byte	.LASF8
 2204 006b 04       		.uleb128 0x4
 2205 006c 1D020000 		.4byte	.LASF9
 2206 0070 02       		.byte	0x2
 2207 0071 B901     		.2byte	0x1b9
 2208 0073 2C000000 		.4byte	0x2c
 2209 0077 04       		.uleb128 0x4
 2210 0078 17000000 		.4byte	.LASF10
 2211 007c 02       		.byte	0x2
 2212 007d BA01     		.2byte	0x1ba
 2213 007f 3A000000 		.4byte	0x3a
 2214 0083 04       		.uleb128 0x4
 2215 0084 5D020000 		.4byte	.LASF11
 2216 0088 02       		.byte	0x2
 2217 0089 BB01     		.2byte	0x1bb
 2218 008b 48000000 		.4byte	0x48
 2219 008f 02       		.uleb128 0x2
 2220 0090 04       		.byte	0x4
 2221 0091 04       		.byte	0x4
 2222 0092 8A040000 		.4byte	.LASF12
 2223 0096 02       		.uleb128 0x2
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 95


 2224 0097 08       		.byte	0x8
 2225 0098 04       		.byte	0x4
 2226 0099 39020000 		.4byte	.LASF13
 2227 009d 02       		.uleb128 0x2
 2228 009e 01       		.byte	0x1
 2229 009f 08       		.byte	0x8
 2230 00a0 58050000 		.4byte	.LASF14
 2231 00a4 04       		.uleb128 0x4
 2232 00a5 F1040000 		.4byte	.LASF15
 2233 00a9 02       		.byte	0x2
 2234 00aa 6302     		.2byte	0x263
 2235 00ac B0000000 		.4byte	0xb0
 2236 00b0 05       		.uleb128 0x5
 2237 00b1 6B000000 		.4byte	0x6b
 2238 00b5 04       		.uleb128 0x4
 2239 00b6 D9030000 		.4byte	.LASF16
 2240 00ba 02       		.byte	0x2
 2241 00bb 6502     		.2byte	0x265
 2242 00bd C1000000 		.4byte	0xc1
 2243 00c1 05       		.uleb128 0x5
 2244 00c2 83000000 		.4byte	0x83
 2245 00c6 04       		.uleb128 0x4
 2246 00c7 5D050000 		.4byte	.LASF17
 2247 00cb 02       		.byte	0x2
 2248 00cc 7502     		.2byte	0x275
 2249 00ce D2000000 		.4byte	0xd2
 2250 00d2 06       		.uleb128 0x6
 2251 00d3 04       		.byte	0x4
 2252 00d4 D8000000 		.4byte	0xd8
 2253 00d8 07       		.uleb128 0x7
 2254 00d9 02       		.uleb128 0x2
 2255 00da 08       		.byte	0x8
 2256 00db 04       		.byte	0x4
 2257 00dc 16040000 		.4byte	.LASF18
 2258 00e0 02       		.uleb128 0x2
 2259 00e1 04       		.byte	0x4
 2260 00e2 07       		.byte	0x7
 2261 00e3 FB030000 		.4byte	.LASF19
 2262 00e7 08       		.uleb128 0x8
 2263 00e8 B5040000 		.4byte	.LASF20
 2264 00ec 03       		.byte	0x3
 2265 00ed F5       		.byte	0xf5
 2266 00ee D2000000 		.4byte	0xd2
 2267 00f2 09       		.uleb128 0x9
 2268 00f3 27060000 		.4byte	.LASF21
 2269 00f7 01       		.byte	0x1
 2270 00f8 6B       		.byte	0x6b
 2271 00f9 00000000 		.4byte	.LFB0
 2272 00fd 14000000 		.4byte	.LFE0-.LFB0
 2273 0101 01       		.uleb128 0x1
 2274 0102 9C       		.byte	0x9c
 2275 0103 09       		.uleb128 0x9
 2276 0104 20030000 		.4byte	.LASF22
 2277 0108 01       		.byte	0x1
 2278 0109 8B       		.byte	0x8b
 2279 010a 00000000 		.4byte	.LFB1
 2280 010e 10000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 96


 2281 0112 01       		.uleb128 0x1
 2282 0113 9C       		.byte	0x9c
 2283 0114 0A       		.uleb128 0xa
 2284 0115 27000000 		.4byte	.LASF25
 2285 0119 01       		.byte	0x1
 2286 011a AD01     		.2byte	0x1ad
 2287 011c 00000000 		.4byte	.LFB2
 2288 0120 20000000 		.4byte	.LFE2-.LFB2
 2289 0124 01       		.uleb128 0x1
 2290 0125 9C       		.byte	0x9c
 2291 0126 6D010000 		.4byte	0x16d
 2292 012a 0B       		.uleb128 0xb
 2293 012b 3D050000 		.4byte	.LASF27
 2294 012f 01       		.byte	0x1
 2295 0130 AD01     		.2byte	0x1ad
 2296 0132 83000000 		.4byte	0x83
 2297 0136 00000000 		.4byte	.LLST0
 2298 013a 0C       		.uleb128 0xc
 2299 013b D0010000 		.4byte	.LASF23
 2300 013f 01       		.byte	0x1
 2301 0140 AF01     		.2byte	0x1af
 2302 0142 6B000000 		.4byte	0x6b
 2303 0146 2C000000 		.4byte	.LLST1
 2304 014a 0C       		.uleb128 0xc
 2305 014b 75060000 		.4byte	.LASF24
 2306 014f 01       		.byte	0x1
 2307 0150 B001     		.2byte	0x1b0
 2308 0152 83000000 		.4byte	0x83
 2309 0156 3F000000 		.4byte	.LLST2
 2310 015a 0D       		.uleb128 0xd
 2311 015b 08000000 		.4byte	.LVL1
 2312 015f E90A0000 		.4byte	0xae9
 2313 0163 0D       		.uleb128 0xd
 2314 0164 1A000000 		.4byte	.LVL5
 2315 0168 F40A0000 		.4byte	0xaf4
 2316 016c 00       		.byte	0
 2317 016d 0A       		.uleb128 0xa
 2318 016e C4030000 		.4byte	.LASF26
 2319 0172 01       		.byte	0x1
 2320 0173 D901     		.2byte	0x1d9
 2321 0175 00000000 		.4byte	.LFB3
 2322 0179 38000000 		.4byte	.LFE3-.LFB3
 2323 017d 01       		.uleb128 0x1
 2324 017e 9C       		.byte	0x9c
 2325 017f 92010000 		.4byte	0x192
 2326 0183 0E       		.uleb128 0xe
 2327 0184 32020000 		.4byte	.LASF28
 2328 0188 01       		.byte	0x1
 2329 0189 D901     		.2byte	0x1d9
 2330 018b 83000000 		.4byte	0x83
 2331 018f 01       		.uleb128 0x1
 2332 0190 50       		.byte	0x50
 2333 0191 00       		.byte	0
 2334 0192 0F       		.uleb128 0xf
 2335 0193 69020000 		.4byte	.LASF34
 2336 0197 01       		.byte	0x1
 2337 0198 FE01     		.2byte	0x1fe
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 97


 2338 019a 83000000 		.4byte	0x83
 2339 019e 00000000 		.4byte	.LFB4
 2340 01a2 1C000000 		.4byte	.LFE4-.LFB4
 2341 01a6 01       		.uleb128 0x1
 2342 01a7 9C       		.byte	0x9c
 2343 01a8 DF010000 		.4byte	0x1df
 2344 01ac 0C       		.uleb128 0xc
 2345 01ad D0010000 		.4byte	.LASF23
 2346 01b1 01       		.byte	0x1
 2347 01b2 0002     		.2byte	0x200
 2348 01b4 6B000000 		.4byte	0x6b
 2349 01b8 5D000000 		.4byte	.LLST3
 2350 01bc 0C       		.uleb128 0xc
 2351 01bd 32040000 		.4byte	.LASF29
 2352 01c1 01       		.byte	0x1
 2353 01c2 0102     		.2byte	0x201
 2354 01c4 83000000 		.4byte	0x83
 2355 01c8 70000000 		.4byte	.LLST4
 2356 01cc 0D       		.uleb128 0xd
 2357 01cd 06000000 		.4byte	.LVL8
 2358 01d1 E90A0000 		.4byte	0xae9
 2359 01d5 0D       		.uleb128 0xd
 2360 01d6 12000000 		.4byte	.LVL10
 2361 01da F40A0000 		.4byte	0xaf4
 2362 01de 00       		.byte	0
 2363 01df 0A       		.uleb128 0xa
 2364 01e0 7A050000 		.4byte	.LASF30
 2365 01e4 01       		.byte	0x1
 2366 01e5 3502     		.2byte	0x235
 2367 01e7 00000000 		.4byte	.LFB5
 2368 01eb 30000000 		.4byte	.LFE5-.LFB5
 2369 01ef 01       		.uleb128 0x1
 2370 01f0 9C       		.byte	0x9c
 2371 01f1 28020000 		.4byte	0x228
 2372 01f5 0B       		.uleb128 0xb
 2373 01f6 1F060000 		.4byte	.LASF31
 2374 01fa 01       		.byte	0x1
 2375 01fb 3502     		.2byte	0x235
 2376 01fd 83000000 		.4byte	0x83
 2377 0201 8E000000 		.4byte	.LLST5
 2378 0205 0C       		.uleb128 0xc
 2379 0206 D0010000 		.4byte	.LASF23
 2380 020a 01       		.byte	0x1
 2381 020b 3702     		.2byte	0x237
 2382 020d 6B000000 		.4byte	0x6b
 2383 0211 BA000000 		.4byte	.LLST6
 2384 0215 0D       		.uleb128 0xd
 2385 0216 08000000 		.4byte	.LVL13
 2386 021a E90A0000 		.4byte	0xae9
 2387 021e 0D       		.uleb128 0xd
 2388 021f 24000000 		.4byte	.LVL15
 2389 0223 F40A0000 		.4byte	0xaf4
 2390 0227 00       		.byte	0
 2391 0228 10       		.uleb128 0x10
 2392 0229 F2050000 		.4byte	.LASF32
 2393 022d 01       		.byte	0x1
 2394 022e 6408     		.2byte	0x864
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 98


 2395 0230 00000000 		.4byte	.LFB8
 2396 0234 20000000 		.4byte	.LFE8-.LFB8
 2397 0238 01       		.uleb128 0x1
 2398 0239 9C       		.byte	0x9c
 2399 023a 11       		.uleb128 0x11
 2400 023b 05030000 		.4byte	.LASF81
 2401 023f 01       		.byte	0x1
 2402 0240 7608     		.2byte	0x876
 2403 0242 83000000 		.4byte	0x83
 2404 0246 00000000 		.4byte	.LFB9
 2405 024a 10000000 		.4byte	.LFE9-.LFB9
 2406 024e 01       		.uleb128 0x1
 2407 024f 9C       		.byte	0x9c
 2408 0250 10       		.uleb128 0x10
 2409 0251 46020000 		.4byte	.LASF33
 2410 0255 01       		.byte	0x1
 2411 0256 8608     		.2byte	0x886
 2412 0258 00000000 		.4byte	.LFB10
 2413 025c 0C000000 		.4byte	.LFE10-.LFB10
 2414 0260 01       		.uleb128 0x1
 2415 0261 9C       		.byte	0x9c
 2416 0262 0F       		.uleb128 0xf
 2417 0263 57030000 		.4byte	.LASF35
 2418 0267 01       		.byte	0x1
 2419 0268 A008     		.2byte	0x8a0
 2420 026a 83000000 		.4byte	0x83
 2421 026e 00000000 		.4byte	.LFB11
 2422 0272 14000000 		.4byte	.LFE11-.LFB11
 2423 0276 01       		.uleb128 0x1
 2424 0277 9C       		.byte	0x9c
 2425 0278 9B020000 		.4byte	0x29b
 2426 027c 0B       		.uleb128 0xb
 2427 027d 51050000 		.4byte	.LASF36
 2428 0281 01       		.byte	0x1
 2429 0282 A008     		.2byte	0x8a0
 2430 0284 83000000 		.4byte	0x83
 2431 0288 CD000000 		.4byte	.LLST7
 2432 028c 12       		.uleb128 0x12
 2433 028d EE030000 		.4byte	.LASF37
 2434 0291 01       		.byte	0x1
 2435 0292 A208     		.2byte	0x8a2
 2436 0294 83000000 		.4byte	0x83
 2437 0298 01       		.uleb128 0x1
 2438 0299 50       		.byte	0x50
 2439 029a 00       		.byte	0
 2440 029b 0F       		.uleb128 0xf
 2441 029c 6D000000 		.4byte	.LASF38
 2442 02a0 01       		.byte	0x1
 2443 02a1 B708     		.2byte	0x8b7
 2444 02a3 83000000 		.4byte	0x83
 2445 02a7 00000000 		.4byte	.LFB12
 2446 02ab 10000000 		.4byte	.LFE12-.LFB12
 2447 02af 01       		.uleb128 0x1
 2448 02b0 9C       		.byte	0x9c
 2449 02b1 C4020000 		.4byte	0x2c4
 2450 02b5 12       		.uleb128 0x12
 2451 02b6 1E000000 		.4byte	.LASF39
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 99


 2452 02ba 01       		.byte	0x1
 2453 02bb B908     		.2byte	0x8b9
 2454 02bd 83000000 		.4byte	0x83
 2455 02c1 01       		.uleb128 0x1
 2456 02c2 50       		.byte	0x50
 2457 02c3 00       		.byte	0
 2458 02c4 0A       		.uleb128 0xa
 2459 02c5 46010000 		.4byte	.LASF40
 2460 02c9 01       		.byte	0x1
 2461 02ca CE08     		.2byte	0x8ce
 2462 02cc 00000000 		.4byte	.LFB13
 2463 02d0 0C000000 		.4byte	.LFE13-.LFB13
 2464 02d4 01       		.uleb128 0x1
 2465 02d5 9C       		.byte	0x9c
 2466 02d6 E9020000 		.4byte	0x2e9
 2467 02da 0E       		.uleb128 0xe
 2468 02db 64020000 		.4byte	.LASF41
 2469 02df 01       		.byte	0x1
 2470 02e0 CE08     		.2byte	0x8ce
 2471 02e2 83000000 		.4byte	0x83
 2472 02e6 01       		.uleb128 0x1
 2473 02e7 50       		.byte	0x50
 2474 02e8 00       		.byte	0
 2475 02e9 0A       		.uleb128 0xa
 2476 02ea 1F050000 		.4byte	.LASF42
 2477 02ee 01       		.byte	0x1
 2478 02ef 8509     		.2byte	0x985
 2479 02f1 00000000 		.4byte	.LFB20
 2480 02f5 14000000 		.4byte	.LFE20-.LFB20
 2481 02f9 01       		.uleb128 0x1
 2482 02fa 9C       		.byte	0x9c
 2483 02fb 10030000 		.4byte	0x310
 2484 02ff 0B       		.uleb128 0xb
 2485 0300 8D030000 		.4byte	.LASF43
 2486 0304 01       		.byte	0x1
 2487 0305 8509     		.2byte	0x985
 2488 0307 6B000000 		.4byte	0x6b
 2489 030b EB000000 		.4byte	.LLST8
 2490 030f 00       		.byte	0
 2491 0310 0F       		.uleb128 0xf
 2492 0311 7C010000 		.4byte	.LASF44
 2493 0315 01       		.byte	0x1
 2494 0316 9709     		.2byte	0x997
 2495 0318 6B000000 		.4byte	0x6b
 2496 031c 00000000 		.4byte	.LFB21
 2497 0320 18000000 		.4byte	.LFE21-.LFB21
 2498 0324 01       		.uleb128 0x1
 2499 0325 9C       		.byte	0x9c
 2500 0326 3B030000 		.4byte	0x33b
 2501 032a 0B       		.uleb128 0xb
 2502 032b 8D030000 		.4byte	.LASF43
 2503 032f 01       		.byte	0x1
 2504 0330 9709     		.2byte	0x997
 2505 0332 6B000000 		.4byte	0x6b
 2506 0336 0C010000 		.4byte	.LLST9
 2507 033a 00       		.byte	0
 2508 033b 0A       		.uleb128 0xa
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 100


 2509 033c FB010000 		.4byte	.LASF45
 2510 0340 01       		.byte	0x1
 2511 0341 A709     		.2byte	0x9a7
 2512 0343 00000000 		.4byte	.LFB22
 2513 0347 14000000 		.4byte	.LFE22-.LFB22
 2514 034b 01       		.uleb128 0x1
 2515 034c 9C       		.byte	0x9c
 2516 034d 62030000 		.4byte	0x362
 2517 0351 0B       		.uleb128 0xb
 2518 0352 8D030000 		.4byte	.LASF43
 2519 0356 01       		.byte	0x1
 2520 0357 A709     		.2byte	0x9a7
 2521 0359 6B000000 		.4byte	0x6b
 2522 035d 2D010000 		.4byte	.LLST10
 2523 0361 00       		.byte	0
 2524 0362 0A       		.uleb128 0xa
 2525 0363 47030000 		.4byte	.LASF46
 2526 0367 01       		.byte	0x1
 2527 0368 B509     		.2byte	0x9b5
 2528 036a 00000000 		.4byte	.LFB23
 2529 036e 14000000 		.4byte	.LFE23-.LFB23
 2530 0372 01       		.uleb128 0x1
 2531 0373 9C       		.byte	0x9c
 2532 0374 89030000 		.4byte	0x389
 2533 0378 0B       		.uleb128 0xb
 2534 0379 8D030000 		.4byte	.LASF43
 2535 037d 01       		.byte	0x1
 2536 037e B509     		.2byte	0x9b5
 2537 0380 6B000000 		.4byte	0x6b
 2538 0384 4E010000 		.4byte	.LLST11
 2539 0388 00       		.byte	0
 2540 0389 0A       		.uleb128 0xa
 2541 038a 04040000 		.4byte	.LASF47
 2542 038e 01       		.byte	0x1
 2543 038f C409     		.2byte	0x9c4
 2544 0391 00000000 		.4byte	.LFB24
 2545 0395 14000000 		.4byte	.LFE24-.LFB24
 2546 0399 01       		.uleb128 0x1
 2547 039a 9C       		.byte	0x9c
 2548 039b B0030000 		.4byte	0x3b0
 2549 039f 0B       		.uleb128 0xb
 2550 03a0 8D030000 		.4byte	.LASF43
 2551 03a4 01       		.byte	0x1
 2552 03a5 C409     		.2byte	0x9c4
 2553 03a7 6B000000 		.4byte	0x6b
 2554 03ab 6F010000 		.4byte	.LLST12
 2555 03af 00       		.byte	0
 2556 03b0 0A       		.uleb128 0xa
 2557 03b1 00050000 		.4byte	.LASF48
 2558 03b5 01       		.byte	0x1
 2559 03b6 D309     		.2byte	0x9d3
 2560 03b8 00000000 		.4byte	.LFB25
 2561 03bc 04000000 		.4byte	.LFE25-.LFB25
 2562 03c0 01       		.uleb128 0x1
 2563 03c1 9C       		.byte	0x9c
 2564 03c2 D5030000 		.4byte	0x3d5
 2565 03c6 0E       		.uleb128 0xe
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 101


 2566 03c7 51050000 		.4byte	.LASF36
 2567 03cb 01       		.byte	0x1
 2568 03cc D309     		.2byte	0x9d3
 2569 03ce 6B000000 		.4byte	0x6b
 2570 03d2 01       		.uleb128 0x1
 2571 03d3 50       		.byte	0x50
 2572 03d4 00       		.byte	0
 2573 03d5 0F       		.uleb128 0xf
 2574 03d6 B2030000 		.4byte	.LASF49
 2575 03da 01       		.byte	0x1
 2576 03db E708     		.2byte	0x8e7
 2577 03dd C6000000 		.4byte	0xc6
 2578 03e1 00000000 		.4byte	.LFB14
 2579 03e5 20000000 		.4byte	.LFE14-.LFB14
 2580 03e9 01       		.uleb128 0x1
 2581 03ea 9C       		.byte	0x9c
 2582 03eb 3D040000 		.4byte	0x43d
 2583 03ef 0B       		.uleb128 0xb
 2584 03f0 8D030000 		.4byte	.LASF43
 2585 03f4 01       		.byte	0x1
 2586 03f5 E708     		.2byte	0x8e7
 2587 03f7 6B000000 		.4byte	0x6b
 2588 03fb 90010000 		.4byte	.LLST13
 2589 03ff 0B       		.uleb128 0xb
 2590 0400 22040000 		.4byte	.LASF50
 2591 0404 01       		.byte	0x1
 2592 0405 E708     		.2byte	0x8e7
 2593 0407 C6000000 		.4byte	0xc6
 2594 040b B1010000 		.4byte	.LLST14
 2595 040f 12       		.uleb128 0x12
 2596 0410 53000000 		.4byte	.LASF51
 2597 0414 01       		.byte	0x1
 2598 0415 E908     		.2byte	0x8e9
 2599 0417 C6000000 		.4byte	0xc6
 2600 041b 01       		.uleb128 0x1
 2601 041c 50       		.byte	0x50
 2602 041d 13       		.uleb128 0x13
 2603 041e 00000000 		.4byte	.LASF52
 2604 0422 01       		.byte	0x1
 2605 0423 EA08     		.2byte	0x8ea
 2606 0425 3D040000 		.4byte	0x43d
 2607 0429 00000020 		.4byte	0x20000000
 2608 042d 14       		.uleb128 0x14
 2609 042e 10000000 		.4byte	.LVL36
 2610 0432 B0030000 		.4byte	0x3b0
 2611 0436 15       		.uleb128 0x15
 2612 0437 01       		.uleb128 0x1
 2613 0438 50       		.byte	0x50
 2614 0439 01       		.uleb128 0x1
 2615 043a 30       		.byte	0x30
 2616 043b 00       		.byte	0
 2617 043c 00       		.byte	0
 2618 043d 06       		.uleb128 0x6
 2619 043e 04       		.byte	0x4
 2620 043f C6000000 		.4byte	0xc6
 2621 0443 0F       		.uleb128 0xf
 2622 0444 2B050000 		.4byte	.LASF53
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 102


 2623 0448 01       		.byte	0x1
 2624 0449 0909     		.2byte	0x909
 2625 044b C6000000 		.4byte	0xc6
 2626 044f 00000000 		.4byte	.LFB15
 2627 0453 1C000000 		.4byte	.LFE15-.LFB15
 2628 0457 01       		.uleb128 0x1
 2629 0458 9C       		.byte	0x9c
 2630 0459 8D040000 		.4byte	0x48d
 2631 045d 0B       		.uleb128 0xb
 2632 045e 8D030000 		.4byte	.LASF43
 2633 0462 01       		.byte	0x1
 2634 0463 0909     		.2byte	0x909
 2635 0465 6B000000 		.4byte	0x6b
 2636 0469 DD010000 		.4byte	.LLST15
 2637 046d 13       		.uleb128 0x13
 2638 046e 00000000 		.4byte	.LASF52
 2639 0472 01       		.byte	0x1
 2640 0473 0B09     		.2byte	0x90b
 2641 0475 3D040000 		.4byte	0x43d
 2642 0479 00000020 		.4byte	0x20000000
 2643 047d 14       		.uleb128 0x14
 2644 047e 0E000000 		.4byte	.LVL42
 2645 0482 B0030000 		.4byte	0x3b0
 2646 0486 15       		.uleb128 0x15
 2647 0487 01       		.uleb128 0x1
 2648 0488 50       		.byte	0x50
 2649 0489 01       		.uleb128 0x1
 2650 048a 30       		.byte	0x30
 2651 048b 00       		.byte	0
 2652 048c 00       		.byte	0
 2653 048d 0F       		.uleb128 0xf
 2654 048e 7E030000 		.4byte	.LASF54
 2655 0492 01       		.byte	0x1
 2656 0493 1F09     		.2byte	0x91f
 2657 0495 C6000000 		.4byte	0xc6
 2658 0499 00000000 		.4byte	.LFB16
 2659 049d 22000000 		.4byte	.LFE16-.LFB16
 2660 04a1 01       		.uleb128 0x1
 2661 04a2 9C       		.byte	0x9c
 2662 04a3 F5040000 		.4byte	0x4f5
 2663 04a7 0B       		.uleb128 0xb
 2664 04a8 8D030000 		.4byte	.LASF43
 2665 04ac 01       		.byte	0x1
 2666 04ad 1F09     		.2byte	0x91f
 2667 04af 6B000000 		.4byte	0x6b
 2668 04b3 FE010000 		.4byte	.LLST16
 2669 04b7 0B       		.uleb128 0xb
 2670 04b8 22040000 		.4byte	.LASF50
 2671 04bc 01       		.byte	0x1
 2672 04bd 1F09     		.2byte	0x91f
 2673 04bf C6000000 		.4byte	0xc6
 2674 04c3 1F020000 		.4byte	.LLST17
 2675 04c7 12       		.uleb128 0x12
 2676 04c8 53000000 		.4byte	.LASF51
 2677 04cc 01       		.byte	0x1
 2678 04cd 2109     		.2byte	0x921
 2679 04cf C6000000 		.4byte	0xc6
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 103


 2680 04d3 01       		.uleb128 0x1
 2681 04d4 50       		.byte	0x50
 2682 04d5 13       		.uleb128 0x13
 2683 04d6 00000000 		.4byte	.LASF52
 2684 04da 01       		.byte	0x1
 2685 04db 2209     		.2byte	0x922
 2686 04dd 3D040000 		.4byte	0x43d
 2687 04e1 00000020 		.4byte	0x20000000
 2688 04e5 14       		.uleb128 0x14
 2689 04e6 10000000 		.4byte	.LVL46
 2690 04ea B0030000 		.4byte	0x3b0
 2691 04ee 15       		.uleb128 0x15
 2692 04ef 01       		.uleb128 0x1
 2693 04f0 50       		.byte	0x50
 2694 04f1 01       		.uleb128 0x1
 2695 04f2 30       		.byte	0x30
 2696 04f3 00       		.byte	0
 2697 04f4 00       		.byte	0
 2698 04f5 0F       		.uleb128 0xf
 2699 04f6 C7040000 		.4byte	.LASF55
 2700 04fa 01       		.byte	0x1
 2701 04fb 3B09     		.2byte	0x93b
 2702 04fd C6000000 		.4byte	0xc6
 2703 0501 00000000 		.4byte	.LFB17
 2704 0505 1E000000 		.4byte	.LFE17-.LFB17
 2705 0509 01       		.uleb128 0x1
 2706 050a 9C       		.byte	0x9c
 2707 050b 3F050000 		.4byte	0x53f
 2708 050f 0B       		.uleb128 0xb
 2709 0510 8D030000 		.4byte	.LASF43
 2710 0514 01       		.byte	0x1
 2711 0515 3B09     		.2byte	0x93b
 2712 0517 6B000000 		.4byte	0x6b
 2713 051b 4B020000 		.4byte	.LLST18
 2714 051f 13       		.uleb128 0x13
 2715 0520 00000000 		.4byte	.LASF52
 2716 0524 01       		.byte	0x1
 2717 0525 3D09     		.2byte	0x93d
 2718 0527 3D040000 		.4byte	0x43d
 2719 052b 00000020 		.4byte	0x20000000
 2720 052f 14       		.uleb128 0x14
 2721 0530 0E000000 		.4byte	.LVL52
 2722 0534 B0030000 		.4byte	0x3b0
 2723 0538 15       		.uleb128 0x15
 2724 0539 01       		.uleb128 0x1
 2725 053a 50       		.byte	0x50
 2726 053b 01       		.uleb128 0x1
 2727 053c 30       		.byte	0x30
 2728 053d 00       		.byte	0
 2729 053e 00       		.byte	0
 2730 053f 0A       		.uleb128 0xa
 2731 0540 79040000 		.4byte	.LASF56
 2732 0544 01       		.byte	0x1
 2733 0545 4E09     		.2byte	0x94e
 2734 0547 00000000 		.4byte	.LFB18
 2735 054b 4C000000 		.4byte	.LFE18-.LFB18
 2736 054f 01       		.uleb128 0x1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 104


 2737 0550 9C       		.byte	0x9c
 2738 0551 DE050000 		.4byte	0x5de
 2739 0555 0B       		.uleb128 0xb
 2740 0556 8D030000 		.4byte	.LASF43
 2741 055a 01       		.byte	0x1
 2742 055b 4E09     		.2byte	0x94e
 2743 055d 6B000000 		.4byte	0x6b
 2744 0561 6C020000 		.4byte	.LLST19
 2745 0565 0B       		.uleb128 0xb
 2746 0566 94030000 		.4byte	.LASF57
 2747 056a 01       		.byte	0x1
 2748 056b 4E09     		.2byte	0x94e
 2749 056d 6B000000 		.4byte	0x6b
 2750 0571 8D020000 		.4byte	.LLST20
 2751 0575 0C       		.uleb128 0xc
 2752 0576 D0010000 		.4byte	.LASF23
 2753 057a 01       		.byte	0x1
 2754 057b 5009     		.2byte	0x950
 2755 057d 6B000000 		.4byte	0x6b
 2756 0581 AE020000 		.4byte	.LLST21
 2757 0585 0C       		.uleb128 0xc
 2758 0586 40020000 		.4byte	.LASF58
 2759 058a 01       		.byte	0x1
 2760 058b 5109     		.2byte	0x951
 2761 058d 83000000 		.4byte	0x83
 2762 0591 C1020000 		.4byte	.LLST22
 2763 0595 0C       		.uleb128 0xc
 2764 0596 AD020000 		.4byte	.LASF59
 2765 059a 01       		.byte	0x1
 2766 059b 5209     		.2byte	0x952
 2767 059d 83000000 		.4byte	0x83
 2768 05a1 D4020000 		.4byte	.LLST23
 2769 05a5 16       		.uleb128 0x16
 2770 05a6 10000000 		.4byte	.LVL55
 2771 05aa B0030000 		.4byte	0x3b0
 2772 05ae B8050000 		.4byte	0x5b8
 2773 05b2 15       		.uleb128 0x15
 2774 05b3 01       		.uleb128 0x1
 2775 05b4 50       		.byte	0x50
 2776 05b5 01       		.uleb128 0x1
 2777 05b6 30       		.byte	0x30
 2778 05b7 00       		.byte	0
 2779 05b8 16       		.uleb128 0x16
 2780 05b9 1A000000 		.4byte	.LVL56
 2781 05bd B0030000 		.4byte	0x3b0
 2782 05c1 CB050000 		.4byte	0x5cb
 2783 05c5 15       		.uleb128 0x15
 2784 05c6 01       		.uleb128 0x1
 2785 05c7 50       		.byte	0x50
 2786 05c8 01       		.uleb128 0x1
 2787 05c9 30       		.byte	0x30
 2788 05ca 00       		.byte	0
 2789 05cb 0D       		.uleb128 0xd
 2790 05cc 26000000 		.4byte	.LVL58
 2791 05d0 E90A0000 		.4byte	0xae9
 2792 05d4 0D       		.uleb128 0xd
 2793 05d5 46000000 		.4byte	.LVL64
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 105


 2794 05d9 F40A0000 		.4byte	0xaf4
 2795 05dd 00       		.byte	0
 2796 05de 0F       		.uleb128 0xf
 2797 05df 81020000 		.4byte	.LASF60
 2798 05e3 01       		.byte	0x1
 2799 05e4 7009     		.2byte	0x970
 2800 05e6 6B000000 		.4byte	0x6b
 2801 05ea 00000000 		.4byte	.LFB19
 2802 05ee 2C000000 		.4byte	.LFE19-.LFB19
 2803 05f2 01       		.uleb128 0x1
 2804 05f3 9C       		.byte	0x9c
 2805 05f4 28060000 		.4byte	0x628
 2806 05f8 0B       		.uleb128 0xb
 2807 05f9 8D030000 		.4byte	.LASF43
 2808 05fd 01       		.byte	0x1
 2809 05fe 7009     		.2byte	0x970
 2810 0600 6B000000 		.4byte	0x6b
 2811 0604 08030000 		.4byte	.LLST24
 2812 0608 0C       		.uleb128 0xc
 2813 0609 94030000 		.4byte	.LASF57
 2814 060d 01       		.byte	0x1
 2815 060e 7209     		.2byte	0x972
 2816 0610 6B000000 		.4byte	0x6b
 2817 0614 29030000 		.4byte	.LLST25
 2818 0618 14       		.uleb128 0x14
 2819 0619 0E000000 		.4byte	.LVL68
 2820 061d B0030000 		.4byte	0x3b0
 2821 0621 15       		.uleb128 0x15
 2822 0622 01       		.uleb128 0x1
 2823 0623 50       		.byte	0x50
 2824 0624 01       		.uleb128 0x1
 2825 0625 30       		.byte	0x30
 2826 0626 00       		.byte	0
 2827 0627 00       		.byte	0
 2828 0628 10       		.uleb128 0x10
 2829 0629 53010000 		.4byte	.LASF61
 2830 062d 01       		.byte	0x1
 2831 062e EB09     		.2byte	0x9eb
 2832 0630 00000000 		.4byte	.LFB26
 2833 0634 18000000 		.4byte	.LFE26-.LFB26
 2834 0638 01       		.uleb128 0x1
 2835 0639 9C       		.byte	0x9c
 2836 063a 0A       		.uleb128 0xa
 2837 063b D0050000 		.4byte	.LASF62
 2838 063f 01       		.byte	0x1
 2839 0640 FF09     		.2byte	0x9ff
 2840 0642 00000000 		.4byte	.LFB27
 2841 0646 30000000 		.4byte	.LFE27-.LFB27
 2842 064a 01       		.uleb128 0x1
 2843 064b 9C       		.byte	0x9c
 2844 064c 73060000 		.4byte	0x673
 2845 0650 0B       		.uleb128 0xb
 2846 0651 D6040000 		.4byte	.LASF63
 2847 0655 01       		.byte	0x1
 2848 0656 FF09     		.2byte	0x9ff
 2849 0658 83000000 		.4byte	0x83
 2850 065c 3C030000 		.4byte	.LLST26
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 106


 2851 0660 0D       		.uleb128 0xd
 2852 0661 0E000000 		.4byte	.LVL73
 2853 0665 FF0A0000 		.4byte	0xaff
 2854 0669 0D       		.uleb128 0xd
 2855 066a 26000000 		.4byte	.LVL75
 2856 066e FF0A0000 		.4byte	0xaff
 2857 0672 00       		.byte	0
 2858 0673 0A       		.uleb128 0xa
 2859 0674 47050000 		.4byte	.LASF64
 2860 0678 01       		.byte	0x1
 2861 0679 160A     		.2byte	0xa16
 2862 067b 00000000 		.4byte	.LFB28
 2863 067f 14000000 		.4byte	.LFE28-.LFB28
 2864 0683 01       		.uleb128 0x1
 2865 0684 9C       		.byte	0x9c
 2866 0685 A3060000 		.4byte	0x6a3
 2867 0689 0B       		.uleb128 0xb
 2868 068a 68060000 		.4byte	.LASF65
 2869 068e 01       		.byte	0x1
 2870 068f 160A     		.2byte	0xa16
 2871 0691 77000000 		.4byte	0x77
 2872 0695 5A030000 		.4byte	.LLST27
 2873 0699 0D       		.uleb128 0xd
 2874 069a 0C000000 		.4byte	.LVL79
 2875 069e FF0A0000 		.4byte	0xaff
 2876 06a2 00       		.byte	0
 2877 06a3 0A       		.uleb128 0xa
 2878 06a4 9D030000 		.4byte	.LASF66
 2879 06a8 01       		.byte	0x1
 2880 06a9 6F02     		.2byte	0x26f
 2881 06ab 00000000 		.4byte	.LFB6
 2882 06af 64010000 		.4byte	.LFE6-.LFB6
 2883 06b3 01       		.uleb128 0x1
 2884 06b4 9C       		.byte	0x9c
 2885 06b5 A4070000 		.4byte	0x7a4
 2886 06b9 0B       		.uleb128 0xb
 2887 06ba BF010000 		.4byte	.LASF67
 2888 06be 01       		.byte	0x1
 2889 06bf 6F02     		.2byte	0x26f
 2890 06c1 83000000 		.4byte	0x83
 2891 06c5 7B030000 		.4byte	.LLST28
 2892 06c9 0C       		.uleb128 0xc
 2893 06ca 0F000000 		.4byte	.LASF68
 2894 06ce 01       		.byte	0x1
 2895 06cf 7502     		.2byte	0x275
 2896 06d1 6B000000 		.4byte	0x6b
 2897 06d5 D0030000 		.4byte	.LLST29
 2898 06d9 0C       		.uleb128 0xc
 2899 06da 2A040000 		.4byte	.LASF69
 2900 06de 01       		.byte	0x1
 2901 06df 7602     		.2byte	0x276
 2902 06e1 6B000000 		.4byte	0x6b
 2903 06e5 0F040000 		.4byte	.LLST30
 2904 06e9 0C       		.uleb128 0xc
 2905 06ea 38060000 		.4byte	.LASF70
 2906 06ee 01       		.byte	0x1
 2907 06ef 7702     		.2byte	0x277
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 107


 2908 06f1 6B000000 		.4byte	0x6b
 2909 06f5 4E040000 		.4byte	.LLST31
 2910 06f9 0C       		.uleb128 0xc
 2911 06fa 7B000000 		.4byte	.LASF71
 2912 06fe 01       		.byte	0x1
 2913 06ff 7802     		.2byte	0x278
 2914 0701 6B000000 		.4byte	0x6b
 2915 0705 61040000 		.4byte	.LLST32
 2916 0709 0C       		.uleb128 0xc
 2917 070a B9050000 		.4byte	.LASF72
 2918 070e 01       		.byte	0x1
 2919 070f 7902     		.2byte	0x279
 2920 0711 6B000000 		.4byte	0x6b
 2921 0715 80040000 		.4byte	.LLST33
 2922 0719 0C       		.uleb128 0xc
 2923 071a D0010000 		.4byte	.LASF23
 2924 071e 01       		.byte	0x1
 2925 071f 8402     		.2byte	0x284
 2926 0721 6B000000 		.4byte	0x6b
 2927 0725 B2040000 		.4byte	.LLST34
 2928 0729 0D       		.uleb128 0xd
 2929 072a 10000000 		.4byte	.LVL81
 2930 072e E90A0000 		.4byte	0xae9
 2931 0732 16       		.uleb128 0x16
 2932 0733 B0000000 		.4byte	.LVL99
 2933 0737 FF0A0000 		.4byte	0xaff
 2934 073b 45070000 		.4byte	0x745
 2935 073f 15       		.uleb128 0x15
 2936 0740 01       		.uleb128 0x1
 2937 0741 50       		.byte	0x50
 2938 0742 01       		.uleb128 0x1
 2939 0743 35       		.byte	0x35
 2940 0744 00       		.byte	0
 2941 0745 16       		.uleb128 0x16
 2942 0746 CE000000 		.4byte	.LVL102
 2943 074a FF0A0000 		.4byte	0xaff
 2944 074e 58070000 		.4byte	0x758
 2945 0752 15       		.uleb128 0x15
 2946 0753 01       		.uleb128 0x1
 2947 0754 50       		.byte	0x50
 2948 0755 01       		.uleb128 0x1
 2949 0756 35       		.byte	0x35
 2950 0757 00       		.byte	0
 2951 0758 16       		.uleb128 0x16
 2952 0759 EE000000 		.4byte	.LVL108
 2953 075d 73060000 		.4byte	0x673
 2954 0761 6B070000 		.4byte	0x76b
 2955 0765 15       		.uleb128 0x15
 2956 0766 01       		.uleb128 0x1
 2957 0767 50       		.byte	0x50
 2958 0768 01       		.uleb128 0x1
 2959 0769 35       		.byte	0x35
 2960 076a 00       		.byte	0
 2961 076b 16       		.uleb128 0x16
 2962 076c 00010000 		.4byte	.LVL109
 2963 0770 FF0A0000 		.4byte	0xaff
 2964 0774 7E070000 		.4byte	0x77e
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 108


 2965 0778 15       		.uleb128 0x15
 2966 0779 01       		.uleb128 0x1
 2967 077a 50       		.byte	0x50
 2968 077b 01       		.uleb128 0x1
 2969 077c 35       		.byte	0x35
 2970 077d 00       		.byte	0
 2971 077e 16       		.uleb128 0x16
 2972 077f 08010000 		.4byte	.LVL111
 2973 0783 B0030000 		.4byte	0x3b0
 2974 0787 91070000 		.4byte	0x791
 2975 078b 15       		.uleb128 0x15
 2976 078c 01       		.uleb128 0x1
 2977 078d 50       		.byte	0x50
 2978 078e 01       		.uleb128 0x1
 2979 078f 30       		.byte	0x30
 2980 0790 00       		.byte	0
 2981 0791 14       		.uleb128 0x14
 2982 0792 0E010000 		.4byte	.LVL112
 2983 0796 F40A0000 		.4byte	0xaf4
 2984 079a 15       		.uleb128 0x15
 2985 079b 01       		.uleb128 0x1
 2986 079c 50       		.byte	0x50
 2987 079d 04       		.uleb128 0x4
 2988 079e 91       		.byte	0x91
 2989 079f 5C       		.sleb128 -36
 2990 07a0 94       		.byte	0x94
 2991 07a1 01       		.byte	0x1
 2992 07a2 00       		.byte	0
 2993 07a3 00       		.byte	0
 2994 07a4 0A       		.uleb128 0xa
 2995 07a5 A6040000 		.4byte	.LASF73
 2996 07a9 01       		.byte	0x1
 2997 07aa 4608     		.2byte	0x846
 2998 07ac 00000000 		.4byte	.LFB7
 2999 07b0 44000000 		.4byte	.LFE7-.LFB7
 3000 07b4 01       		.uleb128 0x1
 3001 07b5 9C       		.byte	0x9c
 3002 07b6 E9070000 		.4byte	0x7e9
 3003 07ba 0B       		.uleb128 0xb
 3004 07bb F6040000 		.4byte	.LASF74
 3005 07bf 01       		.byte	0x1
 3006 07c0 4608     		.2byte	0x846
 3007 07c2 83000000 		.4byte	0x83
 3008 07c6 DE040000 		.4byte	.LLST35
 3009 07ca 16       		.uleb128 0x16
 3010 07cb 2E000000 		.4byte	.LVL117
 3011 07cf 73060000 		.4byte	0x673
 3012 07d3 DF070000 		.4byte	0x7df
 3013 07d7 15       		.uleb128 0x15
 3014 07d8 01       		.uleb128 0x1
 3015 07d9 50       		.byte	0x50
 3016 07da 03       		.uleb128 0x3
 3017 07db 0A       		.byte	0xa
 3018 07dc E803     		.2byte	0x3e8
 3019 07de 00       		.byte	0
 3020 07df 0D       		.uleb128 0xd
 3021 07e0 32000000 		.4byte	.LVL118
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 109


 3022 07e4 50020000 		.4byte	0x250
 3023 07e8 00       		.byte	0
 3024 07e9 17       		.uleb128 0x17
 3025 07ea C4010000 		.4byte	.LASF75
 3026 07ee 01       		.byte	0x1
 3027 07ef 240A     		.2byte	0xa24
 3028 07f1 00000000 		.4byte	.LFB29
 3029 07f5 4C000000 		.4byte	.LFE29-.LFB29
 3030 07f9 01       		.uleb128 0x1
 3031 07fa 9C       		.byte	0x9c
 3032 07fb 10080000 		.4byte	0x810
 3033 07ff 0B       		.uleb128 0xb
 3034 0800 BF010000 		.4byte	.LASF67
 3035 0804 01       		.byte	0x1
 3036 0805 240A     		.2byte	0xa24
 3037 0807 83000000 		.4byte	0x83
 3038 080b 0A050000 		.4byte	.LLST36
 3039 080f 00       		.byte	0
 3040 0810 10       		.uleb128 0x10
 3041 0811 11060000 		.4byte	.LASF76
 3042 0815 01       		.byte	0x1
 3043 0816 910A     		.2byte	0xa91
 3044 0818 00000000 		.4byte	.LFB33
 3045 081c 10000000 		.4byte	.LFE33-.LFB33
 3046 0820 01       		.uleb128 0x1
 3047 0821 9C       		.byte	0x9c
 3048 0822 10       		.uleb128 0x10
 3049 0823 63010000 		.4byte	.LASF77
 3050 0827 01       		.byte	0x1
 3051 0828 A10A     		.2byte	0xaa1
 3052 082a 00000000 		.4byte	.LFB34
 3053 082e 10000000 		.4byte	.LFE34-.LFB34
 3054 0832 01       		.uleb128 0x1
 3055 0833 9C       		.byte	0x9c
 3056 0834 0A       		.uleb128 0xa
 3057 0835 6A050000 		.4byte	.LASF78
 3058 0839 01       		.byte	0x1
 3059 083a 800A     		.2byte	0xa80
 3060 083c 00000000 		.4byte	.LFB32
 3061 0840 18000000 		.4byte	.LFE32-.LFB32
 3062 0844 01       		.uleb128 0x1
 3063 0845 9C       		.byte	0x9c
 3064 0846 54080000 		.4byte	0x854
 3065 084a 0D       		.uleb128 0xd
 3066 084b 06000000 		.4byte	.LVL123
 3067 084f 22080000 		.4byte	0x822
 3068 0853 00       		.byte	0
 3069 0854 10       		.uleb128 0x10
 3070 0855 D8050000 		.4byte	.LASF79
 3071 0859 01       		.byte	0x1
 3072 085a B10A     		.2byte	0xab1
 3073 085c 00000000 		.4byte	.LFB35
 3074 0860 10000000 		.4byte	.LFE35-.LFB35
 3075 0864 01       		.uleb128 0x1
 3076 0865 9C       		.byte	0x9c
 3077 0866 0A       		.uleb128 0xa
 3078 0867 7C060000 		.4byte	.LASF80
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 110


 3079 086b 01       		.byte	0x1
 3080 086c C20A     		.2byte	0xac2
 3081 086e 00000000 		.4byte	.LFB36
 3082 0872 10000000 		.4byte	.LFE36-.LFB36
 3083 0876 01       		.uleb128 0x1
 3084 0877 9C       		.byte	0x9c
 3085 0878 8D080000 		.4byte	0x88d
 3086 087c 0B       		.uleb128 0xb
 3087 087d AD020000 		.4byte	.LASF59
 3088 0881 01       		.byte	0x1
 3089 0882 C20A     		.2byte	0xac2
 3090 0884 83000000 		.4byte	0x83
 3091 0888 2B050000 		.4byte	.LLST37
 3092 088c 00       		.byte	0
 3093 088d 11       		.uleb128 0x11
 3094 088e DF010000 		.4byte	.LASF82
 3095 0892 01       		.byte	0x1
 3096 0893 D20A     		.2byte	0xad2
 3097 0895 83000000 		.4byte	0x83
 3098 0899 00000000 		.4byte	.LFB37
 3099 089d 10000000 		.4byte	.LFE37-.LFB37
 3100 08a1 01       		.uleb128 0x1
 3101 08a2 9C       		.byte	0x9c
 3102 08a3 11       		.uleb128 0x11
 3103 08a4 59040000 		.4byte	.LASF83
 3104 08a8 01       		.byte	0x1
 3105 08a9 E20A     		.2byte	0xae2
 3106 08ab 83000000 		.4byte	0x83
 3107 08af 00000000 		.4byte	.LFB38
 3108 08b3 10000000 		.4byte	.LFE38-.LFB38
 3109 08b7 01       		.uleb128 0x1
 3110 08b8 9C       		.byte	0x9c
 3111 08b9 11       		.uleb128 0x11
 3112 08ba C1020000 		.4byte	.LASF84
 3113 08be 01       		.byte	0x1
 3114 08bf 320B     		.2byte	0xb32
 3115 08c1 83000000 		.4byte	0x83
 3116 08c5 00000000 		.4byte	.LFB39
 3117 08c9 10000000 		.4byte	.LFE39-.LFB39
 3118 08cd 01       		.uleb128 0x1
 3119 08ce 9C       		.byte	0x9c
 3120 08cf 18       		.uleb128 0x18
 3121 08d0 8F060000 		.4byte	.LASF108
 3122 08d4 01       		.byte	0x1
 3123 08d5 870B     		.2byte	0xb87
 3124 08d7 00000000 		.4byte	.LFB43
 3125 08db 28000000 		.4byte	.LFE43-.LFB43
 3126 08df 01       		.uleb128 0x1
 3127 08e0 9C       		.byte	0x9c
 3128 08e1 FD080000 		.4byte	0x8fd
 3129 08e5 19       		.uleb128 0x19
 3130 08e6 6900     		.ascii	"i\000"
 3131 08e8 01       		.byte	0x1
 3132 08e9 890B     		.2byte	0xb89
 3133 08eb 83000000 		.4byte	0x83
 3134 08ef 4C050000 		.4byte	.LLST38
 3135 08f3 0D       		.uleb128 0xd
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 111


 3136 08f4 06000000 		.4byte	.LVL126
 3137 08f8 B9080000 		.4byte	0x8b9
 3138 08fc 00       		.byte	0
 3139 08fd 10       		.uleb128 0x10
 3140 08fe E4020000 		.4byte	.LASF85
 3141 0902 01       		.byte	0x1
 3142 0903 3F0B     		.2byte	0xb3f
 3143 0905 00000000 		.4byte	.LFB40
 3144 0909 0C000000 		.4byte	.LFE40-.LFB40
 3145 090d 01       		.uleb128 0x1
 3146 090e 9C       		.byte	0x9c
 3147 090f 17       		.uleb128 0x17
 3148 0910 9F020000 		.4byte	.LASF86
 3149 0914 01       		.byte	0x1
 3150 0915 610A     		.2byte	0xa61
 3151 0917 00000000 		.4byte	.LFB31
 3152 091b 44000000 		.4byte	.LFE31-.LFB31
 3153 091f 01       		.uleb128 0x1
 3154 0920 9C       		.byte	0x9c
 3155 0921 71090000 		.4byte	0x971
 3156 0925 19       		.uleb128 0x19
 3157 0926 6900     		.ascii	"i\000"
 3158 0928 01       		.byte	0x1
 3159 0929 630A     		.2byte	0xa63
 3160 092b 83000000 		.4byte	0x83
 3161 092f 6A050000 		.4byte	.LLST39
 3162 0933 16       		.uleb128 0x16
 3163 0934 1C000000 		.4byte	.LVL136
 3164 0938 D5030000 		.4byte	0x3d5
 3165 093c 4F090000 		.4byte	0x94f
 3166 0940 15       		.uleb128 0x15
 3167 0941 01       		.uleb128 0x1
 3168 0942 50       		.byte	0x50
 3169 0943 01       		.uleb128 0x1
 3170 0944 3F       		.byte	0x3f
 3171 0945 15       		.uleb128 0x15
 3172 0946 01       		.uleb128 0x1
 3173 0947 51       		.byte	0x51
 3174 0948 05       		.uleb128 0x5
 3175 0949 03       		.byte	0x3
 3176 094a 00000000 		.4byte	CySysTickServiceCallbacks
 3177 094e 00       		.byte	0
 3178 094f 0D       		.uleb128 0xd
 3179 0950 2C000000 		.4byte	.LVL138
 3180 0954 66080000 		.4byte	0x866
 3181 0958 0D       		.uleb128 0xd
 3182 0959 30000000 		.4byte	.LVL139
 3183 095d FD080000 		.4byte	0x8fd
 3184 0961 14       		.uleb128 0x14
 3185 0962 36000000 		.4byte	.LVL140
 3186 0966 E9020000 		.4byte	0x2e9
 3187 096a 15       		.uleb128 0x15
 3188 096b 01       		.uleb128 0x1
 3189 096c 50       		.byte	0x50
 3190 096d 01       		.uleb128 0x1
 3191 096e 3F       		.byte	0x3f
 3192 096f 00       		.byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 112


 3193 0970 00       		.byte	0
 3194 0971 0A       		.uleb128 0xa
 3195 0972 DF030000 		.4byte	.LASF87
 3196 0976 01       		.byte	0x1
 3197 0977 440A     		.2byte	0xa44
 3198 0979 00000000 		.4byte	.LFB30
 3199 097d 20000000 		.4byte	.LFE30-.LFB30
 3200 0981 01       		.uleb128 0x1
 3201 0982 9C       		.byte	0x9c
 3202 0983 9A090000 		.4byte	0x99a
 3203 0987 0D       		.uleb128 0xd
 3204 0988 0E000000 		.4byte	.LVL141
 3205 098c 0F090000 		.4byte	0x90f
 3206 0990 0D       		.uleb128 0xd
 3207 0991 18000000 		.4byte	.LVL142
 3208 0995 34080000 		.4byte	0x834
 3209 0999 00       		.byte	0
 3210 099a 0F       		.uleb128 0xf
 3211 099b 91050000 		.4byte	.LASF88
 3212 099f 01       		.byte	0x1
 3213 09a0 620B     		.2byte	0xb62
 3214 09a2 E7000000 		.4byte	0xe7
 3215 09a6 00000000 		.4byte	.LFB41
 3216 09aa 10000000 		.4byte	.LFE41-.LFB41
 3217 09ae 01       		.uleb128 0x1
 3218 09af 9C       		.byte	0x9c
 3219 09b0 E1090000 		.4byte	0x9e1
 3220 09b4 0B       		.uleb128 0xb
 3221 09b5 8D030000 		.4byte	.LASF43
 3222 09b9 01       		.byte	0x1
 3223 09ba 620B     		.2byte	0xb62
 3224 09bc 83000000 		.4byte	0x83
 3225 09c0 89050000 		.4byte	.LLST40
 3226 09c4 0E       		.uleb128 0xe
 3227 09c5 3F040000 		.4byte	.LASF89
 3228 09c9 01       		.byte	0x1
 3229 09ca 620B     		.2byte	0xb62
 3230 09cc E7000000 		.4byte	0xe7
 3231 09d0 01       		.uleb128 0x1
 3232 09d1 51       		.byte	0x51
 3233 09d2 12       		.uleb128 0x12
 3234 09d3 66000000 		.4byte	.LASF90
 3235 09d7 01       		.byte	0x1
 3236 09d8 640B     		.2byte	0xb64
 3237 09da E7000000 		.4byte	0xe7
 3238 09de 01       		.uleb128 0x1
 3239 09df 50       		.byte	0x50
 3240 09e0 00       		.byte	0
 3241 09e1 0F       		.uleb128 0xf
 3242 09e2 08020000 		.4byte	.LASF91
 3243 09e6 01       		.byte	0x1
 3244 09e7 7A0B     		.2byte	0xb7a
 3245 09e9 E7000000 		.4byte	0xe7
 3246 09ed 00000000 		.4byte	.LFB42
 3247 09f1 0C000000 		.4byte	.LFE42-.LFB42
 3248 09f5 01       		.uleb128 0x1
 3249 09f6 9C       		.byte	0x9c
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 113


 3250 09f7 0C0A0000 		.4byte	0xa0c
 3251 09fb 0B       		.uleb128 0xb
 3252 09fc 8D030000 		.4byte	.LASF43
 3253 0a00 01       		.byte	0x1
 3254 0a01 7A0B     		.2byte	0xb7a
 3255 0a03 83000000 		.4byte	0x83
 3256 0a07 AA050000 		.4byte	.LLST41
 3257 0a0b 00       		.byte	0
 3258 0a0c 0A       		.uleb128 0xa
 3259 0a0d B3020000 		.4byte	.LASF92
 3260 0a11 01       		.byte	0x1
 3261 0a12 A70B     		.2byte	0xba7
 3262 0a14 00000000 		.4byte	.LFB44
 3263 0a18 70000000 		.4byte	.LFE44-.LFB44
 3264 0a1c 01       		.uleb128 0x1
 3265 0a1d 9C       		.byte	0x9c
 3266 0a1e 310A0000 		.4byte	0xa31
 3267 0a22 0E       		.uleb128 0xe
 3268 0a23 C7050000 		.4byte	.LASF93
 3269 0a27 01       		.byte	0x1
 3270 0a28 A70B     		.2byte	0xba7
 3271 0a2a 310A0000 		.4byte	0xa31
 3272 0a2e 01       		.uleb128 0x1
 3273 0a2f 50       		.byte	0x50
 3274 0a30 00       		.byte	0
 3275 0a31 06       		.uleb128 0x6
 3276 0a32 04       		.byte	0x4
 3277 0a33 83000000 		.4byte	0x83
 3278 0a37 1A       		.uleb128 0x1a
 3279 0a38 E7000000 		.4byte	0xe7
 3280 0a3c 470A0000 		.4byte	0xa47
 3281 0a40 1B       		.uleb128 0x1b
 3282 0a41 E0000000 		.4byte	0xe0
 3283 0a45 04       		.byte	0x4
 3284 0a46 00       		.byte	0
 3285 0a47 1C       		.uleb128 0x1c
 3286 0a48 A6050000 		.4byte	.LASF94
 3287 0a4c 01       		.byte	0x1
 3288 0a4d 22       		.byte	0x22
 3289 0a4e 370A0000 		.4byte	0xa37
 3290 0a52 05       		.uleb128 0x5
 3291 0a53 03       		.byte	0x3
 3292 0a54 00000000 		.4byte	CySysTickCallbacks
 3293 0a58 1D       		.uleb128 0x1d
 3294 0a59 6B040000 		.4byte	.LASF95
 3295 0a5d 01       		.byte	0x1
 3296 0a5e 1B       		.byte	0x1b
 3297 0a5f 83000000 		.4byte	0x83
 3298 0a63 05       		.uleb128 0x5
 3299 0a64 03       		.byte	0x3
 3300 0a65 00000000 		.4byte	cydelayFreqHz
 3301 0a69 1D       		.uleb128 0x1d
 3302 0a6a 23020000 		.4byte	.LASF96
 3303 0a6e 01       		.byte	0x1
 3304 0a6f 1C       		.byte	0x1c
 3305 0a70 83000000 		.4byte	0x83
 3306 0a74 05       		.uleb128 0x5
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 114


 3307 0a75 03       		.byte	0x3
 3308 0a76 00000000 		.4byte	cydelayFreqKhz
 3309 0a7a 1D       		.uleb128 0x1d
 3310 0a7b 02060000 		.4byte	.LASF97
 3311 0a7f 01       		.byte	0x1
 3312 0a80 1D       		.byte	0x1d
 3313 0a81 6B000000 		.4byte	0x6b
 3314 0a85 05       		.uleb128 0x5
 3315 0a86 03       		.byte	0x3
 3316 0a87 00000000 		.4byte	cydelayFreqMhz
 3317 0a8b 1D       		.uleb128 0x1d
 3318 0a8c 92020000 		.4byte	.LASF98
 3319 0a90 01       		.byte	0x1
 3320 0a91 1E       		.byte	0x1e
 3321 0a92 83000000 		.4byte	0x83
 3322 0a96 05       		.uleb128 0x5
 3323 0a97 03       		.byte	0x3
 3324 0a98 00000000 		.4byte	cydelay32kMs
 3325 0a9c 1D       		.uleb128 0x1d
 3326 0a9d 35010000 		.4byte	.LASF99
 3327 0aa1 01       		.byte	0x1
 3328 0aa2 36       		.byte	0x36
 3329 0aa3 83000000 		.4byte	0x83
 3330 0aa7 05       		.uleb128 0x5
 3331 0aa8 03       		.byte	0x3
 3332 0aa9 00000000 		.4byte	CySysTickInitVar
 3333 0aad 1A       		.uleb128 0x1a
 3334 0aae BD0A0000 		.4byte	0xabd
 3335 0ab2 BD0A0000 		.4byte	0xabd
 3336 0ab6 1B       		.uleb128 0x1b
 3337 0ab7 E0000000 		.4byte	0xe0
 3338 0abb 2D       		.byte	0x2d
 3339 0abc 00       		.byte	0
 3340 0abd 1E       		.uleb128 0x1e
 3341 0abe 6B000000 		.4byte	0x6b
 3342 0ac2 1D       		.uleb128 0x1d
 3343 0ac3 48040000 		.4byte	.LASF100
 3344 0ac7 01       		.byte	0x1
 3345 0ac8 3B       		.byte	0x3b
 3346 0ac9 D30A0000 		.4byte	0xad3
 3347 0acd 05       		.uleb128 0x5
 3348 0ace 03       		.byte	0x3
 3349 0acf 00000000 		.4byte	cyImoFreqMhz2Reg
 3350 0ad3 1E       		.uleb128 0x1e
 3351 0ad4 AD0A0000 		.4byte	0xaad
 3352 0ad8 1D       		.uleb128 0x1d
 3353 0ad9 40000000 		.4byte	.LASF101
 3354 0add 01       		.byte	0x1
 3355 0ade 5B       		.byte	0x5b
 3356 0adf 83000000 		.4byte	0x83
 3357 0ae3 05       		.uleb128 0x5
 3358 0ae4 03       		.byte	0x3
 3359 0ae5 00000000 		.4byte	CySysClkPumpConfig
 3360 0ae9 1F       		.uleb128 0x1f
 3361 0aea 30030000 		.4byte	.LASF102
 3362 0aee 30030000 		.4byte	.LASF102
 3363 0af2 03       		.byte	0x3
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 115


 3364 0af3 E5       		.byte	0xe5
 3365 0af4 1F       		.uleb128 0x1f
 3366 0af5 90040000 		.4byte	.LASF103
 3367 0af9 90040000 		.4byte	.LASF103
 3368 0afd 03       		.byte	0x3
 3369 0afe E6       		.byte	0xe6
 3370 0aff 1F       		.uleb128 0x1f
 3371 0b00 E3040000 		.4byte	.LASF104
 3372 0b04 E3040000 		.4byte	.LASF104
 3373 0b08 03       		.byte	0x3
 3374 0b09 DC       		.byte	0xdc
 3375 0b0a 00       		.byte	0
 3376              		.section	.debug_abbrev,"",%progbits
 3377              	.Ldebug_abbrev0:
 3378 0000 01       		.uleb128 0x1
 3379 0001 11       		.uleb128 0x11
 3380 0002 01       		.byte	0x1
 3381 0003 25       		.uleb128 0x25
 3382 0004 0E       		.uleb128 0xe
 3383 0005 13       		.uleb128 0x13
 3384 0006 0B       		.uleb128 0xb
 3385 0007 03       		.uleb128 0x3
 3386 0008 0E       		.uleb128 0xe
 3387 0009 1B       		.uleb128 0x1b
 3388 000a 0E       		.uleb128 0xe
 3389 000b 55       		.uleb128 0x55
 3390 000c 17       		.uleb128 0x17
 3391 000d 11       		.uleb128 0x11
 3392 000e 01       		.uleb128 0x1
 3393 000f 10       		.uleb128 0x10
 3394 0010 17       		.uleb128 0x17
 3395 0011 00       		.byte	0
 3396 0012 00       		.byte	0
 3397 0013 02       		.uleb128 0x2
 3398 0014 24       		.uleb128 0x24
 3399 0015 00       		.byte	0
 3400 0016 0B       		.uleb128 0xb
 3401 0017 0B       		.uleb128 0xb
 3402 0018 3E       		.uleb128 0x3e
 3403 0019 0B       		.uleb128 0xb
 3404 001a 03       		.uleb128 0x3
 3405 001b 0E       		.uleb128 0xe
 3406 001c 00       		.byte	0
 3407 001d 00       		.byte	0
 3408 001e 03       		.uleb128 0x3
 3409 001f 24       		.uleb128 0x24
 3410 0020 00       		.byte	0
 3411 0021 0B       		.uleb128 0xb
 3412 0022 0B       		.uleb128 0xb
 3413 0023 3E       		.uleb128 0x3e
 3414 0024 0B       		.uleb128 0xb
 3415 0025 03       		.uleb128 0x3
 3416 0026 08       		.uleb128 0x8
 3417 0027 00       		.byte	0
 3418 0028 00       		.byte	0
 3419 0029 04       		.uleb128 0x4
 3420 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 116


 3421 002b 00       		.byte	0
 3422 002c 03       		.uleb128 0x3
 3423 002d 0E       		.uleb128 0xe
 3424 002e 3A       		.uleb128 0x3a
 3425 002f 0B       		.uleb128 0xb
 3426 0030 3B       		.uleb128 0x3b
 3427 0031 05       		.uleb128 0x5
 3428 0032 49       		.uleb128 0x49
 3429 0033 13       		.uleb128 0x13
 3430 0034 00       		.byte	0
 3431 0035 00       		.byte	0
 3432 0036 05       		.uleb128 0x5
 3433 0037 35       		.uleb128 0x35
 3434 0038 00       		.byte	0
 3435 0039 49       		.uleb128 0x49
 3436 003a 13       		.uleb128 0x13
 3437 003b 00       		.byte	0
 3438 003c 00       		.byte	0
 3439 003d 06       		.uleb128 0x6
 3440 003e 0F       		.uleb128 0xf
 3441 003f 00       		.byte	0
 3442 0040 0B       		.uleb128 0xb
 3443 0041 0B       		.uleb128 0xb
 3444 0042 49       		.uleb128 0x49
 3445 0043 13       		.uleb128 0x13
 3446 0044 00       		.byte	0
 3447 0045 00       		.byte	0
 3448 0046 07       		.uleb128 0x7
 3449 0047 15       		.uleb128 0x15
 3450 0048 00       		.byte	0
 3451 0049 27       		.uleb128 0x27
 3452 004a 19       		.uleb128 0x19
 3453 004b 00       		.byte	0
 3454 004c 00       		.byte	0
 3455 004d 08       		.uleb128 0x8
 3456 004e 16       		.uleb128 0x16
 3457 004f 00       		.byte	0
 3458 0050 03       		.uleb128 0x3
 3459 0051 0E       		.uleb128 0xe
 3460 0052 3A       		.uleb128 0x3a
 3461 0053 0B       		.uleb128 0xb
 3462 0054 3B       		.uleb128 0x3b
 3463 0055 0B       		.uleb128 0xb
 3464 0056 49       		.uleb128 0x49
 3465 0057 13       		.uleb128 0x13
 3466 0058 00       		.byte	0
 3467 0059 00       		.byte	0
 3468 005a 09       		.uleb128 0x9
 3469 005b 2E       		.uleb128 0x2e
 3470 005c 00       		.byte	0
 3471 005d 3F       		.uleb128 0x3f
 3472 005e 19       		.uleb128 0x19
 3473 005f 03       		.uleb128 0x3
 3474 0060 0E       		.uleb128 0xe
 3475 0061 3A       		.uleb128 0x3a
 3476 0062 0B       		.uleb128 0xb
 3477 0063 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 117


 3478 0064 0B       		.uleb128 0xb
 3479 0065 27       		.uleb128 0x27
 3480 0066 19       		.uleb128 0x19
 3481 0067 11       		.uleb128 0x11
 3482 0068 01       		.uleb128 0x1
 3483 0069 12       		.uleb128 0x12
 3484 006a 06       		.uleb128 0x6
 3485 006b 40       		.uleb128 0x40
 3486 006c 18       		.uleb128 0x18
 3487 006d 9742     		.uleb128 0x2117
 3488 006f 19       		.uleb128 0x19
 3489 0070 00       		.byte	0
 3490 0071 00       		.byte	0
 3491 0072 0A       		.uleb128 0xa
 3492 0073 2E       		.uleb128 0x2e
 3493 0074 01       		.byte	0x1
 3494 0075 3F       		.uleb128 0x3f
 3495 0076 19       		.uleb128 0x19
 3496 0077 03       		.uleb128 0x3
 3497 0078 0E       		.uleb128 0xe
 3498 0079 3A       		.uleb128 0x3a
 3499 007a 0B       		.uleb128 0xb
 3500 007b 3B       		.uleb128 0x3b
 3501 007c 05       		.uleb128 0x5
 3502 007d 27       		.uleb128 0x27
 3503 007e 19       		.uleb128 0x19
 3504 007f 11       		.uleb128 0x11
 3505 0080 01       		.uleb128 0x1
 3506 0081 12       		.uleb128 0x12
 3507 0082 06       		.uleb128 0x6
 3508 0083 40       		.uleb128 0x40
 3509 0084 18       		.uleb128 0x18
 3510 0085 9742     		.uleb128 0x2117
 3511 0087 19       		.uleb128 0x19
 3512 0088 01       		.uleb128 0x1
 3513 0089 13       		.uleb128 0x13
 3514 008a 00       		.byte	0
 3515 008b 00       		.byte	0
 3516 008c 0B       		.uleb128 0xb
 3517 008d 05       		.uleb128 0x5
 3518 008e 00       		.byte	0
 3519 008f 03       		.uleb128 0x3
 3520 0090 0E       		.uleb128 0xe
 3521 0091 3A       		.uleb128 0x3a
 3522 0092 0B       		.uleb128 0xb
 3523 0093 3B       		.uleb128 0x3b
 3524 0094 05       		.uleb128 0x5
 3525 0095 49       		.uleb128 0x49
 3526 0096 13       		.uleb128 0x13
 3527 0097 02       		.uleb128 0x2
 3528 0098 17       		.uleb128 0x17
 3529 0099 00       		.byte	0
 3530 009a 00       		.byte	0
 3531 009b 0C       		.uleb128 0xc
 3532 009c 34       		.uleb128 0x34
 3533 009d 00       		.byte	0
 3534 009e 03       		.uleb128 0x3
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 118


 3535 009f 0E       		.uleb128 0xe
 3536 00a0 3A       		.uleb128 0x3a
 3537 00a1 0B       		.uleb128 0xb
 3538 00a2 3B       		.uleb128 0x3b
 3539 00a3 05       		.uleb128 0x5
 3540 00a4 49       		.uleb128 0x49
 3541 00a5 13       		.uleb128 0x13
 3542 00a6 02       		.uleb128 0x2
 3543 00a7 17       		.uleb128 0x17
 3544 00a8 00       		.byte	0
 3545 00a9 00       		.byte	0
 3546 00aa 0D       		.uleb128 0xd
 3547 00ab 898201   		.uleb128 0x4109
 3548 00ae 00       		.byte	0
 3549 00af 11       		.uleb128 0x11
 3550 00b0 01       		.uleb128 0x1
 3551 00b1 31       		.uleb128 0x31
 3552 00b2 13       		.uleb128 0x13
 3553 00b3 00       		.byte	0
 3554 00b4 00       		.byte	0
 3555 00b5 0E       		.uleb128 0xe
 3556 00b6 05       		.uleb128 0x5
 3557 00b7 00       		.byte	0
 3558 00b8 03       		.uleb128 0x3
 3559 00b9 0E       		.uleb128 0xe
 3560 00ba 3A       		.uleb128 0x3a
 3561 00bb 0B       		.uleb128 0xb
 3562 00bc 3B       		.uleb128 0x3b
 3563 00bd 05       		.uleb128 0x5
 3564 00be 49       		.uleb128 0x49
 3565 00bf 13       		.uleb128 0x13
 3566 00c0 02       		.uleb128 0x2
 3567 00c1 18       		.uleb128 0x18
 3568 00c2 00       		.byte	0
 3569 00c3 00       		.byte	0
 3570 00c4 0F       		.uleb128 0xf
 3571 00c5 2E       		.uleb128 0x2e
 3572 00c6 01       		.byte	0x1
 3573 00c7 3F       		.uleb128 0x3f
 3574 00c8 19       		.uleb128 0x19
 3575 00c9 03       		.uleb128 0x3
 3576 00ca 0E       		.uleb128 0xe
 3577 00cb 3A       		.uleb128 0x3a
 3578 00cc 0B       		.uleb128 0xb
 3579 00cd 3B       		.uleb128 0x3b
 3580 00ce 05       		.uleb128 0x5
 3581 00cf 27       		.uleb128 0x27
 3582 00d0 19       		.uleb128 0x19
 3583 00d1 49       		.uleb128 0x49
 3584 00d2 13       		.uleb128 0x13
 3585 00d3 11       		.uleb128 0x11
 3586 00d4 01       		.uleb128 0x1
 3587 00d5 12       		.uleb128 0x12
 3588 00d6 06       		.uleb128 0x6
 3589 00d7 40       		.uleb128 0x40
 3590 00d8 18       		.uleb128 0x18
 3591 00d9 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 119


 3592 00db 19       		.uleb128 0x19
 3593 00dc 01       		.uleb128 0x1
 3594 00dd 13       		.uleb128 0x13
 3595 00de 00       		.byte	0
 3596 00df 00       		.byte	0
 3597 00e0 10       		.uleb128 0x10
 3598 00e1 2E       		.uleb128 0x2e
 3599 00e2 00       		.byte	0
 3600 00e3 3F       		.uleb128 0x3f
 3601 00e4 19       		.uleb128 0x19
 3602 00e5 03       		.uleb128 0x3
 3603 00e6 0E       		.uleb128 0xe
 3604 00e7 3A       		.uleb128 0x3a
 3605 00e8 0B       		.uleb128 0xb
 3606 00e9 3B       		.uleb128 0x3b
 3607 00ea 05       		.uleb128 0x5
 3608 00eb 27       		.uleb128 0x27
 3609 00ec 19       		.uleb128 0x19
 3610 00ed 11       		.uleb128 0x11
 3611 00ee 01       		.uleb128 0x1
 3612 00ef 12       		.uleb128 0x12
 3613 00f0 06       		.uleb128 0x6
 3614 00f1 40       		.uleb128 0x40
 3615 00f2 18       		.uleb128 0x18
 3616 00f3 9742     		.uleb128 0x2117
 3617 00f5 19       		.uleb128 0x19
 3618 00f6 00       		.byte	0
 3619 00f7 00       		.byte	0
 3620 00f8 11       		.uleb128 0x11
 3621 00f9 2E       		.uleb128 0x2e
 3622 00fa 00       		.byte	0
 3623 00fb 3F       		.uleb128 0x3f
 3624 00fc 19       		.uleb128 0x19
 3625 00fd 03       		.uleb128 0x3
 3626 00fe 0E       		.uleb128 0xe
 3627 00ff 3A       		.uleb128 0x3a
 3628 0100 0B       		.uleb128 0xb
 3629 0101 3B       		.uleb128 0x3b
 3630 0102 05       		.uleb128 0x5
 3631 0103 27       		.uleb128 0x27
 3632 0104 19       		.uleb128 0x19
 3633 0105 49       		.uleb128 0x49
 3634 0106 13       		.uleb128 0x13
 3635 0107 11       		.uleb128 0x11
 3636 0108 01       		.uleb128 0x1
 3637 0109 12       		.uleb128 0x12
 3638 010a 06       		.uleb128 0x6
 3639 010b 40       		.uleb128 0x40
 3640 010c 18       		.uleb128 0x18
 3641 010d 9742     		.uleb128 0x2117
 3642 010f 19       		.uleb128 0x19
 3643 0110 00       		.byte	0
 3644 0111 00       		.byte	0
 3645 0112 12       		.uleb128 0x12
 3646 0113 34       		.uleb128 0x34
 3647 0114 00       		.byte	0
 3648 0115 03       		.uleb128 0x3
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 120


 3649 0116 0E       		.uleb128 0xe
 3650 0117 3A       		.uleb128 0x3a
 3651 0118 0B       		.uleb128 0xb
 3652 0119 3B       		.uleb128 0x3b
 3653 011a 05       		.uleb128 0x5
 3654 011b 49       		.uleb128 0x49
 3655 011c 13       		.uleb128 0x13
 3656 011d 02       		.uleb128 0x2
 3657 011e 18       		.uleb128 0x18
 3658 011f 00       		.byte	0
 3659 0120 00       		.byte	0
 3660 0121 13       		.uleb128 0x13
 3661 0122 34       		.uleb128 0x34
 3662 0123 00       		.byte	0
 3663 0124 03       		.uleb128 0x3
 3664 0125 0E       		.uleb128 0xe
 3665 0126 3A       		.uleb128 0x3a
 3666 0127 0B       		.uleb128 0xb
 3667 0128 3B       		.uleb128 0x3b
 3668 0129 05       		.uleb128 0x5
 3669 012a 49       		.uleb128 0x49
 3670 012b 13       		.uleb128 0x13
 3671 012c 1C       		.uleb128 0x1c
 3672 012d 06       		.uleb128 0x6
 3673 012e 00       		.byte	0
 3674 012f 00       		.byte	0
 3675 0130 14       		.uleb128 0x14
 3676 0131 898201   		.uleb128 0x4109
 3677 0134 01       		.byte	0x1
 3678 0135 11       		.uleb128 0x11
 3679 0136 01       		.uleb128 0x1
 3680 0137 31       		.uleb128 0x31
 3681 0138 13       		.uleb128 0x13
 3682 0139 00       		.byte	0
 3683 013a 00       		.byte	0
 3684 013b 15       		.uleb128 0x15
 3685 013c 8A8201   		.uleb128 0x410a
 3686 013f 00       		.byte	0
 3687 0140 02       		.uleb128 0x2
 3688 0141 18       		.uleb128 0x18
 3689 0142 9142     		.uleb128 0x2111
 3690 0144 18       		.uleb128 0x18
 3691 0145 00       		.byte	0
 3692 0146 00       		.byte	0
 3693 0147 16       		.uleb128 0x16
 3694 0148 898201   		.uleb128 0x4109
 3695 014b 01       		.byte	0x1
 3696 014c 11       		.uleb128 0x11
 3697 014d 01       		.uleb128 0x1
 3698 014e 31       		.uleb128 0x31
 3699 014f 13       		.uleb128 0x13
 3700 0150 01       		.uleb128 0x1
 3701 0151 13       		.uleb128 0x13
 3702 0152 00       		.byte	0
 3703 0153 00       		.byte	0
 3704 0154 17       		.uleb128 0x17
 3705 0155 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 121


 3706 0156 01       		.byte	0x1
 3707 0157 3F       		.uleb128 0x3f
 3708 0158 19       		.uleb128 0x19
 3709 0159 03       		.uleb128 0x3
 3710 015a 0E       		.uleb128 0xe
 3711 015b 3A       		.uleb128 0x3a
 3712 015c 0B       		.uleb128 0xb
 3713 015d 3B       		.uleb128 0x3b
 3714 015e 05       		.uleb128 0x5
 3715 015f 27       		.uleb128 0x27
 3716 0160 19       		.uleb128 0x19
 3717 0161 11       		.uleb128 0x11
 3718 0162 01       		.uleb128 0x1
 3719 0163 12       		.uleb128 0x12
 3720 0164 06       		.uleb128 0x6
 3721 0165 40       		.uleb128 0x40
 3722 0166 18       		.uleb128 0x18
 3723 0167 9642     		.uleb128 0x2116
 3724 0169 19       		.uleb128 0x19
 3725 016a 01       		.uleb128 0x1
 3726 016b 13       		.uleb128 0x13
 3727 016c 00       		.byte	0
 3728 016d 00       		.byte	0
 3729 016e 18       		.uleb128 0x18
 3730 016f 2E       		.uleb128 0x2e
 3731 0170 01       		.byte	0x1
 3732 0171 03       		.uleb128 0x3
 3733 0172 0E       		.uleb128 0xe
 3734 0173 3A       		.uleb128 0x3a
 3735 0174 0B       		.uleb128 0xb
 3736 0175 3B       		.uleb128 0x3b
 3737 0176 05       		.uleb128 0x5
 3738 0177 27       		.uleb128 0x27
 3739 0178 19       		.uleb128 0x19
 3740 0179 11       		.uleb128 0x11
 3741 017a 01       		.uleb128 0x1
 3742 017b 12       		.uleb128 0x12
 3743 017c 06       		.uleb128 0x6
 3744 017d 40       		.uleb128 0x40
 3745 017e 18       		.uleb128 0x18
 3746 017f 9642     		.uleb128 0x2116
 3747 0181 19       		.uleb128 0x19
 3748 0182 01       		.uleb128 0x1
 3749 0183 13       		.uleb128 0x13
 3750 0184 00       		.byte	0
 3751 0185 00       		.byte	0
 3752 0186 19       		.uleb128 0x19
 3753 0187 34       		.uleb128 0x34
 3754 0188 00       		.byte	0
 3755 0189 03       		.uleb128 0x3
 3756 018a 08       		.uleb128 0x8
 3757 018b 3A       		.uleb128 0x3a
 3758 018c 0B       		.uleb128 0xb
 3759 018d 3B       		.uleb128 0x3b
 3760 018e 05       		.uleb128 0x5
 3761 018f 49       		.uleb128 0x49
 3762 0190 13       		.uleb128 0x13
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 122


 3763 0191 02       		.uleb128 0x2
 3764 0192 17       		.uleb128 0x17
 3765 0193 00       		.byte	0
 3766 0194 00       		.byte	0
 3767 0195 1A       		.uleb128 0x1a
 3768 0196 01       		.uleb128 0x1
 3769 0197 01       		.byte	0x1
 3770 0198 49       		.uleb128 0x49
 3771 0199 13       		.uleb128 0x13
 3772 019a 01       		.uleb128 0x1
 3773 019b 13       		.uleb128 0x13
 3774 019c 00       		.byte	0
 3775 019d 00       		.byte	0
 3776 019e 1B       		.uleb128 0x1b
 3777 019f 21       		.uleb128 0x21
 3778 01a0 00       		.byte	0
 3779 01a1 49       		.uleb128 0x49
 3780 01a2 13       		.uleb128 0x13
 3781 01a3 2F       		.uleb128 0x2f
 3782 01a4 0B       		.uleb128 0xb
 3783 01a5 00       		.byte	0
 3784 01a6 00       		.byte	0
 3785 01a7 1C       		.uleb128 0x1c
 3786 01a8 34       		.uleb128 0x34
 3787 01a9 00       		.byte	0
 3788 01aa 03       		.uleb128 0x3
 3789 01ab 0E       		.uleb128 0xe
 3790 01ac 3A       		.uleb128 0x3a
 3791 01ad 0B       		.uleb128 0xb
 3792 01ae 3B       		.uleb128 0x3b
 3793 01af 0B       		.uleb128 0xb
 3794 01b0 49       		.uleb128 0x49
 3795 01b1 13       		.uleb128 0x13
 3796 01b2 02       		.uleb128 0x2
 3797 01b3 18       		.uleb128 0x18
 3798 01b4 00       		.byte	0
 3799 01b5 00       		.byte	0
 3800 01b6 1D       		.uleb128 0x1d
 3801 01b7 34       		.uleb128 0x34
 3802 01b8 00       		.byte	0
 3803 01b9 03       		.uleb128 0x3
 3804 01ba 0E       		.uleb128 0xe
 3805 01bb 3A       		.uleb128 0x3a
 3806 01bc 0B       		.uleb128 0xb
 3807 01bd 3B       		.uleb128 0x3b
 3808 01be 0B       		.uleb128 0xb
 3809 01bf 49       		.uleb128 0x49
 3810 01c0 13       		.uleb128 0x13
 3811 01c1 3F       		.uleb128 0x3f
 3812 01c2 19       		.uleb128 0x19
 3813 01c3 02       		.uleb128 0x2
 3814 01c4 18       		.uleb128 0x18
 3815 01c5 00       		.byte	0
 3816 01c6 00       		.byte	0
 3817 01c7 1E       		.uleb128 0x1e
 3818 01c8 26       		.uleb128 0x26
 3819 01c9 00       		.byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 123


 3820 01ca 49       		.uleb128 0x49
 3821 01cb 13       		.uleb128 0x13
 3822 01cc 00       		.byte	0
 3823 01cd 00       		.byte	0
 3824 01ce 1F       		.uleb128 0x1f
 3825 01cf 2E       		.uleb128 0x2e
 3826 01d0 00       		.byte	0
 3827 01d1 3F       		.uleb128 0x3f
 3828 01d2 19       		.uleb128 0x19
 3829 01d3 3C       		.uleb128 0x3c
 3830 01d4 19       		.uleb128 0x19
 3831 01d5 6E       		.uleb128 0x6e
 3832 01d6 0E       		.uleb128 0xe
 3833 01d7 03       		.uleb128 0x3
 3834 01d8 0E       		.uleb128 0xe
 3835 01d9 3A       		.uleb128 0x3a
 3836 01da 0B       		.uleb128 0xb
 3837 01db 3B       		.uleb128 0x3b
 3838 01dc 0B       		.uleb128 0xb
 3839 01dd 00       		.byte	0
 3840 01de 00       		.byte	0
 3841 01df 00       		.byte	0
 3842              		.section	.debug_loc,"",%progbits
 3843              	.Ldebug_loc0:
 3844              	.LLST0:
 3845 0000 00000000 		.4byte	.LVL0
 3846 0004 07000000 		.4byte	.LVL1-1
 3847 0008 0100     		.2byte	0x1
 3848 000a 50       		.byte	0x50
 3849 000b 07000000 		.4byte	.LVL1-1
 3850 000f 12000000 		.4byte	.LVL3
 3851 0013 0100     		.2byte	0x1
 3852 0015 54       		.byte	0x54
 3853 0016 12000000 		.4byte	.LVL3
 3854 001a 20000000 		.4byte	.LFE2
 3855 001e 0400     		.2byte	0x4
 3856 0020 F3       		.byte	0xf3
 3857 0021 01       		.uleb128 0x1
 3858 0022 50       		.byte	0x50
 3859 0023 9F       		.byte	0x9f
 3860 0024 00000000 		.4byte	0
 3861 0028 00000000 		.4byte	0
 3862              	.LLST1:
 3863 002c 08000000 		.4byte	.LVL1
 3864 0030 19000000 		.4byte	.LVL5-1
 3865 0034 0100     		.2byte	0x1
 3866 0036 50       		.byte	0x50
 3867 0037 00000000 		.4byte	0
 3868 003b 00000000 		.4byte	0
 3869              	.LLST2:
 3870 003f 10000000 		.4byte	.LVL2
 3871 0043 14000000 		.4byte	.LVL4
 3872 0047 0100     		.2byte	0x1
 3873 0049 53       		.byte	0x53
 3874 004a 14000000 		.4byte	.LVL4
 3875 004e 1A000000 		.4byte	.LVL6
 3876 0052 0100     		.2byte	0x1
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 124


 3877 0054 54       		.byte	0x54
 3878 0055 00000000 		.4byte	0
 3879 0059 00000000 		.4byte	0
 3880              	.LLST3:
 3881 005d 06000000 		.4byte	.LVL8
 3882 0061 11000000 		.4byte	.LVL10-1
 3883 0065 0100     		.2byte	0x1
 3884 0067 50       		.byte	0x50
 3885 0068 00000000 		.4byte	0
 3886 006c 00000000 		.4byte	0
 3887              	.LLST4:
 3888 0070 0E000000 		.4byte	.LVL9
 3889 0074 14000000 		.4byte	.LVL11
 3890 0078 0100     		.2byte	0x1
 3891 007a 54       		.byte	0x54
 3892 007b 14000000 		.4byte	.LVL11
 3893 007f 1C000000 		.4byte	.LFE4
 3894 0083 0100     		.2byte	0x1
 3895 0085 50       		.byte	0x50
 3896 0086 00000000 		.4byte	0
 3897 008a 00000000 		.4byte	0
 3898              	.LLST5:
 3899 008e 00000000 		.4byte	.LVL12
 3900 0092 07000000 		.4byte	.LVL13-1
 3901 0096 0100     		.2byte	0x1
 3902 0098 50       		.byte	0x50
 3903 0099 07000000 		.4byte	.LVL13-1
 3904 009d 14000000 		.4byte	.LVL14
 3905 00a1 0100     		.2byte	0x1
 3906 00a3 54       		.byte	0x54
 3907 00a4 14000000 		.4byte	.LVL14
 3908 00a8 30000000 		.4byte	.LFE5
 3909 00ac 0400     		.2byte	0x4
 3910 00ae F3       		.byte	0xf3
 3911 00af 01       		.uleb128 0x1
 3912 00b0 50       		.byte	0x50
 3913 00b1 9F       		.byte	0x9f
 3914 00b2 00000000 		.4byte	0
 3915 00b6 00000000 		.4byte	0
 3916              	.LLST6:
 3917 00ba 08000000 		.4byte	.LVL13
 3918 00be 23000000 		.4byte	.LVL15-1
 3919 00c2 0100     		.2byte	0x1
 3920 00c4 50       		.byte	0x50
 3921 00c5 00000000 		.4byte	0
 3922 00c9 00000000 		.4byte	0
 3923              	.LLST7:
 3924 00cd 00000000 		.4byte	.LVL16
 3925 00d1 04000000 		.4byte	.LVL17
 3926 00d5 0100     		.2byte	0x1
 3927 00d7 50       		.byte	0x50
 3928 00d8 04000000 		.4byte	.LVL17
 3929 00dc 14000000 		.4byte	.LFE11
 3930 00e0 0100     		.2byte	0x1
 3931 00e2 52       		.byte	0x52
 3932 00e3 00000000 		.4byte	0
 3933 00e7 00000000 		.4byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 125


 3934              	.LLST8:
 3935 00eb 00000000 		.4byte	.LVL22
 3936 00ef 04000000 		.4byte	.LVL23
 3937 00f3 0100     		.2byte	0x1
 3938 00f5 50       		.byte	0x50
 3939 00f6 04000000 		.4byte	.LVL23
 3940 00fa 14000000 		.4byte	.LFE20
 3941 00fe 0400     		.2byte	0x4
 3942 0100 F3       		.byte	0xf3
 3943 0101 01       		.uleb128 0x1
 3944 0102 50       		.byte	0x50
 3945 0103 9F       		.byte	0x9f
 3946 0104 00000000 		.4byte	0
 3947 0108 00000000 		.4byte	0
 3948              	.LLST9:
 3949 010c 00000000 		.4byte	.LVL24
 3950 0110 08000000 		.4byte	.LVL25
 3951 0114 0100     		.2byte	0x1
 3952 0116 50       		.byte	0x50
 3953 0117 08000000 		.4byte	.LVL25
 3954 011b 18000000 		.4byte	.LFE21
 3955 011f 0400     		.2byte	0x4
 3956 0121 F3       		.byte	0xf3
 3957 0122 01       		.uleb128 0x1
 3958 0123 50       		.byte	0x50
 3959 0124 9F       		.byte	0x9f
 3960 0125 00000000 		.4byte	0
 3961 0129 00000000 		.4byte	0
 3962              	.LLST10:
 3963 012d 00000000 		.4byte	.LVL26
 3964 0131 04000000 		.4byte	.LVL27
 3965 0135 0100     		.2byte	0x1
 3966 0137 50       		.byte	0x50
 3967 0138 04000000 		.4byte	.LVL27
 3968 013c 14000000 		.4byte	.LFE22
 3969 0140 0400     		.2byte	0x4
 3970 0142 F3       		.byte	0xf3
 3971 0143 01       		.uleb128 0x1
 3972 0144 50       		.byte	0x50
 3973 0145 9F       		.byte	0x9f
 3974 0146 00000000 		.4byte	0
 3975 014a 00000000 		.4byte	0
 3976              	.LLST11:
 3977 014e 00000000 		.4byte	.LVL28
 3978 0152 04000000 		.4byte	.LVL29
 3979 0156 0100     		.2byte	0x1
 3980 0158 50       		.byte	0x50
 3981 0159 04000000 		.4byte	.LVL29
 3982 015d 14000000 		.4byte	.LFE23
 3983 0161 0400     		.2byte	0x4
 3984 0163 F3       		.byte	0xf3
 3985 0164 01       		.uleb128 0x1
 3986 0165 50       		.byte	0x50
 3987 0166 9F       		.byte	0x9f
 3988 0167 00000000 		.4byte	0
 3989 016b 00000000 		.4byte	0
 3990              	.LLST12:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 126


 3991 016f 00000000 		.4byte	.LVL30
 3992 0173 04000000 		.4byte	.LVL31
 3993 0177 0100     		.2byte	0x1
 3994 0179 50       		.byte	0x50
 3995 017a 04000000 		.4byte	.LVL31
 3996 017e 14000000 		.4byte	.LFE24
 3997 0182 0400     		.2byte	0x4
 3998 0184 F3       		.byte	0xf3
 3999 0185 01       		.uleb128 0x1
 4000 0186 50       		.byte	0x50
 4001 0187 9F       		.byte	0x9f
 4002 0188 00000000 		.4byte	0
 4003 018c 00000000 		.4byte	0
 4004              	.LLST13:
 4005 0190 00000000 		.4byte	.LVL33
 4006 0194 0C000000 		.4byte	.LVL35
 4007 0198 0100     		.2byte	0x1
 4008 019a 50       		.byte	0x50
 4009 019b 0C000000 		.4byte	.LVL35
 4010 019f 20000000 		.4byte	.LFE14
 4011 01a3 0400     		.2byte	0x4
 4012 01a5 F3       		.byte	0xf3
 4013 01a6 01       		.uleb128 0x1
 4014 01a7 50       		.byte	0x50
 4015 01a8 9F       		.byte	0x9f
 4016 01a9 00000000 		.4byte	0
 4017 01ad 00000000 		.4byte	0
 4018              	.LLST14:
 4019 01b1 00000000 		.4byte	.LVL33
 4020 01b5 0F000000 		.4byte	.LVL36-1
 4021 01b9 0100     		.2byte	0x1
 4022 01bb 51       		.byte	0x51
 4023 01bc 0F000000 		.4byte	.LVL36-1
 4024 01c0 1E000000 		.4byte	.LVL38
 4025 01c4 0100     		.2byte	0x1
 4026 01c6 55       		.byte	0x55
 4027 01c7 1E000000 		.4byte	.LVL38
 4028 01cb 20000000 		.4byte	.LFE14
 4029 01cf 0400     		.2byte	0x4
 4030 01d1 F3       		.byte	0xf3
 4031 01d2 01       		.uleb128 0x1
 4032 01d3 51       		.byte	0x51
 4033 01d4 9F       		.byte	0x9f
 4034 01d5 00000000 		.4byte	0
 4035 01d9 00000000 		.4byte	0
 4036              	.LLST15:
 4037 01dd 00000000 		.4byte	.LVL39
 4038 01e1 0A000000 		.4byte	.LVL41
 4039 01e5 0100     		.2byte	0x1
 4040 01e7 50       		.byte	0x50
 4041 01e8 0A000000 		.4byte	.LVL41
 4042 01ec 1C000000 		.4byte	.LFE15
 4043 01f0 0400     		.2byte	0x4
 4044 01f2 F3       		.byte	0xf3
 4045 01f3 01       		.uleb128 0x1
 4046 01f4 50       		.byte	0x50
 4047 01f5 9F       		.byte	0x9f
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 127


 4048 01f6 00000000 		.4byte	0
 4049 01fa 00000000 		.4byte	0
 4050              	.LLST16:
 4051 01fe 00000000 		.4byte	.LVL43
 4052 0202 0C000000 		.4byte	.LVL45
 4053 0206 0100     		.2byte	0x1
 4054 0208 50       		.byte	0x50
 4055 0209 0C000000 		.4byte	.LVL45
 4056 020d 22000000 		.4byte	.LFE16
 4057 0211 0400     		.2byte	0x4
 4058 0213 F3       		.byte	0xf3
 4059 0214 01       		.uleb128 0x1
 4060 0215 50       		.byte	0x50
 4061 0216 9F       		.byte	0x9f
 4062 0217 00000000 		.4byte	0
 4063 021b 00000000 		.4byte	0
 4064              	.LLST17:
 4065 021f 00000000 		.4byte	.LVL43
 4066 0223 0F000000 		.4byte	.LVL46-1
 4067 0227 0100     		.2byte	0x1
 4068 0229 51       		.byte	0x51
 4069 022a 0F000000 		.4byte	.LVL46-1
 4070 022e 20000000 		.4byte	.LVL48
 4071 0232 0100     		.2byte	0x1
 4072 0234 55       		.byte	0x55
 4073 0235 20000000 		.4byte	.LVL48
 4074 0239 22000000 		.4byte	.LFE16
 4075 023d 0400     		.2byte	0x4
 4076 023f F3       		.byte	0xf3
 4077 0240 01       		.uleb128 0x1
 4078 0241 51       		.byte	0x51
 4079 0242 9F       		.byte	0x9f
 4080 0243 00000000 		.4byte	0
 4081 0247 00000000 		.4byte	0
 4082              	.LLST18:
 4083 024b 00000000 		.4byte	.LVL49
 4084 024f 0A000000 		.4byte	.LVL51
 4085 0253 0100     		.2byte	0x1
 4086 0255 50       		.byte	0x50
 4087 0256 0A000000 		.4byte	.LVL51
 4088 025a 1E000000 		.4byte	.LFE17
 4089 025e 0400     		.2byte	0x4
 4090 0260 F3       		.byte	0xf3
 4091 0261 01       		.uleb128 0x1
 4092 0262 50       		.byte	0x50
 4093 0263 9F       		.byte	0x9f
 4094 0264 00000000 		.4byte	0
 4095 0268 00000000 		.4byte	0
 4096              	.LLST19:
 4097 026c 00000000 		.4byte	.LVL53
 4098 0270 0C000000 		.4byte	.LVL54
 4099 0274 0100     		.2byte	0x1
 4100 0276 50       		.byte	0x50
 4101 0277 0C000000 		.4byte	.LVL54
 4102 027b 4C000000 		.4byte	.LFE18
 4103 027f 0400     		.2byte	0x4
 4104 0281 F3       		.byte	0xf3
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 128


 4105 0282 01       		.uleb128 0x1
 4106 0283 50       		.byte	0x50
 4107 0284 9F       		.byte	0x9f
 4108 0285 00000000 		.4byte	0
 4109 0289 00000000 		.4byte	0
 4110              	.LLST20:
 4111 028d 00000000 		.4byte	.LVL53
 4112 0291 0F000000 		.4byte	.LVL55-1
 4113 0295 0100     		.2byte	0x1
 4114 0297 51       		.byte	0x51
 4115 0298 0F000000 		.4byte	.LVL55-1
 4116 029c 4C000000 		.4byte	.LFE18
 4117 02a0 0400     		.2byte	0x4
 4118 02a2 F3       		.byte	0xf3
 4119 02a3 01       		.uleb128 0x1
 4120 02a4 51       		.byte	0x51
 4121 02a5 9F       		.byte	0x9f
 4122 02a6 00000000 		.4byte	0
 4123 02aa 00000000 		.4byte	0
 4124              	.LLST21:
 4125 02ae 26000000 		.4byte	.LVL58
 4126 02b2 45000000 		.4byte	.LVL64-1
 4127 02b6 0100     		.2byte	0x1
 4128 02b8 50       		.byte	0x50
 4129 02b9 00000000 		.4byte	0
 4130 02bd 00000000 		.4byte	0
 4131              	.LLST22:
 4132 02c1 22000000 		.4byte	.LVL57
 4133 02c5 46000000 		.4byte	.LVL65
 4134 02c9 0100     		.2byte	0x1
 4135 02cb 55       		.byte	0x55
 4136 02cc 00000000 		.4byte	0
 4137 02d0 00000000 		.4byte	0
 4138              	.LLST23:
 4139 02d4 32000000 		.4byte	.LVL59
 4140 02d8 38000000 		.4byte	.LVL60
 4141 02dc 0100     		.2byte	0x1
 4142 02de 51       		.byte	0x51
 4143 02df 3A000000 		.4byte	.LVL61
 4144 02e3 3C000000 		.4byte	.LVL62
 4145 02e7 0100     		.2byte	0x1
 4146 02e9 51       		.byte	0x51
 4147 02ea 3C000000 		.4byte	.LVL62
 4148 02ee 40000000 		.4byte	.LVL63
 4149 02f2 0100     		.2byte	0x1
 4150 02f4 53       		.byte	0x53
 4151 02f5 40000000 		.4byte	.LVL63
 4152 02f9 45000000 		.4byte	.LVL64-1
 4153 02fd 0100     		.2byte	0x1
 4154 02ff 51       		.byte	0x51
 4155 0300 00000000 		.4byte	0
 4156 0304 00000000 		.4byte	0
 4157              	.LLST24:
 4158 0308 00000000 		.4byte	.LVL66
 4159 030c 0A000000 		.4byte	.LVL67
 4160 0310 0100     		.2byte	0x1
 4161 0312 50       		.byte	0x50
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 129


 4162 0313 0A000000 		.4byte	.LVL67
 4163 0317 2C000000 		.4byte	.LFE19
 4164 031b 0400     		.2byte	0x4
 4165 031d F3       		.byte	0xf3
 4166 031e 01       		.uleb128 0x1
 4167 031f 50       		.byte	0x50
 4168 0320 9F       		.byte	0x9f
 4169 0321 00000000 		.4byte	0
 4170 0325 00000000 		.4byte	0
 4171              	.LLST25:
 4172 0329 24000000 		.4byte	.LVL69
 4173 032d 26000000 		.4byte	.LVL70
 4174 0331 0100     		.2byte	0x1
 4175 0333 50       		.byte	0x50
 4176 0334 00000000 		.4byte	0
 4177 0338 00000000 		.4byte	0
 4178              	.LLST26:
 4179 033c 00000000 		.4byte	.LVL71
 4180 0340 06000000 		.4byte	.LVL72
 4181 0344 0100     		.2byte	0x1
 4182 0346 50       		.byte	0x50
 4183 0347 06000000 		.4byte	.LVL72
 4184 034b 26000000 		.4byte	.LVL76
 4185 034f 0100     		.2byte	0x1
 4186 0351 54       		.byte	0x54
 4187 0352 00000000 		.4byte	0
 4188 0356 00000000 		.4byte	0
 4189              	.LLST27:
 4190 035a 00000000 		.4byte	.LVL77
 4191 035e 08000000 		.4byte	.LVL78
 4192 0362 0100     		.2byte	0x1
 4193 0364 50       		.byte	0x50
 4194 0365 08000000 		.4byte	.LVL78
 4195 0369 14000000 		.4byte	.LFE28
 4196 036d 0400     		.2byte	0x4
 4197 036f F3       		.byte	0xf3
 4198 0370 01       		.uleb128 0x1
 4199 0371 50       		.byte	0x50
 4200 0372 9F       		.byte	0x9f
 4201 0373 00000000 		.4byte	0
 4202 0377 00000000 		.4byte	0
 4203              	.LLST28:
 4204 037b 00000000 		.4byte	.LVL80
 4205 037f 0F000000 		.4byte	.LVL81-1
 4206 0383 0100     		.2byte	0x1
 4207 0385 50       		.byte	0x50
 4208 0386 0F000000 		.4byte	.LVL81-1
 4209 038a D4000000 		.4byte	.LVL103
 4210 038e 0100     		.2byte	0x1
 4211 0390 54       		.byte	0x54
 4212 0391 D4000000 		.4byte	.LVL103
 4213 0395 02010000 		.4byte	.LVL110
 4214 0399 0700     		.2byte	0x7
 4215 039b 74       		.byte	0x74
 4216 039c B39C8080 		.sleb128 -268431821
 4216      7F
 4217 03a1 9F       		.byte	0x9f
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 130


 4218 03a2 02010000 		.4byte	.LVL110
 4219 03a6 08010000 		.4byte	.LVL111
 4220 03aa 0100     		.2byte	0x1
 4221 03ac 54       		.byte	0x54
 4222 03ad 08010000 		.4byte	.LVL111
 4223 03b1 10010000 		.4byte	.LVL113
 4224 03b5 0300     		.2byte	0x3
 4225 03b7 77       		.byte	0x77
 4226 03b8 03       		.sleb128 3
 4227 03b9 9F       		.byte	0x9f
 4228 03ba 10010000 		.4byte	.LVL113
 4229 03be 64010000 		.4byte	.LFE6
 4230 03c2 0400     		.2byte	0x4
 4231 03c4 F3       		.byte	0xf3
 4232 03c5 01       		.uleb128 0x1
 4233 03c6 50       		.byte	0x50
 4234 03c7 9F       		.byte	0x9f
 4235 03c8 00000000 		.4byte	0
 4236 03cc 00000000 		.4byte	0
 4237              	.LLST29:
 4238 03d0 2A000000 		.4byte	.LVL83
 4239 03d4 34000000 		.4byte	.LVL85
 4240 03d8 0100     		.2byte	0x1
 4241 03da 5A       		.byte	0x5a
 4242 03db 46000000 		.4byte	.LVL86
 4243 03df 50000000 		.4byte	.LVL88
 4244 03e3 0100     		.2byte	0x1
 4245 03e5 5A       		.byte	0x5a
 4246 03e6 62000000 		.4byte	.LVL89
 4247 03ea 6C000000 		.4byte	.LVL91
 4248 03ee 0100     		.2byte	0x1
 4249 03f0 5A       		.byte	0x5a
 4250 03f1 7E000000 		.4byte	.LVL92
 4251 03f5 88000000 		.4byte	.LVL94
 4252 03f9 0100     		.2byte	0x1
 4253 03fb 5A       		.byte	0x5a
 4254 03fc 90000000 		.4byte	.LVL95
 4255 0400 02010000 		.4byte	.LVL110
 4256 0404 0100     		.2byte	0x1
 4257 0406 5A       		.byte	0x5a
 4258 0407 00000000 		.4byte	0
 4259 040b 00000000 		.4byte	0
 4260              	.LLST30:
 4261 040f 32000000 		.4byte	.LVL84
 4262 0413 34000000 		.4byte	.LVL85
 4263 0417 0100     		.2byte	0x1
 4264 0419 59       		.byte	0x59
 4265 041a 4E000000 		.4byte	.LVL87
 4266 041e 50000000 		.4byte	.LVL88
 4267 0422 0100     		.2byte	0x1
 4268 0424 59       		.byte	0x59
 4269 0425 6A000000 		.4byte	.LVL90
 4270 0429 6C000000 		.4byte	.LVL91
 4271 042d 0100     		.2byte	0x1
 4272 042f 59       		.byte	0x59
 4273 0430 86000000 		.4byte	.LVL93
 4274 0434 88000000 		.4byte	.LVL94
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 131


 4275 0438 0100     		.2byte	0x1
 4276 043a 59       		.byte	0x59
 4277 043b 98000000 		.4byte	.LVL96
 4278 043f 02010000 		.4byte	.LVL110
 4279 0443 0100     		.2byte	0x1
 4280 0445 59       		.byte	0x59
 4281 0446 00000000 		.4byte	0
 4282 044a 00000000 		.4byte	0
 4283              	.LLST31:
 4284 044e 9C000000 		.4byte	.LVL97
 4285 0452 02010000 		.4byte	.LVL110
 4286 0456 0100     		.2byte	0x1
 4287 0458 56       		.byte	0x56
 4288 0459 00000000 		.4byte	0
 4289 045d 00000000 		.4byte	0
 4290              	.LLST32:
 4291 0461 B0000000 		.4byte	.LVL99
 4292 0465 B4000000 		.4byte	.LVL100
 4293 0469 0200     		.2byte	0x2
 4294 046b 49       		.byte	0x49
 4295 046c 9F       		.byte	0x9f
 4296 046d BC000000 		.4byte	.LVL101
 4297 0471 02010000 		.4byte	.LVL110
 4298 0475 0100     		.2byte	0x1
 4299 0477 55       		.byte	0x55
 4300 0478 00000000 		.4byte	0
 4301 047c 00000000 		.4byte	0
 4302              	.LLST33:
 4303 0480 D8000000 		.4byte	.LVL104
 4304 0484 DE000000 		.4byte	.LVL105
 4305 0488 0100     		.2byte	0x1
 4306 048a 53       		.byte	0x53
 4307 048b DE000000 		.4byte	.LVL105
 4308 048f E0000000 		.4byte	.LVL106
 4309 0493 0400     		.2byte	0x4
 4310 0495 72       		.byte	0x72
 4311 0496 00       		.sleb128 0
 4312 0497 06       		.byte	0x6
 4313 0498 9F       		.byte	0x9f
 4314 0499 E0000000 		.4byte	.LVL106
 4315 049d E2000000 		.4byte	.LVL107
 4316 04a1 0700     		.2byte	0x7
 4317 04a3 0C       		.byte	0xc
 4318 04a4 28FF0B40 		.4byte	0x400bff28
 4319 04a8 06       		.byte	0x6
 4320 04a9 9F       		.byte	0x9f
 4321 04aa 00000000 		.4byte	0
 4322 04ae 00000000 		.4byte	0
 4323              	.LLST34:
 4324 04b2 12000000 		.4byte	.LVL82
 4325 04b6 AA000000 		.4byte	.LVL98
 4326 04ba 0200     		.2byte	0x2
 4327 04bc 91       		.byte	0x91
 4328 04bd 5C       		.sleb128 -36
 4329 04be B4000000 		.4byte	.LVL100
 4330 04c2 BC000000 		.4byte	.LVL101
 4331 04c6 0200     		.2byte	0x2
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 132


 4332 04c8 91       		.byte	0x91
 4333 04c9 5C       		.sleb128 -36
 4334 04ca 02010000 		.4byte	.LVL110
 4335 04ce 08010000 		.4byte	.LVL111
 4336 04d2 0200     		.2byte	0x2
 4337 04d4 91       		.byte	0x91
 4338 04d5 5C       		.sleb128 -36
 4339 04d6 00000000 		.4byte	0
 4340 04da 00000000 		.4byte	0
 4341              	.LLST35:
 4342 04de 00000000 		.4byte	.LVL114
 4343 04e2 14000000 		.4byte	.LVL115
 4344 04e6 0100     		.2byte	0x1
 4345 04e8 50       		.byte	0x50
 4346 04e9 14000000 		.4byte	.LVL115
 4347 04ed 18000000 		.4byte	.LVL116
 4348 04f1 0100     		.2byte	0x1
 4349 04f3 53       		.byte	0x53
 4350 04f4 18000000 		.4byte	.LVL116
 4351 04f8 44000000 		.4byte	.LFE7
 4352 04fc 0400     		.2byte	0x4
 4353 04fe F3       		.byte	0xf3
 4354 04ff 01       		.uleb128 0x1
 4355 0500 50       		.byte	0x50
 4356 0501 9F       		.byte	0x9f
 4357 0502 00000000 		.4byte	0
 4358 0506 00000000 		.4byte	0
 4359              	.LLST36:
 4360 050a 00000000 		.4byte	.LVL119
 4361 050e 1A000000 		.4byte	.LVL120
 4362 0512 0100     		.2byte	0x1
 4363 0514 50       		.byte	0x50
 4364 0515 1A000000 		.4byte	.LVL120
 4365 0519 4C000000 		.4byte	.LFE29
 4366 051d 0400     		.2byte	0x4
 4367 051f F3       		.byte	0xf3
 4368 0520 01       		.uleb128 0x1
 4369 0521 50       		.byte	0x50
 4370 0522 9F       		.byte	0x9f
 4371 0523 00000000 		.4byte	0
 4372 0527 00000000 		.4byte	0
 4373              	.LLST37:
 4374 052b 00000000 		.4byte	.LVL124
 4375 052f 02000000 		.4byte	.LVL125
 4376 0533 0100     		.2byte	0x1
 4377 0535 50       		.byte	0x50
 4378 0536 02000000 		.4byte	.LVL125
 4379 053a 10000000 		.4byte	.LFE36
 4380 053e 0400     		.2byte	0x4
 4381 0540 F3       		.byte	0xf3
 4382 0541 01       		.uleb128 0x1
 4383 0542 50       		.byte	0x50
 4384 0543 9F       		.byte	0x9f
 4385 0544 00000000 		.4byte	0
 4386 0548 00000000 		.4byte	0
 4387              	.LLST38:
 4388 054c 0C000000 		.4byte	.LVL127
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 133


 4389 0550 1C000000 		.4byte	.LVL130
 4390 0554 0100     		.2byte	0x1
 4391 0556 54       		.byte	0x54
 4392 0557 1E000000 		.4byte	.LVL131
 4393 055b 22000000 		.4byte	.LVL132
 4394 055f 0100     		.2byte	0x1
 4395 0561 54       		.byte	0x54
 4396 0562 00000000 		.4byte	0
 4397 0566 00000000 		.4byte	0
 4398              	.LLST39:
 4399 056a 02000000 		.4byte	.LVL133
 4400 056e 06000000 		.4byte	.LVL134
 4401 0572 0200     		.2byte	0x2
 4402 0574 30       		.byte	0x30
 4403 0575 9F       		.byte	0x9f
 4404 0576 06000000 		.4byte	.LVL134
 4405 057a 1B000000 		.4byte	.LVL136-1
 4406 057e 0100     		.2byte	0x1
 4407 0580 53       		.byte	0x53
 4408 0581 00000000 		.4byte	0
 4409 0585 00000000 		.4byte	0
 4410              	.LLST40:
 4411 0589 00000000 		.4byte	.LVL143
 4412 058d 06000000 		.4byte	.LVL144
 4413 0591 0100     		.2byte	0x1
 4414 0593 50       		.byte	0x50
 4415 0594 06000000 		.4byte	.LVL144
 4416 0598 10000000 		.4byte	.LFE41
 4417 059c 0400     		.2byte	0x4
 4418 059e F3       		.byte	0xf3
 4419 059f 01       		.uleb128 0x1
 4420 05a0 50       		.byte	0x50
 4421 05a1 9F       		.byte	0x9f
 4422 05a2 00000000 		.4byte	0
 4423 05a6 00000000 		.4byte	0
 4424              	.LLST41:
 4425 05aa 00000000 		.4byte	.LVL145
 4426 05ae 02000000 		.4byte	.LVL146
 4427 05b2 0100     		.2byte	0x1
 4428 05b4 50       		.byte	0x50
 4429 05b5 02000000 		.4byte	.LVL146
 4430 05b9 0C000000 		.4byte	.LFE42
 4431 05bd 0400     		.2byte	0x4
 4432 05bf F3       		.byte	0xf3
 4433 05c0 01       		.uleb128 0x1
 4434 05c1 50       		.byte	0x50
 4435 05c2 9F       		.byte	0x9f
 4436 05c3 00000000 		.4byte	0
 4437 05c7 00000000 		.4byte	0
 4438              		.section	.debug_aranges,"",%progbits
 4439 0000 7C010000 		.4byte	0x17c
 4440 0004 0200     		.2byte	0x2
 4441 0006 00000000 		.4byte	.Ldebug_info0
 4442 000a 04       		.byte	0x4
 4443 000b 00       		.byte	0
 4444 000c 0000     		.2byte	0
 4445 000e 0000     		.2byte	0
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 134


 4446 0010 00000000 		.4byte	.LFB0
 4447 0014 14000000 		.4byte	.LFE0-.LFB0
 4448 0018 00000000 		.4byte	.LFB1
 4449 001c 10000000 		.4byte	.LFE1-.LFB1
 4450 0020 00000000 		.4byte	.LFB2
 4451 0024 20000000 		.4byte	.LFE2-.LFB2
 4452 0028 00000000 		.4byte	.LFB3
 4453 002c 38000000 		.4byte	.LFE3-.LFB3
 4454 0030 00000000 		.4byte	.LFB4
 4455 0034 1C000000 		.4byte	.LFE4-.LFB4
 4456 0038 00000000 		.4byte	.LFB5
 4457 003c 30000000 		.4byte	.LFE5-.LFB5
 4458 0040 00000000 		.4byte	.LFB8
 4459 0044 20000000 		.4byte	.LFE8-.LFB8
 4460 0048 00000000 		.4byte	.LFB9
 4461 004c 10000000 		.4byte	.LFE9-.LFB9
 4462 0050 00000000 		.4byte	.LFB10
 4463 0054 0C000000 		.4byte	.LFE10-.LFB10
 4464 0058 00000000 		.4byte	.LFB11
 4465 005c 14000000 		.4byte	.LFE11-.LFB11
 4466 0060 00000000 		.4byte	.LFB12
 4467 0064 10000000 		.4byte	.LFE12-.LFB12
 4468 0068 00000000 		.4byte	.LFB13
 4469 006c 0C000000 		.4byte	.LFE13-.LFB13
 4470 0070 00000000 		.4byte	.LFB20
 4471 0074 14000000 		.4byte	.LFE20-.LFB20
 4472 0078 00000000 		.4byte	.LFB21
 4473 007c 18000000 		.4byte	.LFE21-.LFB21
 4474 0080 00000000 		.4byte	.LFB22
 4475 0084 14000000 		.4byte	.LFE22-.LFB22
 4476 0088 00000000 		.4byte	.LFB23
 4477 008c 14000000 		.4byte	.LFE23-.LFB23
 4478 0090 00000000 		.4byte	.LFB24
 4479 0094 14000000 		.4byte	.LFE24-.LFB24
 4480 0098 00000000 		.4byte	.LFB25
 4481 009c 04000000 		.4byte	.LFE25-.LFB25
 4482 00a0 00000000 		.4byte	.LFB14
 4483 00a4 20000000 		.4byte	.LFE14-.LFB14
 4484 00a8 00000000 		.4byte	.LFB15
 4485 00ac 1C000000 		.4byte	.LFE15-.LFB15
 4486 00b0 00000000 		.4byte	.LFB16
 4487 00b4 22000000 		.4byte	.LFE16-.LFB16
 4488 00b8 00000000 		.4byte	.LFB17
 4489 00bc 1E000000 		.4byte	.LFE17-.LFB17
 4490 00c0 00000000 		.4byte	.LFB18
 4491 00c4 4C000000 		.4byte	.LFE18-.LFB18
 4492 00c8 00000000 		.4byte	.LFB19
 4493 00cc 2C000000 		.4byte	.LFE19-.LFB19
 4494 00d0 00000000 		.4byte	.LFB26
 4495 00d4 18000000 		.4byte	.LFE26-.LFB26
 4496 00d8 00000000 		.4byte	.LFB27
 4497 00dc 30000000 		.4byte	.LFE27-.LFB27
 4498 00e0 00000000 		.4byte	.LFB28
 4499 00e4 14000000 		.4byte	.LFE28-.LFB28
 4500 00e8 00000000 		.4byte	.LFB6
 4501 00ec 64010000 		.4byte	.LFE6-.LFB6
 4502 00f0 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 135


 4503 00f4 44000000 		.4byte	.LFE7-.LFB7
 4504 00f8 00000000 		.4byte	.LFB29
 4505 00fc 4C000000 		.4byte	.LFE29-.LFB29
 4506 0100 00000000 		.4byte	.LFB33
 4507 0104 10000000 		.4byte	.LFE33-.LFB33
 4508 0108 00000000 		.4byte	.LFB34
 4509 010c 10000000 		.4byte	.LFE34-.LFB34
 4510 0110 00000000 		.4byte	.LFB32
 4511 0114 18000000 		.4byte	.LFE32-.LFB32
 4512 0118 00000000 		.4byte	.LFB35
 4513 011c 10000000 		.4byte	.LFE35-.LFB35
 4514 0120 00000000 		.4byte	.LFB36
 4515 0124 10000000 		.4byte	.LFE36-.LFB36
 4516 0128 00000000 		.4byte	.LFB37
 4517 012c 10000000 		.4byte	.LFE37-.LFB37
 4518 0130 00000000 		.4byte	.LFB38
 4519 0134 10000000 		.4byte	.LFE38-.LFB38
 4520 0138 00000000 		.4byte	.LFB39
 4521 013c 10000000 		.4byte	.LFE39-.LFB39
 4522 0140 00000000 		.4byte	.LFB43
 4523 0144 28000000 		.4byte	.LFE43-.LFB43
 4524 0148 00000000 		.4byte	.LFB40
 4525 014c 0C000000 		.4byte	.LFE40-.LFB40
 4526 0150 00000000 		.4byte	.LFB31
 4527 0154 44000000 		.4byte	.LFE31-.LFB31
 4528 0158 00000000 		.4byte	.LFB30
 4529 015c 20000000 		.4byte	.LFE30-.LFB30
 4530 0160 00000000 		.4byte	.LFB41
 4531 0164 10000000 		.4byte	.LFE41-.LFB41
 4532 0168 00000000 		.4byte	.LFB42
 4533 016c 0C000000 		.4byte	.LFE42-.LFB42
 4534 0170 00000000 		.4byte	.LFB44
 4535 0174 70000000 		.4byte	.LFE44-.LFB44
 4536 0178 00000000 		.4byte	0
 4537 017c 00000000 		.4byte	0
 4538              		.section	.debug_ranges,"",%progbits
 4539              	.Ldebug_ranges0:
 4540 0000 00000000 		.4byte	.LFB0
 4541 0004 14000000 		.4byte	.LFE0
 4542 0008 00000000 		.4byte	.LFB1
 4543 000c 10000000 		.4byte	.LFE1
 4544 0010 00000000 		.4byte	.LFB2
 4545 0014 20000000 		.4byte	.LFE2
 4546 0018 00000000 		.4byte	.LFB3
 4547 001c 38000000 		.4byte	.LFE3
 4548 0020 00000000 		.4byte	.LFB4
 4549 0024 1C000000 		.4byte	.LFE4
 4550 0028 00000000 		.4byte	.LFB5
 4551 002c 30000000 		.4byte	.LFE5
 4552 0030 00000000 		.4byte	.LFB8
 4553 0034 20000000 		.4byte	.LFE8
 4554 0038 00000000 		.4byte	.LFB9
 4555 003c 10000000 		.4byte	.LFE9
 4556 0040 00000000 		.4byte	.LFB10
 4557 0044 0C000000 		.4byte	.LFE10
 4558 0048 00000000 		.4byte	.LFB11
 4559 004c 14000000 		.4byte	.LFE11
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 136


 4560 0050 00000000 		.4byte	.LFB12
 4561 0054 10000000 		.4byte	.LFE12
 4562 0058 00000000 		.4byte	.LFB13
 4563 005c 0C000000 		.4byte	.LFE13
 4564 0060 00000000 		.4byte	.LFB20
 4565 0064 14000000 		.4byte	.LFE20
 4566 0068 00000000 		.4byte	.LFB21
 4567 006c 18000000 		.4byte	.LFE21
 4568 0070 00000000 		.4byte	.LFB22
 4569 0074 14000000 		.4byte	.LFE22
 4570 0078 00000000 		.4byte	.LFB23
 4571 007c 14000000 		.4byte	.LFE23
 4572 0080 00000000 		.4byte	.LFB24
 4573 0084 14000000 		.4byte	.LFE24
 4574 0088 00000000 		.4byte	.LFB25
 4575 008c 04000000 		.4byte	.LFE25
 4576 0090 00000000 		.4byte	.LFB14
 4577 0094 20000000 		.4byte	.LFE14
 4578 0098 00000000 		.4byte	.LFB15
 4579 009c 1C000000 		.4byte	.LFE15
 4580 00a0 00000000 		.4byte	.LFB16
 4581 00a4 22000000 		.4byte	.LFE16
 4582 00a8 00000000 		.4byte	.LFB17
 4583 00ac 1E000000 		.4byte	.LFE17
 4584 00b0 00000000 		.4byte	.LFB18
 4585 00b4 4C000000 		.4byte	.LFE18
 4586 00b8 00000000 		.4byte	.LFB19
 4587 00bc 2C000000 		.4byte	.LFE19
 4588 00c0 00000000 		.4byte	.LFB26
 4589 00c4 18000000 		.4byte	.LFE26
 4590 00c8 00000000 		.4byte	.LFB27
 4591 00cc 30000000 		.4byte	.LFE27
 4592 00d0 00000000 		.4byte	.LFB28
 4593 00d4 14000000 		.4byte	.LFE28
 4594 00d8 00000000 		.4byte	.LFB6
 4595 00dc 64010000 		.4byte	.LFE6
 4596 00e0 00000000 		.4byte	.LFB7
 4597 00e4 44000000 		.4byte	.LFE7
 4598 00e8 00000000 		.4byte	.LFB29
 4599 00ec 4C000000 		.4byte	.LFE29
 4600 00f0 00000000 		.4byte	.LFB33
 4601 00f4 10000000 		.4byte	.LFE33
 4602 00f8 00000000 		.4byte	.LFB34
 4603 00fc 10000000 		.4byte	.LFE34
 4604 0100 00000000 		.4byte	.LFB32
 4605 0104 18000000 		.4byte	.LFE32
 4606 0108 00000000 		.4byte	.LFB35
 4607 010c 10000000 		.4byte	.LFE35
 4608 0110 00000000 		.4byte	.LFB36
 4609 0114 10000000 		.4byte	.LFE36
 4610 0118 00000000 		.4byte	.LFB37
 4611 011c 10000000 		.4byte	.LFE37
 4612 0120 00000000 		.4byte	.LFB38
 4613 0124 10000000 		.4byte	.LFE38
 4614 0128 00000000 		.4byte	.LFB39
 4615 012c 10000000 		.4byte	.LFE39
 4616 0130 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 137


 4617 0134 28000000 		.4byte	.LFE43
 4618 0138 00000000 		.4byte	.LFB40
 4619 013c 0C000000 		.4byte	.LFE40
 4620 0140 00000000 		.4byte	.LFB31
 4621 0144 44000000 		.4byte	.LFE31
 4622 0148 00000000 		.4byte	.LFB30
 4623 014c 20000000 		.4byte	.LFE30
 4624 0150 00000000 		.4byte	.LFB41
 4625 0154 10000000 		.4byte	.LFE41
 4626 0158 00000000 		.4byte	.LFB42
 4627 015c 0C000000 		.4byte	.LFE42
 4628 0160 00000000 		.4byte	.LFB44
 4629 0164 70000000 		.4byte	.LFE44
 4630 0168 00000000 		.4byte	0
 4631 016c 00000000 		.4byte	0
 4632              		.section	.debug_line,"",%progbits
 4633              	.Ldebug_line0:
 4634 0000 5C040000 		.section	.debug_str,"MS",%progbits,1
 4634      02004D00 
 4634      00000201 
 4634      FB0E0D00 
 4634      01010101 
 4635              	.LASF52:
 4636 0000 72616D56 		.ascii	"ramVectorTable\000"
 4636      6563746F 
 4636      72546162 
 4636      6C6500
 4637              	.LASF68:
 4638 000f 62675472 		.ascii	"bgTrim4\000"
 4638      696D3400 
 4639              	.LASF10:
 4640 0017 75696E74 		.ascii	"uint16\000"
 4640      313600
 4641              	.LASF39:
 4642 001e 696E7453 		.ascii	"intState\000"
 4642      74617465 
 4642      00
 4643              	.LASF25:
 4644 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4644      73436C6B 
 4644      57726974 
 4644      65486663 
 4644      6C6B4469 
 4645              	.LASF101:
 4646 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4646      73436C6B 
 4646      50756D70 
 4646      436F6E66 
 4646      696700
 4647              	.LASF51:
 4648 0053 6F6C6449 		.ascii	"oldIsr\000"
 4648      737200
 4649              	.LASF0:
 4650 005a 7369676E 		.ascii	"signed char\000"
 4650      65642063 
 4650      68617200 
 4651              	.LASF90:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 138


 4652 0066 72657456 		.ascii	"retVal\000"
 4652      616C00
 4653              	.LASF38:
 4654 006d 43794469 		.ascii	"CyDisableInts\000"
 4654      7361626C 
 4654      65496E74 
 4654      7300
 4655              	.LASF71:
 4656 007b 63757272 		.ascii	"currentImoTrim2Value\000"
 4656      656E7449 
 4656      6D6F5472 
 4656      696D3256 
 4656      616C7565 
 4657              	.LASF105:
 4658 0090 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4658      43313120 
 4658      352E342E 
 4658      31203230 
 4658      31363036 
 4659 00c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4659      20726576 
 4659      6973696F 
 4659      6E203233 
 4659      37373135 
 4660 00f6 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4660      66756E63 
 4660      74696F6E 
 4660      2D736563 
 4660      74696F6E 
 4661              	.LASF7:
 4662 011e 6C6F6E67 		.ascii	"long long unsigned int\000"
 4662      206C6F6E 
 4662      6720756E 
 4662      7369676E 
 4662      65642069 
 4663              	.LASF99:
 4664 0135 43795379 		.ascii	"CySysTickInitVar\000"
 4664      73546963 
 4664      6B496E69 
 4664      74566172 
 4664      00
 4665              	.LASF40:
 4666 0146 4379456E 		.ascii	"CyEnableInts\000"
 4666      61626C65 
 4666      496E7473 
 4666      00
 4667              	.LASF61:
 4668 0153 4379536F 		.ascii	"CySoftwareReset\000"
 4668      66747761 
 4668      72655265 
 4668      73657400 
 4669              	.LASF77:
 4670 0163 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4670      73546963 
 4670      6B456E61 
 4670      626C6549 
 4670      6E746572 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 139


 4671              	.LASF44:
 4672 017c 4379496E 		.ascii	"CyIntGetState\000"
 4672      74476574 
 4672      53746174 
 4672      6500
 4673              	.LASF6:
 4674 018a 6C6F6E67 		.ascii	"long long int\000"
 4674      206C6F6E 
 4674      6720696E 
 4674      7400
 4675              	.LASF107:
 4676 0198 443A5C65 		.ascii	"D:\\ext\\EXTPSOC\\fixed\\Fixed\\fixed.cydsn\000"
 4676      78745C45 
 4676      58545053 
 4676      4F435C66 
 4676      69786564 
 4677              	.LASF67:
 4678 01bf 66726571 		.ascii	"freq\000"
 4678      00
 4679              	.LASF75:
 4680 01c4 43794465 		.ascii	"CyDelayFreq\000"
 4680      6C617946 
 4680      72657100 
 4681              	.LASF23:
 4682 01d0 696E7465 		.ascii	"interruptState\000"
 4682      72727570 
 4682      74537461 
 4682      746500
 4683              	.LASF82:
 4684 01df 43795379 		.ascii	"CySysTickGetReload\000"
 4684      73546963 
 4684      6B476574 
 4684      52656C6F 
 4684      616400
 4685              	.LASF4:
 4686 01f2 6C6F6E67 		.ascii	"long int\000"
 4686      20696E74 
 4686      00
 4687              	.LASF45:
 4688 01fb 4379496E 		.ascii	"CyIntDisable\000"
 4688      74446973 
 4688      61626C65 
 4688      00
 4689              	.LASF91:
 4690 0208 43795379 		.ascii	"CySysTickGetCallback\000"
 4690      73546963 
 4690      6B476574 
 4690      43616C6C 
 4690      6261636B 
 4691              	.LASF9:
 4692 021d 75696E74 		.ascii	"uint8\000"
 4692      3800
 4693              	.LASF96:
 4694 0223 63796465 		.ascii	"cydelayFreqKhz\000"
 4694      6C617946 
 4694      7265714B 
 4694      687A00
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 140


 4695              	.LASF28:
 4696 0232 656E6162 		.ascii	"enable\000"
 4696      6C6500
 4697              	.LASF13:
 4698 0239 646F7562 		.ascii	"double\000"
 4698      6C6500
 4699              	.LASF58:
 4700 0240 73686966 		.ascii	"shift\000"
 4700      7400
 4701              	.LASF33:
 4702 0246 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4702      734C7664 
 4702      436C6561 
 4702      72496E74 
 4702      65727275 
 4703              	.LASF11:
 4704 025d 75696E74 		.ascii	"uint32\000"
 4704      333200
 4705              	.LASF41:
 4706 0264 6D61736B 		.ascii	"mask\000"
 4706      00
 4707              	.LASF34:
 4708 0269 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4708      73436C6B 
 4708      47657453 
 4708      7973636C 
 4708      6B536F75 
 4709              	.LASF60:
 4710 0281 4379496E 		.ascii	"CyIntGetPriority\000"
 4710      74476574 
 4710      5072696F 
 4710      72697479 
 4710      00
 4711              	.LASF98:
 4712 0292 63796465 		.ascii	"cydelay32kMs\000"
 4712      6C617933 
 4712      326B4D73 
 4712      00
 4713              	.LASF86:
 4714 029f 43795379 		.ascii	"CySysTickInit\000"
 4714      73546963 
 4714      6B496E69 
 4714      7400
 4715              	.LASF59:
 4716 02ad 76616C75 		.ascii	"value\000"
 4716      6500
 4717              	.LASF92:
 4718 02b3 43794765 		.ascii	"CyGetUniqueId\000"
 4718      74556E69 
 4718      71756549 
 4718      6400
 4719              	.LASF84:
 4720 02c1 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4720      73546963 
 4720      6B476574 
 4720      436F756E 
 4720      74466C61 
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 141


 4721              	.LASF8:
 4722 02d7 756E7369 		.ascii	"unsigned int\000"
 4722      676E6564 
 4722      20696E74 
 4722      00
 4723              	.LASF85:
 4724 02e4 43795379 		.ascii	"CySysTickClear\000"
 4724      73546963 
 4724      6B436C65 
 4724      617200
 4725              	.LASF5:
 4726 02f3 6C6F6E67 		.ascii	"long unsigned int\000"
 4726      20756E73 
 4726      69676E65 
 4726      6420696E 
 4726      7400
 4727              	.LASF81:
 4728 0305 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4728      734C7664 
 4728      47657449 
 4728      6E746572 
 4728      72757074 
 4729              	.LASF22:
 4730 0320 43795379 		.ascii	"CySysClkImoStop\000"
 4730      73436C6B 
 4730      496D6F53 
 4730      746F7000 
 4731              	.LASF102:
 4732 0330 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4732      74657243 
 4732      72697469 
 4732      63616C53 
 4732      65637469 
 4733              	.LASF46:
 4734 0347 4379496E 		.ascii	"CyIntSetPending\000"
 4734      74536574 
 4734      50656E64 
 4734      696E6700 
 4735              	.LASF35:
 4736 0357 43795379 		.ascii	"CySysGetResetReason\000"
 4736      73476574 
 4736      52657365 
 4736      74526561 
 4736      736F6E00 
 4737              	.LASF3:
 4738 036b 73686F72 		.ascii	"short unsigned int\000"
 4738      7420756E 
 4738      7369676E 
 4738      65642069 
 4738      6E7400
 4739              	.LASF54:
 4740 037e 4379496E 		.ascii	"CyIntSetVector\000"
 4740      74536574 
 4740      56656374 
 4740      6F7200
 4741              	.LASF43:
 4742 038d 6E756D62 		.ascii	"number\000"
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 142


 4742      657200
 4743              	.LASF57:
 4744 0394 7072696F 		.ascii	"priority\000"
 4744      72697479 
 4744      00
 4745              	.LASF66:
 4746 039d 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4746      73436C6B 
 4746      57726974 
 4746      65496D6F 
 4746      46726571 
 4747              	.LASF49:
 4748 03b2 4379496E 		.ascii	"CyIntSetSysVector\000"
 4748      74536574 
 4748      53797356 
 4748      6563746F 
 4748      7200
 4749              	.LASF26:
 4750 03c4 43795379 		.ascii	"CySysEnablePumpClock\000"
 4750      73456E61 
 4750      626C6550 
 4750      756D7043 
 4750      6C6F636B 
 4751              	.LASF16:
 4752 03d9 72656733 		.ascii	"reg32\000"
 4752      3200
 4753              	.LASF87:
 4754 03df 43795379 		.ascii	"CySysTickStart\000"
 4754      73546963 
 4754      6B537461 
 4754      727400
 4755              	.LASF37:
 4756 03ee 72657475 		.ascii	"returnStatus\000"
 4756      726E5374 
 4756      61747573 
 4756      00
 4757              	.LASF19:
 4758 03fb 73697A65 		.ascii	"sizetype\000"
 4758      74797065 
 4758      00
 4759              	.LASF47:
 4760 0404 4379496E 		.ascii	"CyIntClearPending\000"
 4760      74436C65 
 4760      61725065 
 4760      6E64696E 
 4760      6700
 4761              	.LASF18:
 4762 0416 6C6F6E67 		.ascii	"long double\000"
 4762      20646F75 
 4762      626C6500 
 4763              	.LASF50:
 4764 0422 61646472 		.ascii	"address\000"
 4764      65737300 
 4765              	.LASF69:
 4766 042a 62675472 		.ascii	"bgTrim5\000"
 4766      696D3500 
 4767              	.LASF29:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 143


 4768 0432 73797363 		.ascii	"sysclkSource\000"
 4768      6C6B536F 
 4768      75726365 
 4768      00
 4769              	.LASF89:
 4770 043f 66756E63 		.ascii	"function\000"
 4770      74696F6E 
 4770      00
 4771              	.LASF100:
 4772 0448 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4772      6F467265 
 4772      714D687A 
 4772      32526567 
 4772      00
 4773              	.LASF83:
 4774 0459 43795379 		.ascii	"CySysTickGetValue\000"
 4774      73546963 
 4774      6B476574 
 4774      56616C75 
 4774      6500
 4775              	.LASF95:
 4776 046b 63796465 		.ascii	"cydelayFreqHz\000"
 4776      6C617946 
 4776      72657148 
 4776      7A00
 4777              	.LASF56:
 4778 0479 4379496E 		.ascii	"CyIntSetPriority\000"
 4778      74536574 
 4778      5072696F 
 4778      72697479 
 4778      00
 4779              	.LASF12:
 4780 048a 666C6F61 		.ascii	"float\000"
 4780      7400
 4781              	.LASF103:
 4782 0490 43794578 		.ascii	"CyExitCriticalSection\000"
 4782      69744372 
 4782      69746963 
 4782      616C5365 
 4782      6374696F 
 4783              	.LASF73:
 4784 04a6 43795379 		.ascii	"CySysLvdEnable\000"
 4784      734C7664 
 4784      456E6162 
 4784      6C6500
 4785              	.LASF20:
 4786 04b5 63795379 		.ascii	"cySysTickCallback\000"
 4786      73546963 
 4786      6B43616C 
 4786      6C626163 
 4786      6B00
 4787              	.LASF55:
 4788 04c7 4379496E 		.ascii	"CyIntGetVector\000"
 4788      74476574 
 4788      56656374 
 4788      6F7200
 4789              	.LASF63:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 144


 4790 04d6 6D696C6C 		.ascii	"milliseconds\000"
 4790      69736563 
 4790      6F6E6473 
 4790      00
 4791              	.LASF104:
 4792 04e3 43794465 		.ascii	"CyDelayCycles\000"
 4792      6C617943 
 4792      79636C65 
 4792      7300
 4793              	.LASF15:
 4794 04f1 72656738 		.ascii	"reg8\000"
 4794      00
 4795              	.LASF74:
 4796 04f6 74687265 		.ascii	"threshold\000"
 4796      73686F6C 
 4796      6400
 4797              	.LASF48:
 4798 0500 43794861 		.ascii	"CyHalt\000"
 4798      6C7400
 4799              	.LASF1:
 4800 0507 756E7369 		.ascii	"unsigned char\000"
 4800      676E6564 
 4800      20636861 
 4800      7200
 4801              	.LASF2:
 4802 0515 73686F72 		.ascii	"short int\000"
 4802      7420696E 
 4802      7400
 4803              	.LASF42:
 4804 051f 4379496E 		.ascii	"CyIntEnable\000"
 4804      74456E61 
 4804      626C6500 
 4805              	.LASF53:
 4806 052b 4379496E 		.ascii	"CyIntGetSysVector\000"
 4806      74476574 
 4806      53797356 
 4806      6563746F 
 4806      7200
 4807              	.LASF27:
 4808 053d 636C6B53 		.ascii	"clkSelect\000"
 4808      656C6563 
 4808      7400
 4809              	.LASF64:
 4810 0547 43794465 		.ascii	"CyDelayUs\000"
 4810      6C617955 
 4810      7300
 4811              	.LASF36:
 4812 0551 72656173 		.ascii	"reason\000"
 4812      6F6E00
 4813              	.LASF14:
 4814 0558 63686172 		.ascii	"char\000"
 4814      00
 4815              	.LASF17:
 4816 055d 63796973 		.ascii	"cyisraddress\000"
 4816      72616464 
 4816      72657373 
 4816      00
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 145


 4817              	.LASF78:
 4818 056a 43795379 		.ascii	"CySysTickEnable\000"
 4818      73546963 
 4818      6B456E61 
 4818      626C6500 
 4819              	.LASF30:
 4820 057a 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4820      73436C6B 
 4820      57726974 
 4820      65537973 
 4820      636C6B44 
 4821              	.LASF88:
 4822 0591 43795379 		.ascii	"CySysTickSetCallback\000"
 4822      73546963 
 4822      6B536574 
 4822      43616C6C 
 4822      6261636B 
 4823              	.LASF94:
 4824 05a6 43795379 		.ascii	"CySysTickCallbacks\000"
 4824      73546963 
 4824      6B43616C 
 4824      6C626163 
 4824      6B7300
 4825              	.LASF72:
 4826 05b9 696D6F54 		.ascii	"imoTrim1Value\000"
 4826      72696D31 
 4826      56616C75 
 4826      6500
 4827              	.LASF93:
 4828 05c7 756E6971 		.ascii	"uniqueId\000"
 4828      75654964 
 4828      00
 4829              	.LASF62:
 4830 05d0 43794465 		.ascii	"CyDelay\000"
 4830      6C617900 
 4831              	.LASF79:
 4832 05d8 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4832      73546963 
 4832      6B446973 
 4832      61626C65 
 4832      496E7465 
 4833              	.LASF32:
 4834 05f2 43795379 		.ascii	"CySysLvdDisable\000"
 4834      734C7664 
 4834      44697361 
 4834      626C6500 
 4835              	.LASF97:
 4836 0602 63796465 		.ascii	"cydelayFreqMhz\000"
 4836      6C617946 
 4836      7265714D 
 4836      687A00
 4837              	.LASF76:
 4838 0611 43795379 		.ascii	"CySysTickStop\000"
 4838      73546963 
 4838      6B53746F 
 4838      7000
 4839              	.LASF31:
ARM GAS  C:\Users\Rajesh\AppData\Local\Temp\ccHLV4cS.s 			page 146


 4840 061f 64697669 		.ascii	"divider\000"
 4840      64657200 
 4841              	.LASF21:
 4842 0627 43795379 		.ascii	"CySysClkImoStart\000"
 4842      73436C6B 
 4842      496D6F53 
 4842      74617274 
 4842      00
 4843              	.LASF70:
 4844 0638 6E657749 		.ascii	"newImoTrim2Value\000"
 4844      6D6F5472 
 4844      696D3256 
 4844      616C7565 
 4844      00
 4845              	.LASF106:
 4846 0649 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4846      72617465 
 4846      645F536F 
 4846      75726365 
 4846      5C50536F 
 4847              	.LASF65:
 4848 0668 6D696372 		.ascii	"microseconds\000"
 4848      6F736563 
 4848      6F6E6473 
 4848      00
 4849              	.LASF24:
 4850 0675 746D7052 		.ascii	"tmpReg\000"
 4850      656700
 4851              	.LASF80:
 4852 067c 43795379 		.ascii	"CySysTickSetReload\000"
 4852      73546963 
 4852      6B536574 
 4852      52656C6F 
 4852      616400
 4853              	.LASF108:
 4854 068f 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4854      73546963 
 4854      6B536572 
 4854      76696365 
 4854      43616C6C 
 4855              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
