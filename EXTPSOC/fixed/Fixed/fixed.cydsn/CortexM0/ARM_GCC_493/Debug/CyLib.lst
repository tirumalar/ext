ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 124 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 4


  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
  51              	CySysClkImoStop:
  52              	.LFB1:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 140 0
  54              		.cfi_startproc
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 149 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 150 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 08010B40 		.word	1074462984
  68              		.cfi_endproc
  69              	.LFE1:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB2:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 5


 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 6


 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 7


 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 8


 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 9


 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 430 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 10


  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 434 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  90              		.loc 1 437 0
  91 0008 0449     		ldr	r1, .L8
  92 000a 0A68     		ldr	r2, [r1]
  93 000c 0723     		mov	r3, #7
  94 000e 9A43     		bic	r2, r3
  95              	.LVL2:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  96              		.loc 1 448 0
  97 0010 2340     		and	r3, r4
  98 0012 1343     		orr	r3, r2
  99              	.LVL3:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 100              		.loc 1 451 0
 101 0014 0B60     		str	r3, [r1]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 453 0
 103 0016 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL4:
 454:Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 454 0
 106              		@ sp needed
 107              	.LVL5:
 108 001a 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 001c 00010B40 		.word	1074462976
 113              		.cfi_endproc
 114              	.LFE2:
 115              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 116              		.section	.text.CySysEnablePumpClock,"ax",%progbits
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 11


 117              		.align	2
 118              		.global	CySysEnablePumpClock
 119              		.code	16
 120              		.thumb_func
 121              		.type	CySysEnablePumpClock, %function
 122              	CySysEnablePumpClock:
 123              	.LFB3:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 124              		.loc 1 474 0
 125              		.cfi_startproc
 126              	.LVL6:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 127              		.loc 1 476 0
 128 0000 C307     		lsl	r3, r0, #31
 129 0002 07D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 130              		.loc 1 478 0
 131 0004 094A     		ldr	r2, .L13
 132 0006 1168     		ldr	r1, [r2]
 133 0008 094B     		ldr	r3, .L13+4
 134 000a 1B68     		ldr	r3, [r3]
 135 000c 5B06     		lsl	r3, r3, #25
 136 000e 0B43     		orr	r3, r1
 137 0010 1360     		str	r3, [r2]
 138 0012 09E0     		b	.L10
 139              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 140              		.loc 1 482 0
 141 0014 054A     		ldr	r2, .L13
 142 0016 1368     		ldr	r3, [r2]
 143 0018 1B01     		lsl	r3, r3, #4
 144 001a 5B0F     		lsr	r3, r3, #29
 145 001c 0449     		ldr	r1, .L13+4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 12


 146 001e 0B60     		str	r3, [r1]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 147              		.loc 1 484 0
 148 0020 1168     		ldr	r1, [r2]
 149 0022 044B     		ldr	r3, .L13+8
 150 0024 0B40     		and	r3, r1
 151 0026 1360     		str	r3, [r2]
 152              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 153              		.loc 1 498 0
 154              		@ sp needed
 155 0028 7047     		bx	lr
 156              	.L14:
 157 002a C046     		.align	2
 158              	.L13:
 159 002c 08010B40 		.word	1074462984
 160 0030 00000000 		.word	.LANCHOR0
 161 0034 FFFFFFF1 		.word	-234881025
 162              		.cfi_endproc
 163              	.LFE3:
 164              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 165              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 166              		.align	2
 167              		.global	CySysClkGetSysclkSource
 168              		.code	16
 169              		.thumb_func
 170              		.type	CySysClkGetSysclkSource, %function
 171              	CySysClkGetSysclkSource:
 172              	.LFB4:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 173              		.loc 1 511 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 13


 174              		.cfi_startproc
 175 0000 10B5     		push	{r4, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 179              		.loc 1 515 0
 180 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 181              	.LVL7:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 182              		.loc 1 525 0
 183 0006 044B     		ldr	r3, .L16
 184 0008 1B68     		ldr	r3, [r3]
 185 000a 0724     		mov	r4, #7
 186 000c 1C40     		and	r4, r3
 187              	.LVL8:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 188              		.loc 1 528 0
 189 000e FFF7FEFF 		bl	CyExitCriticalSection
 190              	.LVL9:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 191              		.loc 1 531 0
 192 0012 201C     		mov	r0, r4
 193              		@ sp needed
 194              	.LVL10:
 195 0014 10BD     		pop	{r4, pc}
 196              	.L17:
 197 0016 C046     		.align	2
 198              	.L16:
 199 0018 00010B40 		.word	1074462976
 200              		.cfi_endproc
 201              	.LFE4:
 202              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 203              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 204              		.align	2
 205              		.global	CySysClkWriteSysclkDiv
 206              		.code	16
 207              		.thumb_func
 208              		.type	CySysClkWriteSysclkDiv, %function
 209              	CySysClkWriteSysclkDiv:
 210              	.LFB5:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 14


 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 211              		.loc 1 566 0
 212              		.cfi_startproc
 213              	.LVL11:
 214 0000 10B5     		push	{r4, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 218 0002 041C     		mov	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 219              		.loc 1 569 0
 220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL12:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 222              		.loc 1 571 0
 223 0008 0723     		mov	r3, #7
 224 000a 1C40     		and	r4, r3
 225              	.LVL13:
 226 000c E404     		lsl	r4, r4, #19
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 15


 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 227              		.loc 1 573 0
 228 000e 0449     		ldr	r1, .L19
 229 0010 0B68     		ldr	r3, [r1]
 230 0012 044A     		ldr	r2, .L19+4
 231 0014 1340     		and	r3, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 232              		.loc 1 572 0
 233 0016 2343     		orr	r3, r4
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 234              		.loc 1 571 0
 235 0018 0B60     		str	r3, [r1]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 236              		.loc 1 576 0
 237 001a FFF7FEFF 		bl	CyExitCriticalSection
 238              	.LVL14:
 577:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 577 0
 240              		@ sp needed
 241 001e 10BD     		pop	{r4, pc}
 242              	.L20:
 243              		.align	2
 244              	.L19:
 245 0020 00010B40 		.word	1074462976
 246 0024 FFFFC7FF 		.word	-3670017
 247              		.cfi_endproc
 248              	.LFE5:
 249              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 250              		.section	.text.CySysLvdDisable,"ax",%progbits
 251              		.align	2
 252              		.global	CySysLvdDisable
 253              		.code	16
 254              		.thumb_func
 255              		.type	CySysLvdDisable, %function
 256              	CySysLvdDisable:
 257              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 16


 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 17


 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 18


 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 19


 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 20


 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 21


 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 22


 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 23


 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 24


1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 25


1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 26


1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 27


1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 28


1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 29


1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 30


1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 31


1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 32


1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 33


1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 34


1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 35


1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 36


1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 37


1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 38


1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 39


1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 40


1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 41


2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 42


2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 43


2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 258              		.loc 1 2149 0
 259              		.cfi_startproc
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 260              		.loc 1 2150 0
 261 0000 054A     		ldr	r2, .L22
 262 0002 1368     		ldr	r3, [r2]
 263 0004 0221     		mov	r1, #2
 264 0006 8B43     		bic	r3, r1
 265 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 266              		.loc 1 2151 0
 267 000a 044A     		ldr	r2, .L22+4
 268 000c 1368     		ldr	r3, [r2]
 269 000e 0139     		sub	r1, r1, #1
 270 0010 8B43     		bic	r3, r1
 271 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 272              		.loc 1 2152 0
 273              		@ sp needed
 274 0014 7047     		bx	lr
 275              	.L23:
 276 0016 C046     		.align	2
 277              	.L22:
 278 0018 08000B40 		.word	1074462728
 279 001c 18000B40 		.word	1074462744
 280              		.cfi_endproc
 281              	.LFE8:
 282              		.size	CySysLvdDisable, .-CySysLvdDisable
 283              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 284              		.align	2
 285              		.global	CySysLvdGetInterruptSource
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysLvdGetInterruptSource, %function
 289              	CySysLvdGetInterruptSource:
 290              	.LFB9:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 44


2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 291              		.loc 1 2167 0
 292              		.cfi_startproc
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 293              		.loc 1 2168 0
 294 0000 024B     		ldr	r3, .L25
 295 0002 1B68     		ldr	r3, [r3]
 296 0004 0220     		mov	r0, #2
 297 0006 1840     		and	r0, r3
2169:Generated_Source\PSoC4/CyLib.c ****     }
 298              		.loc 1 2169 0
 299              		@ sp needed
 300 0008 7047     		bx	lr
 301              	.L26:
 302 000a C046     		.align	2
 303              	.L25:
 304 000c 04000B40 		.word	1074462724
 305              		.cfi_endproc
 306              	.LFE9:
 307              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 308              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 309              		.align	2
 310              		.global	CySysLvdClearInterrupt
 311              		.code	16
 312              		.thumb_func
 313              		.type	CySysLvdClearInterrupt, %function
 314              	CySysLvdClearInterrupt:
 315              	.LFB10:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 316              		.loc 1 2183 0
 317              		.cfi_startproc
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 318              		.loc 1 2184 0
 319 0000 0222     		mov	r2, #2
 320 0002 014B     		ldr	r3, .L28
 321 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 45


 322              		.loc 1 2185 0
 323              		@ sp needed
 324 0006 7047     		bx	lr
 325              	.L29:
 326              		.align	2
 327              	.L28:
 328 0008 04000B40 		.word	1074462724
 329              		.cfi_endproc
 330              	.LFE10:
 331              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 332              		.section	.text.CySysGetResetReason,"ax",%progbits
 333              		.align	2
 334              		.global	CySysGetResetReason
 335              		.code	16
 336              		.thumb_func
 337              		.type	CySysGetResetReason, %function
 338              	CySysGetResetReason:
 339              	.LFB11:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 340              		.loc 1 2209 0
 341              		.cfi_startproc
 342              	.LVL15:
 343 0000 021C     		mov	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 344              		.loc 1 2212 0
 345 0002 1920     		mov	r0, #25
 346              	.LVL16:
 347 0004 0240     		and	r2, r0
 348              	.LVL17:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 349              		.loc 1 2213 0
 350 0006 0249     		ldr	r1, .L31
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 46


 351 0008 0B68     		ldr	r3, [r1]
 352 000a 1840     		and	r0, r3
 353              	.LVL18:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 354              		.loc 1 2215 0
 355 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 356              		.loc 1 2218 0
 357              		@ sp needed
 358 000e 7047     		bx	lr
 359              	.L32:
 360              		.align	2
 361              	.L31:
 362 0010 00030B40 		.word	1074463488
 363              		.cfi_endproc
 364              	.LFE11:
 365              		.size	CySysGetResetReason, .-CySysGetResetReason
 366              		.section	.text.CyDisableInts,"ax",%progbits
 367              		.align	2
 368              		.global	CyDisableInts
 369              		.code	16
 370              		.thumb_func
 371              		.type	CyDisableInts, %function
 372              	CyDisableInts:
 373              	.LFB12:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 374              		.loc 1 2232 0
 375              		.cfi_startproc
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 376              		.loc 1 2236 0
 377 0000 024B     		ldr	r3, .L34
 378 0002 1868     		ldr	r0, [r3]
 379              	.LVL19:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 380              		.loc 1 2239 0
 381 0004 0122     		mov	r2, #1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 47


 382 0006 5242     		neg	r2, r2
 383 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 384              		.loc 1 2242 0
 385              		@ sp needed
 386 000a 7047     		bx	lr
 387              	.L35:
 388              		.align	2
 389              	.L34:
 390 000c 80E100E0 		.word	-536813184
 391              		.cfi_endproc
 392              	.LFE12:
 393              		.size	CyDisableInts, .-CyDisableInts
 394              		.section	.text.CyEnableInts,"ax",%progbits
 395              		.align	2
 396              		.global	CyEnableInts
 397              		.code	16
 398              		.thumb_func
 399              		.type	CyEnableInts, %function
 400              	CyEnableInts:
 401              	.LFB13:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 402              		.loc 1 2255 0
 403              		.cfi_startproc
 404              	.LVL20:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 405              		.loc 1 2256 0
 406 0000 014B     		ldr	r3, .L37
 407 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 408              		.loc 1 2257 0
 409              		@ sp needed
 410 0004 7047     		bx	lr
 411              	.L38:
 412 0006 C046     		.align	2
 413              	.L37:
 414 0008 00E100E0 		.word	-536813312
 415              		.cfi_endproc
 416              	.LFE13:
 417              		.size	CyEnableInts, .-CyEnableInts
 418              		.section	.text.CyIntEnable,"ax",%progbits
 419              		.align	2
 420              		.global	CyIntEnable
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 48


 421              		.code	16
 422              		.thumb_func
 423              		.type	CyIntEnable, %function
 424              	CyIntEnable:
 425              	.LFB20:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 49


2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 50


2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 51


2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 426              		.loc 1 2438 0
 427              		.cfi_startproc
 428              	.LVL21:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 429              		.loc 1 2439 0
 430 0000 1F23     		mov	r3, #31
 431 0002 1840     		and	r0, r3
 432              	.LVL22:
 433 0004 1E3B     		sub	r3, r3, #30
 434 0006 8340     		lsl	r3, r3, r0
 435 0008 181C     		mov	r0, r3
 436 000a 014B     		ldr	r3, .L40
 437 000c 1860     		str	r0, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 438              		.loc 1 2440 0
 439              		@ sp needed
 440 000e 7047     		bx	lr
 441              	.L41:
 442              		.align	2
 443              	.L40:
 444 0010 00E100E0 		.word	-536813312
 445              		.cfi_endproc
 446              	.LFE20:
 447              		.size	CyIntEnable, .-CyIntEnable
 448              		.section	.text.CyIntGetState,"ax",%progbits
 449              		.align	2
 450              		.global	CyIntGetState
 451              		.code	16
 452              		.thumb_func
 453              		.type	CyIntGetState, %function
 454              	CyIntGetState:
 455              	.LFB21:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 52


2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 456              		.loc 1 2456 0
 457              		.cfi_startproc
 458              	.LVL23:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 459              		.loc 1 2458 0
 460 0000 044B     		ldr	r3, .L43
 461 0002 1B68     		ldr	r3, [r3]
 462 0004 1F22     		mov	r2, #31
 463 0006 1040     		and	r0, r2
 464              	.LVL24:
 465 0008 C340     		lsr	r3, r3, r0
 466 000a 181C     		mov	r0, r3
 467 000c 0123     		mov	r3, #1
 468 000e 1840     		and	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 469              		.loc 1 2459 0
 470              		@ sp needed
 471 0010 7047     		bx	lr
 472              	.L44:
 473 0012 C046     		.align	2
 474              	.L43:
 475 0014 00E100E0 		.word	-536813312
 476              		.cfi_endproc
 477              	.LFE21:
 478              		.size	CyIntGetState, .-CyIntGetState
 479              		.section	.text.CyIntDisable,"ax",%progbits
 480              		.align	2
 481              		.global	CyIntDisable
 482              		.code	16
 483              		.thumb_func
 484              		.type	CyIntDisable, %function
 485              	CyIntDisable:
 486              	.LFB22:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 487              		.loc 1 2472 0
 488              		.cfi_startproc
 489              	.LVL25:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 53


 490              		.loc 1 2473 0
 491 0000 1F23     		mov	r3, #31
 492 0002 1840     		and	r0, r3
 493              	.LVL26:
 494 0004 1E3B     		sub	r3, r3, #30
 495 0006 8340     		lsl	r3, r3, r0
 496 0008 181C     		mov	r0, r3
 497 000a 014B     		ldr	r3, .L46
 498 000c 1860     		str	r0, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 499              		.loc 1 2474 0
 500              		@ sp needed
 501 000e 7047     		bx	lr
 502              	.L47:
 503              		.align	2
 504              	.L46:
 505 0010 80E100E0 		.word	-536813184
 506              		.cfi_endproc
 507              	.LFE22:
 508              		.size	CyIntDisable, .-CyIntDisable
 509              		.section	.text.CyIntSetPending,"ax",%progbits
 510              		.align	2
 511              		.global	CyIntSetPending
 512              		.code	16
 513              		.thumb_func
 514              		.type	CyIntSetPending, %function
 515              	CyIntSetPending:
 516              	.LFB23:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 517              		.loc 1 2486 0
 518              		.cfi_startproc
 519              	.LVL27:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 520              		.loc 1 2487 0
 521 0000 1F23     		mov	r3, #31
 522 0002 1840     		and	r0, r3
 523              	.LVL28:
 524 0004 1E3B     		sub	r3, r3, #30
 525 0006 8340     		lsl	r3, r3, r0
 526 0008 181C     		mov	r0, r3
 527 000a 014B     		ldr	r3, .L49
 528 000c 1860     		str	r0, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 529              		.loc 1 2488 0
 530              		@ sp needed
 531 000e 7047     		bx	lr
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 54


 532              	.L50:
 533              		.align	2
 534              	.L49:
 535 0010 00E200E0 		.word	-536813056
 536              		.cfi_endproc
 537              	.LFE23:
 538              		.size	CyIntSetPending, .-CyIntSetPending
 539              		.section	.text.CyIntClearPending,"ax",%progbits
 540              		.align	2
 541              		.global	CyIntClearPending
 542              		.code	16
 543              		.thumb_func
 544              		.type	CyIntClearPending, %function
 545              	CyIntClearPending:
 546              	.LFB24:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 547              		.loc 1 2501 0
 548              		.cfi_startproc
 549              	.LVL29:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 550              		.loc 1 2502 0
 551 0000 1F23     		mov	r3, #31
 552 0002 1840     		and	r0, r3
 553              	.LVL30:
 554 0004 1E3B     		sub	r3, r3, #30
 555 0006 8340     		lsl	r3, r3, r0
 556 0008 181C     		mov	r0, r3
 557 000a 014B     		ldr	r3, .L52
 558 000c 1860     		str	r0, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 559              		.loc 1 2503 0
 560              		@ sp needed
 561 000e 7047     		bx	lr
 562              	.L53:
 563              		.align	2
 564              	.L52:
 565 0010 80E200E0 		.word	-536812928
 566              		.cfi_endproc
 567              	.LFE24:
 568              		.size	CyIntClearPending, .-CyIntClearPending
 569              		.section	.text.CyHalt,"ax",%progbits
 570              		.align	2
 571              		.global	CyHalt
 572              		.code	16
 573              		.thumb_func
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 55


 574              		.type	CyHalt, %function
 575              	CyHalt:
 576              	.LFB25:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 577              		.loc 1 2516 0
 578              		.cfi_startproc
 579              	.LVL31:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 580              		.loc 1 2525 0
 581              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 582 0000 01BE     		    bkpt    1
 583              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 584              		.loc 1 2529 0
 585              		.code	16
 586              		@ sp needed
 587 0002 7047     		bx	lr
 588              		.cfi_endproc
 589              	.LFE25:
 590              		.size	CyHalt, .-CyHalt
 591              		.section	.text.CyIntSetSysVector,"ax",%progbits
 592              		.align	2
 593              		.global	CyIntSetSysVector
 594              		.code	16
 595              		.thumb_func
 596              		.type	CyIntSetSysVector, %function
 597              	CyIntSetSysVector:
 598              	.LFB14:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 599              		.loc 1 2280 0
 600              		.cfi_startproc
 601              	.LVL32:
 602 0000 38B5     		push	{r3, r4, r5, lr}
 603              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 56


 604              		.cfi_offset 3, -16
 605              		.cfi_offset 4, -12
 606              		.cfi_offset 5, -8
 607              		.cfi_offset 14, -4
 608 0002 041C     		mov	r4, r0
 609 0004 0D1C     		mov	r5, r1
 610              	.LVL33:
2284:Generated_Source\PSoC4/CyLib.c **** 
 611              		.loc 1 2284 0
 612 0006 0F28     		cmp	r0, #15
 613 0008 02D9     		bls	.L56
2284:Generated_Source\PSoC4/CyLib.c **** 
 614              		.loc 1 2284 0 is_stmt 0 discriminator 1
 615 000a 0020     		mov	r0, #0
 616              	.LVL34:
 617 000c FFF7FEFF 		bl	CyHalt
 618              	.LVL35:
 619              	.L56:
2287:Generated_Source\PSoC4/CyLib.c **** 
 620              		.loc 1 2287 0 is_stmt 1
 621 0010 A400     		lsl	r4, r4, #2
 622 0012 8023     		mov	r3, #128
 623 0014 9B05     		lsl	r3, r3, #22
 624 0016 9C46     		mov	ip, r3
 625 0018 6444     		add	r4, r4, ip
 626 001a 2068     		ldr	r0, [r4]
 627              	.LVL36:
2290:Generated_Source\PSoC4/CyLib.c **** 
 628              		.loc 1 2290 0
 629 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 630              		.loc 1 2293 0
 631              		@ sp needed
 632              	.LVL37:
 633 001e 38BD     		pop	{r3, r4, r5, pc}
 634              		.cfi_endproc
 635              	.LFE14:
 636              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 637              		.section	.text.CyIntGetSysVector,"ax",%progbits
 638              		.align	2
 639              		.global	CyIntGetSysVector
 640              		.code	16
 641              		.thumb_func
 642              		.type	CyIntGetSysVector, %function
 643              	CyIntGetSysVector:
 644              	.LFB15:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 645              		.loc 1 2314 0
 646              		.cfi_startproc
 647              	.LVL38:
 648 0000 10B5     		push	{r4, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 4, -8
 651              		.cfi_offset 14, -4
 652 0002 041E     		sub	r4, r0, #0
 653              	.LVL39:
2317:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 57


 654              		.loc 1 2317 0
 655 0004 0F2C     		cmp	r4, #15
 656 0006 02D9     		bls	.L58
2317:Generated_Source\PSoC4/CyLib.c **** 
 657              		.loc 1 2317 0 is_stmt 0 discriminator 1
 658 0008 0020     		mov	r0, #0
 659              	.LVL40:
 660 000a FFF7FEFF 		bl	CyHalt
 661              	.LVL41:
 662              	.L58:
2319:Generated_Source\PSoC4/CyLib.c **** }
 663              		.loc 1 2319 0 is_stmt 1
 664 000e A400     		lsl	r4, r4, #2
 665 0010 8023     		mov	r3, #128
 666 0012 9B05     		lsl	r3, r3, #22
 667 0014 9C46     		mov	ip, r3
 668 0016 6444     		add	r4, r4, ip
 669 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 670              		.loc 1 2320 0
 671              		@ sp needed
 672 001a 10BD     		pop	{r4, pc}
 673              		.cfi_endproc
 674              	.LFE15:
 675              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 676              		.section	.text.CyIntSetVector,"ax",%progbits
 677              		.align	2
 678              		.global	CyIntSetVector
 679              		.code	16
 680              		.thumb_func
 681              		.type	CyIntSetVector, %function
 682              	CyIntSetVector:
 683              	.LFB16:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 684              		.loc 1 2336 0
 685              		.cfi_startproc
 686              	.LVL42:
 687 0000 38B5     		push	{r3, r4, r5, lr}
 688              		.cfi_def_cfa_offset 16
 689              		.cfi_offset 3, -16
 690              		.cfi_offset 4, -12
 691              		.cfi_offset 5, -8
 692              		.cfi_offset 14, -4
 693 0002 041C     		mov	r4, r0
 694 0004 0D1C     		mov	r5, r1
 695              	.LVL43:
2340:Generated_Source\PSoC4/CyLib.c **** 
 696              		.loc 1 2340 0
 697 0006 1F28     		cmp	r0, #31
 698 0008 02D9     		bls	.L60
2340:Generated_Source\PSoC4/CyLib.c **** 
 699              		.loc 1 2340 0 is_stmt 0 discriminator 1
 700 000a 0020     		mov	r0, #0
 701              	.LVL44:
 702 000c FFF7FEFF 		bl	CyHalt
 703              	.LVL45:
 704              	.L60:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 58


2343:Generated_Source\PSoC4/CyLib.c **** 
 705              		.loc 1 2343 0 is_stmt 1
 706 0010 A400     		lsl	r4, r4, #2
 707 0012 034B     		ldr	r3, .L61
 708 0014 9C46     		mov	ip, r3
 709 0016 6444     		add	r4, r4, ip
 710 0018 2068     		ldr	r0, [r4]
 711              	.LVL46:
2346:Generated_Source\PSoC4/CyLib.c **** 
 712              		.loc 1 2346 0
 713 001a 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 714              		.loc 1 2349 0
 715              		@ sp needed
 716              	.LVL47:
 717 001c 38BD     		pop	{r3, r4, r5, pc}
 718              	.L62:
 719 001e C046     		.align	2
 720              	.L61:
 721 0020 40000020 		.word	536870976
 722              		.cfi_endproc
 723              	.LFE16:
 724              		.size	CyIntSetVector, .-CyIntSetVector
 725              		.section	.text.CyIntGetVector,"ax",%progbits
 726              		.align	2
 727              		.global	CyIntGetVector
 728              		.code	16
 729              		.thumb_func
 730              		.type	CyIntGetVector, %function
 731              	CyIntGetVector:
 732              	.LFB17:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 733              		.loc 1 2364 0
 734              		.cfi_startproc
 735              	.LVL48:
 736 0000 10B5     		push	{r4, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 4, -8
 739              		.cfi_offset 14, -4
 740 0002 041E     		sub	r4, r0, #0
 741              	.LVL49:
2367:Generated_Source\PSoC4/CyLib.c **** 
 742              		.loc 1 2367 0
 743 0004 1F2C     		cmp	r4, #31
 744 0006 02D9     		bls	.L64
2367:Generated_Source\PSoC4/CyLib.c **** 
 745              		.loc 1 2367 0 is_stmt 0 discriminator 1
 746 0008 0020     		mov	r0, #0
 747              	.LVL50:
 748 000a FFF7FEFF 		bl	CyHalt
 749              	.LVL51:
 750              	.L64:
2369:Generated_Source\PSoC4/CyLib.c **** }
 751              		.loc 1 2369 0 is_stmt 1
 752 000e A400     		lsl	r4, r4, #2
 753 0010 024B     		ldr	r3, .L65
 754 0012 9C46     		mov	ip, r3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 59


 755 0014 6444     		add	r4, r4, ip
 756 0016 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 757              		.loc 1 2370 0
 758              		@ sp needed
 759 0018 10BD     		pop	{r4, pc}
 760              	.L66:
 761 001a C046     		.align	2
 762              	.L65:
 763 001c 40000020 		.word	536870976
 764              		.cfi_endproc
 765              	.LFE17:
 766              		.size	CyIntGetVector, .-CyIntGetVector
 767              		.section	.text.CyIntSetPriority,"ax",%progbits
 768              		.align	2
 769              		.global	CyIntSetPriority
 770              		.code	16
 771              		.thumb_func
 772              		.type	CyIntSetPriority, %function
 773              	CyIntSetPriority:
 774              	.LFB18:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 775              		.loc 1 2383 0
 776              		.cfi_startproc
 777              	.LVL52:
 778 0000 70B5     		push	{r4, r5, r6, lr}
 779              		.cfi_def_cfa_offset 16
 780              		.cfi_offset 4, -16
 781              		.cfi_offset 5, -12
 782              		.cfi_offset 6, -8
 783              		.cfi_offset 14, -4
 784 0002 041C     		mov	r4, r0
 785 0004 0E1E     		sub	r6, r1, #0
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 786              		.loc 1 2388 0
 787 0006 032E     		cmp	r6, #3
 788 0008 02D9     		bls	.L68
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 789              		.loc 1 2388 0 is_stmt 0 discriminator 1
 790 000a 0020     		mov	r0, #0
 791              	.LVL53:
 792 000c FFF7FEFF 		bl	CyHalt
 793              	.LVL54:
 794              	.L68:
2389:Generated_Source\PSoC4/CyLib.c **** 
 795              		.loc 1 2389 0 is_stmt 1
 796 0010 1F2C     		cmp	r4, #31
 797 0012 02D9     		bls	.L69
2389:Generated_Source\PSoC4/CyLib.c **** 
 798              		.loc 1 2389 0 is_stmt 0 discriminator 1
 799 0014 0020     		mov	r0, #0
 800 0016 FFF7FEFF 		bl	CyHalt
 801              	.LVL55:
 802              	.L69:
2391:Generated_Source\PSoC4/CyLib.c **** 
 803              		.loc 1 2391 0 is_stmt 1
 804 001a 0325     		mov	r5, #3
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 60


 805 001c 2540     		and	r5, r4
 806 001e ED00     		lsl	r5, r5, #3
 807 0020 0635     		add	r5, r5, #6
 808              	.LVL56:
2393:Generated_Source\PSoC4/CyLib.c **** 
 809              		.loc 1 2393 0
 810 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 811              	.LVL57:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 812              		.loc 1 2395 0
 813 0026 A408     		lsr	r4, r4, #2
 814 0028 A400     		lsl	r4, r4, #2
 815 002a 074B     		ldr	r3, .L70
 816 002c 9C46     		mov	ip, r3
 817 002e 6444     		add	r4, r4, ip
 818 0030 2368     		ldr	r3, [r4]
 819              	.LVL58:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 820              		.loc 1 2396 0
 821 0032 0322     		mov	r2, #3
 822 0034 AA40     		lsl	r2, r2, r5
 823 0036 9343     		bic	r3, r2
 824              	.LVL59:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 825              		.loc 1 2397 0
 826 0038 AE40     		lsl	r6, r6, r5
 827 003a 351C     		mov	r5, r6
 828              	.LVL60:
 829 003c 1D43     		orr	r5, r3
 830              	.LVL61:
2398:Generated_Source\PSoC4/CyLib.c **** 
 831              		.loc 1 2398 0
 832 003e 2560     		str	r5, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 833              		.loc 1 2400 0
 834 0040 FFF7FEFF 		bl	CyExitCriticalSection
 835              	.LVL62:
2401:Generated_Source\PSoC4/CyLib.c **** 
 836              		.loc 1 2401 0
 837              		@ sp needed
 838              	.LVL63:
 839 0044 70BD     		pop	{r4, r5, r6, pc}
 840              	.L71:
 841 0046 C046     		.align	2
 842              	.L70:
 843 0048 00E400E0 		.word	-536812544
 844              		.cfi_endproc
 845              	.LFE18:
 846              		.size	CyIntSetPriority, .-CyIntSetPriority
 847              		.section	.text.CyIntGetPriority,"ax",%progbits
 848              		.align	2
 849              		.global	CyIntGetPriority
 850              		.code	16
 851              		.thumb_func
 852              		.type	CyIntGetPriority, %function
 853              	CyIntGetPriority:
 854              	.LFB19:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 61


2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 855              		.loc 1 2417 0
 856              		.cfi_startproc
 857              	.LVL64:
 858 0000 10B5     		push	{r4, lr}
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 4, -8
 861              		.cfi_offset 14, -4
 862 0002 041E     		sub	r4, r0, #0
2420:Generated_Source\PSoC4/CyLib.c **** 
 863              		.loc 1 2420 0
 864 0004 1F2C     		cmp	r4, #31
 865 0006 02D9     		bls	.L73
2420:Generated_Source\PSoC4/CyLib.c **** 
 866              		.loc 1 2420 0 is_stmt 0 discriminator 1
 867 0008 0020     		mov	r0, #0
 868              	.LVL65:
 869 000a FFF7FEFF 		bl	CyHalt
 870              	.LVL66:
 871              	.L73:
2422:Generated_Source\PSoC4/CyLib.c **** 
 872              		.loc 1 2422 0 is_stmt 1
 873 000e A308     		lsr	r3, r4, #2
 874 0010 9B00     		lsl	r3, r3, #2
 875 0012 054A     		ldr	r2, .L74
 876 0014 9446     		mov	ip, r2
 877 0016 6344     		add	r3, r3, ip
 878 0018 1868     		ldr	r0, [r3]
 879 001a 0323     		mov	r3, #3
 880 001c 1C40     		and	r4, r3
 881 001e E400     		lsl	r4, r4, #3
 882 0020 0634     		add	r4, r4, #6
 883 0022 E040     		lsr	r0, r0, r4
 884              	.LVL67:
2424:Generated_Source\PSoC4/CyLib.c **** }
 885              		.loc 1 2424 0
 886 0024 1840     		and	r0, r3
 887              	.LVL68:
2425:Generated_Source\PSoC4/CyLib.c **** 
 888              		.loc 1 2425 0
 889              		@ sp needed
 890 0026 10BD     		pop	{r4, pc}
 891              	.L75:
 892              		.align	2
 893              	.L74:
 894 0028 00E400E0 		.word	-536812544
 895              		.cfi_endproc
 896              	.LFE19:
 897              		.size	CyIntGetPriority, .-CyIntGetPriority
 898              		.section	.text.CySoftwareReset,"ax",%progbits
 899              		.align	2
 900              		.global	CySoftwareReset
 901              		.code	16
 902              		.thumb_func
 903              		.type	CySoftwareReset, %function
 904              	CySoftwareReset:
 905              	.LFB26:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 62


2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 906              		.loc 1 2540 0
 907              		.cfi_startproc
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 908              		.loc 1 2545 0
 909 0000 034A     		ldr	r2, .L77
 910 0002 1368     		ldr	r3, [r2]
 911 0004 1B04     		lsl	r3, r3, #16
 912 0006 1B0C     		lsr	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 913              		.loc 1 2546 0
 914 0008 0249     		ldr	r1, .L77+4
 915 000a 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 916              		.loc 1 2545 0
 917 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 918              		.loc 1 2547 0
 919              		@ sp needed
 920 000e 7047     		bx	lr
 921              	.L78:
 922              		.align	2
 923              	.L77:
 924 0010 0CED00E0 		.word	-536810228
 925 0014 0400FA05 		.word	100270084
 926              		.cfi_endproc
 927              	.LFE26:
 928              		.size	CySoftwareReset, .-CySoftwareReset
 929              		.section	.text.CyDelay,"ax",%progbits
 930              		.align	2
 931              		.global	CyDelay
 932              		.code	16
 933              		.thumb_func
 934              		.type	CyDelay, %function
 935              	CyDelay:
 936              	.LFB27:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 63


2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 937              		.loc 1 2560 0
 938              		.cfi_startproc
 939              	.LVL69:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 945              		.loc 1 2561 0
 946 0004 06E0     		b	.L80
 947              	.LVL70:
 948              	.L81:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 949              		.loc 1 2566 0
 950 0006 084B     		ldr	r3, .L82
 951 0008 5868     		ldr	r0, [r3, #4]
 952 000a FFF7FEFF 		bl	CyDelayCycles
 953              	.LVL71:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 954              		.loc 1 2567 0
 955 000e 074B     		ldr	r3, .L82+4
 956 0010 9C46     		mov	ip, r3
 957 0012 6444     		add	r4, r4, ip
 958              	.LVL72:
 959              	.L80:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 960              		.loc 1 2561 0
 961 0014 8023     		mov	r3, #128
 962 0016 1B02     		lsl	r3, r3, #8
 963 0018 9C42     		cmp	r4, r3
 964 001a F4D8     		bhi	.L81
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 965              		.loc 1 2570 0
 966 001c 024B     		ldr	r3, .L82
 967 001e 9868     		ldr	r0, [r3, #8]
 968 0020 6043     		mul	r0, r4
 969 0022 FFF7FEFF 		bl	CyDelayCycles
 970              	.LVL73:
2571:Generated_Source\PSoC4/CyLib.c **** }
 971              		.loc 1 2571 0
 972              		@ sp needed
 973              	.LVL74:
 974 0026 10BD     		pop	{r4, pc}
 975              	.L83:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 64


 976              		.align	2
 977              	.L82:
 978 0028 00000000 		.word	.LANCHOR0
 979 002c 0080FFFF 		.word	-32768
 980              		.cfi_endproc
 981              	.LFE27:
 982              		.size	CyDelay, .-CyDelay
 983              		.section	.text.CyDelayUs,"ax",%progbits
 984              		.align	2
 985              		.global	CyDelayUs
 986              		.code	16
 987              		.thumb_func
 988              		.type	CyDelayUs, %function
 989              	CyDelayUs:
 990              	.LFB28:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 991              		.loc 1 2583 0
 992              		.cfi_startproc
 993              	.LVL75:
 994 0000 08B5     		push	{r3, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 3, -8
 997              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 998              		.loc 1 2584 0
 999 0002 034B     		ldr	r3, .L85
 1000 0004 1B7B     		ldrb	r3, [r3, #12]
 1001 0006 5843     		mul	r0, r3
 1002              	.LVL76:
 1003 0008 FFF7FEFF 		bl	CyDelayCycles
 1004              	.LVL77:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1005              		.loc 1 2585 0
 1006              		@ sp needed
 1007 000c 08BD     		pop	{r3, pc}
 1008              	.L86:
 1009 000e C046     		.align	2
 1010              	.L85:
 1011 0010 00000000 		.word	.LANCHOR0
 1012              		.cfi_endproc
 1013              	.LFE28:
 1014              		.size	CyDelayUs, .-CyDelayUs
 1015              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1016              		.align	2
 1017              		.global	CySysClkWriteImoFreq
 1018              		.code	16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 65


 1019              		.thumb_func
 1020              		.type	CySysClkWriteImoFreq, %function
 1021              	CySysClkWriteImoFreq:
 1022              	.LFB6:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1023              		.loc 1 624 0
 1024              		.cfi_startproc
 1025              	.LVL78:
 1026 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1027              		.cfi_def_cfa_offset 20
 1028              		.cfi_offset 4, -20
 1029              		.cfi_offset 5, -16
 1030              		.cfi_offset 6, -12
 1031              		.cfi_offset 7, -8
 1032              		.cfi_offset 14, -4
 1033 0002 5746     		mov	r7, r10
 1034 0004 4E46     		mov	r6, r9
 1035 0006 C0B4     		push	{r6, r7}
 1036              		.cfi_def_cfa_offset 28
 1037              		.cfi_offset 9, -28
 1038              		.cfi_offset 10, -24
 1039 0008 83B0     		sub	sp, sp, #12
 1040              		.cfi_def_cfa_offset 40
 1041 000a 041C     		mov	r4, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 1042              		.loc 1 647 0
 1043 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1044              	.LVL79:
 1045 0010 0190     		str	r0, [sp, #4]
 1046              	.LVL80:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1047              		.loc 1 697 0
 1048 0012 E71E     		sub	r7, r4, #3
 1049 0014 2D2F     		cmp	r7, #45
 1050 0016 74D8     		bhi	.L88
 699:Generated_Source\PSoC4/CyLib.c ****             {
 1051              		.loc 1 699 0
 1052 0018 3F4B     		ldr	r3, .L98
 1053 001a 1B78     		ldrb	r3, [r3]
 1054 001c DBB2     		uxtb	r3, r3
 1055 001e A342     		cmp	r3, r4
 1056 0020 08D3     		bcc	.L89
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1057              		.loc 1 701 0
 1058 0022 3E4B     		ldr	r3, .L98+4
 1059 0024 1B78     		ldrb	r3, [r3]
 1060 0026 DBB2     		uxtb	r3, r3
 1061 0028 9A46     		mov	r10, r3
 1062              	.LVL81:
 702:Generated_Source\PSoC4/CyLib.c ****             }
 1063              		.loc 1 702 0
 1064 002a 3D4B     		ldr	r3, .L98+8
 1065 002c 1B78     		ldrb	r3, [r3]
 1066 002e DBB2     		uxtb	r3, r3
 1067 0030 9946     		mov	r9, r3
 1068              	.LVL82:
 1069 0032 31E0     		b	.L90
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 66


 1070              	.LVL83:
 1071              	.L89:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 1072              		.loc 1 704 0
 1073 0034 3B4B     		ldr	r3, .L98+12
 1074 0036 1B78     		ldrb	r3, [r3]
 1075 0038 DBB2     		uxtb	r3, r3
 1076 003a A342     		cmp	r3, r4
 1077 003c 08D3     		bcc	.L91
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1078              		.loc 1 706 0
 1079 003e 3A4B     		ldr	r3, .L98+16
 1080 0040 1B78     		ldrb	r3, [r3]
 1081 0042 DBB2     		uxtb	r3, r3
 1082 0044 9A46     		mov	r10, r3
 1083              	.LVL84:
 707:Generated_Source\PSoC4/CyLib.c ****             }
 1084              		.loc 1 707 0
 1085 0046 394B     		ldr	r3, .L98+20
 1086 0048 1B78     		ldrb	r3, [r3]
 1087 004a DBB2     		uxtb	r3, r3
 1088 004c 9946     		mov	r9, r3
 1089              	.LVL85:
 1090 004e 23E0     		b	.L90
 1091              	.LVL86:
 1092              	.L91:
 709:Generated_Source\PSoC4/CyLib.c ****             {
 1093              		.loc 1 709 0
 1094 0050 374B     		ldr	r3, .L98+24
 1095 0052 1B78     		ldrb	r3, [r3]
 1096 0054 DBB2     		uxtb	r3, r3
 1097 0056 A342     		cmp	r3, r4
 1098 0058 08D3     		bcc	.L92
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1099              		.loc 1 711 0
 1100 005a 364B     		ldr	r3, .L98+28
 1101 005c 1B78     		ldrb	r3, [r3]
 1102 005e DBB2     		uxtb	r3, r3
 1103 0060 9A46     		mov	r10, r3
 1104              	.LVL87:
 712:Generated_Source\PSoC4/CyLib.c ****             }
 1105              		.loc 1 712 0
 1106 0062 354B     		ldr	r3, .L98+32
 1107 0064 1B78     		ldrb	r3, [r3]
 1108 0066 DBB2     		uxtb	r3, r3
 1109 0068 9946     		mov	r9, r3
 1110              	.LVL88:
 1111 006a 15E0     		b	.L90
 1112              	.LVL89:
 1113              	.L92:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 1114              		.loc 1 714 0
 1115 006c 334B     		ldr	r3, .L98+36
 1116 006e 1B78     		ldrb	r3, [r3]
 1117 0070 DBB2     		uxtb	r3, r3
 1118 0072 A342     		cmp	r3, r4
 1119 0074 08D3     		bcc	.L93
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 67


 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1120              		.loc 1 716 0
 1121 0076 324B     		ldr	r3, .L98+40
 1122 0078 1B78     		ldrb	r3, [r3]
 1123 007a DBB2     		uxtb	r3, r3
 1124 007c 9A46     		mov	r10, r3
 1125              	.LVL90:
 717:Generated_Source\PSoC4/CyLib.c ****             }
 1126              		.loc 1 717 0
 1127 007e 314B     		ldr	r3, .L98+44
 1128 0080 1B78     		ldrb	r3, [r3]
 1129 0082 DBB2     		uxtb	r3, r3
 1130 0084 9946     		mov	r9, r3
 1131              	.LVL91:
 1132 0086 07E0     		b	.L90
 1133              	.LVL92:
 1134              	.L93:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1135              		.loc 1 721 0
 1136 0088 2F4B     		ldr	r3, .L98+48
 1137 008a 1B78     		ldrb	r3, [r3]
 1138 008c DBB2     		uxtb	r3, r3
 1139 008e 9A46     		mov	r10, r3
 1140              	.LVL93:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1141              		.loc 1 722 0
 1142 0090 2E4B     		ldr	r3, .L98+52
 1143 0092 1B78     		ldrb	r3, [r3]
 1144 0094 DBB2     		uxtb	r3, r3
 1145 0096 9946     		mov	r9, r3
 1146              	.LVL94:
 1147              	.L90:
 726:Generated_Source\PSoC4/CyLib.c **** 
 1148              		.loc 1 726 0
 1149 0098 2D4B     		ldr	r3, .L98+56
 1150 009a DE5D     		ldrb	r6, [r3, r7]
 1151              	.LVL95:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1152              		.loc 1 738 0
 1153 009c 2F2E     		cmp	r6, #47
 1154 009e 09D9     		bls	.L94
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1155              		.loc 1 738 0 is_stmt 0 discriminator 1
 1156 00a0 2A2C     		cmp	r4, #42
 1157 00a2 07D9     		bls	.L94
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1158              		.loc 1 741 0 is_stmt 1
 1159 00a4 1922     		mov	r2, #25
 1160 00a6 2B4B     		ldr	r3, .L98+60
 1161 00a8 1A60     		str	r2, [r3]
 1162              	.LVL96:
 744:Generated_Source\PSoC4/CyLib.c **** 
 1163              		.loc 1 744 0
 1164 00aa 0520     		mov	r0, #5
 1165 00ac FFF7FEFF 		bl	CyDelayCycles
 1166              	.LVL97:
 746:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 68


 1167              		.loc 1 746 0
 1168 00b0 1925     		mov	r5, #25
 1169 00b2 03E0     		b	.L95
 1170              	.LVL98:
 1171              	.L94:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 1172              		.loc 1 750 0
 1173 00b4 274B     		ldr	r3, .L98+60
 1174 00b6 1D68     		ldr	r5, [r3]
 1175 00b8 3F23     		mov	r3, #63
 1176 00ba 1D40     		and	r5, r3
 1177              	.LVL99:
 1178              	.L95:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 1179              		.loc 1 762 0
 1180 00bc AE42     		cmp	r6, r5
 1181 00be 06D2     		bcs	.L96
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1182              		.loc 1 765 0
 1183 00c0 234B     		ldr	r3, .L98+56
 1184 00c2 DA5D     		ldrb	r2, [r3, r7]
 1185 00c4 234B     		ldr	r3, .L98+60
 1186 00c6 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****             }
 1187              		.loc 1 766 0
 1188 00c8 0520     		mov	r0, #5
 1189 00ca FFF7FEFF 		bl	CyDelayCycles
 1190              	.LVL100:
 1191              	.L96:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1192              		.loc 1 785 0
 1193 00ce 1F4B     		ldr	r3, .L98+52
 1194 00d0 9C46     		mov	ip, r3
 1195 00d2 6444     		add	r4, r4, ip
 1196              	.LVL101:
 1197 00d4 2378     		ldrb	r3, [r4]
 1198 00d6 DBB2     		uxtb	r3, r3
 1199              	.LVL102:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1200              		.loc 1 789 0
 1201 00d8 1F4A     		ldr	r2, .L98+64
 1202 00da 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1203              		.loc 1 790 0
 1204 00dc 1F4B     		ldr	r3, .L98+68
 1205              	.LVL103:
 1206 00de 5246     		mov	r2, r10
 1207              	.LVL104:
 1208 00e0 1A60     		str	r2, [r3]
 1209              	.LVL105:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1210              		.loc 1 791 0
 1211 00e2 1F4B     		ldr	r3, .L98+72
 1212 00e4 4A46     		mov	r2, r9
 1213 00e6 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1214              		.loc 1 792 0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 69


 1215 00e8 0520     		mov	r0, #5
 1216 00ea FFF7FEFF 		bl	CyDelayUs
 1217              	.LVL106:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1218              		.loc 1 794 0
 1219 00ee AE42     		cmp	r6, r5
 1220 00f0 0AD9     		bls	.L97
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1221              		.loc 1 797 0
 1222 00f2 174B     		ldr	r3, .L98+56
 1223 00f4 DA5D     		ldrb	r2, [r3, r7]
 1224 00f6 174B     		ldr	r3, .L98+60
 1225 00f8 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1226              		.loc 1 798 0
 1227 00fa 0520     		mov	r0, #5
 1228 00fc FFF7FEFF 		bl	CyDelayCycles
 1229              	.LVL107:
 1230 0100 02E0     		b	.L97
 1231              	.LVL108:
 1232              	.L88:
 804:Generated_Source\PSoC4/CyLib.c ****         }
 1233              		.loc 1 804 0 discriminator 1
 1234 0102 0020     		mov	r0, #0
 1235 0104 FFF7FEFF 		bl	CyHalt
 1236              	.LVL109:
 1237              	.L97:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1238              		.loc 1 823 0
 1239 0108 0198     		ldr	r0, [sp, #4]
 1240 010a FFF7FEFF 		bl	CyExitCriticalSection
 1241              	.LVL110:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1242              		.loc 1 824 0
 1243 010e 03B0     		add	sp, sp, #12
 1244              		@ sp needed
 1245              	.LVL111:
 1246 0110 0CBC     		pop	{r2, r3}
 1247 0112 9146     		mov	r9, r2
 1248 0114 9A46     		mov	r10, r3
 1249 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1250              	.L99:
 1251              		.align	2
 1252              	.L98:
 1253 0118 C0F1FF0F 		.word	268431808
 1254 011c C1F1FF0F 		.word	268431809
 1255 0120 C2F1FF0F 		.word	268431810
 1256 0124 C3F1FF0F 		.word	268431811
 1257 0128 C4F1FF0F 		.word	268431812
 1258 012c C5F1FF0F 		.word	268431813
 1259 0130 C6F1FF0F 		.word	268431814
 1260 0134 C7F1FF0F 		.word	268431815
 1261 0138 C8F1FF0F 		.word	268431816
 1262 013c C9F1FF0F 		.word	268431817
 1263 0140 CAF1FF0F 		.word	268431818
 1264 0144 CBF1FF0F 		.word	268431819
 1265 0148 CCF1FF0F 		.word	268431820
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 70


 1266 014c CDF1FF0F 		.word	268431821
 1267 0150 00000000 		.word	.LANCHOR1
 1268 0154 2CFF0B40 		.word	1074528044
 1269 0158 28FF0B40 		.word	1074528040
 1270 015c 1CFF0B40 		.word	1074528028
 1271 0160 20FF0B40 		.word	1074528032
 1272              		.cfi_endproc
 1273              	.LFE6:
 1274              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1275              		.section	.text.CySysLvdEnable,"ax",%progbits
 1276              		.align	2
 1277              		.global	CySysLvdEnable
 1278              		.code	16
 1279              		.thumb_func
 1280              		.type	CySysLvdEnable, %function
 1281              	CySysLvdEnable:
 1282              	.LFB7:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1283              		.loc 1 2119 0
 1284              		.cfi_startproc
 1285              	.LVL112:
 1286 0000 38B5     		push	{r3, r4, r5, lr}
 1287              		.cfi_def_cfa_offset 16
 1288              		.cfi_offset 3, -16
 1289              		.cfi_offset 4, -12
 1290              		.cfi_offset 5, -8
 1291              		.cfi_offset 14, -4
 1292 0002 031C     		mov	r3, r0
2121:Generated_Source\PSoC4/CyLib.c **** 
 1293              		.loc 1 2121 0
 1294 0004 0D4C     		ldr	r4, .L101
 1295 0006 2268     		ldr	r2, [r4]
 1296 0008 0225     		mov	r5, #2
 1297 000a AA43     		bic	r2, r5
 1298 000c 2260     		str	r2, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1299              		.loc 1 2124 0
 1300 000e 0C4A     		ldr	r2, .L101+4
 1301 0010 1168     		ldr	r1, [r2]
 1302 0012 1E20     		mov	r0, #30
 1303              	.LVL113:
 1304 0014 8143     		bic	r1, r0
2125:Generated_Source\PSoC4/CyLib.c **** 
 1305              		.loc 1 2125 0
 1306 0016 5B00     		lsl	r3, r3, #1
 1307              	.LVL114:
 1308 0018 1840     		and	r0, r3
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1309              		.loc 1 2124 0
 1310 001a 0843     		orr	r0, r1
 1311 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 1312              		.loc 1 2128 0
 1313 001e 1168     		ldr	r1, [r2]
 1314 0020 0123     		mov	r3, #1
 1315 0022 0B43     		orr	r3, r1
 1316 0024 1360     		str	r3, [r2]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 71


2131:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 2131 0
 1318 0026 FA20     		mov	r0, #250
 1319 0028 8000     		lsl	r0, r0, #2
 1320 002a FFF7FEFF 		bl	CyDelayUs
 1321              	.LVL115:
2134:Generated_Source\PSoC4/CyLib.c **** 
 1322              		.loc 1 2134 0
 1323 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1324              	.LVL116:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1325              		.loc 1 2137 0
 1326 0032 2368     		ldr	r3, [r4]
 1327 0034 1D43     		orr	r5, r3
 1328 0036 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1329              		.loc 1 2138 0
 1330              		@ sp needed
 1331 0038 38BD     		pop	{r3, r4, r5, pc}
 1332              	.L102:
 1333 003a C046     		.align	2
 1334              	.L101:
 1335 003c 08000B40 		.word	1074462728
 1336 0040 18000B40 		.word	1074462744
 1337              		.cfi_endproc
 1338              	.LFE7:
 1339              		.size	CySysLvdEnable, .-CySysLvdEnable
 1340              		.global	__aeabi_uidiv
 1341              		.section	.text.CyDelayFreq,"ax",%progbits
 1342              		.align	2
 1343              		.global	CyDelayFreq
 1344              		.code	16
 1345              		.thumb_func
 1346              		.type	CyDelayFreq, %function
 1347              	CyDelayFreq:
 1348              	.LFB29:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1349              		.loc 1 2597 0
 1350              		.cfi_startproc
 1351              	.LVL117:
 1352 0000 38B5     		push	{r3, r4, r5, lr}
 1353              		.cfi_def_cfa_offset 16
 1354              		.cfi_offset 3, -16
 1355              		.cfi_offset 4, -12
 1356              		.cfi_offset 5, -8
 1357              		.cfi_offset 14, -4
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 72


2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1358              		.loc 1 2598 0
 1359 0002 0028     		cmp	r0, #0
 1360 0004 02D0     		beq	.L104
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1361              		.loc 1 2600 0
 1362 0006 0C4B     		ldr	r3, .L106
 1363 0008 1861     		str	r0, [r3, #16]
 1364 000a 02E0     		b	.L105
 1365              	.L104:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1366              		.loc 1 2604 0
 1367 000c 0B4A     		ldr	r2, .L106+4
 1368 000e 0A4B     		ldr	r3, .L106
 1369 0010 1A61     		str	r2, [r3, #16]
 1370              	.L105:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1371              		.loc 1 2607 0
 1372 0012 094C     		ldr	r4, .L106
 1373 0014 2569     		ldr	r5, [r4, #16]
 1374 0016 0A4B     		ldr	r3, .L106+8
 1375 0018 E818     		add	r0, r5, r3
 1376              	.LVL118:
 1377 001a 0A49     		ldr	r1, .L106+12
 1378 001c FFF7FEFF 		bl	__aeabi_uidiv
 1379              	.LVL119:
 1380 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1381              		.loc 1 2608 0
 1382 0022 094B     		ldr	r3, .L106+16
 1383 0024 E818     		add	r0, r5, r3
 1384 0026 FA21     		mov	r1, #250
 1385 0028 8900     		lsl	r1, r1, #2
 1386 002a FFF7FEFF 		bl	__aeabi_uidiv
 1387              	.LVL120:
 1388 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1389              		.loc 1 2609 0
 1390 0030 C003     		lsl	r0, r0, #15
 1391 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1392              		.loc 1 2610 0
 1393              		@ sp needed
 1394 0034 38BD     		pop	{r3, r4, r5, pc}
 1395              	.L107:
 1396 0036 C046     		.align	2
 1397              	.L106:
 1398 0038 00000000 		.word	.LANCHOR0
 1399 003c 006CDC02 		.word	48000000
 1400 0040 3F420F00 		.word	999999
 1401 0044 40420F00 		.word	1000000
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 73


 1402 0048 E7030000 		.word	999
 1403              		.cfi_endproc
 1404              	.LFE29:
 1405              		.size	CyDelayFreq, .-CyDelayFreq
 1406              		.section	.text.CySysTickStop,"ax",%progbits
 1407              		.align	2
 1408              		.global	CySysTickStop
 1409              		.code	16
 1410              		.thumb_func
 1411              		.type	CySysTickStop, %function
 1412              	CySysTickStop:
 1413              	.LFB33:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 74


2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 1414              		.loc 1 2706 0
 1415              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1416              		.loc 1 2707 0
 1417 0000 024A     		ldr	r2, .L109
 1418 0002 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 75


 1419 0004 0121     		mov	r1, #1
 1420 0006 8B43     		bic	r3, r1
 1421 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** }
 1422              		.loc 1 2708 0
 1423              		@ sp needed
 1424 000a 7047     		bx	lr
 1425              	.L110:
 1426              		.align	2
 1427              	.L109:
 1428 000c 10E000E0 		.word	-536813552
 1429              		.cfi_endproc
 1430              	.LFE33:
 1431              		.size	CySysTickStop, .-CySysTickStop
 1432              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1433              		.align	2
 1434              		.global	CySysTickEnableInterrupt
 1435              		.code	16
 1436              		.thumb_func
 1437              		.type	CySysTickEnableInterrupt, %function
 1438              	CySysTickEnableInterrupt:
 1439              	.LFB34:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 1440              		.loc 1 2722 0
 1441              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1442              		.loc 1 2723 0
 1443 0000 024A     		ldr	r2, .L112
 1444 0002 1168     		ldr	r1, [r2]
 1445 0004 0223     		mov	r3, #2
 1446 0006 0B43     		orr	r3, r1
 1447 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** }
 1448              		.loc 1 2724 0
 1449              		@ sp needed
 1450 000a 7047     		bx	lr
 1451              	.L113:
 1452              		.align	2
 1453              	.L112:
 1454 000c 10E000E0 		.word	-536813552
 1455              		.cfi_endproc
 1456              	.LFE34:
 1457              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1458              		.section	.text.CySysTickEnable,"ax",%progbits
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 76


 1459              		.align	2
 1460              		.global	CySysTickEnable
 1461              		.code	16
 1462              		.thumb_func
 1463              		.type	CySysTickEnable, %function
 1464              	CySysTickEnable:
 1465              	.LFB32:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1466              		.loc 1 2689 0
 1467              		.cfi_startproc
 1468 0000 08B5     		push	{r3, lr}
 1469              		.cfi_def_cfa_offset 8
 1470              		.cfi_offset 3, -8
 1471              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1472              		.loc 1 2690 0
 1473 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1474              	.LVL121:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1475              		.loc 1 2691 0
 1476 0006 034A     		ldr	r2, .L115
 1477 0008 1168     		ldr	r1, [r2]
 1478 000a 0123     		mov	r3, #1
 1479 000c 0B43     		orr	r3, r1
 1480 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1481              		.loc 1 2692 0
 1482              		@ sp needed
 1483 0010 08BD     		pop	{r3, pc}
 1484              	.L116:
 1485 0012 C046     		.align	2
 1486              	.L115:
 1487 0014 10E000E0 		.word	-536813552
 1488              		.cfi_endproc
 1489              	.LFE32:
 1490              		.size	CySysTickEnable, .-CySysTickEnable
 1491              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1492              		.align	2
 1493              		.global	CySysTickDisableInterrupt
 1494              		.code	16
 1495              		.thumb_func
 1496              		.type	CySysTickDisableInterrupt, %function
 1497              	CySysTickDisableInterrupt:
 1498              	.LFB35:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 77


2738:Generated_Source\PSoC4/CyLib.c **** {
 1499              		.loc 1 2738 0
 1500              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1501              		.loc 1 2739 0
 1502 0000 024A     		ldr	r2, .L118
 1503 0002 1368     		ldr	r3, [r2]
 1504 0004 0221     		mov	r1, #2
 1505 0006 8B43     		bic	r3, r1
 1506 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** }
 1507              		.loc 1 2740 0
 1508              		@ sp needed
 1509 000a 7047     		bx	lr
 1510              	.L119:
 1511              		.align	2
 1512              	.L118:
 1513 000c 10E000E0 		.word	-536813552
 1514              		.cfi_endproc
 1515              	.LFE35:
 1516              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1517              		.section	.text.CySysTickSetReload,"ax",%progbits
 1518              		.align	2
 1519              		.global	CySysTickSetReload
 1520              		.code	16
 1521              		.thumb_func
 1522              		.type	CySysTickSetReload, %function
 1523              	CySysTickSetReload:
 1524              	.LFB36:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 1525              		.loc 1 2755 0
 1526              		.cfi_startproc
 1527              	.LVL122:
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1528              		.loc 1 2756 0
 1529 0000 0002     		lsl	r0, r0, #8
 1530              	.LVL123:
 1531 0002 000A     		lsr	r0, r0, #8
 1532 0004 014B     		ldr	r3, .L121
 1533 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 1534              		.loc 1 2757 0
 1535              		@ sp needed
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 78


 1536 0008 7047     		bx	lr
 1537              	.L122:
 1538 000a C046     		.align	2
 1539              	.L121:
 1540 000c 14E000E0 		.word	-536813548
 1541              		.cfi_endproc
 1542              	.LFE36:
 1543              		.size	CySysTickSetReload, .-CySysTickSetReload
 1544              		.section	.text.CySysTickGetReload,"ax",%progbits
 1545              		.align	2
 1546              		.global	CySysTickGetReload
 1547              		.code	16
 1548              		.thumb_func
 1549              		.type	CySysTickGetReload, %function
 1550              	CySysTickGetReload:
 1551              	.LFB37:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 1552              		.loc 1 2771 0
 1553              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1554              		.loc 1 2772 0
 1555 0000 024B     		ldr	r3, .L124
 1556 0002 1868     		ldr	r0, [r3]
 1557 0004 0002     		lsl	r0, r0, #8
 1558 0006 000A     		lsr	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 1559              		.loc 1 2773 0
 1560              		@ sp needed
 1561 0008 7047     		bx	lr
 1562              	.L125:
 1563 000a C046     		.align	2
 1564              	.L124:
 1565 000c 14E000E0 		.word	-536813548
 1566              		.cfi_endproc
 1567              	.LFE37:
 1568              		.size	CySysTickGetReload, .-CySysTickGetReload
 1569              		.section	.text.CySysTickGetValue,"ax",%progbits
 1570              		.align	2
 1571              		.global	CySysTickGetValue
 1572              		.code	16
 1573              		.thumb_func
 1574              		.type	CySysTickGetValue, %function
 1575              	CySysTickGetValue:
 1576              	.LFB38:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 79


2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 1577              		.loc 1 2787 0
 1578              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1579              		.loc 1 2788 0
 1580 0000 024B     		ldr	r3, .L127
 1581 0002 1868     		ldr	r0, [r3]
 1582 0004 0002     		lsl	r0, r0, #8
 1583 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 1584              		.loc 1 2789 0
 1585              		@ sp needed
 1586 0008 7047     		bx	lr
 1587              	.L128:
 1588 000a C046     		.align	2
 1589              	.L127:
 1590 000c 18E000E0 		.word	-536813544
 1591              		.cfi_endproc
 1592              	.LFE38:
 1593              		.size	CySysTickGetValue, .-CySysTickGetValue
 1594              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1595              		.align	2
 1596              		.global	CySysTickGetCountFlag
 1597              		.code	16
 1598              		.thumb_func
 1599              		.type	CySysTickGetCountFlag, %function
 1600              	CySysTickGetCountFlag:
 1601              	.LFB39:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 80


2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2846:Generated_Source\PSoC4/CyLib.c ****     }
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 81


2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 1602              		.loc 1 2867 0
 1603              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1604              		.loc 1 2868 0
 1605 0000 024B     		ldr	r3, .L130
 1606 0002 1868     		ldr	r0, [r3]
 1607 0004 C003     		lsl	r0, r0, #15
 1608 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** }
 1609              		.loc 1 2869 0
 1610              		@ sp needed
 1611 0008 7047     		bx	lr
 1612              	.L131:
 1613 000a C046     		.align	2
 1614              	.L130:
 1615 000c 10E000E0 		.word	-536813552
 1616              		.cfi_endproc
 1617              	.LFE39:
 1618              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1619              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1620              		.align	2
 1621              		.code	16
 1622              		.thumb_func
 1623              		.type	CySysTickServiceCallbacks, %function
 1624              	CySysTickServiceCallbacks:
 1625              	.LFB43:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 82


2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 83


 1626              		.loc 1 2952 0
 1627              		.cfi_startproc
 1628 0000 10B5     		push	{r4, lr}
 1629              		.cfi_def_cfa_offset 8
 1630              		.cfi_offset 4, -8
 1631              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1632              		.loc 1 2956 0
 1633 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1634              	.LVL124:
 1635 0006 0128     		cmp	r0, #1
 1636 0008 0BD1     		bne	.L132
 1637 000a 07E0     		b	.L137
 1638              	.LVL125:
 1639              	.L136:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1640              		.loc 1 2960 0
 1641 000c A300     		lsl	r3, r4, #2
 1642 000e 054A     		ldr	r2, .L138
 1643 0010 9B58     		ldr	r3, [r3, r2]
 1644 0012 002B     		cmp	r3, #0
 1645 0014 00D0     		beq	.L135
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1646              		.loc 1 2962 0
 1647 0016 9847     		blx	r3
 1648              	.LVL126:
 1649              	.L135:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1650              		.loc 1 2958 0 discriminator 2
 1651 0018 0134     		add	r4, r4, #1
 1652              	.LVL127:
 1653 001a 00E0     		b	.L133
 1654              	.LVL128:
 1655              	.L137:
 1656 001c 0024     		mov	r4, #0
 1657              	.L133:
 1658              	.LVL129:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1659              		.loc 1 2958 0 is_stmt 0 discriminator 1
 1660 001e 042C     		cmp	r4, #4
 1661 0020 F4D9     		bls	.L136
 1662              	.LVL130:
 1663              	.L132:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1664              		.loc 1 2966 0 is_stmt 1
 1665              		@ sp needed
 1666 0022 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 84


 1667              	.L139:
 1668              		.align	2
 1669              	.L138:
 1670 0024 00000000 		.word	.LANCHOR2
 1671              		.cfi_endproc
 1672              	.LFE43:
 1673              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1674              		.section	.text.CySysTickClear,"ax",%progbits
 1675              		.align	2
 1676              		.global	CySysTickClear
 1677              		.code	16
 1678              		.thumb_func
 1679              		.type	CySysTickClear, %function
 1680              	CySysTickClear:
 1681              	.LFB40:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1682              		.loc 1 2880 0
 1683              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 1684              		.loc 1 2881 0
 1685 0000 0022     		mov	r2, #0
 1686 0002 014B     		ldr	r3, .L141
 1687 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1688              		.loc 1 2882 0
 1689              		@ sp needed
 1690 0006 7047     		bx	lr
 1691              	.L142:
 1692              		.align	2
 1693              	.L141:
 1694 0008 18E000E0 		.word	-536813544
 1695              		.cfi_endproc
 1696              	.LFE40:
 1697              		.size	CySysTickClear, .-CySysTickClear
 1698              		.section	.text.CySysTickInit,"ax",%progbits
 1699              		.align	2
 1700              		.global	CySysTickInit
 1701              		.code	16
 1702              		.thumb_func
 1703              		.type	CySysTickInit, %function
 1704              	CySysTickInit:
 1705              	.LFB31:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1706              		.loc 1 2658 0
 1707              		.cfi_startproc
 1708 0000 08B5     		push	{r3, lr}
 1709              		.cfi_def_cfa_offset 8
 1710              		.cfi_offset 3, -8
 1711              		.cfi_offset 14, -4
 1712              	.LVL131:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1713              		.loc 1 2661 0
 1714 0002 0023     		mov	r3, #0
 1715 0004 04E0     		b	.L144
 1716              	.LVL132:
 1717              	.L145:
2663:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 85


 1718              		.loc 1 2663 0 discriminator 3
 1719 0006 9900     		lsl	r1, r3, #2
 1720 0008 0020     		mov	r0, #0
 1721 000a 0B4A     		ldr	r2, .L146
 1722 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1723              		.loc 1 2661 0 discriminator 3
 1724 000e 0133     		add	r3, r3, #1
 1725              	.LVL133:
 1726              	.L144:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1727              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1728 0010 042B     		cmp	r3, #4
 1729 0012 F8D9     		bls	.L145
2666:Generated_Source\PSoC4/CyLib.c **** 
 1730              		.loc 1 2666 0 is_stmt 1
 1731 0014 0F20     		mov	r0, #15
 1732 0016 0949     		ldr	r1, .L146+4
 1733 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1734              	.LVL134:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1735              		.loc 1 2672 0
 1736 001c 084B     		ldr	r3, .L146+8
 1737 001e 1869     		ldr	r0, [r3, #16]
 1738 0020 FA21     		mov	r1, #250
 1739 0022 8900     		lsl	r1, r1, #2
 1740 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1741              	.LVL135:
 1742 0028 FFF7FEFF 		bl	CySysTickSetReload
 1743              	.LVL136:
2673:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1744              		.loc 1 2673 0
 1745 002c FFF7FEFF 		bl	CySysTickClear
 1746              	.LVL137:
2674:Generated_Source\PSoC4/CyLib.c **** }
 1747              		.loc 1 2674 0
 1748 0030 0F20     		mov	r0, #15
 1749 0032 FFF7FEFF 		bl	CyIntEnable
 1750              	.LVL138:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1751              		.loc 1 2675 0
 1752              		@ sp needed
 1753 0036 08BD     		pop	{r3, pc}
 1754              	.L147:
 1755              		.align	2
 1756              	.L146:
 1757 0038 00000000 		.word	.LANCHOR2
 1758 003c 00000000 		.word	CySysTickServiceCallbacks
 1759 0040 00000000 		.word	.LANCHOR0
 1760              		.cfi_endproc
 1761              	.LFE31:
 1762              		.size	CySysTickInit, .-CySysTickInit
 1763              		.section	.text.CySysTickStart,"ax",%progbits
 1764              		.align	2
 1765              		.global	CySysTickStart
 1766              		.code	16
 1767              		.thumb_func
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 86


 1768              		.type	CySysTickStart, %function
 1769              	CySysTickStart:
 1770              	.LFB30:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1771              		.loc 1 2629 0
 1772              		.cfi_startproc
 1773 0000 08B5     		push	{r3, lr}
 1774              		.cfi_def_cfa_offset 8
 1775              		.cfi_offset 3, -8
 1776              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1777              		.loc 1 2630 0
 1778 0002 064B     		ldr	r3, .L150
 1779 0004 5B69     		ldr	r3, [r3, #20]
 1780 0006 002B     		cmp	r3, #0
 1781 0008 04D1     		bne	.L149
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1782              		.loc 1 2632 0
 1783 000a FFF7FEFF 		bl	CySysTickInit
 1784              	.LVL139:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1785              		.loc 1 2633 0
 1786 000e 0122     		mov	r2, #1
 1787 0010 024B     		ldr	r3, .L150
 1788 0012 5A61     		str	r2, [r3, #20]
 1789              	.L149:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1790              		.loc 1 2636 0
 1791 0014 FFF7FEFF 		bl	CySysTickEnable
 1792              	.LVL140:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1793              		.loc 1 2637 0
 1794              		@ sp needed
 1795 0018 08BD     		pop	{r3, pc}
 1796              	.L151:
 1797 001a C046     		.align	2
 1798              	.L150:
 1799 001c 00000000 		.word	.LANCHOR2
 1800              		.cfi_endproc
 1801              	.LFE30:
 1802              		.size	CySysTickStart, .-CySysTickStart
 1803              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1804              		.align	2
 1805              		.global	CySysTickSetCallback
 1806              		.code	16
 1807              		.thumb_func
 1808              		.type	CySysTickSetCallback, %function
 1809              	CySysTickSetCallback:
 1810              	.LFB41:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1811              		.loc 1 2915 0
 1812              		.cfi_startproc
 1813              	.LVL141:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1814              		.loc 1 2918 0
 1815 0000 024A     		ldr	r2, .L153
 1816 0002 8300     		lsl	r3, r0, #2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 87


 1817 0004 9858     		ldr	r0, [r3, r2]
 1818              	.LVL142:
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1819              		.loc 1 2919 0
 1820 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 1821              		.loc 1 2921 0
 1822              		@ sp needed
 1823 0008 7047     		bx	lr
 1824              	.L154:
 1825 000a C046     		.align	2
 1826              	.L153:
 1827 000c 00000000 		.word	.LANCHOR2
 1828              		.cfi_endproc
 1829              	.LFE41:
 1830              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1831              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1832              		.align	2
 1833              		.global	CySysTickGetCallback
 1834              		.code	16
 1835              		.thumb_func
 1836              		.type	CySysTickGetCallback, %function
 1837              	CySysTickGetCallback:
 1838              	.LFB42:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1839              		.loc 1 2939 0
 1840              		.cfi_startproc
 1841              	.LVL143:
2940:Generated_Source\PSoC4/CyLib.c **** }
 1842              		.loc 1 2940 0
 1843 0000 8000     		lsl	r0, r0, #2
 1844              	.LVL144:
 1845 0002 014B     		ldr	r3, .L156
 1846 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 1847              		.loc 1 2941 0
 1848              		@ sp needed
 1849 0006 7047     		bx	lr
 1850              	.L157:
 1851              		.align	2
 1852              	.L156:
 1853 0008 00000000 		.word	.LANCHOR2
 1854              		.cfi_endproc
 1855              	.LFE42:
 1856              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1857              		.section	.text.CyGetUniqueId,"ax",%progbits
 1858              		.align	2
 1859              		.global	CyGetUniqueId
 1860              		.code	16
 1861              		.thumb_func
 1862              		.type	CyGetUniqueId, %function
 1863              	CyGetUniqueId:
 1864              	.LFB44:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 88


2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 1865              		.loc 1 2984 0
 1866              		.cfi_startproc
 1867              	.LVL145:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1868              		.loc 1 2986 0
 1869 0000 134B     		ldr	r3, .L159
 1870 0002 1B78     		ldrb	r3, [r3]
 1871 0004 DAB2     		uxtb	r2, r3
 1872 0006 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1873              		.loc 1 2987 0
 1874 0008 124B     		ldr	r3, .L159+4
 1875 000a 1B78     		ldrb	r3, [r3]
 1876 000c 1B02     		lsl	r3, r3, #8
 1877 000e 1343     		orr	r3, r2
 1878 0010 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1879              		.loc 1 2988 0
 1880 0012 114A     		ldr	r2, .L159+8
 1881 0014 1278     		ldrb	r2, [r2]
 1882 0016 1204     		lsl	r2, r2, #16
 1883 0018 1343     		orr	r3, r2
 1884 001a 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1885              		.loc 1 2989 0
 1886 001c 0F4A     		ldr	r2, .L159+12
 1887 001e 1278     		ldrb	r2, [r2]
 1888 0020 1206     		lsl	r2, r2, #24
 1889 0022 1343     		orr	r3, r2
 1890 0024 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1891              		.loc 1 2991 0
 1892 0026 0E4B     		ldr	r3, .L159+16
 1893 0028 1B78     		ldrb	r3, [r3]
 1894 002a DAB2     		uxtb	r2, r3
 1895 002c 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1896              		.loc 1 2992 0
 1897 002e 0D4B     		ldr	r3, .L159+20
 1898 0030 1B78     		ldrb	r3, [r3]
 1899 0032 1B02     		lsl	r3, r3, #8
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 89


 1900 0034 1343     		orr	r3, r2
 1901 0036 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1902              		.loc 1 2993 0
 1903 0038 0B4A     		ldr	r2, .L159+24
 1904 003a 1278     		ldrb	r2, [r2]
 1905 003c 1204     		lsl	r2, r2, #16
 1906 003e 1343     		orr	r3, r2
 1907 0040 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1908              		.loc 1 2994 0
 1909 0042 0A4A     		ldr	r2, .L159+28
 1910 0044 1278     		ldrb	r2, [r2]
 1911 0046 1206     		lsl	r2, r2, #24
 1912 0048 1343     		orr	r3, r2
 1913 004a 4360     		str	r3, [r0, #4]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 1914              		.loc 1 3006 0
 1915              		@ sp needed
 1916 004c 7047     		bx	lr
 1917              	.L160:
 1918 004e C046     		.align	2
 1919              	.L159:
 1920 0050 78F1FF0F 		.word	268431736
 1921 0054 79F1FF0F 		.word	268431737
 1922 0058 7AF1FF0F 		.word	268431738
 1923 005c 7BF1FF0F 		.word	268431739
 1924 0060 7CF1FF0F 		.word	268431740
 1925 0064 7DF1FF0F 		.word	268431741
 1926 0068 7EF1FF0F 		.word	268431742
 1927 006c 7FF1FF0F 		.word	268431743
 1928              		.cfi_endproc
 1929              	.LFE44:
 1930              		.size	CyGetUniqueId, .-CyGetUniqueId
 1931              		.global	CySysClkPumpConfig
 1932              		.global	cyImoFreqMhz2Reg
 1933              		.global	CySysTickInitVar
 1934              		.global	cydelay32kMs
 1935              		.global	cydelayFreqMhz
 1936              		.global	cydelayFreqKhz
 1937              		.global	cydelayFreqHz
 1938              		.section	.rodata
 1939              		.align	2
 1940              		.set	.LANCHOR1,. + 0
 1941              		.type	cyImoFreqMhz2Reg, %object
 1942              		.size	cyImoFreqMhz2Reg, 46
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 90


 1943              	cyImoFreqMhz2Reg:
 1944 0000 03       		.byte	3
 1945 0001 04       		.byte	4
 1946 0002 05       		.byte	5
 1947 0003 06       		.byte	6
 1948 0004 07       		.byte	7
 1949 0005 08       		.byte	8
 1950 0006 09       		.byte	9
 1951 0007 0A       		.byte	10
 1952 0008 0B       		.byte	11
 1953 0009 0C       		.byte	12
 1954 000a 0E       		.byte	14
 1955 000b 0F       		.byte	15
 1956 000c 10       		.byte	16
 1957 000d 11       		.byte	17
 1958 000e 12       		.byte	18
 1959 000f 13       		.byte	19
 1960 0010 14       		.byte	20
 1961 0011 15       		.byte	21
 1962 0012 16       		.byte	22
 1963 0013 17       		.byte	23
 1964 0014 18       		.byte	24
 1965 0015 19       		.byte	25
 1966 0016 1B       		.byte	27
 1967 0017 1C       		.byte	28
 1968 0018 1D       		.byte	29
 1969 0019 1E       		.byte	30
 1970 001a 1F       		.byte	31
 1971 001b 20       		.byte	32
 1972 001c 21       		.byte	33
 1973 001d 22       		.byte	34
 1974 001e 23       		.byte	35
 1975 001f 25       		.byte	37
 1976 0020 26       		.byte	38
 1977 0021 27       		.byte	39
 1978 0022 28       		.byte	40
 1979 0023 29       		.byte	41
 1980 0024 2A       		.byte	42
 1981 0025 2B       		.byte	43
 1982 0026 2E       		.byte	46
 1983 0027 2F       		.byte	47
 1984 0028 30       		.byte	48
 1985 0029 31       		.byte	49
 1986 002a 32       		.byte	50
 1987 002b 33       		.byte	51
 1988 002c 34       		.byte	52
 1989 002d 35       		.byte	53
 1990 002e 0000     		.data
 1991              		.align	2
 1992              		.set	.LANCHOR0,. + 0
 1993              		.type	CySysClkPumpConfig, %object
 1994              		.size	CySysClkPumpConfig, 4
 1995              	CySysClkPumpConfig:
 1996 0000 01000000 		.word	1
 1997              		.type	cydelay32kMs, %object
 1998              		.size	cydelay32kMs, 4
 1999              	cydelay32kMs:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 91


 2000 0004 0000C05D 		.word	1572864000
 2001              		.type	cydelayFreqKhz, %object
 2002              		.size	cydelayFreqKhz, 4
 2003              	cydelayFreqKhz:
 2004 0008 80BB0000 		.word	48000
 2005              		.type	cydelayFreqMhz, %object
 2006              		.size	cydelayFreqMhz, 1
 2007              	cydelayFreqMhz:
 2008 000c 30       		.byte	48
 2009 000d 000000   		.space	3
 2010              		.type	cydelayFreqHz, %object
 2011              		.size	cydelayFreqHz, 4
 2012              	cydelayFreqHz:
 2013 0010 006CDC02 		.word	48000000
 2014              		.bss
 2015              		.align	2
 2016              		.set	.LANCHOR2,. + 0
 2017              		.type	CySysTickCallbacks, %object
 2018              		.size	CySysTickCallbacks, 20
 2019              	CySysTickCallbacks:
 2020 0000 00000000 		.space	20
 2020      00000000 
 2020      00000000 
 2020      00000000 
 2020      00000000 
 2021              		.type	CySysTickInitVar, %object
 2022              		.size	CySysTickInitVar, 4
 2023              	CySysTickInitVar:
 2024 0014 00000000 		.space	4
 2025              		.text
 2026              	.Letext0:
 2027              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2028              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2029              		.section	.debug_info,"",%progbits
 2030              	.Ldebug_info0:
 2031 0000 030B0000 		.4byte	0xb03
 2032 0004 0400     		.2byte	0x4
 2033 0006 00000000 		.4byte	.Ldebug_abbrev0
 2034 000a 04       		.byte	0x4
 2035 000b 01       		.uleb128 0x1
 2036 000c AA030000 		.4byte	.LASF101
 2037 0010 01       		.byte	0x1
 2038 0011 3F060000 		.4byte	.LASF102
 2039 0015 CD040000 		.4byte	.LASF103
 2040 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2041 001d 00000000 		.4byte	0
 2042 0021 00000000 		.4byte	.Ldebug_line0
 2043 0025 02       		.uleb128 0x2
 2044 0026 01       		.byte	0x1
 2045 0027 06       		.byte	0x6
 2046 0028 FE000000 		.4byte	.LASF0
 2047 002c 02       		.uleb128 0x2
 2048 002d 01       		.byte	0x1
 2049 002e 08       		.byte	0x8
 2050 002f FD040000 		.4byte	.LASF1
 2051 0033 02       		.uleb128 0x2
 2052 0034 02       		.byte	0x2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 92


 2053 0035 05       		.byte	0x5
 2054 0036 0B050000 		.4byte	.LASF2
 2055 003a 02       		.uleb128 0x2
 2056 003b 02       		.byte	0x2
 2057 003c 07       		.byte	0x7
 2058 003d B6020000 		.4byte	.LASF3
 2059 0041 02       		.uleb128 0x2
 2060 0042 04       		.byte	0x4
 2061 0043 05       		.byte	0x5
 2062 0044 3D010000 		.4byte	.LASF4
 2063 0048 02       		.uleb128 0x2
 2064 0049 04       		.byte	0x4
 2065 004a 07       		.byte	0x7
 2066 004b 3E020000 		.4byte	.LASF5
 2067 004f 02       		.uleb128 0x2
 2068 0050 08       		.byte	0x8
 2069 0051 05       		.byte	0x5
 2070 0052 F0000000 		.4byte	.LASF6
 2071 0056 02       		.uleb128 0x2
 2072 0057 08       		.byte	0x8
 2073 0058 07       		.byte	0x7
 2074 0059 84000000 		.4byte	.LASF7
 2075 005d 03       		.uleb128 0x3
 2076 005e 04       		.byte	0x4
 2077 005f 05       		.byte	0x5
 2078 0060 696E7400 		.ascii	"int\000"
 2079 0064 02       		.uleb128 0x2
 2080 0065 04       		.byte	0x4
 2081 0066 07       		.byte	0x7
 2082 0067 22020000 		.4byte	.LASF8
 2083 006b 04       		.uleb128 0x4
 2084 006c 68010000 		.4byte	.LASF9
 2085 0070 02       		.byte	0x2
 2086 0071 B901     		.2byte	0x1b9
 2087 0073 2C000000 		.4byte	0x2c
 2088 0077 04       		.uleb128 0x4
 2089 0078 17000000 		.4byte	.LASF10
 2090 007c 02       		.byte	0x2
 2091 007d BA01     		.2byte	0x1ba
 2092 007f 3A000000 		.4byte	0x3a
 2093 0083 04       		.uleb128 0x4
 2094 0084 A8010000 		.4byte	.LASF11
 2095 0088 02       		.byte	0x2
 2096 0089 BB01     		.2byte	0x1bb
 2097 008b 48000000 		.4byte	0x48
 2098 008f 02       		.uleb128 0x2
 2099 0090 04       		.byte	0x4
 2100 0091 04       		.byte	0x4
 2101 0092 61040000 		.4byte	.LASF12
 2102 0096 02       		.uleb128 0x2
 2103 0097 08       		.byte	0x8
 2104 0098 04       		.byte	0x4
 2105 0099 84010000 		.4byte	.LASF13
 2106 009d 02       		.uleb128 0x2
 2107 009e 01       		.byte	0x1
 2108 009f 08       		.byte	0x8
 2109 00a0 4E050000 		.4byte	.LASF14
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 93


 2110 00a4 04       		.uleb128 0x4
 2111 00a5 C8040000 		.4byte	.LASF15
 2112 00a9 02       		.byte	0x2
 2113 00aa 6302     		.2byte	0x263
 2114 00ac B0000000 		.4byte	0xb0
 2115 00b0 05       		.uleb128 0x5
 2116 00b1 6B000000 		.4byte	0x6b
 2117 00b5 04       		.uleb128 0x4
 2118 00b6 24030000 		.4byte	.LASF16
 2119 00ba 02       		.byte	0x2
 2120 00bb 6502     		.2byte	0x265
 2121 00bd C1000000 		.4byte	0xc1
 2122 00c1 05       		.uleb128 0x5
 2123 00c2 83000000 		.4byte	0x83
 2124 00c6 04       		.uleb128 0x4
 2125 00c7 53050000 		.4byte	.LASF17
 2126 00cb 02       		.byte	0x2
 2127 00cc 7502     		.2byte	0x275
 2128 00ce D2000000 		.4byte	0xd2
 2129 00d2 06       		.uleb128 0x6
 2130 00d3 04       		.byte	0x4
 2131 00d4 D8000000 		.4byte	0xd8
 2132 00d8 07       		.uleb128 0x7
 2133 00d9 02       		.uleb128 0x2
 2134 00da 04       		.byte	0x4
 2135 00db 07       		.byte	0x7
 2136 00dc 46030000 		.4byte	.LASF18
 2137 00e0 08       		.uleb128 0x8
 2138 00e1 8C040000 		.4byte	.LASF19
 2139 00e5 03       		.byte	0x3
 2140 00e6 F5       		.byte	0xf5
 2141 00e7 D2000000 		.4byte	0xd2
 2142 00eb 09       		.uleb128 0x9
 2143 00ec 1D060000 		.4byte	.LASF20
 2144 00f0 01       		.byte	0x1
 2145 00f1 6B       		.byte	0x6b
 2146 00f2 00000000 		.4byte	.LFB0
 2147 00f6 14000000 		.4byte	.LFE0-.LFB0
 2148 00fa 01       		.uleb128 0x1
 2149 00fb 9C       		.byte	0x9c
 2150 00fc 09       		.uleb128 0x9
 2151 00fd 6B020000 		.4byte	.LASF21
 2152 0101 01       		.byte	0x1
 2153 0102 8B       		.byte	0x8b
 2154 0103 00000000 		.4byte	.LFB1
 2155 0107 10000000 		.4byte	.LFE1-.LFB1
 2156 010b 01       		.uleb128 0x1
 2157 010c 9C       		.byte	0x9c
 2158 010d 0A       		.uleb128 0xa
 2159 010e 27000000 		.4byte	.LASF24
 2160 0112 01       		.byte	0x1
 2161 0113 AD01     		.2byte	0x1ad
 2162 0115 00000000 		.4byte	.LFB2
 2163 0119 20000000 		.4byte	.LFE2-.LFB2
 2164 011d 01       		.uleb128 0x1
 2165 011e 9C       		.byte	0x9c
 2166 011f 66010000 		.4byte	0x166
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 94


 2167 0123 0B       		.uleb128 0xb
 2168 0124 33050000 		.4byte	.LASF26
 2169 0128 01       		.byte	0x1
 2170 0129 AD01     		.2byte	0x1ad
 2171 012b 83000000 		.4byte	0x83
 2172 012f 00000000 		.4byte	.LLST0
 2173 0133 0C       		.uleb128 0xc
 2174 0134 1B010000 		.4byte	.LASF22
 2175 0138 01       		.byte	0x1
 2176 0139 AF01     		.2byte	0x1af
 2177 013b 6B000000 		.4byte	0x6b
 2178 013f 2C000000 		.4byte	.LLST1
 2179 0143 0C       		.uleb128 0xc
 2180 0144 6B060000 		.4byte	.LASF23
 2181 0148 01       		.byte	0x1
 2182 0149 B001     		.2byte	0x1b0
 2183 014b 83000000 		.4byte	0x83
 2184 014f 3F000000 		.4byte	.LLST2
 2185 0153 0D       		.uleb128 0xd
 2186 0154 08000000 		.4byte	.LVL1
 2187 0158 DD0A0000 		.4byte	0xadd
 2188 015c 0D       		.uleb128 0xd
 2189 015d 1A000000 		.4byte	.LVL4
 2190 0161 E80A0000 		.4byte	0xae8
 2191 0165 00       		.byte	0
 2192 0166 0A       		.uleb128 0xa
 2193 0167 0F030000 		.4byte	.LASF25
 2194 016b 01       		.byte	0x1
 2195 016c D901     		.2byte	0x1d9
 2196 016e 00000000 		.4byte	.LFB3
 2197 0172 38000000 		.4byte	.LFE3-.LFB3
 2198 0176 01       		.uleb128 0x1
 2199 0177 9C       		.byte	0x9c
 2200 0178 8B010000 		.4byte	0x18b
 2201 017c 0E       		.uleb128 0xe
 2202 017d 7D010000 		.4byte	.LASF27
 2203 0181 01       		.byte	0x1
 2204 0182 D901     		.2byte	0x1d9
 2205 0184 83000000 		.4byte	0x83
 2206 0188 01       		.uleb128 0x1
 2207 0189 50       		.byte	0x50
 2208 018a 00       		.byte	0
 2209 018b 0F       		.uleb128 0xf
 2210 018c B4010000 		.4byte	.LASF33
 2211 0190 01       		.byte	0x1
 2212 0191 FE01     		.2byte	0x1fe
 2213 0193 83000000 		.4byte	0x83
 2214 0197 00000000 		.4byte	.LFB4
 2215 019b 1C000000 		.4byte	.LFE4-.LFB4
 2216 019f 01       		.uleb128 0x1
 2217 01a0 9C       		.byte	0x9c
 2218 01a1 D8010000 		.4byte	0x1d8
 2219 01a5 0C       		.uleb128 0xc
 2220 01a6 1B010000 		.4byte	.LASF22
 2221 01aa 01       		.byte	0x1
 2222 01ab 0002     		.2byte	0x200
 2223 01ad 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 95


 2224 01b1 5D000000 		.4byte	.LLST3
 2225 01b5 0C       		.uleb128 0xc
 2226 01b6 71030000 		.4byte	.LASF28
 2227 01ba 01       		.byte	0x1
 2228 01bb 0102     		.2byte	0x201
 2229 01bd 83000000 		.4byte	0x83
 2230 01c1 70000000 		.4byte	.LLST4
 2231 01c5 0D       		.uleb128 0xd
 2232 01c6 06000000 		.4byte	.LVL7
 2233 01ca DD0A0000 		.4byte	0xadd
 2234 01ce 0D       		.uleb128 0xd
 2235 01cf 12000000 		.4byte	.LVL9
 2236 01d3 E80A0000 		.4byte	0xae8
 2237 01d7 00       		.byte	0
 2238 01d8 0A       		.uleb128 0xa
 2239 01d9 70050000 		.4byte	.LASF29
 2240 01dd 01       		.byte	0x1
 2241 01de 3502     		.2byte	0x235
 2242 01e0 00000000 		.4byte	.LFB5
 2243 01e4 28000000 		.4byte	.LFE5-.LFB5
 2244 01e8 01       		.uleb128 0x1
 2245 01e9 9C       		.byte	0x9c
 2246 01ea 21020000 		.4byte	0x221
 2247 01ee 0B       		.uleb128 0xb
 2248 01ef 15060000 		.4byte	.LASF30
 2249 01f3 01       		.byte	0x1
 2250 01f4 3502     		.2byte	0x235
 2251 01f6 83000000 		.4byte	0x83
 2252 01fa 8E000000 		.4byte	.LLST5
 2253 01fe 0C       		.uleb128 0xc
 2254 01ff 1B010000 		.4byte	.LASF22
 2255 0203 01       		.byte	0x1
 2256 0204 3702     		.2byte	0x237
 2257 0206 6B000000 		.4byte	0x6b
 2258 020a BA000000 		.4byte	.LLST6
 2259 020e 0D       		.uleb128 0xd
 2260 020f 08000000 		.4byte	.LVL12
 2261 0213 DD0A0000 		.4byte	0xadd
 2262 0217 0D       		.uleb128 0xd
 2263 0218 1E000000 		.4byte	.LVL14
 2264 021c E80A0000 		.4byte	0xae8
 2265 0220 00       		.byte	0
 2266 0221 10       		.uleb128 0x10
 2267 0222 E8050000 		.4byte	.LASF31
 2268 0226 01       		.byte	0x1
 2269 0227 6408     		.2byte	0x864
 2270 0229 00000000 		.4byte	.LFB8
 2271 022d 20000000 		.4byte	.LFE8-.LFB8
 2272 0231 01       		.uleb128 0x1
 2273 0232 9C       		.byte	0x9c
 2274 0233 11       		.uleb128 0x11
 2275 0234 50020000 		.4byte	.LASF80
 2276 0238 01       		.byte	0x1
 2277 0239 7608     		.2byte	0x876
 2278 023b 83000000 		.4byte	0x83
 2279 023f 00000000 		.4byte	.LFB9
 2280 0243 10000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 96


 2281 0247 01       		.uleb128 0x1
 2282 0248 9C       		.byte	0x9c
 2283 0249 10       		.uleb128 0x10
 2284 024a 91010000 		.4byte	.LASF32
 2285 024e 01       		.byte	0x1
 2286 024f 8608     		.2byte	0x886
 2287 0251 00000000 		.4byte	.LFB10
 2288 0255 0C000000 		.4byte	.LFE10-.LFB10
 2289 0259 01       		.uleb128 0x1
 2290 025a 9C       		.byte	0x9c
 2291 025b 0F       		.uleb128 0xf
 2292 025c A2020000 		.4byte	.LASF34
 2293 0260 01       		.byte	0x1
 2294 0261 A008     		.2byte	0x8a0
 2295 0263 83000000 		.4byte	0x83
 2296 0267 00000000 		.4byte	.LFB11
 2297 026b 14000000 		.4byte	.LFE11-.LFB11
 2298 026f 01       		.uleb128 0x1
 2299 0270 9C       		.byte	0x9c
 2300 0271 94020000 		.4byte	0x294
 2301 0275 0B       		.uleb128 0xb
 2302 0276 47050000 		.4byte	.LASF35
 2303 027a 01       		.byte	0x1
 2304 027b A008     		.2byte	0x8a0
 2305 027d 83000000 		.4byte	0x83
 2306 0281 CD000000 		.4byte	.LLST7
 2307 0285 12       		.uleb128 0x12
 2308 0286 39030000 		.4byte	.LASF36
 2309 028a 01       		.byte	0x1
 2310 028b A208     		.2byte	0x8a2
 2311 028d 83000000 		.4byte	0x83
 2312 0291 01       		.uleb128 0x1
 2313 0292 50       		.byte	0x50
 2314 0293 00       		.byte	0
 2315 0294 0F       		.uleb128 0xf
 2316 0295 61000000 		.4byte	.LASF37
 2317 0299 01       		.byte	0x1
 2318 029a B708     		.2byte	0x8b7
 2319 029c 83000000 		.4byte	0x83
 2320 02a0 00000000 		.4byte	.LFB12
 2321 02a4 10000000 		.4byte	.LFE12-.LFB12
 2322 02a8 01       		.uleb128 0x1
 2323 02a9 9C       		.byte	0x9c
 2324 02aa BD020000 		.4byte	0x2bd
 2325 02ae 12       		.uleb128 0x12
 2326 02af 1E000000 		.4byte	.LASF38
 2327 02b3 01       		.byte	0x1
 2328 02b4 B908     		.2byte	0x8b9
 2329 02b6 83000000 		.4byte	0x83
 2330 02ba 01       		.uleb128 0x1
 2331 02bb 50       		.byte	0x50
 2332 02bc 00       		.byte	0
 2333 02bd 0A       		.uleb128 0xa
 2334 02be AC000000 		.4byte	.LASF39
 2335 02c2 01       		.byte	0x1
 2336 02c3 CE08     		.2byte	0x8ce
 2337 02c5 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 97


 2338 02c9 0C000000 		.4byte	.LFE13-.LFB13
 2339 02cd 01       		.uleb128 0x1
 2340 02ce 9C       		.byte	0x9c
 2341 02cf E2020000 		.4byte	0x2e2
 2342 02d3 0E       		.uleb128 0xe
 2343 02d4 AF010000 		.4byte	.LASF40
 2344 02d8 01       		.byte	0x1
 2345 02d9 CE08     		.2byte	0x8ce
 2346 02db 83000000 		.4byte	0x83
 2347 02df 01       		.uleb128 0x1
 2348 02e0 50       		.byte	0x50
 2349 02e1 00       		.byte	0
 2350 02e2 0A       		.uleb128 0xa
 2351 02e3 15050000 		.4byte	.LASF41
 2352 02e7 01       		.byte	0x1
 2353 02e8 8509     		.2byte	0x985
 2354 02ea 00000000 		.4byte	.LFB20
 2355 02ee 14000000 		.4byte	.LFE20-.LFB20
 2356 02f2 01       		.uleb128 0x1
 2357 02f3 9C       		.byte	0x9c
 2358 02f4 09030000 		.4byte	0x309
 2359 02f8 0B       		.uleb128 0xb
 2360 02f9 D8020000 		.4byte	.LASF42
 2361 02fd 01       		.byte	0x1
 2362 02fe 8509     		.2byte	0x985
 2363 0300 6B000000 		.4byte	0x6b
 2364 0304 EB000000 		.4byte	.LLST8
 2365 0308 00       		.byte	0
 2366 0309 0F       		.uleb128 0xf
 2367 030a E2000000 		.4byte	.LASF43
 2368 030e 01       		.byte	0x1
 2369 030f 9709     		.2byte	0x997
 2370 0311 6B000000 		.4byte	0x6b
 2371 0315 00000000 		.4byte	.LFB21
 2372 0319 18000000 		.4byte	.LFE21-.LFB21
 2373 031d 01       		.uleb128 0x1
 2374 031e 9C       		.byte	0x9c
 2375 031f 34030000 		.4byte	0x334
 2376 0323 0B       		.uleb128 0xb
 2377 0324 D8020000 		.4byte	.LASF42
 2378 0328 01       		.byte	0x1
 2379 0329 9709     		.2byte	0x997
 2380 032b 6B000000 		.4byte	0x6b
 2381 032f 0C010000 		.4byte	.LLST9
 2382 0333 00       		.byte	0
 2383 0334 0A       		.uleb128 0xa
 2384 0335 46010000 		.4byte	.LASF44
 2385 0339 01       		.byte	0x1
 2386 033a A709     		.2byte	0x9a7
 2387 033c 00000000 		.4byte	.LFB22
 2388 0340 14000000 		.4byte	.LFE22-.LFB22
 2389 0344 01       		.uleb128 0x1
 2390 0345 9C       		.byte	0x9c
 2391 0346 5B030000 		.4byte	0x35b
 2392 034a 0B       		.uleb128 0xb
 2393 034b D8020000 		.4byte	.LASF42
 2394 034f 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 98


 2395 0350 A709     		.2byte	0x9a7
 2396 0352 6B000000 		.4byte	0x6b
 2397 0356 2D010000 		.4byte	.LLST10
 2398 035a 00       		.byte	0
 2399 035b 0A       		.uleb128 0xa
 2400 035c 92020000 		.4byte	.LASF45
 2401 0360 01       		.byte	0x1
 2402 0361 B509     		.2byte	0x9b5
 2403 0363 00000000 		.4byte	.LFB23
 2404 0367 14000000 		.4byte	.LFE23-.LFB23
 2405 036b 01       		.uleb128 0x1
 2406 036c 9C       		.byte	0x9c
 2407 036d 82030000 		.4byte	0x382
 2408 0371 0B       		.uleb128 0xb
 2409 0372 D8020000 		.4byte	.LASF42
 2410 0376 01       		.byte	0x1
 2411 0377 B509     		.2byte	0x9b5
 2412 0379 6B000000 		.4byte	0x6b
 2413 037d 4E010000 		.4byte	.LLST11
 2414 0381 00       		.byte	0
 2415 0382 0A       		.uleb128 0xa
 2416 0383 4F030000 		.4byte	.LASF46
 2417 0387 01       		.byte	0x1
 2418 0388 C409     		.2byte	0x9c4
 2419 038a 00000000 		.4byte	.LFB24
 2420 038e 14000000 		.4byte	.LFE24-.LFB24
 2421 0392 01       		.uleb128 0x1
 2422 0393 9C       		.byte	0x9c
 2423 0394 A9030000 		.4byte	0x3a9
 2424 0398 0B       		.uleb128 0xb
 2425 0399 D8020000 		.4byte	.LASF42
 2426 039d 01       		.byte	0x1
 2427 039e C409     		.2byte	0x9c4
 2428 03a0 6B000000 		.4byte	0x6b
 2429 03a4 6F010000 		.4byte	.LLST12
 2430 03a8 00       		.byte	0
 2431 03a9 0A       		.uleb128 0xa
 2432 03aa F6040000 		.4byte	.LASF47
 2433 03ae 01       		.byte	0x1
 2434 03af D309     		.2byte	0x9d3
 2435 03b1 00000000 		.4byte	.LFB25
 2436 03b5 04000000 		.4byte	.LFE25-.LFB25
 2437 03b9 01       		.uleb128 0x1
 2438 03ba 9C       		.byte	0x9c
 2439 03bb CE030000 		.4byte	0x3ce
 2440 03bf 0E       		.uleb128 0xe
 2441 03c0 47050000 		.4byte	.LASF35
 2442 03c4 01       		.byte	0x1
 2443 03c5 D309     		.2byte	0x9d3
 2444 03c7 6B000000 		.4byte	0x6b
 2445 03cb 01       		.uleb128 0x1
 2446 03cc 50       		.byte	0x50
 2447 03cd 00       		.byte	0
 2448 03ce 0F       		.uleb128 0xf
 2449 03cf FD020000 		.4byte	.LASF48
 2450 03d3 01       		.byte	0x1
 2451 03d4 E708     		.2byte	0x8e7
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 99


 2452 03d6 C6000000 		.4byte	0xc6
 2453 03da 00000000 		.4byte	.LFB14
 2454 03de 20000000 		.4byte	.LFE14-.LFB14
 2455 03e2 01       		.uleb128 0x1
 2456 03e3 9C       		.byte	0x9c
 2457 03e4 36040000 		.4byte	0x436
 2458 03e8 0B       		.uleb128 0xb
 2459 03e9 D8020000 		.4byte	.LASF42
 2460 03ed 01       		.byte	0x1
 2461 03ee E708     		.2byte	0x8e7
 2462 03f0 6B000000 		.4byte	0x6b
 2463 03f4 90010000 		.4byte	.LLST13
 2464 03f8 0B       		.uleb128 0xb
 2465 03f9 61030000 		.4byte	.LASF49
 2466 03fd 01       		.byte	0x1
 2467 03fe E708     		.2byte	0x8e7
 2468 0400 C6000000 		.4byte	0xc6
 2469 0404 B1010000 		.4byte	.LLST14
 2470 0408 12       		.uleb128 0x12
 2471 0409 53000000 		.4byte	.LASF50
 2472 040d 01       		.byte	0x1
 2473 040e E908     		.2byte	0x8e9
 2474 0410 C6000000 		.4byte	0xc6
 2475 0414 01       		.uleb128 0x1
 2476 0415 50       		.byte	0x50
 2477 0416 13       		.uleb128 0x13
 2478 0417 00000000 		.4byte	.LASF51
 2479 041b 01       		.byte	0x1
 2480 041c EA08     		.2byte	0x8ea
 2481 041e 36040000 		.4byte	0x436
 2482 0422 00000020 		.4byte	0x20000000
 2483 0426 14       		.uleb128 0x14
 2484 0427 10000000 		.4byte	.LVL35
 2485 042b A9030000 		.4byte	0x3a9
 2486 042f 15       		.uleb128 0x15
 2487 0430 01       		.uleb128 0x1
 2488 0431 50       		.byte	0x50
 2489 0432 01       		.uleb128 0x1
 2490 0433 30       		.byte	0x30
 2491 0434 00       		.byte	0
 2492 0435 00       		.byte	0
 2493 0436 06       		.uleb128 0x6
 2494 0437 04       		.byte	0x4
 2495 0438 C6000000 		.4byte	0xc6
 2496 043c 0F       		.uleb128 0xf
 2497 043d 21050000 		.4byte	.LASF52
 2498 0441 01       		.byte	0x1
 2499 0442 0909     		.2byte	0x909
 2500 0444 C6000000 		.4byte	0xc6
 2501 0448 00000000 		.4byte	.LFB15
 2502 044c 1C000000 		.4byte	.LFE15-.LFB15
 2503 0450 01       		.uleb128 0x1
 2504 0451 9C       		.byte	0x9c
 2505 0452 86040000 		.4byte	0x486
 2506 0456 0B       		.uleb128 0xb
 2507 0457 D8020000 		.4byte	.LASF42
 2508 045b 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 100


 2509 045c 0909     		.2byte	0x909
 2510 045e 6B000000 		.4byte	0x6b
 2511 0462 DD010000 		.4byte	.LLST15
 2512 0466 13       		.uleb128 0x13
 2513 0467 00000000 		.4byte	.LASF51
 2514 046b 01       		.byte	0x1
 2515 046c 0B09     		.2byte	0x90b
 2516 046e 36040000 		.4byte	0x436
 2517 0472 00000020 		.4byte	0x20000000
 2518 0476 14       		.uleb128 0x14
 2519 0477 0E000000 		.4byte	.LVL41
 2520 047b A9030000 		.4byte	0x3a9
 2521 047f 15       		.uleb128 0x15
 2522 0480 01       		.uleb128 0x1
 2523 0481 50       		.byte	0x50
 2524 0482 01       		.uleb128 0x1
 2525 0483 30       		.byte	0x30
 2526 0484 00       		.byte	0
 2527 0485 00       		.byte	0
 2528 0486 0F       		.uleb128 0xf
 2529 0487 C9020000 		.4byte	.LASF53
 2530 048b 01       		.byte	0x1
 2531 048c 1F09     		.2byte	0x91f
 2532 048e C6000000 		.4byte	0xc6
 2533 0492 00000000 		.4byte	.LFB16
 2534 0496 24000000 		.4byte	.LFE16-.LFB16
 2535 049a 01       		.uleb128 0x1
 2536 049b 9C       		.byte	0x9c
 2537 049c EE040000 		.4byte	0x4ee
 2538 04a0 0B       		.uleb128 0xb
 2539 04a1 D8020000 		.4byte	.LASF42
 2540 04a5 01       		.byte	0x1
 2541 04a6 1F09     		.2byte	0x91f
 2542 04a8 6B000000 		.4byte	0x6b
 2543 04ac FE010000 		.4byte	.LLST16
 2544 04b0 0B       		.uleb128 0xb
 2545 04b1 61030000 		.4byte	.LASF49
 2546 04b5 01       		.byte	0x1
 2547 04b6 1F09     		.2byte	0x91f
 2548 04b8 C6000000 		.4byte	0xc6
 2549 04bc 1F020000 		.4byte	.LLST17
 2550 04c0 12       		.uleb128 0x12
 2551 04c1 53000000 		.4byte	.LASF50
 2552 04c5 01       		.byte	0x1
 2553 04c6 2109     		.2byte	0x921
 2554 04c8 C6000000 		.4byte	0xc6
 2555 04cc 01       		.uleb128 0x1
 2556 04cd 50       		.byte	0x50
 2557 04ce 13       		.uleb128 0x13
 2558 04cf 00000000 		.4byte	.LASF51
 2559 04d3 01       		.byte	0x1
 2560 04d4 2209     		.2byte	0x922
 2561 04d6 36040000 		.4byte	0x436
 2562 04da 00000020 		.4byte	0x20000000
 2563 04de 14       		.uleb128 0x14
 2564 04df 10000000 		.4byte	.LVL45
 2565 04e3 A9030000 		.4byte	0x3a9
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 101


 2566 04e7 15       		.uleb128 0x15
 2567 04e8 01       		.uleb128 0x1
 2568 04e9 50       		.byte	0x50
 2569 04ea 01       		.uleb128 0x1
 2570 04eb 30       		.byte	0x30
 2571 04ec 00       		.byte	0
 2572 04ed 00       		.byte	0
 2573 04ee 0F       		.uleb128 0xf
 2574 04ef 9E040000 		.4byte	.LASF54
 2575 04f3 01       		.byte	0x1
 2576 04f4 3B09     		.2byte	0x93b
 2577 04f6 C6000000 		.4byte	0xc6
 2578 04fa 00000000 		.4byte	.LFB17
 2579 04fe 20000000 		.4byte	.LFE17-.LFB17
 2580 0502 01       		.uleb128 0x1
 2581 0503 9C       		.byte	0x9c
 2582 0504 38050000 		.4byte	0x538
 2583 0508 0B       		.uleb128 0xb
 2584 0509 D8020000 		.4byte	.LASF42
 2585 050d 01       		.byte	0x1
 2586 050e 3B09     		.2byte	0x93b
 2587 0510 6B000000 		.4byte	0x6b
 2588 0514 4B020000 		.4byte	.LLST18
 2589 0518 13       		.uleb128 0x13
 2590 0519 00000000 		.4byte	.LASF51
 2591 051d 01       		.byte	0x1
 2592 051e 3D09     		.2byte	0x93d
 2593 0520 36040000 		.4byte	0x436
 2594 0524 00000020 		.4byte	0x20000000
 2595 0528 14       		.uleb128 0x14
 2596 0529 0E000000 		.4byte	.LVL51
 2597 052d A9030000 		.4byte	0x3a9
 2598 0531 15       		.uleb128 0x15
 2599 0532 01       		.uleb128 0x1
 2600 0533 50       		.byte	0x50
 2601 0534 01       		.uleb128 0x1
 2602 0535 30       		.byte	0x30
 2603 0536 00       		.byte	0
 2604 0537 00       		.byte	0
 2605 0538 0A       		.uleb128 0xa
 2606 0539 50040000 		.4byte	.LASF55
 2607 053d 01       		.byte	0x1
 2608 053e 4E09     		.2byte	0x94e
 2609 0540 00000000 		.4byte	.LFB18
 2610 0544 4C000000 		.4byte	.LFE18-.LFB18
 2611 0548 01       		.uleb128 0x1
 2612 0549 9C       		.byte	0x9c
 2613 054a D7050000 		.4byte	0x5d7
 2614 054e 0B       		.uleb128 0xb
 2615 054f D8020000 		.4byte	.LASF42
 2616 0553 01       		.byte	0x1
 2617 0554 4E09     		.2byte	0x94e
 2618 0556 6B000000 		.4byte	0x6b
 2619 055a 6C020000 		.4byte	.LLST19
 2620 055e 0B       		.uleb128 0xb
 2621 055f DF020000 		.4byte	.LASF56
 2622 0563 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 102


 2623 0564 4E09     		.2byte	0x94e
 2624 0566 6B000000 		.4byte	0x6b
 2625 056a 8D020000 		.4byte	.LLST20
 2626 056e 0C       		.uleb128 0xc
 2627 056f 1B010000 		.4byte	.LASF22
 2628 0573 01       		.byte	0x1
 2629 0574 5009     		.2byte	0x950
 2630 0576 6B000000 		.4byte	0x6b
 2631 057a AE020000 		.4byte	.LLST21
 2632 057e 0C       		.uleb128 0xc
 2633 057f 8B010000 		.4byte	.LASF57
 2634 0583 01       		.byte	0x1
 2635 0584 5109     		.2byte	0x951
 2636 0586 83000000 		.4byte	0x83
 2637 058a C1020000 		.4byte	.LLST22
 2638 058e 0C       		.uleb128 0xc
 2639 058f F8010000 		.4byte	.LASF58
 2640 0593 01       		.byte	0x1
 2641 0594 5209     		.2byte	0x952
 2642 0596 83000000 		.4byte	0x83
 2643 059a D4020000 		.4byte	.LLST23
 2644 059e 16       		.uleb128 0x16
 2645 059f 10000000 		.4byte	.LVL54
 2646 05a3 A9030000 		.4byte	0x3a9
 2647 05a7 B1050000 		.4byte	0x5b1
 2648 05ab 15       		.uleb128 0x15
 2649 05ac 01       		.uleb128 0x1
 2650 05ad 50       		.byte	0x50
 2651 05ae 01       		.uleb128 0x1
 2652 05af 30       		.byte	0x30
 2653 05b0 00       		.byte	0
 2654 05b1 16       		.uleb128 0x16
 2655 05b2 1A000000 		.4byte	.LVL55
 2656 05b6 A9030000 		.4byte	0x3a9
 2657 05ba C4050000 		.4byte	0x5c4
 2658 05be 15       		.uleb128 0x15
 2659 05bf 01       		.uleb128 0x1
 2660 05c0 50       		.byte	0x50
 2661 05c1 01       		.uleb128 0x1
 2662 05c2 30       		.byte	0x30
 2663 05c3 00       		.byte	0
 2664 05c4 0D       		.uleb128 0xd
 2665 05c5 26000000 		.4byte	.LVL57
 2666 05c9 DD0A0000 		.4byte	0xadd
 2667 05cd 0D       		.uleb128 0xd
 2668 05ce 44000000 		.4byte	.LVL62
 2669 05d2 E80A0000 		.4byte	0xae8
 2670 05d6 00       		.byte	0
 2671 05d7 0F       		.uleb128 0xf
 2672 05d8 CC010000 		.4byte	.LASF59
 2673 05dc 01       		.byte	0x1
 2674 05dd 7009     		.2byte	0x970
 2675 05df 6B000000 		.4byte	0x6b
 2676 05e3 00000000 		.4byte	.LFB19
 2677 05e7 2C000000 		.4byte	.LFE19-.LFB19
 2678 05eb 01       		.uleb128 0x1
 2679 05ec 9C       		.byte	0x9c
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 103


 2680 05ed 21060000 		.4byte	0x621
 2681 05f1 0B       		.uleb128 0xb
 2682 05f2 D8020000 		.4byte	.LASF42
 2683 05f6 01       		.byte	0x1
 2684 05f7 7009     		.2byte	0x970
 2685 05f9 6B000000 		.4byte	0x6b
 2686 05fd F2020000 		.4byte	.LLST24
 2687 0601 0C       		.uleb128 0xc
 2688 0602 DF020000 		.4byte	.LASF56
 2689 0606 01       		.byte	0x1
 2690 0607 7209     		.2byte	0x972
 2691 0609 6B000000 		.4byte	0x6b
 2692 060d 13030000 		.4byte	.LLST25
 2693 0611 14       		.uleb128 0x14
 2694 0612 0E000000 		.4byte	.LVL66
 2695 0616 A9030000 		.4byte	0x3a9
 2696 061a 15       		.uleb128 0x15
 2697 061b 01       		.uleb128 0x1
 2698 061c 50       		.byte	0x50
 2699 061d 01       		.uleb128 0x1
 2700 061e 30       		.byte	0x30
 2701 061f 00       		.byte	0
 2702 0620 00       		.byte	0
 2703 0621 10       		.uleb128 0x10
 2704 0622 B9000000 		.4byte	.LASF60
 2705 0626 01       		.byte	0x1
 2706 0627 EB09     		.2byte	0x9eb
 2707 0629 00000000 		.4byte	.LFB26
 2708 062d 18000000 		.4byte	.LFE26-.LFB26
 2709 0631 01       		.uleb128 0x1
 2710 0632 9C       		.byte	0x9c
 2711 0633 0A       		.uleb128 0xa
 2712 0634 C6050000 		.4byte	.LASF61
 2713 0638 01       		.byte	0x1
 2714 0639 FF09     		.2byte	0x9ff
 2715 063b 00000000 		.4byte	.LFB27
 2716 063f 30000000 		.4byte	.LFE27-.LFB27
 2717 0643 01       		.uleb128 0x1
 2718 0644 9C       		.byte	0x9c
 2719 0645 6C060000 		.4byte	0x66c
 2720 0649 0B       		.uleb128 0xb
 2721 064a AD040000 		.4byte	.LASF62
 2722 064e 01       		.byte	0x1
 2723 064f FF09     		.2byte	0x9ff
 2724 0651 83000000 		.4byte	0x83
 2725 0655 26030000 		.4byte	.LLST26
 2726 0659 0D       		.uleb128 0xd
 2727 065a 0E000000 		.4byte	.LVL71
 2728 065e F90A0000 		.4byte	0xaf9
 2729 0662 0D       		.uleb128 0xd
 2730 0663 26000000 		.4byte	.LVL73
 2731 0667 F90A0000 		.4byte	0xaf9
 2732 066b 00       		.byte	0
 2733 066c 0A       		.uleb128 0xa
 2734 066d 3D050000 		.4byte	.LASF63
 2735 0671 01       		.byte	0x1
 2736 0672 160A     		.2byte	0xa16
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 104


 2737 0674 00000000 		.4byte	.LFB28
 2738 0678 14000000 		.4byte	.LFE28-.LFB28
 2739 067c 01       		.uleb128 0x1
 2740 067d 9C       		.byte	0x9c
 2741 067e 9C060000 		.4byte	0x69c
 2742 0682 0B       		.uleb128 0xb
 2743 0683 5E060000 		.4byte	.LASF64
 2744 0687 01       		.byte	0x1
 2745 0688 160A     		.2byte	0xa16
 2746 068a 77000000 		.4byte	0x77
 2747 068e 44030000 		.4byte	.LLST27
 2748 0692 0D       		.uleb128 0xd
 2749 0693 0C000000 		.4byte	.LVL77
 2750 0697 F90A0000 		.4byte	0xaf9
 2751 069b 00       		.byte	0
 2752 069c 0A       		.uleb128 0xa
 2753 069d E8020000 		.4byte	.LASF65
 2754 06a1 01       		.byte	0x1
 2755 06a2 6F02     		.2byte	0x26f
 2756 06a4 00000000 		.4byte	.LFB6
 2757 06a8 64010000 		.4byte	.LFE6-.LFB6
 2758 06ac 01       		.uleb128 0x1
 2759 06ad 9C       		.byte	0x9c
 2760 06ae 9D070000 		.4byte	0x79d
 2761 06b2 0B       		.uleb128 0xb
 2762 06b3 0A010000 		.4byte	.LASF66
 2763 06b7 01       		.byte	0x1
 2764 06b8 6F02     		.2byte	0x26f
 2765 06ba 83000000 		.4byte	0x83
 2766 06be 65030000 		.4byte	.LLST28
 2767 06c2 0C       		.uleb128 0xc
 2768 06c3 0F000000 		.4byte	.LASF67
 2769 06c7 01       		.byte	0x1
 2770 06c8 7502     		.2byte	0x275
 2771 06ca 6B000000 		.4byte	0x6b
 2772 06ce BA030000 		.4byte	.LLST29
 2773 06d2 0C       		.uleb128 0xc
 2774 06d3 69030000 		.4byte	.LASF68
 2775 06d7 01       		.byte	0x1
 2776 06d8 7602     		.2byte	0x276
 2777 06da 6B000000 		.4byte	0x6b
 2778 06de F9030000 		.4byte	.LLST30
 2779 06e2 0C       		.uleb128 0xc
 2780 06e3 2E060000 		.4byte	.LASF69
 2781 06e7 01       		.byte	0x1
 2782 06e8 7702     		.2byte	0x277
 2783 06ea 6B000000 		.4byte	0x6b
 2784 06ee 38040000 		.4byte	.LLST31
 2785 06f2 0C       		.uleb128 0xc
 2786 06f3 6F000000 		.4byte	.LASF70
 2787 06f7 01       		.byte	0x1
 2788 06f8 7802     		.2byte	0x278
 2789 06fa 6B000000 		.4byte	0x6b
 2790 06fe 4B040000 		.4byte	.LLST32
 2791 0702 0C       		.uleb128 0xc
 2792 0703 AF050000 		.4byte	.LASF71
 2793 0707 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 105


 2794 0708 7902     		.2byte	0x279
 2795 070a 6B000000 		.4byte	0x6b
 2796 070e 6A040000 		.4byte	.LLST33
 2797 0712 0C       		.uleb128 0xc
 2798 0713 1B010000 		.4byte	.LASF22
 2799 0717 01       		.byte	0x1
 2800 0718 8402     		.2byte	0x284
 2801 071a 6B000000 		.4byte	0x6b
 2802 071e 9C040000 		.4byte	.LLST34
 2803 0722 0D       		.uleb128 0xd
 2804 0723 10000000 		.4byte	.LVL79
 2805 0727 DD0A0000 		.4byte	0xadd
 2806 072b 16       		.uleb128 0x16
 2807 072c B0000000 		.4byte	.LVL97
 2808 0730 F90A0000 		.4byte	0xaf9
 2809 0734 3E070000 		.4byte	0x73e
 2810 0738 15       		.uleb128 0x15
 2811 0739 01       		.uleb128 0x1
 2812 073a 50       		.byte	0x50
 2813 073b 01       		.uleb128 0x1
 2814 073c 35       		.byte	0x35
 2815 073d 00       		.byte	0
 2816 073e 16       		.uleb128 0x16
 2817 073f CE000000 		.4byte	.LVL100
 2818 0743 F90A0000 		.4byte	0xaf9
 2819 0747 51070000 		.4byte	0x751
 2820 074b 15       		.uleb128 0x15
 2821 074c 01       		.uleb128 0x1
 2822 074d 50       		.byte	0x50
 2823 074e 01       		.uleb128 0x1
 2824 074f 35       		.byte	0x35
 2825 0750 00       		.byte	0
 2826 0751 16       		.uleb128 0x16
 2827 0752 EE000000 		.4byte	.LVL106
 2828 0756 6C060000 		.4byte	0x66c
 2829 075a 64070000 		.4byte	0x764
 2830 075e 15       		.uleb128 0x15
 2831 075f 01       		.uleb128 0x1
 2832 0760 50       		.byte	0x50
 2833 0761 01       		.uleb128 0x1
 2834 0762 35       		.byte	0x35
 2835 0763 00       		.byte	0
 2836 0764 16       		.uleb128 0x16
 2837 0765 00010000 		.4byte	.LVL107
 2838 0769 F90A0000 		.4byte	0xaf9
 2839 076d 77070000 		.4byte	0x777
 2840 0771 15       		.uleb128 0x15
 2841 0772 01       		.uleb128 0x1
 2842 0773 50       		.byte	0x50
 2843 0774 01       		.uleb128 0x1
 2844 0775 35       		.byte	0x35
 2845 0776 00       		.byte	0
 2846 0777 16       		.uleb128 0x16
 2847 0778 08010000 		.4byte	.LVL109
 2848 077c A9030000 		.4byte	0x3a9
 2849 0780 8A070000 		.4byte	0x78a
 2850 0784 15       		.uleb128 0x15
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 106


 2851 0785 01       		.uleb128 0x1
 2852 0786 50       		.byte	0x50
 2853 0787 01       		.uleb128 0x1
 2854 0788 30       		.byte	0x30
 2855 0789 00       		.byte	0
 2856 078a 14       		.uleb128 0x14
 2857 078b 0E010000 		.4byte	.LVL110
 2858 078f E80A0000 		.4byte	0xae8
 2859 0793 15       		.uleb128 0x15
 2860 0794 01       		.uleb128 0x1
 2861 0795 50       		.byte	0x50
 2862 0796 04       		.uleb128 0x4
 2863 0797 91       		.byte	0x91
 2864 0798 5C       		.sleb128 -36
 2865 0799 94       		.byte	0x94
 2866 079a 01       		.byte	0x1
 2867 079b 00       		.byte	0
 2868 079c 00       		.byte	0
 2869 079d 0A       		.uleb128 0xa
 2870 079e 7D040000 		.4byte	.LASF72
 2871 07a2 01       		.byte	0x1
 2872 07a3 4608     		.2byte	0x846
 2873 07a5 00000000 		.4byte	.LFB7
 2874 07a9 44000000 		.4byte	.LFE7-.LFB7
 2875 07ad 01       		.uleb128 0x1
 2876 07ae 9C       		.byte	0x9c
 2877 07af E2070000 		.4byte	0x7e2
 2878 07b3 0B       		.uleb128 0xb
 2879 07b4 38040000 		.4byte	.LASF73
 2880 07b8 01       		.byte	0x1
 2881 07b9 4608     		.2byte	0x846
 2882 07bb 83000000 		.4byte	0x83
 2883 07bf C8040000 		.4byte	.LLST35
 2884 07c3 16       		.uleb128 0x16
 2885 07c4 2E000000 		.4byte	.LVL115
 2886 07c8 6C060000 		.4byte	0x66c
 2887 07cc D8070000 		.4byte	0x7d8
 2888 07d0 15       		.uleb128 0x15
 2889 07d1 01       		.uleb128 0x1
 2890 07d2 50       		.byte	0x50
 2891 07d3 03       		.uleb128 0x3
 2892 07d4 0A       		.byte	0xa
 2893 07d5 E803     		.2byte	0x3e8
 2894 07d7 00       		.byte	0
 2895 07d8 0D       		.uleb128 0xd
 2896 07d9 32000000 		.4byte	.LVL116
 2897 07dd 49020000 		.4byte	0x249
 2898 07e1 00       		.byte	0
 2899 07e2 17       		.uleb128 0x17
 2900 07e3 0F010000 		.4byte	.LASF74
 2901 07e7 01       		.byte	0x1
 2902 07e8 240A     		.2byte	0xa24
 2903 07ea 00000000 		.4byte	.LFB29
 2904 07ee 4C000000 		.4byte	.LFE29-.LFB29
 2905 07f2 01       		.uleb128 0x1
 2906 07f3 9C       		.byte	0x9c
 2907 07f4 09080000 		.4byte	0x809
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 107


 2908 07f8 0B       		.uleb128 0xb
 2909 07f9 0A010000 		.4byte	.LASF66
 2910 07fd 01       		.byte	0x1
 2911 07fe 240A     		.2byte	0xa24
 2912 0800 83000000 		.4byte	0x83
 2913 0804 F4040000 		.4byte	.LLST36
 2914 0808 00       		.byte	0
 2915 0809 10       		.uleb128 0x10
 2916 080a 07060000 		.4byte	.LASF75
 2917 080e 01       		.byte	0x1
 2918 080f 910A     		.2byte	0xa91
 2919 0811 00000000 		.4byte	.LFB33
 2920 0815 10000000 		.4byte	.LFE33-.LFB33
 2921 0819 01       		.uleb128 0x1
 2922 081a 9C       		.byte	0x9c
 2923 081b 10       		.uleb128 0x10
 2924 081c C9000000 		.4byte	.LASF76
 2925 0820 01       		.byte	0x1
 2926 0821 A10A     		.2byte	0xaa1
 2927 0823 00000000 		.4byte	.LFB34
 2928 0827 10000000 		.4byte	.LFE34-.LFB34
 2929 082b 01       		.uleb128 0x1
 2930 082c 9C       		.byte	0x9c
 2931 082d 0A       		.uleb128 0xa
 2932 082e 60050000 		.4byte	.LASF77
 2933 0832 01       		.byte	0x1
 2934 0833 800A     		.2byte	0xa80
 2935 0835 00000000 		.4byte	.LFB32
 2936 0839 18000000 		.4byte	.LFE32-.LFB32
 2937 083d 01       		.uleb128 0x1
 2938 083e 9C       		.byte	0x9c
 2939 083f 4D080000 		.4byte	0x84d
 2940 0843 0D       		.uleb128 0xd
 2941 0844 06000000 		.4byte	.LVL121
 2942 0848 1B080000 		.4byte	0x81b
 2943 084c 00       		.byte	0
 2944 084d 10       		.uleb128 0x10
 2945 084e CE050000 		.4byte	.LASF78
 2946 0852 01       		.byte	0x1
 2947 0853 B10A     		.2byte	0xab1
 2948 0855 00000000 		.4byte	.LFB35
 2949 0859 10000000 		.4byte	.LFE35-.LFB35
 2950 085d 01       		.uleb128 0x1
 2951 085e 9C       		.byte	0x9c
 2952 085f 0A       		.uleb128 0xa
 2953 0860 72060000 		.4byte	.LASF79
 2954 0864 01       		.byte	0x1
 2955 0865 C20A     		.2byte	0xac2
 2956 0867 00000000 		.4byte	.LFB36
 2957 086b 10000000 		.4byte	.LFE36-.LFB36
 2958 086f 01       		.uleb128 0x1
 2959 0870 9C       		.byte	0x9c
 2960 0871 86080000 		.4byte	0x886
 2961 0875 0B       		.uleb128 0xb
 2962 0876 F8010000 		.4byte	.LASF58
 2963 087a 01       		.byte	0x1
 2964 087b C20A     		.2byte	0xac2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 108


 2965 087d 83000000 		.4byte	0x83
 2966 0881 15050000 		.4byte	.LLST37
 2967 0885 00       		.byte	0
 2968 0886 11       		.uleb128 0x11
 2969 0887 2A010000 		.4byte	.LASF81
 2970 088b 01       		.byte	0x1
 2971 088c D20A     		.2byte	0xad2
 2972 088e 83000000 		.4byte	0x83
 2973 0892 00000000 		.4byte	.LFB37
 2974 0896 10000000 		.4byte	.LFE37-.LFB37
 2975 089a 01       		.uleb128 0x1
 2976 089b 9C       		.byte	0x9c
 2977 089c 11       		.uleb128 0x11
 2978 089d 98030000 		.4byte	.LASF82
 2979 08a1 01       		.byte	0x1
 2980 08a2 E20A     		.2byte	0xae2
 2981 08a4 83000000 		.4byte	0x83
 2982 08a8 00000000 		.4byte	.LFB38
 2983 08ac 10000000 		.4byte	.LFE38-.LFB38
 2984 08b0 01       		.uleb128 0x1
 2985 08b1 9C       		.byte	0x9c
 2986 08b2 11       		.uleb128 0x11
 2987 08b3 0C020000 		.4byte	.LASF83
 2988 08b7 01       		.byte	0x1
 2989 08b8 320B     		.2byte	0xb32
 2990 08ba 83000000 		.4byte	0x83
 2991 08be 00000000 		.4byte	.LFB39
 2992 08c2 10000000 		.4byte	.LFE39-.LFB39
 2993 08c6 01       		.uleb128 0x1
 2994 08c7 9C       		.byte	0x9c
 2995 08c8 18       		.uleb128 0x18
 2996 08c9 85060000 		.4byte	.LASF104
 2997 08cd 01       		.byte	0x1
 2998 08ce 870B     		.2byte	0xb87
 2999 08d0 00000000 		.4byte	.LFB43
 3000 08d4 28000000 		.4byte	.LFE43-.LFB43
 3001 08d8 01       		.uleb128 0x1
 3002 08d9 9C       		.byte	0x9c
 3003 08da F6080000 		.4byte	0x8f6
 3004 08de 19       		.uleb128 0x19
 3005 08df 6900     		.ascii	"i\000"
 3006 08e1 01       		.byte	0x1
 3007 08e2 890B     		.2byte	0xb89
 3008 08e4 83000000 		.4byte	0x83
 3009 08e8 36050000 		.4byte	.LLST38
 3010 08ec 0D       		.uleb128 0xd
 3011 08ed 06000000 		.4byte	.LVL124
 3012 08f1 B2080000 		.4byte	0x8b2
 3013 08f5 00       		.byte	0
 3014 08f6 10       		.uleb128 0x10
 3015 08f7 2F020000 		.4byte	.LASF84
 3016 08fb 01       		.byte	0x1
 3017 08fc 3F0B     		.2byte	0xb3f
 3018 08fe 00000000 		.4byte	.LFB40
 3019 0902 0C000000 		.4byte	.LFE40-.LFB40
 3020 0906 01       		.uleb128 0x1
 3021 0907 9C       		.byte	0x9c
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 109


 3022 0908 17       		.uleb128 0x17
 3023 0909 EA010000 		.4byte	.LASF85
 3024 090d 01       		.byte	0x1
 3025 090e 610A     		.2byte	0xa61
 3026 0910 00000000 		.4byte	.LFB31
 3027 0914 44000000 		.4byte	.LFE31-.LFB31
 3028 0918 01       		.uleb128 0x1
 3029 0919 9C       		.byte	0x9c
 3030 091a 6A090000 		.4byte	0x96a
 3031 091e 19       		.uleb128 0x19
 3032 091f 6900     		.ascii	"i\000"
 3033 0921 01       		.byte	0x1
 3034 0922 630A     		.2byte	0xa63
 3035 0924 83000000 		.4byte	0x83
 3036 0928 54050000 		.4byte	.LLST39
 3037 092c 16       		.uleb128 0x16
 3038 092d 1C000000 		.4byte	.LVL134
 3039 0931 CE030000 		.4byte	0x3ce
 3040 0935 48090000 		.4byte	0x948
 3041 0939 15       		.uleb128 0x15
 3042 093a 01       		.uleb128 0x1
 3043 093b 51       		.byte	0x51
 3044 093c 05       		.uleb128 0x5
 3045 093d 03       		.byte	0x3
 3046 093e 00000000 		.4byte	CySysTickServiceCallbacks
 3047 0942 15       		.uleb128 0x15
 3048 0943 01       		.uleb128 0x1
 3049 0944 50       		.byte	0x50
 3050 0945 01       		.uleb128 0x1
 3051 0946 3F       		.byte	0x3f
 3052 0947 00       		.byte	0
 3053 0948 0D       		.uleb128 0xd
 3054 0949 2C000000 		.4byte	.LVL136
 3055 094d 5F080000 		.4byte	0x85f
 3056 0951 0D       		.uleb128 0xd
 3057 0952 30000000 		.4byte	.LVL137
 3058 0956 F6080000 		.4byte	0x8f6
 3059 095a 14       		.uleb128 0x14
 3060 095b 36000000 		.4byte	.LVL138
 3061 095f E2020000 		.4byte	0x2e2
 3062 0963 15       		.uleb128 0x15
 3063 0964 01       		.uleb128 0x1
 3064 0965 50       		.byte	0x50
 3065 0966 01       		.uleb128 0x1
 3066 0967 3F       		.byte	0x3f
 3067 0968 00       		.byte	0
 3068 0969 00       		.byte	0
 3069 096a 0A       		.uleb128 0xa
 3070 096b 2A030000 		.4byte	.LASF86
 3071 096f 01       		.byte	0x1
 3072 0970 440A     		.2byte	0xa44
 3073 0972 00000000 		.4byte	.LFB30
 3074 0976 20000000 		.4byte	.LFE30-.LFB30
 3075 097a 01       		.uleb128 0x1
 3076 097b 9C       		.byte	0x9c
 3077 097c 93090000 		.4byte	0x993
 3078 0980 0D       		.uleb128 0xd
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 110


 3079 0981 0E000000 		.4byte	.LVL139
 3080 0985 08090000 		.4byte	0x908
 3081 0989 0D       		.uleb128 0xd
 3082 098a 18000000 		.4byte	.LVL140
 3083 098e 2D080000 		.4byte	0x82d
 3084 0992 00       		.byte	0
 3085 0993 0F       		.uleb128 0xf
 3086 0994 87050000 		.4byte	.LASF87
 3087 0998 01       		.byte	0x1
 3088 0999 620B     		.2byte	0xb62
 3089 099b E0000000 		.4byte	0xe0
 3090 099f 00000000 		.4byte	.LFB41
 3091 09a3 10000000 		.4byte	.LFE41-.LFB41
 3092 09a7 01       		.uleb128 0x1
 3093 09a8 9C       		.byte	0x9c
 3094 09a9 DA090000 		.4byte	0x9da
 3095 09ad 0B       		.uleb128 0xb
 3096 09ae D8020000 		.4byte	.LASF42
 3097 09b2 01       		.byte	0x1
 3098 09b3 620B     		.2byte	0xb62
 3099 09b5 83000000 		.4byte	0x83
 3100 09b9 73050000 		.4byte	.LLST40
 3101 09bd 0E       		.uleb128 0xe
 3102 09be 7E030000 		.4byte	.LASF88
 3103 09c2 01       		.byte	0x1
 3104 09c3 620B     		.2byte	0xb62
 3105 09c5 E0000000 		.4byte	0xe0
 3106 09c9 01       		.uleb128 0x1
 3107 09ca 51       		.byte	0x51
 3108 09cb 12       		.uleb128 0x12
 3109 09cc 5A000000 		.4byte	.LASF89
 3110 09d0 01       		.byte	0x1
 3111 09d1 640B     		.2byte	0xb64
 3112 09d3 E0000000 		.4byte	0xe0
 3113 09d7 01       		.uleb128 0x1
 3114 09d8 50       		.byte	0x50
 3115 09d9 00       		.byte	0
 3116 09da 0F       		.uleb128 0xf
 3117 09db 53010000 		.4byte	.LASF90
 3118 09df 01       		.byte	0x1
 3119 09e0 7A0B     		.2byte	0xb7a
 3120 09e2 E0000000 		.4byte	0xe0
 3121 09e6 00000000 		.4byte	.LFB42
 3122 09ea 0C000000 		.4byte	.LFE42-.LFB42
 3123 09ee 01       		.uleb128 0x1
 3124 09ef 9C       		.byte	0x9c
 3125 09f0 050A0000 		.4byte	0xa05
 3126 09f4 0B       		.uleb128 0xb
 3127 09f5 D8020000 		.4byte	.LASF42
 3128 09f9 01       		.byte	0x1
 3129 09fa 7A0B     		.2byte	0xb7a
 3130 09fc 83000000 		.4byte	0x83
 3131 0a00 94050000 		.4byte	.LLST41
 3132 0a04 00       		.byte	0
 3133 0a05 0A       		.uleb128 0xa
 3134 0a06 FE010000 		.4byte	.LASF91
 3135 0a0a 01       		.byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 111


 3136 0a0b A70B     		.2byte	0xba7
 3137 0a0d 00000000 		.4byte	.LFB44
 3138 0a11 70000000 		.4byte	.LFE44-.LFB44
 3139 0a15 01       		.uleb128 0x1
 3140 0a16 9C       		.byte	0x9c
 3141 0a17 2A0A0000 		.4byte	0xa2a
 3142 0a1b 0E       		.uleb128 0xe
 3143 0a1c BD050000 		.4byte	.LASF92
 3144 0a20 01       		.byte	0x1
 3145 0a21 A70B     		.2byte	0xba7
 3146 0a23 2A0A0000 		.4byte	0xa2a
 3147 0a27 01       		.uleb128 0x1
 3148 0a28 50       		.byte	0x50
 3149 0a29 00       		.byte	0
 3150 0a2a 06       		.uleb128 0x6
 3151 0a2b 04       		.byte	0x4
 3152 0a2c 83000000 		.4byte	0x83
 3153 0a30 1A       		.uleb128 0x1a
 3154 0a31 E0000000 		.4byte	0xe0
 3155 0a35 400A0000 		.4byte	0xa40
 3156 0a39 1B       		.uleb128 0x1b
 3157 0a3a D9000000 		.4byte	0xd9
 3158 0a3e 04       		.byte	0x4
 3159 0a3f 00       		.byte	0
 3160 0a40 1C       		.uleb128 0x1c
 3161 0a41 9C050000 		.4byte	.LASF93
 3162 0a45 01       		.byte	0x1
 3163 0a46 22       		.byte	0x22
 3164 0a47 300A0000 		.4byte	0xa30
 3165 0a4b 05       		.uleb128 0x5
 3166 0a4c 03       		.byte	0x3
 3167 0a4d 00000000 		.4byte	CySysTickCallbacks
 3168 0a51 1D       		.uleb128 0x1d
 3169 0a52 42040000 		.4byte	.LASF94
 3170 0a56 01       		.byte	0x1
 3171 0a57 1B       		.byte	0x1b
 3172 0a58 83000000 		.4byte	0x83
 3173 0a5c 05       		.uleb128 0x5
 3174 0a5d 03       		.byte	0x3
 3175 0a5e 00000000 		.4byte	cydelayFreqHz
 3176 0a62 1D       		.uleb128 0x1d
 3177 0a63 6E010000 		.4byte	.LASF95
 3178 0a67 01       		.byte	0x1
 3179 0a68 1C       		.byte	0x1c
 3180 0a69 83000000 		.4byte	0x83
 3181 0a6d 05       		.uleb128 0x5
 3182 0a6e 03       		.byte	0x3
 3183 0a6f 00000000 		.4byte	cydelayFreqKhz
 3184 0a73 1D       		.uleb128 0x1d
 3185 0a74 F8050000 		.4byte	.LASF96
 3186 0a78 01       		.byte	0x1
 3187 0a79 1D       		.byte	0x1d
 3188 0a7a 6B000000 		.4byte	0x6b
 3189 0a7e 05       		.uleb128 0x5
 3190 0a7f 03       		.byte	0x3
 3191 0a80 00000000 		.4byte	cydelayFreqMhz
 3192 0a84 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 112


 3193 0a85 DD010000 		.4byte	.LASF97
 3194 0a89 01       		.byte	0x1
 3195 0a8a 1E       		.byte	0x1e
 3196 0a8b 83000000 		.4byte	0x83
 3197 0a8f 05       		.uleb128 0x5
 3198 0a90 03       		.byte	0x3
 3199 0a91 00000000 		.4byte	cydelay32kMs
 3200 0a95 1D       		.uleb128 0x1d
 3201 0a96 9B000000 		.4byte	.LASF98
 3202 0a9a 01       		.byte	0x1
 3203 0a9b 36       		.byte	0x36
 3204 0a9c 83000000 		.4byte	0x83
 3205 0aa0 05       		.uleb128 0x5
 3206 0aa1 03       		.byte	0x3
 3207 0aa2 00000000 		.4byte	CySysTickInitVar
 3208 0aa6 1A       		.uleb128 0x1a
 3209 0aa7 6B000000 		.4byte	0x6b
 3210 0aab B60A0000 		.4byte	0xab6
 3211 0aaf 1B       		.uleb128 0x1b
 3212 0ab0 D9000000 		.4byte	0xd9
 3213 0ab4 2D       		.byte	0x2d
 3214 0ab5 00       		.byte	0
 3215 0ab6 1D       		.uleb128 0x1d
 3216 0ab7 87030000 		.4byte	.LASF99
 3217 0abb 01       		.byte	0x1
 3218 0abc 3B       		.byte	0x3b
 3219 0abd C70A0000 		.4byte	0xac7
 3220 0ac1 05       		.uleb128 0x5
 3221 0ac2 03       		.byte	0x3
 3222 0ac3 00000000 		.4byte	cyImoFreqMhz2Reg
 3223 0ac7 1E       		.uleb128 0x1e
 3224 0ac8 A60A0000 		.4byte	0xaa6
 3225 0acc 1D       		.uleb128 0x1d
 3226 0acd 40000000 		.4byte	.LASF100
 3227 0ad1 01       		.byte	0x1
 3228 0ad2 5B       		.byte	0x5b
 3229 0ad3 83000000 		.4byte	0x83
 3230 0ad7 05       		.uleb128 0x5
 3231 0ad8 03       		.byte	0x3
 3232 0ad9 00000000 		.4byte	CySysClkPumpConfig
 3233 0add 1F       		.uleb128 0x1f
 3234 0ade 7B020000 		.4byte	.LASF105
 3235 0ae2 03       		.byte	0x3
 3236 0ae3 E5       		.byte	0xe5
 3237 0ae4 6B000000 		.4byte	0x6b
 3238 0ae8 20       		.uleb128 0x20
 3239 0ae9 67040000 		.4byte	.LASF106
 3240 0aed 03       		.byte	0x3
 3241 0aee E6       		.byte	0xe6
 3242 0aef F90A0000 		.4byte	0xaf9
 3243 0af3 21       		.uleb128 0x21
 3244 0af4 6B000000 		.4byte	0x6b
 3245 0af8 00       		.byte	0
 3246 0af9 22       		.uleb128 0x22
 3247 0afa BA040000 		.4byte	.LASF107
 3248 0afe 03       		.byte	0x3
 3249 0aff DC       		.byte	0xdc
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 113


 3250 0b00 21       		.uleb128 0x21
 3251 0b01 83000000 		.4byte	0x83
 3252 0b05 00       		.byte	0
 3253 0b06 00       		.byte	0
 3254              		.section	.debug_abbrev,"",%progbits
 3255              	.Ldebug_abbrev0:
 3256 0000 01       		.uleb128 0x1
 3257 0001 11       		.uleb128 0x11
 3258 0002 01       		.byte	0x1
 3259 0003 25       		.uleb128 0x25
 3260 0004 0E       		.uleb128 0xe
 3261 0005 13       		.uleb128 0x13
 3262 0006 0B       		.uleb128 0xb
 3263 0007 03       		.uleb128 0x3
 3264 0008 0E       		.uleb128 0xe
 3265 0009 1B       		.uleb128 0x1b
 3266 000a 0E       		.uleb128 0xe
 3267 000b 55       		.uleb128 0x55
 3268 000c 17       		.uleb128 0x17
 3269 000d 11       		.uleb128 0x11
 3270 000e 01       		.uleb128 0x1
 3271 000f 10       		.uleb128 0x10
 3272 0010 17       		.uleb128 0x17
 3273 0011 00       		.byte	0
 3274 0012 00       		.byte	0
 3275 0013 02       		.uleb128 0x2
 3276 0014 24       		.uleb128 0x24
 3277 0015 00       		.byte	0
 3278 0016 0B       		.uleb128 0xb
 3279 0017 0B       		.uleb128 0xb
 3280 0018 3E       		.uleb128 0x3e
 3281 0019 0B       		.uleb128 0xb
 3282 001a 03       		.uleb128 0x3
 3283 001b 0E       		.uleb128 0xe
 3284 001c 00       		.byte	0
 3285 001d 00       		.byte	0
 3286 001e 03       		.uleb128 0x3
 3287 001f 24       		.uleb128 0x24
 3288 0020 00       		.byte	0
 3289 0021 0B       		.uleb128 0xb
 3290 0022 0B       		.uleb128 0xb
 3291 0023 3E       		.uleb128 0x3e
 3292 0024 0B       		.uleb128 0xb
 3293 0025 03       		.uleb128 0x3
 3294 0026 08       		.uleb128 0x8
 3295 0027 00       		.byte	0
 3296 0028 00       		.byte	0
 3297 0029 04       		.uleb128 0x4
 3298 002a 16       		.uleb128 0x16
 3299 002b 00       		.byte	0
 3300 002c 03       		.uleb128 0x3
 3301 002d 0E       		.uleb128 0xe
 3302 002e 3A       		.uleb128 0x3a
 3303 002f 0B       		.uleb128 0xb
 3304 0030 3B       		.uleb128 0x3b
 3305 0031 05       		.uleb128 0x5
 3306 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 114


 3307 0033 13       		.uleb128 0x13
 3308 0034 00       		.byte	0
 3309 0035 00       		.byte	0
 3310 0036 05       		.uleb128 0x5
 3311 0037 35       		.uleb128 0x35
 3312 0038 00       		.byte	0
 3313 0039 49       		.uleb128 0x49
 3314 003a 13       		.uleb128 0x13
 3315 003b 00       		.byte	0
 3316 003c 00       		.byte	0
 3317 003d 06       		.uleb128 0x6
 3318 003e 0F       		.uleb128 0xf
 3319 003f 00       		.byte	0
 3320 0040 0B       		.uleb128 0xb
 3321 0041 0B       		.uleb128 0xb
 3322 0042 49       		.uleb128 0x49
 3323 0043 13       		.uleb128 0x13
 3324 0044 00       		.byte	0
 3325 0045 00       		.byte	0
 3326 0046 07       		.uleb128 0x7
 3327 0047 15       		.uleb128 0x15
 3328 0048 00       		.byte	0
 3329 0049 27       		.uleb128 0x27
 3330 004a 19       		.uleb128 0x19
 3331 004b 00       		.byte	0
 3332 004c 00       		.byte	0
 3333 004d 08       		.uleb128 0x8
 3334 004e 16       		.uleb128 0x16
 3335 004f 00       		.byte	0
 3336 0050 03       		.uleb128 0x3
 3337 0051 0E       		.uleb128 0xe
 3338 0052 3A       		.uleb128 0x3a
 3339 0053 0B       		.uleb128 0xb
 3340 0054 3B       		.uleb128 0x3b
 3341 0055 0B       		.uleb128 0xb
 3342 0056 49       		.uleb128 0x49
 3343 0057 13       		.uleb128 0x13
 3344 0058 00       		.byte	0
 3345 0059 00       		.byte	0
 3346 005a 09       		.uleb128 0x9
 3347 005b 2E       		.uleb128 0x2e
 3348 005c 00       		.byte	0
 3349 005d 3F       		.uleb128 0x3f
 3350 005e 19       		.uleb128 0x19
 3351 005f 03       		.uleb128 0x3
 3352 0060 0E       		.uleb128 0xe
 3353 0061 3A       		.uleb128 0x3a
 3354 0062 0B       		.uleb128 0xb
 3355 0063 3B       		.uleb128 0x3b
 3356 0064 0B       		.uleb128 0xb
 3357 0065 27       		.uleb128 0x27
 3358 0066 19       		.uleb128 0x19
 3359 0067 11       		.uleb128 0x11
 3360 0068 01       		.uleb128 0x1
 3361 0069 12       		.uleb128 0x12
 3362 006a 06       		.uleb128 0x6
 3363 006b 40       		.uleb128 0x40
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 115


 3364 006c 18       		.uleb128 0x18
 3365 006d 9742     		.uleb128 0x2117
 3366 006f 19       		.uleb128 0x19
 3367 0070 00       		.byte	0
 3368 0071 00       		.byte	0
 3369 0072 0A       		.uleb128 0xa
 3370 0073 2E       		.uleb128 0x2e
 3371 0074 01       		.byte	0x1
 3372 0075 3F       		.uleb128 0x3f
 3373 0076 19       		.uleb128 0x19
 3374 0077 03       		.uleb128 0x3
 3375 0078 0E       		.uleb128 0xe
 3376 0079 3A       		.uleb128 0x3a
 3377 007a 0B       		.uleb128 0xb
 3378 007b 3B       		.uleb128 0x3b
 3379 007c 05       		.uleb128 0x5
 3380 007d 27       		.uleb128 0x27
 3381 007e 19       		.uleb128 0x19
 3382 007f 11       		.uleb128 0x11
 3383 0080 01       		.uleb128 0x1
 3384 0081 12       		.uleb128 0x12
 3385 0082 06       		.uleb128 0x6
 3386 0083 40       		.uleb128 0x40
 3387 0084 18       		.uleb128 0x18
 3388 0085 9742     		.uleb128 0x2117
 3389 0087 19       		.uleb128 0x19
 3390 0088 01       		.uleb128 0x1
 3391 0089 13       		.uleb128 0x13
 3392 008a 00       		.byte	0
 3393 008b 00       		.byte	0
 3394 008c 0B       		.uleb128 0xb
 3395 008d 05       		.uleb128 0x5
 3396 008e 00       		.byte	0
 3397 008f 03       		.uleb128 0x3
 3398 0090 0E       		.uleb128 0xe
 3399 0091 3A       		.uleb128 0x3a
 3400 0092 0B       		.uleb128 0xb
 3401 0093 3B       		.uleb128 0x3b
 3402 0094 05       		.uleb128 0x5
 3403 0095 49       		.uleb128 0x49
 3404 0096 13       		.uleb128 0x13
 3405 0097 02       		.uleb128 0x2
 3406 0098 17       		.uleb128 0x17
 3407 0099 00       		.byte	0
 3408 009a 00       		.byte	0
 3409 009b 0C       		.uleb128 0xc
 3410 009c 34       		.uleb128 0x34
 3411 009d 00       		.byte	0
 3412 009e 03       		.uleb128 0x3
 3413 009f 0E       		.uleb128 0xe
 3414 00a0 3A       		.uleb128 0x3a
 3415 00a1 0B       		.uleb128 0xb
 3416 00a2 3B       		.uleb128 0x3b
 3417 00a3 05       		.uleb128 0x5
 3418 00a4 49       		.uleb128 0x49
 3419 00a5 13       		.uleb128 0x13
 3420 00a6 02       		.uleb128 0x2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 116


 3421 00a7 17       		.uleb128 0x17
 3422 00a8 00       		.byte	0
 3423 00a9 00       		.byte	0
 3424 00aa 0D       		.uleb128 0xd
 3425 00ab 898201   		.uleb128 0x4109
 3426 00ae 00       		.byte	0
 3427 00af 11       		.uleb128 0x11
 3428 00b0 01       		.uleb128 0x1
 3429 00b1 31       		.uleb128 0x31
 3430 00b2 13       		.uleb128 0x13
 3431 00b3 00       		.byte	0
 3432 00b4 00       		.byte	0
 3433 00b5 0E       		.uleb128 0xe
 3434 00b6 05       		.uleb128 0x5
 3435 00b7 00       		.byte	0
 3436 00b8 03       		.uleb128 0x3
 3437 00b9 0E       		.uleb128 0xe
 3438 00ba 3A       		.uleb128 0x3a
 3439 00bb 0B       		.uleb128 0xb
 3440 00bc 3B       		.uleb128 0x3b
 3441 00bd 05       		.uleb128 0x5
 3442 00be 49       		.uleb128 0x49
 3443 00bf 13       		.uleb128 0x13
 3444 00c0 02       		.uleb128 0x2
 3445 00c1 18       		.uleb128 0x18
 3446 00c2 00       		.byte	0
 3447 00c3 00       		.byte	0
 3448 00c4 0F       		.uleb128 0xf
 3449 00c5 2E       		.uleb128 0x2e
 3450 00c6 01       		.byte	0x1
 3451 00c7 3F       		.uleb128 0x3f
 3452 00c8 19       		.uleb128 0x19
 3453 00c9 03       		.uleb128 0x3
 3454 00ca 0E       		.uleb128 0xe
 3455 00cb 3A       		.uleb128 0x3a
 3456 00cc 0B       		.uleb128 0xb
 3457 00cd 3B       		.uleb128 0x3b
 3458 00ce 05       		.uleb128 0x5
 3459 00cf 27       		.uleb128 0x27
 3460 00d0 19       		.uleb128 0x19
 3461 00d1 49       		.uleb128 0x49
 3462 00d2 13       		.uleb128 0x13
 3463 00d3 11       		.uleb128 0x11
 3464 00d4 01       		.uleb128 0x1
 3465 00d5 12       		.uleb128 0x12
 3466 00d6 06       		.uleb128 0x6
 3467 00d7 40       		.uleb128 0x40
 3468 00d8 18       		.uleb128 0x18
 3469 00d9 9742     		.uleb128 0x2117
 3470 00db 19       		.uleb128 0x19
 3471 00dc 01       		.uleb128 0x1
 3472 00dd 13       		.uleb128 0x13
 3473 00de 00       		.byte	0
 3474 00df 00       		.byte	0
 3475 00e0 10       		.uleb128 0x10
 3476 00e1 2E       		.uleb128 0x2e
 3477 00e2 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 117


 3478 00e3 3F       		.uleb128 0x3f
 3479 00e4 19       		.uleb128 0x19
 3480 00e5 03       		.uleb128 0x3
 3481 00e6 0E       		.uleb128 0xe
 3482 00e7 3A       		.uleb128 0x3a
 3483 00e8 0B       		.uleb128 0xb
 3484 00e9 3B       		.uleb128 0x3b
 3485 00ea 05       		.uleb128 0x5
 3486 00eb 27       		.uleb128 0x27
 3487 00ec 19       		.uleb128 0x19
 3488 00ed 11       		.uleb128 0x11
 3489 00ee 01       		.uleb128 0x1
 3490 00ef 12       		.uleb128 0x12
 3491 00f0 06       		.uleb128 0x6
 3492 00f1 40       		.uleb128 0x40
 3493 00f2 18       		.uleb128 0x18
 3494 00f3 9742     		.uleb128 0x2117
 3495 00f5 19       		.uleb128 0x19
 3496 00f6 00       		.byte	0
 3497 00f7 00       		.byte	0
 3498 00f8 11       		.uleb128 0x11
 3499 00f9 2E       		.uleb128 0x2e
 3500 00fa 00       		.byte	0
 3501 00fb 3F       		.uleb128 0x3f
 3502 00fc 19       		.uleb128 0x19
 3503 00fd 03       		.uleb128 0x3
 3504 00fe 0E       		.uleb128 0xe
 3505 00ff 3A       		.uleb128 0x3a
 3506 0100 0B       		.uleb128 0xb
 3507 0101 3B       		.uleb128 0x3b
 3508 0102 05       		.uleb128 0x5
 3509 0103 27       		.uleb128 0x27
 3510 0104 19       		.uleb128 0x19
 3511 0105 49       		.uleb128 0x49
 3512 0106 13       		.uleb128 0x13
 3513 0107 11       		.uleb128 0x11
 3514 0108 01       		.uleb128 0x1
 3515 0109 12       		.uleb128 0x12
 3516 010a 06       		.uleb128 0x6
 3517 010b 40       		.uleb128 0x40
 3518 010c 18       		.uleb128 0x18
 3519 010d 9742     		.uleb128 0x2117
 3520 010f 19       		.uleb128 0x19
 3521 0110 00       		.byte	0
 3522 0111 00       		.byte	0
 3523 0112 12       		.uleb128 0x12
 3524 0113 34       		.uleb128 0x34
 3525 0114 00       		.byte	0
 3526 0115 03       		.uleb128 0x3
 3527 0116 0E       		.uleb128 0xe
 3528 0117 3A       		.uleb128 0x3a
 3529 0118 0B       		.uleb128 0xb
 3530 0119 3B       		.uleb128 0x3b
 3531 011a 05       		.uleb128 0x5
 3532 011b 49       		.uleb128 0x49
 3533 011c 13       		.uleb128 0x13
 3534 011d 02       		.uleb128 0x2
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 118


 3535 011e 18       		.uleb128 0x18
 3536 011f 00       		.byte	0
 3537 0120 00       		.byte	0
 3538 0121 13       		.uleb128 0x13
 3539 0122 34       		.uleb128 0x34
 3540 0123 00       		.byte	0
 3541 0124 03       		.uleb128 0x3
 3542 0125 0E       		.uleb128 0xe
 3543 0126 3A       		.uleb128 0x3a
 3544 0127 0B       		.uleb128 0xb
 3545 0128 3B       		.uleb128 0x3b
 3546 0129 05       		.uleb128 0x5
 3547 012a 49       		.uleb128 0x49
 3548 012b 13       		.uleb128 0x13
 3549 012c 1C       		.uleb128 0x1c
 3550 012d 06       		.uleb128 0x6
 3551 012e 00       		.byte	0
 3552 012f 00       		.byte	0
 3553 0130 14       		.uleb128 0x14
 3554 0131 898201   		.uleb128 0x4109
 3555 0134 01       		.byte	0x1
 3556 0135 11       		.uleb128 0x11
 3557 0136 01       		.uleb128 0x1
 3558 0137 31       		.uleb128 0x31
 3559 0138 13       		.uleb128 0x13
 3560 0139 00       		.byte	0
 3561 013a 00       		.byte	0
 3562 013b 15       		.uleb128 0x15
 3563 013c 8A8201   		.uleb128 0x410a
 3564 013f 00       		.byte	0
 3565 0140 02       		.uleb128 0x2
 3566 0141 18       		.uleb128 0x18
 3567 0142 9142     		.uleb128 0x2111
 3568 0144 18       		.uleb128 0x18
 3569 0145 00       		.byte	0
 3570 0146 00       		.byte	0
 3571 0147 16       		.uleb128 0x16
 3572 0148 898201   		.uleb128 0x4109
 3573 014b 01       		.byte	0x1
 3574 014c 11       		.uleb128 0x11
 3575 014d 01       		.uleb128 0x1
 3576 014e 31       		.uleb128 0x31
 3577 014f 13       		.uleb128 0x13
 3578 0150 01       		.uleb128 0x1
 3579 0151 13       		.uleb128 0x13
 3580 0152 00       		.byte	0
 3581 0153 00       		.byte	0
 3582 0154 17       		.uleb128 0x17
 3583 0155 2E       		.uleb128 0x2e
 3584 0156 01       		.byte	0x1
 3585 0157 3F       		.uleb128 0x3f
 3586 0158 19       		.uleb128 0x19
 3587 0159 03       		.uleb128 0x3
 3588 015a 0E       		.uleb128 0xe
 3589 015b 3A       		.uleb128 0x3a
 3590 015c 0B       		.uleb128 0xb
 3591 015d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 119


 3592 015e 05       		.uleb128 0x5
 3593 015f 27       		.uleb128 0x27
 3594 0160 19       		.uleb128 0x19
 3595 0161 11       		.uleb128 0x11
 3596 0162 01       		.uleb128 0x1
 3597 0163 12       		.uleb128 0x12
 3598 0164 06       		.uleb128 0x6
 3599 0165 40       		.uleb128 0x40
 3600 0166 18       		.uleb128 0x18
 3601 0167 9642     		.uleb128 0x2116
 3602 0169 19       		.uleb128 0x19
 3603 016a 01       		.uleb128 0x1
 3604 016b 13       		.uleb128 0x13
 3605 016c 00       		.byte	0
 3606 016d 00       		.byte	0
 3607 016e 18       		.uleb128 0x18
 3608 016f 2E       		.uleb128 0x2e
 3609 0170 01       		.byte	0x1
 3610 0171 03       		.uleb128 0x3
 3611 0172 0E       		.uleb128 0xe
 3612 0173 3A       		.uleb128 0x3a
 3613 0174 0B       		.uleb128 0xb
 3614 0175 3B       		.uleb128 0x3b
 3615 0176 05       		.uleb128 0x5
 3616 0177 27       		.uleb128 0x27
 3617 0178 19       		.uleb128 0x19
 3618 0179 11       		.uleb128 0x11
 3619 017a 01       		.uleb128 0x1
 3620 017b 12       		.uleb128 0x12
 3621 017c 06       		.uleb128 0x6
 3622 017d 40       		.uleb128 0x40
 3623 017e 18       		.uleb128 0x18
 3624 017f 9642     		.uleb128 0x2116
 3625 0181 19       		.uleb128 0x19
 3626 0182 01       		.uleb128 0x1
 3627 0183 13       		.uleb128 0x13
 3628 0184 00       		.byte	0
 3629 0185 00       		.byte	0
 3630 0186 19       		.uleb128 0x19
 3631 0187 34       		.uleb128 0x34
 3632 0188 00       		.byte	0
 3633 0189 03       		.uleb128 0x3
 3634 018a 08       		.uleb128 0x8
 3635 018b 3A       		.uleb128 0x3a
 3636 018c 0B       		.uleb128 0xb
 3637 018d 3B       		.uleb128 0x3b
 3638 018e 05       		.uleb128 0x5
 3639 018f 49       		.uleb128 0x49
 3640 0190 13       		.uleb128 0x13
 3641 0191 02       		.uleb128 0x2
 3642 0192 17       		.uleb128 0x17
 3643 0193 00       		.byte	0
 3644 0194 00       		.byte	0
 3645 0195 1A       		.uleb128 0x1a
 3646 0196 01       		.uleb128 0x1
 3647 0197 01       		.byte	0x1
 3648 0198 49       		.uleb128 0x49
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 120


 3649 0199 13       		.uleb128 0x13
 3650 019a 01       		.uleb128 0x1
 3651 019b 13       		.uleb128 0x13
 3652 019c 00       		.byte	0
 3653 019d 00       		.byte	0
 3654 019e 1B       		.uleb128 0x1b
 3655 019f 21       		.uleb128 0x21
 3656 01a0 00       		.byte	0
 3657 01a1 49       		.uleb128 0x49
 3658 01a2 13       		.uleb128 0x13
 3659 01a3 2F       		.uleb128 0x2f
 3660 01a4 0B       		.uleb128 0xb
 3661 01a5 00       		.byte	0
 3662 01a6 00       		.byte	0
 3663 01a7 1C       		.uleb128 0x1c
 3664 01a8 34       		.uleb128 0x34
 3665 01a9 00       		.byte	0
 3666 01aa 03       		.uleb128 0x3
 3667 01ab 0E       		.uleb128 0xe
 3668 01ac 3A       		.uleb128 0x3a
 3669 01ad 0B       		.uleb128 0xb
 3670 01ae 3B       		.uleb128 0x3b
 3671 01af 0B       		.uleb128 0xb
 3672 01b0 49       		.uleb128 0x49
 3673 01b1 13       		.uleb128 0x13
 3674 01b2 02       		.uleb128 0x2
 3675 01b3 18       		.uleb128 0x18
 3676 01b4 00       		.byte	0
 3677 01b5 00       		.byte	0
 3678 01b6 1D       		.uleb128 0x1d
 3679 01b7 34       		.uleb128 0x34
 3680 01b8 00       		.byte	0
 3681 01b9 03       		.uleb128 0x3
 3682 01ba 0E       		.uleb128 0xe
 3683 01bb 3A       		.uleb128 0x3a
 3684 01bc 0B       		.uleb128 0xb
 3685 01bd 3B       		.uleb128 0x3b
 3686 01be 0B       		.uleb128 0xb
 3687 01bf 49       		.uleb128 0x49
 3688 01c0 13       		.uleb128 0x13
 3689 01c1 3F       		.uleb128 0x3f
 3690 01c2 19       		.uleb128 0x19
 3691 01c3 02       		.uleb128 0x2
 3692 01c4 18       		.uleb128 0x18
 3693 01c5 00       		.byte	0
 3694 01c6 00       		.byte	0
 3695 01c7 1E       		.uleb128 0x1e
 3696 01c8 26       		.uleb128 0x26
 3697 01c9 00       		.byte	0
 3698 01ca 49       		.uleb128 0x49
 3699 01cb 13       		.uleb128 0x13
 3700 01cc 00       		.byte	0
 3701 01cd 00       		.byte	0
 3702 01ce 1F       		.uleb128 0x1f
 3703 01cf 2E       		.uleb128 0x2e
 3704 01d0 00       		.byte	0
 3705 01d1 3F       		.uleb128 0x3f
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 121


 3706 01d2 19       		.uleb128 0x19
 3707 01d3 03       		.uleb128 0x3
 3708 01d4 0E       		.uleb128 0xe
 3709 01d5 3A       		.uleb128 0x3a
 3710 01d6 0B       		.uleb128 0xb
 3711 01d7 3B       		.uleb128 0x3b
 3712 01d8 0B       		.uleb128 0xb
 3713 01d9 27       		.uleb128 0x27
 3714 01da 19       		.uleb128 0x19
 3715 01db 49       		.uleb128 0x49
 3716 01dc 13       		.uleb128 0x13
 3717 01dd 3C       		.uleb128 0x3c
 3718 01de 19       		.uleb128 0x19
 3719 01df 00       		.byte	0
 3720 01e0 00       		.byte	0
 3721 01e1 20       		.uleb128 0x20
 3722 01e2 2E       		.uleb128 0x2e
 3723 01e3 01       		.byte	0x1
 3724 01e4 3F       		.uleb128 0x3f
 3725 01e5 19       		.uleb128 0x19
 3726 01e6 03       		.uleb128 0x3
 3727 01e7 0E       		.uleb128 0xe
 3728 01e8 3A       		.uleb128 0x3a
 3729 01e9 0B       		.uleb128 0xb
 3730 01ea 3B       		.uleb128 0x3b
 3731 01eb 0B       		.uleb128 0xb
 3732 01ec 27       		.uleb128 0x27
 3733 01ed 19       		.uleb128 0x19
 3734 01ee 3C       		.uleb128 0x3c
 3735 01ef 19       		.uleb128 0x19
 3736 01f0 01       		.uleb128 0x1
 3737 01f1 13       		.uleb128 0x13
 3738 01f2 00       		.byte	0
 3739 01f3 00       		.byte	0
 3740 01f4 21       		.uleb128 0x21
 3741 01f5 05       		.uleb128 0x5
 3742 01f6 00       		.byte	0
 3743 01f7 49       		.uleb128 0x49
 3744 01f8 13       		.uleb128 0x13
 3745 01f9 00       		.byte	0
 3746 01fa 00       		.byte	0
 3747 01fb 22       		.uleb128 0x22
 3748 01fc 2E       		.uleb128 0x2e
 3749 01fd 01       		.byte	0x1
 3750 01fe 3F       		.uleb128 0x3f
 3751 01ff 19       		.uleb128 0x19
 3752 0200 03       		.uleb128 0x3
 3753 0201 0E       		.uleb128 0xe
 3754 0202 3A       		.uleb128 0x3a
 3755 0203 0B       		.uleb128 0xb
 3756 0204 3B       		.uleb128 0x3b
 3757 0205 0B       		.uleb128 0xb
 3758 0206 27       		.uleb128 0x27
 3759 0207 19       		.uleb128 0x19
 3760 0208 3C       		.uleb128 0x3c
 3761 0209 19       		.uleb128 0x19
 3762 020a 00       		.byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 122


 3763 020b 00       		.byte	0
 3764 020c 00       		.byte	0
 3765              		.section	.debug_loc,"",%progbits
 3766              	.Ldebug_loc0:
 3767              	.LLST0:
 3768 0000 00000000 		.4byte	.LVL0
 3769 0004 07000000 		.4byte	.LVL1-1
 3770 0008 0100     		.2byte	0x1
 3771 000a 50       		.byte	0x50
 3772 000b 07000000 		.4byte	.LVL1-1
 3773 000f 1A000000 		.4byte	.LVL5
 3774 0013 0100     		.2byte	0x1
 3775 0015 54       		.byte	0x54
 3776 0016 1A000000 		.4byte	.LVL5
 3777 001a 20000000 		.4byte	.LFE2
 3778 001e 0400     		.2byte	0x4
 3779 0020 F3       		.byte	0xf3
 3780 0021 01       		.uleb128 0x1
 3781 0022 50       		.byte	0x50
 3782 0023 9F       		.byte	0x9f
 3783 0024 00000000 		.4byte	0
 3784 0028 00000000 		.4byte	0
 3785              	.LLST1:
 3786 002c 08000000 		.4byte	.LVL1
 3787 0030 19000000 		.4byte	.LVL4-1
 3788 0034 0100     		.2byte	0x1
 3789 0036 50       		.byte	0x50
 3790 0037 00000000 		.4byte	0
 3791 003b 00000000 		.4byte	0
 3792              	.LLST2:
 3793 003f 10000000 		.4byte	.LVL2
 3794 0043 14000000 		.4byte	.LVL3
 3795 0047 0100     		.2byte	0x1
 3796 0049 52       		.byte	0x52
 3797 004a 14000000 		.4byte	.LVL3
 3798 004e 19000000 		.4byte	.LVL4-1
 3799 0052 0100     		.2byte	0x1
 3800 0054 53       		.byte	0x53
 3801 0055 00000000 		.4byte	0
 3802 0059 00000000 		.4byte	0
 3803              	.LLST3:
 3804 005d 06000000 		.4byte	.LVL7
 3805 0061 11000000 		.4byte	.LVL9-1
 3806 0065 0100     		.2byte	0x1
 3807 0067 50       		.byte	0x50
 3808 0068 00000000 		.4byte	0
 3809 006c 00000000 		.4byte	0
 3810              	.LLST4:
 3811 0070 0E000000 		.4byte	.LVL8
 3812 0074 14000000 		.4byte	.LVL10
 3813 0078 0100     		.2byte	0x1
 3814 007a 54       		.byte	0x54
 3815 007b 14000000 		.4byte	.LVL10
 3816 007f 1C000000 		.4byte	.LFE4
 3817 0083 0100     		.2byte	0x1
 3818 0085 50       		.byte	0x50
 3819 0086 00000000 		.4byte	0
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 123


 3820 008a 00000000 		.4byte	0
 3821              	.LLST5:
 3822 008e 00000000 		.4byte	.LVL11
 3823 0092 07000000 		.4byte	.LVL12-1
 3824 0096 0100     		.2byte	0x1
 3825 0098 50       		.byte	0x50
 3826 0099 07000000 		.4byte	.LVL12-1
 3827 009d 0C000000 		.4byte	.LVL13
 3828 00a1 0100     		.2byte	0x1
 3829 00a3 54       		.byte	0x54
 3830 00a4 0C000000 		.4byte	.LVL13
 3831 00a8 28000000 		.4byte	.LFE5
 3832 00ac 0400     		.2byte	0x4
 3833 00ae F3       		.byte	0xf3
 3834 00af 01       		.uleb128 0x1
 3835 00b0 50       		.byte	0x50
 3836 00b1 9F       		.byte	0x9f
 3837 00b2 00000000 		.4byte	0
 3838 00b6 00000000 		.4byte	0
 3839              	.LLST6:
 3840 00ba 08000000 		.4byte	.LVL12
 3841 00be 1D000000 		.4byte	.LVL14-1
 3842 00c2 0100     		.2byte	0x1
 3843 00c4 50       		.byte	0x50
 3844 00c5 00000000 		.4byte	0
 3845 00c9 00000000 		.4byte	0
 3846              	.LLST7:
 3847 00cd 00000000 		.4byte	.LVL15
 3848 00d1 04000000 		.4byte	.LVL16
 3849 00d5 0100     		.2byte	0x1
 3850 00d7 50       		.byte	0x50
 3851 00d8 04000000 		.4byte	.LVL16
 3852 00dc 14000000 		.4byte	.LFE11
 3853 00e0 0100     		.2byte	0x1
 3854 00e2 52       		.byte	0x52
 3855 00e3 00000000 		.4byte	0
 3856 00e7 00000000 		.4byte	0
 3857              	.LLST8:
 3858 00eb 00000000 		.4byte	.LVL21
 3859 00ef 04000000 		.4byte	.LVL22
 3860 00f3 0100     		.2byte	0x1
 3861 00f5 50       		.byte	0x50
 3862 00f6 04000000 		.4byte	.LVL22
 3863 00fa 14000000 		.4byte	.LFE20
 3864 00fe 0400     		.2byte	0x4
 3865 0100 F3       		.byte	0xf3
 3866 0101 01       		.uleb128 0x1
 3867 0102 50       		.byte	0x50
 3868 0103 9F       		.byte	0x9f
 3869 0104 00000000 		.4byte	0
 3870 0108 00000000 		.4byte	0
 3871              	.LLST9:
 3872 010c 00000000 		.4byte	.LVL23
 3873 0110 08000000 		.4byte	.LVL24
 3874 0114 0100     		.2byte	0x1
 3875 0116 50       		.byte	0x50
 3876 0117 08000000 		.4byte	.LVL24
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 124


 3877 011b 18000000 		.4byte	.LFE21
 3878 011f 0400     		.2byte	0x4
 3879 0121 F3       		.byte	0xf3
 3880 0122 01       		.uleb128 0x1
 3881 0123 50       		.byte	0x50
 3882 0124 9F       		.byte	0x9f
 3883 0125 00000000 		.4byte	0
 3884 0129 00000000 		.4byte	0
 3885              	.LLST10:
 3886 012d 00000000 		.4byte	.LVL25
 3887 0131 04000000 		.4byte	.LVL26
 3888 0135 0100     		.2byte	0x1
 3889 0137 50       		.byte	0x50
 3890 0138 04000000 		.4byte	.LVL26
 3891 013c 14000000 		.4byte	.LFE22
 3892 0140 0400     		.2byte	0x4
 3893 0142 F3       		.byte	0xf3
 3894 0143 01       		.uleb128 0x1
 3895 0144 50       		.byte	0x50
 3896 0145 9F       		.byte	0x9f
 3897 0146 00000000 		.4byte	0
 3898 014a 00000000 		.4byte	0
 3899              	.LLST11:
 3900 014e 00000000 		.4byte	.LVL27
 3901 0152 04000000 		.4byte	.LVL28
 3902 0156 0100     		.2byte	0x1
 3903 0158 50       		.byte	0x50
 3904 0159 04000000 		.4byte	.LVL28
 3905 015d 14000000 		.4byte	.LFE23
 3906 0161 0400     		.2byte	0x4
 3907 0163 F3       		.byte	0xf3
 3908 0164 01       		.uleb128 0x1
 3909 0165 50       		.byte	0x50
 3910 0166 9F       		.byte	0x9f
 3911 0167 00000000 		.4byte	0
 3912 016b 00000000 		.4byte	0
 3913              	.LLST12:
 3914 016f 00000000 		.4byte	.LVL29
 3915 0173 04000000 		.4byte	.LVL30
 3916 0177 0100     		.2byte	0x1
 3917 0179 50       		.byte	0x50
 3918 017a 04000000 		.4byte	.LVL30
 3919 017e 14000000 		.4byte	.LFE24
 3920 0182 0400     		.2byte	0x4
 3921 0184 F3       		.byte	0xf3
 3922 0185 01       		.uleb128 0x1
 3923 0186 50       		.byte	0x50
 3924 0187 9F       		.byte	0x9f
 3925 0188 00000000 		.4byte	0
 3926 018c 00000000 		.4byte	0
 3927              	.LLST13:
 3928 0190 00000000 		.4byte	.LVL32
 3929 0194 0C000000 		.4byte	.LVL34
 3930 0198 0100     		.2byte	0x1
 3931 019a 50       		.byte	0x50
 3932 019b 0C000000 		.4byte	.LVL34
 3933 019f 20000000 		.4byte	.LFE14
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 125


 3934 01a3 0400     		.2byte	0x4
 3935 01a5 F3       		.byte	0xf3
 3936 01a6 01       		.uleb128 0x1
 3937 01a7 50       		.byte	0x50
 3938 01a8 9F       		.byte	0x9f
 3939 01a9 00000000 		.4byte	0
 3940 01ad 00000000 		.4byte	0
 3941              	.LLST14:
 3942 01b1 00000000 		.4byte	.LVL32
 3943 01b5 0F000000 		.4byte	.LVL35-1
 3944 01b9 0100     		.2byte	0x1
 3945 01bb 51       		.byte	0x51
 3946 01bc 0F000000 		.4byte	.LVL35-1
 3947 01c0 1E000000 		.4byte	.LVL37
 3948 01c4 0100     		.2byte	0x1
 3949 01c6 55       		.byte	0x55
 3950 01c7 1E000000 		.4byte	.LVL37
 3951 01cb 20000000 		.4byte	.LFE14
 3952 01cf 0400     		.2byte	0x4
 3953 01d1 F3       		.byte	0xf3
 3954 01d2 01       		.uleb128 0x1
 3955 01d3 51       		.byte	0x51
 3956 01d4 9F       		.byte	0x9f
 3957 01d5 00000000 		.4byte	0
 3958 01d9 00000000 		.4byte	0
 3959              	.LLST15:
 3960 01dd 00000000 		.4byte	.LVL38
 3961 01e1 0A000000 		.4byte	.LVL40
 3962 01e5 0100     		.2byte	0x1
 3963 01e7 50       		.byte	0x50
 3964 01e8 0A000000 		.4byte	.LVL40
 3965 01ec 1C000000 		.4byte	.LFE15
 3966 01f0 0400     		.2byte	0x4
 3967 01f2 F3       		.byte	0xf3
 3968 01f3 01       		.uleb128 0x1
 3969 01f4 50       		.byte	0x50
 3970 01f5 9F       		.byte	0x9f
 3971 01f6 00000000 		.4byte	0
 3972 01fa 00000000 		.4byte	0
 3973              	.LLST16:
 3974 01fe 00000000 		.4byte	.LVL42
 3975 0202 0C000000 		.4byte	.LVL44
 3976 0206 0100     		.2byte	0x1
 3977 0208 50       		.byte	0x50
 3978 0209 0C000000 		.4byte	.LVL44
 3979 020d 24000000 		.4byte	.LFE16
 3980 0211 0400     		.2byte	0x4
 3981 0213 F3       		.byte	0xf3
 3982 0214 01       		.uleb128 0x1
 3983 0215 50       		.byte	0x50
 3984 0216 9F       		.byte	0x9f
 3985 0217 00000000 		.4byte	0
 3986 021b 00000000 		.4byte	0
 3987              	.LLST17:
 3988 021f 00000000 		.4byte	.LVL42
 3989 0223 0F000000 		.4byte	.LVL45-1
 3990 0227 0100     		.2byte	0x1
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 126


 3991 0229 51       		.byte	0x51
 3992 022a 0F000000 		.4byte	.LVL45-1
 3993 022e 1C000000 		.4byte	.LVL47
 3994 0232 0100     		.2byte	0x1
 3995 0234 55       		.byte	0x55
 3996 0235 1C000000 		.4byte	.LVL47
 3997 0239 24000000 		.4byte	.LFE16
 3998 023d 0400     		.2byte	0x4
 3999 023f F3       		.byte	0xf3
 4000 0240 01       		.uleb128 0x1
 4001 0241 51       		.byte	0x51
 4002 0242 9F       		.byte	0x9f
 4003 0243 00000000 		.4byte	0
 4004 0247 00000000 		.4byte	0
 4005              	.LLST18:
 4006 024b 00000000 		.4byte	.LVL48
 4007 024f 0A000000 		.4byte	.LVL50
 4008 0253 0100     		.2byte	0x1
 4009 0255 50       		.byte	0x50
 4010 0256 0A000000 		.4byte	.LVL50
 4011 025a 20000000 		.4byte	.LFE17
 4012 025e 0400     		.2byte	0x4
 4013 0260 F3       		.byte	0xf3
 4014 0261 01       		.uleb128 0x1
 4015 0262 50       		.byte	0x50
 4016 0263 9F       		.byte	0x9f
 4017 0264 00000000 		.4byte	0
 4018 0268 00000000 		.4byte	0
 4019              	.LLST19:
 4020 026c 00000000 		.4byte	.LVL52
 4021 0270 0C000000 		.4byte	.LVL53
 4022 0274 0100     		.2byte	0x1
 4023 0276 50       		.byte	0x50
 4024 0277 0C000000 		.4byte	.LVL53
 4025 027b 4C000000 		.4byte	.LFE18
 4026 027f 0400     		.2byte	0x4
 4027 0281 F3       		.byte	0xf3
 4028 0282 01       		.uleb128 0x1
 4029 0283 50       		.byte	0x50
 4030 0284 9F       		.byte	0x9f
 4031 0285 00000000 		.4byte	0
 4032 0289 00000000 		.4byte	0
 4033              	.LLST20:
 4034 028d 00000000 		.4byte	.LVL52
 4035 0291 0F000000 		.4byte	.LVL54-1
 4036 0295 0100     		.2byte	0x1
 4037 0297 51       		.byte	0x51
 4038 0298 0F000000 		.4byte	.LVL54-1
 4039 029c 4C000000 		.4byte	.LFE18
 4040 02a0 0400     		.2byte	0x4
 4041 02a2 F3       		.byte	0xf3
 4042 02a3 01       		.uleb128 0x1
 4043 02a4 51       		.byte	0x51
 4044 02a5 9F       		.byte	0x9f
 4045 02a6 00000000 		.4byte	0
 4046 02aa 00000000 		.4byte	0
 4047              	.LLST21:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 127


 4048 02ae 26000000 		.4byte	.LVL57
 4049 02b2 43000000 		.4byte	.LVL62-1
 4050 02b6 0100     		.2byte	0x1
 4051 02b8 50       		.byte	0x50
 4052 02b9 00000000 		.4byte	0
 4053 02bd 00000000 		.4byte	0
 4054              	.LLST22:
 4055 02c1 22000000 		.4byte	.LVL56
 4056 02c5 3C000000 		.4byte	.LVL60
 4057 02c9 0100     		.2byte	0x1
 4058 02cb 55       		.byte	0x55
 4059 02cc 00000000 		.4byte	0
 4060 02d0 00000000 		.4byte	0
 4061              	.LLST23:
 4062 02d4 32000000 		.4byte	.LVL58
 4063 02d8 3E000000 		.4byte	.LVL61
 4064 02dc 0100     		.2byte	0x1
 4065 02de 53       		.byte	0x53
 4066 02df 3E000000 		.4byte	.LVL61
 4067 02e3 44000000 		.4byte	.LVL63
 4068 02e7 0100     		.2byte	0x1
 4069 02e9 55       		.byte	0x55
 4070 02ea 00000000 		.4byte	0
 4071 02ee 00000000 		.4byte	0
 4072              	.LLST24:
 4073 02f2 00000000 		.4byte	.LVL64
 4074 02f6 0A000000 		.4byte	.LVL65
 4075 02fa 0100     		.2byte	0x1
 4076 02fc 50       		.byte	0x50
 4077 02fd 0A000000 		.4byte	.LVL65
 4078 0301 2C000000 		.4byte	.LFE19
 4079 0305 0400     		.2byte	0x4
 4080 0307 F3       		.byte	0xf3
 4081 0308 01       		.uleb128 0x1
 4082 0309 50       		.byte	0x50
 4083 030a 9F       		.byte	0x9f
 4084 030b 00000000 		.4byte	0
 4085 030f 00000000 		.4byte	0
 4086              	.LLST25:
 4087 0313 24000000 		.4byte	.LVL67
 4088 0317 26000000 		.4byte	.LVL68
 4089 031b 0100     		.2byte	0x1
 4090 031d 50       		.byte	0x50
 4091 031e 00000000 		.4byte	0
 4092 0322 00000000 		.4byte	0
 4093              	.LLST26:
 4094 0326 00000000 		.4byte	.LVL69
 4095 032a 06000000 		.4byte	.LVL70
 4096 032e 0100     		.2byte	0x1
 4097 0330 50       		.byte	0x50
 4098 0331 06000000 		.4byte	.LVL70
 4099 0335 26000000 		.4byte	.LVL74
 4100 0339 0100     		.2byte	0x1
 4101 033b 54       		.byte	0x54
 4102 033c 00000000 		.4byte	0
 4103 0340 00000000 		.4byte	0
 4104              	.LLST27:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 128


 4105 0344 00000000 		.4byte	.LVL75
 4106 0348 08000000 		.4byte	.LVL76
 4107 034c 0100     		.2byte	0x1
 4108 034e 50       		.byte	0x50
 4109 034f 08000000 		.4byte	.LVL76
 4110 0353 14000000 		.4byte	.LFE28
 4111 0357 0400     		.2byte	0x4
 4112 0359 F3       		.byte	0xf3
 4113 035a 01       		.uleb128 0x1
 4114 035b 50       		.byte	0x50
 4115 035c 9F       		.byte	0x9f
 4116 035d 00000000 		.4byte	0
 4117 0361 00000000 		.4byte	0
 4118              	.LLST28:
 4119 0365 00000000 		.4byte	.LVL78
 4120 0369 0F000000 		.4byte	.LVL79-1
 4121 036d 0100     		.2byte	0x1
 4122 036f 50       		.byte	0x50
 4123 0370 0F000000 		.4byte	.LVL79-1
 4124 0374 D4000000 		.4byte	.LVL101
 4125 0378 0100     		.2byte	0x1
 4126 037a 54       		.byte	0x54
 4127 037b D4000000 		.4byte	.LVL101
 4128 037f 02010000 		.4byte	.LVL108
 4129 0383 0700     		.2byte	0x7
 4130 0385 74       		.byte	0x74
 4131 0386 B39C8080 		.sleb128 -268431821
 4131      7F
 4132 038b 9F       		.byte	0x9f
 4133 038c 02010000 		.4byte	.LVL108
 4134 0390 08010000 		.4byte	.LVL109
 4135 0394 0100     		.2byte	0x1
 4136 0396 54       		.byte	0x54
 4137 0397 08010000 		.4byte	.LVL109
 4138 039b 10010000 		.4byte	.LVL111
 4139 039f 0300     		.2byte	0x3
 4140 03a1 77       		.byte	0x77
 4141 03a2 03       		.sleb128 3
 4142 03a3 9F       		.byte	0x9f
 4143 03a4 10010000 		.4byte	.LVL111
 4144 03a8 64010000 		.4byte	.LFE6
 4145 03ac 0400     		.2byte	0x4
 4146 03ae F3       		.byte	0xf3
 4147 03af 01       		.uleb128 0x1
 4148 03b0 50       		.byte	0x50
 4149 03b1 9F       		.byte	0x9f
 4150 03b2 00000000 		.4byte	0
 4151 03b6 00000000 		.4byte	0
 4152              	.LLST29:
 4153 03ba 2A000000 		.4byte	.LVL81
 4154 03be 34000000 		.4byte	.LVL83
 4155 03c2 0100     		.2byte	0x1
 4156 03c4 5A       		.byte	0x5a
 4157 03c5 46000000 		.4byte	.LVL84
 4158 03c9 50000000 		.4byte	.LVL86
 4159 03cd 0100     		.2byte	0x1
 4160 03cf 5A       		.byte	0x5a
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 129


 4161 03d0 62000000 		.4byte	.LVL87
 4162 03d4 6C000000 		.4byte	.LVL89
 4163 03d8 0100     		.2byte	0x1
 4164 03da 5A       		.byte	0x5a
 4165 03db 7E000000 		.4byte	.LVL90
 4166 03df 88000000 		.4byte	.LVL92
 4167 03e3 0100     		.2byte	0x1
 4168 03e5 5A       		.byte	0x5a
 4169 03e6 90000000 		.4byte	.LVL93
 4170 03ea 02010000 		.4byte	.LVL108
 4171 03ee 0100     		.2byte	0x1
 4172 03f0 5A       		.byte	0x5a
 4173 03f1 00000000 		.4byte	0
 4174 03f5 00000000 		.4byte	0
 4175              	.LLST30:
 4176 03f9 32000000 		.4byte	.LVL82
 4177 03fd 34000000 		.4byte	.LVL83
 4178 0401 0100     		.2byte	0x1
 4179 0403 59       		.byte	0x59
 4180 0404 4E000000 		.4byte	.LVL85
 4181 0408 50000000 		.4byte	.LVL86
 4182 040c 0100     		.2byte	0x1
 4183 040e 59       		.byte	0x59
 4184 040f 6A000000 		.4byte	.LVL88
 4185 0413 6C000000 		.4byte	.LVL89
 4186 0417 0100     		.2byte	0x1
 4187 0419 59       		.byte	0x59
 4188 041a 86000000 		.4byte	.LVL91
 4189 041e 88000000 		.4byte	.LVL92
 4190 0422 0100     		.2byte	0x1
 4191 0424 59       		.byte	0x59
 4192 0425 98000000 		.4byte	.LVL94
 4193 0429 02010000 		.4byte	.LVL108
 4194 042d 0100     		.2byte	0x1
 4195 042f 59       		.byte	0x59
 4196 0430 00000000 		.4byte	0
 4197 0434 00000000 		.4byte	0
 4198              	.LLST31:
 4199 0438 9C000000 		.4byte	.LVL95
 4200 043c 02010000 		.4byte	.LVL108
 4201 0440 0100     		.2byte	0x1
 4202 0442 56       		.byte	0x56
 4203 0443 00000000 		.4byte	0
 4204 0447 00000000 		.4byte	0
 4205              	.LLST32:
 4206 044b B0000000 		.4byte	.LVL97
 4207 044f B4000000 		.4byte	.LVL98
 4208 0453 0200     		.2byte	0x2
 4209 0455 49       		.byte	0x49
 4210 0456 9F       		.byte	0x9f
 4211 0457 BC000000 		.4byte	.LVL99
 4212 045b 02010000 		.4byte	.LVL108
 4213 045f 0100     		.2byte	0x1
 4214 0461 55       		.byte	0x55
 4215 0462 00000000 		.4byte	0
 4216 0466 00000000 		.4byte	0
 4217              	.LLST33:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 130


 4218 046a D8000000 		.4byte	.LVL102
 4219 046e DE000000 		.4byte	.LVL103
 4220 0472 0100     		.2byte	0x1
 4221 0474 53       		.byte	0x53
 4222 0475 DE000000 		.4byte	.LVL103
 4223 0479 E0000000 		.4byte	.LVL104
 4224 047d 0400     		.2byte	0x4
 4225 047f 72       		.byte	0x72
 4226 0480 00       		.sleb128 0
 4227 0481 06       		.byte	0x6
 4228 0482 9F       		.byte	0x9f
 4229 0483 E0000000 		.4byte	.LVL104
 4230 0487 E2000000 		.4byte	.LVL105
 4231 048b 0700     		.2byte	0x7
 4232 048d 0C       		.byte	0xc
 4233 048e 28FF0B40 		.4byte	0x400bff28
 4234 0492 06       		.byte	0x6
 4235 0493 9F       		.byte	0x9f
 4236 0494 00000000 		.4byte	0
 4237 0498 00000000 		.4byte	0
 4238              	.LLST34:
 4239 049c 12000000 		.4byte	.LVL80
 4240 04a0 AA000000 		.4byte	.LVL96
 4241 04a4 0200     		.2byte	0x2
 4242 04a6 91       		.byte	0x91
 4243 04a7 5C       		.sleb128 -36
 4244 04a8 B4000000 		.4byte	.LVL98
 4245 04ac BC000000 		.4byte	.LVL99
 4246 04b0 0200     		.2byte	0x2
 4247 04b2 91       		.byte	0x91
 4248 04b3 5C       		.sleb128 -36
 4249 04b4 02010000 		.4byte	.LVL108
 4250 04b8 08010000 		.4byte	.LVL109
 4251 04bc 0200     		.2byte	0x2
 4252 04be 91       		.byte	0x91
 4253 04bf 5C       		.sleb128 -36
 4254 04c0 00000000 		.4byte	0
 4255 04c4 00000000 		.4byte	0
 4256              	.LLST35:
 4257 04c8 00000000 		.4byte	.LVL112
 4258 04cc 14000000 		.4byte	.LVL113
 4259 04d0 0100     		.2byte	0x1
 4260 04d2 50       		.byte	0x50
 4261 04d3 14000000 		.4byte	.LVL113
 4262 04d7 18000000 		.4byte	.LVL114
 4263 04db 0100     		.2byte	0x1
 4264 04dd 53       		.byte	0x53
 4265 04de 18000000 		.4byte	.LVL114
 4266 04e2 44000000 		.4byte	.LFE7
 4267 04e6 0400     		.2byte	0x4
 4268 04e8 F3       		.byte	0xf3
 4269 04e9 01       		.uleb128 0x1
 4270 04ea 50       		.byte	0x50
 4271 04eb 9F       		.byte	0x9f
 4272 04ec 00000000 		.4byte	0
 4273 04f0 00000000 		.4byte	0
 4274              	.LLST36:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 131


 4275 04f4 00000000 		.4byte	.LVL117
 4276 04f8 1A000000 		.4byte	.LVL118
 4277 04fc 0100     		.2byte	0x1
 4278 04fe 50       		.byte	0x50
 4279 04ff 1A000000 		.4byte	.LVL118
 4280 0503 4C000000 		.4byte	.LFE29
 4281 0507 0400     		.2byte	0x4
 4282 0509 F3       		.byte	0xf3
 4283 050a 01       		.uleb128 0x1
 4284 050b 50       		.byte	0x50
 4285 050c 9F       		.byte	0x9f
 4286 050d 00000000 		.4byte	0
 4287 0511 00000000 		.4byte	0
 4288              	.LLST37:
 4289 0515 00000000 		.4byte	.LVL122
 4290 0519 02000000 		.4byte	.LVL123
 4291 051d 0100     		.2byte	0x1
 4292 051f 50       		.byte	0x50
 4293 0520 02000000 		.4byte	.LVL123
 4294 0524 10000000 		.4byte	.LFE36
 4295 0528 0400     		.2byte	0x4
 4296 052a F3       		.byte	0xf3
 4297 052b 01       		.uleb128 0x1
 4298 052c 50       		.byte	0x50
 4299 052d 9F       		.byte	0x9f
 4300 052e 00000000 		.4byte	0
 4301 0532 00000000 		.4byte	0
 4302              	.LLST38:
 4303 0536 0C000000 		.4byte	.LVL125
 4304 053a 1C000000 		.4byte	.LVL128
 4305 053e 0100     		.2byte	0x1
 4306 0540 54       		.byte	0x54
 4307 0541 1E000000 		.4byte	.LVL129
 4308 0545 22000000 		.4byte	.LVL130
 4309 0549 0100     		.2byte	0x1
 4310 054b 54       		.byte	0x54
 4311 054c 00000000 		.4byte	0
 4312 0550 00000000 		.4byte	0
 4313              	.LLST39:
 4314 0554 02000000 		.4byte	.LVL131
 4315 0558 06000000 		.4byte	.LVL132
 4316 055c 0200     		.2byte	0x2
 4317 055e 30       		.byte	0x30
 4318 055f 9F       		.byte	0x9f
 4319 0560 06000000 		.4byte	.LVL132
 4320 0564 1B000000 		.4byte	.LVL134-1
 4321 0568 0100     		.2byte	0x1
 4322 056a 53       		.byte	0x53
 4323 056b 00000000 		.4byte	0
 4324 056f 00000000 		.4byte	0
 4325              	.LLST40:
 4326 0573 00000000 		.4byte	.LVL141
 4327 0577 06000000 		.4byte	.LVL142
 4328 057b 0100     		.2byte	0x1
 4329 057d 50       		.byte	0x50
 4330 057e 06000000 		.4byte	.LVL142
 4331 0582 10000000 		.4byte	.LFE41
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 132


 4332 0586 0400     		.2byte	0x4
 4333 0588 F3       		.byte	0xf3
 4334 0589 01       		.uleb128 0x1
 4335 058a 50       		.byte	0x50
 4336 058b 9F       		.byte	0x9f
 4337 058c 00000000 		.4byte	0
 4338 0590 00000000 		.4byte	0
 4339              	.LLST41:
 4340 0594 00000000 		.4byte	.LVL143
 4341 0598 02000000 		.4byte	.LVL144
 4342 059c 0100     		.2byte	0x1
 4343 059e 50       		.byte	0x50
 4344 059f 02000000 		.4byte	.LVL144
 4345 05a3 0C000000 		.4byte	.LFE42
 4346 05a7 0400     		.2byte	0x4
 4347 05a9 F3       		.byte	0xf3
 4348 05aa 01       		.uleb128 0x1
 4349 05ab 50       		.byte	0x50
 4350 05ac 9F       		.byte	0x9f
 4351 05ad 00000000 		.4byte	0
 4352 05b1 00000000 		.4byte	0
 4353              		.section	.debug_aranges,"",%progbits
 4354 0000 7C010000 		.4byte	0x17c
 4355 0004 0200     		.2byte	0x2
 4356 0006 00000000 		.4byte	.Ldebug_info0
 4357 000a 04       		.byte	0x4
 4358 000b 00       		.byte	0
 4359 000c 0000     		.2byte	0
 4360 000e 0000     		.2byte	0
 4361 0010 00000000 		.4byte	.LFB0
 4362 0014 14000000 		.4byte	.LFE0-.LFB0
 4363 0018 00000000 		.4byte	.LFB1
 4364 001c 10000000 		.4byte	.LFE1-.LFB1
 4365 0020 00000000 		.4byte	.LFB2
 4366 0024 20000000 		.4byte	.LFE2-.LFB2
 4367 0028 00000000 		.4byte	.LFB3
 4368 002c 38000000 		.4byte	.LFE3-.LFB3
 4369 0030 00000000 		.4byte	.LFB4
 4370 0034 1C000000 		.4byte	.LFE4-.LFB4
 4371 0038 00000000 		.4byte	.LFB5
 4372 003c 28000000 		.4byte	.LFE5-.LFB5
 4373 0040 00000000 		.4byte	.LFB8
 4374 0044 20000000 		.4byte	.LFE8-.LFB8
 4375 0048 00000000 		.4byte	.LFB9
 4376 004c 10000000 		.4byte	.LFE9-.LFB9
 4377 0050 00000000 		.4byte	.LFB10
 4378 0054 0C000000 		.4byte	.LFE10-.LFB10
 4379 0058 00000000 		.4byte	.LFB11
 4380 005c 14000000 		.4byte	.LFE11-.LFB11
 4381 0060 00000000 		.4byte	.LFB12
 4382 0064 10000000 		.4byte	.LFE12-.LFB12
 4383 0068 00000000 		.4byte	.LFB13
 4384 006c 0C000000 		.4byte	.LFE13-.LFB13
 4385 0070 00000000 		.4byte	.LFB20
 4386 0074 14000000 		.4byte	.LFE20-.LFB20
 4387 0078 00000000 		.4byte	.LFB21
 4388 007c 18000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 133


 4389 0080 00000000 		.4byte	.LFB22
 4390 0084 14000000 		.4byte	.LFE22-.LFB22
 4391 0088 00000000 		.4byte	.LFB23
 4392 008c 14000000 		.4byte	.LFE23-.LFB23
 4393 0090 00000000 		.4byte	.LFB24
 4394 0094 14000000 		.4byte	.LFE24-.LFB24
 4395 0098 00000000 		.4byte	.LFB25
 4396 009c 04000000 		.4byte	.LFE25-.LFB25
 4397 00a0 00000000 		.4byte	.LFB14
 4398 00a4 20000000 		.4byte	.LFE14-.LFB14
 4399 00a8 00000000 		.4byte	.LFB15
 4400 00ac 1C000000 		.4byte	.LFE15-.LFB15
 4401 00b0 00000000 		.4byte	.LFB16
 4402 00b4 24000000 		.4byte	.LFE16-.LFB16
 4403 00b8 00000000 		.4byte	.LFB17
 4404 00bc 20000000 		.4byte	.LFE17-.LFB17
 4405 00c0 00000000 		.4byte	.LFB18
 4406 00c4 4C000000 		.4byte	.LFE18-.LFB18
 4407 00c8 00000000 		.4byte	.LFB19
 4408 00cc 2C000000 		.4byte	.LFE19-.LFB19
 4409 00d0 00000000 		.4byte	.LFB26
 4410 00d4 18000000 		.4byte	.LFE26-.LFB26
 4411 00d8 00000000 		.4byte	.LFB27
 4412 00dc 30000000 		.4byte	.LFE27-.LFB27
 4413 00e0 00000000 		.4byte	.LFB28
 4414 00e4 14000000 		.4byte	.LFE28-.LFB28
 4415 00e8 00000000 		.4byte	.LFB6
 4416 00ec 64010000 		.4byte	.LFE6-.LFB6
 4417 00f0 00000000 		.4byte	.LFB7
 4418 00f4 44000000 		.4byte	.LFE7-.LFB7
 4419 00f8 00000000 		.4byte	.LFB29
 4420 00fc 4C000000 		.4byte	.LFE29-.LFB29
 4421 0100 00000000 		.4byte	.LFB33
 4422 0104 10000000 		.4byte	.LFE33-.LFB33
 4423 0108 00000000 		.4byte	.LFB34
 4424 010c 10000000 		.4byte	.LFE34-.LFB34
 4425 0110 00000000 		.4byte	.LFB32
 4426 0114 18000000 		.4byte	.LFE32-.LFB32
 4427 0118 00000000 		.4byte	.LFB35
 4428 011c 10000000 		.4byte	.LFE35-.LFB35
 4429 0120 00000000 		.4byte	.LFB36
 4430 0124 10000000 		.4byte	.LFE36-.LFB36
 4431 0128 00000000 		.4byte	.LFB37
 4432 012c 10000000 		.4byte	.LFE37-.LFB37
 4433 0130 00000000 		.4byte	.LFB38
 4434 0134 10000000 		.4byte	.LFE38-.LFB38
 4435 0138 00000000 		.4byte	.LFB39
 4436 013c 10000000 		.4byte	.LFE39-.LFB39
 4437 0140 00000000 		.4byte	.LFB43
 4438 0144 28000000 		.4byte	.LFE43-.LFB43
 4439 0148 00000000 		.4byte	.LFB40
 4440 014c 0C000000 		.4byte	.LFE40-.LFB40
 4441 0150 00000000 		.4byte	.LFB31
 4442 0154 44000000 		.4byte	.LFE31-.LFB31
 4443 0158 00000000 		.4byte	.LFB30
 4444 015c 20000000 		.4byte	.LFE30-.LFB30
 4445 0160 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 134


 4446 0164 10000000 		.4byte	.LFE41-.LFB41
 4447 0168 00000000 		.4byte	.LFB42
 4448 016c 0C000000 		.4byte	.LFE42-.LFB42
 4449 0170 00000000 		.4byte	.LFB44
 4450 0174 70000000 		.4byte	.LFE44-.LFB44
 4451 0178 00000000 		.4byte	0
 4452 017c 00000000 		.4byte	0
 4453              		.section	.debug_ranges,"",%progbits
 4454              	.Ldebug_ranges0:
 4455 0000 00000000 		.4byte	.LFB0
 4456 0004 14000000 		.4byte	.LFE0
 4457 0008 00000000 		.4byte	.LFB1
 4458 000c 10000000 		.4byte	.LFE1
 4459 0010 00000000 		.4byte	.LFB2
 4460 0014 20000000 		.4byte	.LFE2
 4461 0018 00000000 		.4byte	.LFB3
 4462 001c 38000000 		.4byte	.LFE3
 4463 0020 00000000 		.4byte	.LFB4
 4464 0024 1C000000 		.4byte	.LFE4
 4465 0028 00000000 		.4byte	.LFB5
 4466 002c 28000000 		.4byte	.LFE5
 4467 0030 00000000 		.4byte	.LFB8
 4468 0034 20000000 		.4byte	.LFE8
 4469 0038 00000000 		.4byte	.LFB9
 4470 003c 10000000 		.4byte	.LFE9
 4471 0040 00000000 		.4byte	.LFB10
 4472 0044 0C000000 		.4byte	.LFE10
 4473 0048 00000000 		.4byte	.LFB11
 4474 004c 14000000 		.4byte	.LFE11
 4475 0050 00000000 		.4byte	.LFB12
 4476 0054 10000000 		.4byte	.LFE12
 4477 0058 00000000 		.4byte	.LFB13
 4478 005c 0C000000 		.4byte	.LFE13
 4479 0060 00000000 		.4byte	.LFB20
 4480 0064 14000000 		.4byte	.LFE20
 4481 0068 00000000 		.4byte	.LFB21
 4482 006c 18000000 		.4byte	.LFE21
 4483 0070 00000000 		.4byte	.LFB22
 4484 0074 14000000 		.4byte	.LFE22
 4485 0078 00000000 		.4byte	.LFB23
 4486 007c 14000000 		.4byte	.LFE23
 4487 0080 00000000 		.4byte	.LFB24
 4488 0084 14000000 		.4byte	.LFE24
 4489 0088 00000000 		.4byte	.LFB25
 4490 008c 04000000 		.4byte	.LFE25
 4491 0090 00000000 		.4byte	.LFB14
 4492 0094 20000000 		.4byte	.LFE14
 4493 0098 00000000 		.4byte	.LFB15
 4494 009c 1C000000 		.4byte	.LFE15
 4495 00a0 00000000 		.4byte	.LFB16
 4496 00a4 24000000 		.4byte	.LFE16
 4497 00a8 00000000 		.4byte	.LFB17
 4498 00ac 20000000 		.4byte	.LFE17
 4499 00b0 00000000 		.4byte	.LFB18
 4500 00b4 4C000000 		.4byte	.LFE18
 4501 00b8 00000000 		.4byte	.LFB19
 4502 00bc 2C000000 		.4byte	.LFE19
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 135


 4503 00c0 00000000 		.4byte	.LFB26
 4504 00c4 18000000 		.4byte	.LFE26
 4505 00c8 00000000 		.4byte	.LFB27
 4506 00cc 30000000 		.4byte	.LFE27
 4507 00d0 00000000 		.4byte	.LFB28
 4508 00d4 14000000 		.4byte	.LFE28
 4509 00d8 00000000 		.4byte	.LFB6
 4510 00dc 64010000 		.4byte	.LFE6
 4511 00e0 00000000 		.4byte	.LFB7
 4512 00e4 44000000 		.4byte	.LFE7
 4513 00e8 00000000 		.4byte	.LFB29
 4514 00ec 4C000000 		.4byte	.LFE29
 4515 00f0 00000000 		.4byte	.LFB33
 4516 00f4 10000000 		.4byte	.LFE33
 4517 00f8 00000000 		.4byte	.LFB34
 4518 00fc 10000000 		.4byte	.LFE34
 4519 0100 00000000 		.4byte	.LFB32
 4520 0104 18000000 		.4byte	.LFE32
 4521 0108 00000000 		.4byte	.LFB35
 4522 010c 10000000 		.4byte	.LFE35
 4523 0110 00000000 		.4byte	.LFB36
 4524 0114 10000000 		.4byte	.LFE36
 4525 0118 00000000 		.4byte	.LFB37
 4526 011c 10000000 		.4byte	.LFE37
 4527 0120 00000000 		.4byte	.LFB38
 4528 0124 10000000 		.4byte	.LFE38
 4529 0128 00000000 		.4byte	.LFB39
 4530 012c 10000000 		.4byte	.LFE39
 4531 0130 00000000 		.4byte	.LFB43
 4532 0134 28000000 		.4byte	.LFE43
 4533 0138 00000000 		.4byte	.LFB40
 4534 013c 0C000000 		.4byte	.LFE40
 4535 0140 00000000 		.4byte	.LFB31
 4536 0144 44000000 		.4byte	.LFE31
 4537 0148 00000000 		.4byte	.LFB30
 4538 014c 20000000 		.4byte	.LFE30
 4539 0150 00000000 		.4byte	.LFB41
 4540 0154 10000000 		.4byte	.LFE41
 4541 0158 00000000 		.4byte	.LFB42
 4542 015c 0C000000 		.4byte	.LFE42
 4543 0160 00000000 		.4byte	.LFB44
 4544 0164 70000000 		.4byte	.LFE44
 4545 0168 00000000 		.4byte	0
 4546 016c 00000000 		.4byte	0
 4547              		.section	.debug_line,"",%progbits
 4548              	.Ldebug_line0:
 4549 0000 5C040000 		.section	.debug_str,"MS",%progbits,1
 4549      02004D00 
 4549      00000201 
 4549      FB0E0D00 
 4549      01010101 
 4550              	.LASF51:
 4551 0000 72616D56 		.ascii	"ramVectorTable\000"
 4551      6563746F 
 4551      72546162 
 4551      6C6500
 4552              	.LASF67:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 136


 4553 000f 62675472 		.ascii	"bgTrim4\000"
 4553      696D3400 
 4554              	.LASF10:
 4555 0017 75696E74 		.ascii	"uint16\000"
 4555      313600
 4556              	.LASF38:
 4557 001e 696E7453 		.ascii	"intState\000"
 4557      74617465 
 4557      00
 4558              	.LASF24:
 4559 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4559      73436C6B 
 4559      57726974 
 4559      65486663 
 4559      6C6B4469 
 4560              	.LASF100:
 4561 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4561      73436C6B 
 4561      50756D70 
 4561      436F6E66 
 4561      696700
 4562              	.LASF50:
 4563 0053 6F6C6449 		.ascii	"oldIsr\000"
 4563      737200
 4564              	.LASF89:
 4565 005a 72657456 		.ascii	"retVal\000"
 4565      616C00
 4566              	.LASF37:
 4567 0061 43794469 		.ascii	"CyDisableInts\000"
 4567      7361626C 
 4567      65496E74 
 4567      7300
 4568              	.LASF70:
 4569 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 4569      656E7449 
 4569      6D6F5472 
 4569      696D3256 
 4569      616C7565 
 4570              	.LASF7:
 4571 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 4571      206C6F6E 
 4571      6720756E 
 4571      7369676E 
 4571      65642069 
 4572              	.LASF98:
 4573 009b 43795379 		.ascii	"CySysTickInitVar\000"
 4573      73546963 
 4573      6B496E69 
 4573      74566172 
 4573      00
 4574              	.LASF39:
 4575 00ac 4379456E 		.ascii	"CyEnableInts\000"
 4575      61626C65 
 4575      496E7473 
 4575      00
 4576              	.LASF60:
 4577 00b9 4379536F 		.ascii	"CySoftwareReset\000"
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 137


 4577      66747761 
 4577      72655265 
 4577      73657400 
 4578              	.LASF76:
 4579 00c9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4579      73546963 
 4579      6B456E61 
 4579      626C6549 
 4579      6E746572 
 4580              	.LASF43:
 4581 00e2 4379496E 		.ascii	"CyIntGetState\000"
 4581      74476574 
 4581      53746174 
 4581      6500
 4582              	.LASF6:
 4583 00f0 6C6F6E67 		.ascii	"long long int\000"
 4583      206C6F6E 
 4583      6720696E 
 4583      7400
 4584              	.LASF0:
 4585 00fe 7369676E 		.ascii	"signed char\000"
 4585      65642063 
 4585      68617200 
 4586              	.LASF66:
 4587 010a 66726571 		.ascii	"freq\000"
 4587      00
 4588              	.LASF74:
 4589 010f 43794465 		.ascii	"CyDelayFreq\000"
 4589      6C617946 
 4589      72657100 
 4590              	.LASF22:
 4591 011b 696E7465 		.ascii	"interruptState\000"
 4591      72727570 
 4591      74537461 
 4591      746500
 4592              	.LASF81:
 4593 012a 43795379 		.ascii	"CySysTickGetReload\000"
 4593      73546963 
 4593      6B476574 
 4593      52656C6F 
 4593      616400
 4594              	.LASF4:
 4595 013d 6C6F6E67 		.ascii	"long int\000"
 4595      20696E74 
 4595      00
 4596              	.LASF44:
 4597 0146 4379496E 		.ascii	"CyIntDisable\000"
 4597      74446973 
 4597      61626C65 
 4597      00
 4598              	.LASF90:
 4599 0153 43795379 		.ascii	"CySysTickGetCallback\000"
 4599      73546963 
 4599      6B476574 
 4599      43616C6C 
 4599      6261636B 
 4600              	.LASF9:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 138


 4601 0168 75696E74 		.ascii	"uint8\000"
 4601      3800
 4602              	.LASF95:
 4603 016e 63796465 		.ascii	"cydelayFreqKhz\000"
 4603      6C617946 
 4603      7265714B 
 4603      687A00
 4604              	.LASF27:
 4605 017d 656E6162 		.ascii	"enable\000"
 4605      6C6500
 4606              	.LASF13:
 4607 0184 646F7562 		.ascii	"double\000"
 4607      6C6500
 4608              	.LASF57:
 4609 018b 73686966 		.ascii	"shift\000"
 4609      7400
 4610              	.LASF32:
 4611 0191 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4611      734C7664 
 4611      436C6561 
 4611      72496E74 
 4611      65727275 
 4612              	.LASF11:
 4613 01a8 75696E74 		.ascii	"uint32\000"
 4613      333200
 4614              	.LASF40:
 4615 01af 6D61736B 		.ascii	"mask\000"
 4615      00
 4616              	.LASF33:
 4617 01b4 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4617      73436C6B 
 4617      47657453 
 4617      7973636C 
 4617      6B536F75 
 4618              	.LASF59:
 4619 01cc 4379496E 		.ascii	"CyIntGetPriority\000"
 4619      74476574 
 4619      5072696F 
 4619      72697479 
 4619      00
 4620              	.LASF97:
 4621 01dd 63796465 		.ascii	"cydelay32kMs\000"
 4621      6C617933 
 4621      326B4D73 
 4621      00
 4622              	.LASF85:
 4623 01ea 43795379 		.ascii	"CySysTickInit\000"
 4623      73546963 
 4623      6B496E69 
 4623      7400
 4624              	.LASF58:
 4625 01f8 76616C75 		.ascii	"value\000"
 4625      6500
 4626              	.LASF91:
 4627 01fe 43794765 		.ascii	"CyGetUniqueId\000"
 4627      74556E69 
 4627      71756549 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 139


 4627      6400
 4628              	.LASF83:
 4629 020c 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4629      73546963 
 4629      6B476574 
 4629      436F756E 
 4629      74466C61 
 4630              	.LASF8:
 4631 0222 756E7369 		.ascii	"unsigned int\000"
 4631      676E6564 
 4631      20696E74 
 4631      00
 4632              	.LASF84:
 4633 022f 43795379 		.ascii	"CySysTickClear\000"
 4633      73546963 
 4633      6B436C65 
 4633      617200
 4634              	.LASF5:
 4635 023e 6C6F6E67 		.ascii	"long unsigned int\000"
 4635      20756E73 
 4635      69676E65 
 4635      6420696E 
 4635      7400
 4636              	.LASF80:
 4637 0250 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4637      734C7664 
 4637      47657449 
 4637      6E746572 
 4637      72757074 
 4638              	.LASF21:
 4639 026b 43795379 		.ascii	"CySysClkImoStop\000"
 4639      73436C6B 
 4639      496D6F53 
 4639      746F7000 
 4640              	.LASF105:
 4641 027b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4641      74657243 
 4641      72697469 
 4641      63616C53 
 4641      65637469 
 4642              	.LASF45:
 4643 0292 4379496E 		.ascii	"CyIntSetPending\000"
 4643      74536574 
 4643      50656E64 
 4643      696E6700 
 4644              	.LASF34:
 4645 02a2 43795379 		.ascii	"CySysGetResetReason\000"
 4645      73476574 
 4645      52657365 
 4645      74526561 
 4645      736F6E00 
 4646              	.LASF3:
 4647 02b6 73686F72 		.ascii	"short unsigned int\000"
 4647      7420756E 
 4647      7369676E 
 4647      65642069 
 4647      6E7400
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 140


 4648              	.LASF53:
 4649 02c9 4379496E 		.ascii	"CyIntSetVector\000"
 4649      74536574 
 4649      56656374 
 4649      6F7200
 4650              	.LASF42:
 4651 02d8 6E756D62 		.ascii	"number\000"
 4651      657200
 4652              	.LASF56:
 4653 02df 7072696F 		.ascii	"priority\000"
 4653      72697479 
 4653      00
 4654              	.LASF65:
 4655 02e8 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4655      73436C6B 
 4655      57726974 
 4655      65496D6F 
 4655      46726571 
 4656              	.LASF48:
 4657 02fd 4379496E 		.ascii	"CyIntSetSysVector\000"
 4657      74536574 
 4657      53797356 
 4657      6563746F 
 4657      7200
 4658              	.LASF25:
 4659 030f 43795379 		.ascii	"CySysEnablePumpClock\000"
 4659      73456E61 
 4659      626C6550 
 4659      756D7043 
 4659      6C6F636B 
 4660              	.LASF16:
 4661 0324 72656733 		.ascii	"reg32\000"
 4661      3200
 4662              	.LASF86:
 4663 032a 43795379 		.ascii	"CySysTickStart\000"
 4663      73546963 
 4663      6B537461 
 4663      727400
 4664              	.LASF36:
 4665 0339 72657475 		.ascii	"returnStatus\000"
 4665      726E5374 
 4665      61747573 
 4665      00
 4666              	.LASF18:
 4667 0346 73697A65 		.ascii	"sizetype\000"
 4667      74797065 
 4667      00
 4668              	.LASF46:
 4669 034f 4379496E 		.ascii	"CyIntClearPending\000"
 4669      74436C65 
 4669      61725065 
 4669      6E64696E 
 4669      6700
 4670              	.LASF49:
 4671 0361 61646472 		.ascii	"address\000"
 4671      65737300 
 4672              	.LASF68:
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 141


 4673 0369 62675472 		.ascii	"bgTrim5\000"
 4673      696D3500 
 4674              	.LASF28:
 4675 0371 73797363 		.ascii	"sysclkSource\000"
 4675      6C6B536F 
 4675      75726365 
 4675      00
 4676              	.LASF88:
 4677 037e 66756E63 		.ascii	"function\000"
 4677      74696F6E 
 4677      00
 4678              	.LASF99:
 4679 0387 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4679      6F467265 
 4679      714D687A 
 4679      32526567 
 4679      00
 4680              	.LASF82:
 4681 0398 43795379 		.ascii	"CySysTickGetValue\000"
 4681      73546963 
 4681      6B476574 
 4681      56616C75 
 4681      6500
 4682              	.LASF101:
 4683 03aa 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4683      4320342E 
 4683      392E3320 
 4683      32303135 
 4683      30333033 
 4684 03dd 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4684      20726576 
 4684      6973696F 
 4684      6E203232 
 4684      31323230 
 4685 0410 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4685      66756E63 
 4685      74696F6E 
 4685      2D736563 
 4685      74696F6E 
 4686              	.LASF73:
 4687 0438 74687265 		.ascii	"threshold\000"
 4687      73686F6C 
 4687      6400
 4688              	.LASF94:
 4689 0442 63796465 		.ascii	"cydelayFreqHz\000"
 4689      6C617946 
 4689      72657148 
 4689      7A00
 4690              	.LASF55:
 4691 0450 4379496E 		.ascii	"CyIntSetPriority\000"
 4691      74536574 
 4691      5072696F 
 4691      72697479 
 4691      00
 4692              	.LASF12:
 4693 0461 666C6F61 		.ascii	"float\000"
 4693      7400
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 142


 4694              	.LASF106:
 4695 0467 43794578 		.ascii	"CyExitCriticalSection\000"
 4695      69744372 
 4695      69746963 
 4695      616C5365 
 4695      6374696F 
 4696              	.LASF72:
 4697 047d 43795379 		.ascii	"CySysLvdEnable\000"
 4697      734C7664 
 4697      456E6162 
 4697      6C6500
 4698              	.LASF19:
 4699 048c 63795379 		.ascii	"cySysTickCallback\000"
 4699      73546963 
 4699      6B43616C 
 4699      6C626163 
 4699      6B00
 4700              	.LASF54:
 4701 049e 4379496E 		.ascii	"CyIntGetVector\000"
 4701      74476574 
 4701      56656374 
 4701      6F7200
 4702              	.LASF62:
 4703 04ad 6D696C6C 		.ascii	"milliseconds\000"
 4703      69736563 
 4703      6F6E6473 
 4703      00
 4704              	.LASF107:
 4705 04ba 43794465 		.ascii	"CyDelayCycles\000"
 4705      6C617943 
 4705      79636C65 
 4705      7300
 4706              	.LASF15:
 4707 04c8 72656738 		.ascii	"reg8\000"
 4707      00
 4708              	.LASF103:
 4709 04cd 433A5C70 		.ascii	"C:\\psoc\\chamonix\\fixed\\Fixed\\fixed.cydsn\000"
 4709      736F635C 
 4709      6368616D 
 4709      6F6E6978 
 4709      5C666978 
 4710              	.LASF47:
 4711 04f6 43794861 		.ascii	"CyHalt\000"
 4711      6C7400
 4712              	.LASF1:
 4713 04fd 756E7369 		.ascii	"unsigned char\000"
 4713      676E6564 
 4713      20636861 
 4713      7200
 4714              	.LASF2:
 4715 050b 73686F72 		.ascii	"short int\000"
 4715      7420696E 
 4715      7400
 4716              	.LASF41:
 4717 0515 4379496E 		.ascii	"CyIntEnable\000"
 4717      74456E61 
 4717      626C6500 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 143


 4718              	.LASF52:
 4719 0521 4379496E 		.ascii	"CyIntGetSysVector\000"
 4719      74476574 
 4719      53797356 
 4719      6563746F 
 4719      7200
 4720              	.LASF26:
 4721 0533 636C6B53 		.ascii	"clkSelect\000"
 4721      656C6563 
 4721      7400
 4722              	.LASF63:
 4723 053d 43794465 		.ascii	"CyDelayUs\000"
 4723      6C617955 
 4723      7300
 4724              	.LASF35:
 4725 0547 72656173 		.ascii	"reason\000"
 4725      6F6E00
 4726              	.LASF14:
 4727 054e 63686172 		.ascii	"char\000"
 4727      00
 4728              	.LASF17:
 4729 0553 63796973 		.ascii	"cyisraddress\000"
 4729      72616464 
 4729      72657373 
 4729      00
 4730              	.LASF77:
 4731 0560 43795379 		.ascii	"CySysTickEnable\000"
 4731      73546963 
 4731      6B456E61 
 4731      626C6500 
 4732              	.LASF29:
 4733 0570 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4733      73436C6B 
 4733      57726974 
 4733      65537973 
 4733      636C6B44 
 4734              	.LASF87:
 4735 0587 43795379 		.ascii	"CySysTickSetCallback\000"
 4735      73546963 
 4735      6B536574 
 4735      43616C6C 
 4735      6261636B 
 4736              	.LASF93:
 4737 059c 43795379 		.ascii	"CySysTickCallbacks\000"
 4737      73546963 
 4737      6B43616C 
 4737      6C626163 
 4737      6B7300
 4738              	.LASF71:
 4739 05af 696D6F54 		.ascii	"imoTrim1Value\000"
 4739      72696D31 
 4739      56616C75 
 4739      6500
 4740              	.LASF92:
 4741 05bd 756E6971 		.ascii	"uniqueId\000"
 4741      75654964 
 4741      00
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 144


 4742              	.LASF61:
 4743 05c6 43794465 		.ascii	"CyDelay\000"
 4743      6C617900 
 4744              	.LASF78:
 4745 05ce 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4745      73546963 
 4745      6B446973 
 4745      61626C65 
 4745      496E7465 
 4746              	.LASF31:
 4747 05e8 43795379 		.ascii	"CySysLvdDisable\000"
 4747      734C7664 
 4747      44697361 
 4747      626C6500 
 4748              	.LASF96:
 4749 05f8 63796465 		.ascii	"cydelayFreqMhz\000"
 4749      6C617946 
 4749      7265714D 
 4749      687A00
 4750              	.LASF75:
 4751 0607 43795379 		.ascii	"CySysTickStop\000"
 4751      73546963 
 4751      6B53746F 
 4751      7000
 4752              	.LASF30:
 4753 0615 64697669 		.ascii	"divider\000"
 4753      64657200 
 4754              	.LASF20:
 4755 061d 43795379 		.ascii	"CySysClkImoStart\000"
 4755      73436C6B 
 4755      496D6F53 
 4755      74617274 
 4755      00
 4756              	.LASF69:
 4757 062e 6E657749 		.ascii	"newImoTrim2Value\000"
 4757      6D6F5472 
 4757      696D3256 
 4757      616C7565 
 4757      00
 4758              	.LASF102:
 4759 063f 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4759      72617465 
 4759      645F536F 
 4759      75726365 
 4759      5C50536F 
 4760              	.LASF64:
 4761 065e 6D696372 		.ascii	"microseconds\000"
 4761      6F736563 
 4761      6F6E6473 
 4761      00
 4762              	.LASF23:
 4763 066b 746D7052 		.ascii	"tmpReg\000"
 4763      656700
 4764              	.LASF79:
 4765 0672 43795379 		.ascii	"CySysTickSetReload\000"
 4765      73546963 
 4765      6B536574 
ARM GAS  C:\Users\ilya\AppData\Local\Temp\ccsI01Fa.s 			page 145


 4765      52656C6F 
 4765      616400
 4766              	.LASF104:
 4767 0685 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4767      73546963 
 4767      6B536572 
 4767      76696365 
 4767      43616C6C 
 4768              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
