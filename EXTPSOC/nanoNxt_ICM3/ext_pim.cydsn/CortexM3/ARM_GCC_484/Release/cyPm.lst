ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"cyPm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CyPmHibSlpSaveSet,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  22              		.type	CyPmHibSlpSaveSet, %function
  23              	CyPmHibSlpSaveSet:
  24              	.LFB12:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\cyPm.c"
   1:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/cyPm.c **** * File Name: cyPm.c
   3:.\Generated_Source\PSoC5/cyPm.c **** * Version 5.0
   4:.\Generated_Source\PSoC5/cyPm.c **** *
   5:.\Generated_Source\PSoC5/cyPm.c **** * Description:
   6:.\Generated_Source\PSoC5/cyPm.c **** *  Provides an API for the power management.
   7:.\Generated_Source\PSoC5/cyPm.c **** *
   8:.\Generated_Source\PSoC5/cyPm.c **** * Note:
   9:.\Generated_Source\PSoC5/cyPm.c **** *  Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC5/cyPm.c **** *  System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC5/cyPm.c **** *
  12:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/cyPm.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC5/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC5/cyPm.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/cyPm.c **** 
  19:.\Generated_Source\PSoC5/cyPm.c **** #include "cyPm.h"
  20:.\Generated_Source\PSoC5/cyPm.c **** 
  21:.\Generated_Source\PSoC5/cyPm.c **** #ifdef CY_USE_CALLBACKS
  22:.\Generated_Source\PSoC5/cyPm.c ****     #include "CyAPICallbacks.h"
  23:.\Generated_Source\PSoC5/cyPm.c **** #endif  /* CY_USE_CALLBACKS */
  24:.\Generated_Source\PSoC5/cyPm.c **** 
  25:.\Generated_Source\PSoC5/cyPm.c **** 
  26:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************
  27:.\Generated_Source\PSoC5/cyPm.c **** * Place your includes, defines, and code here. Do not use the merge
  28:.\Generated_Source\PSoC5/cyPm.c **** * region below unless any component datasheet suggests doing so.
  29:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************/
  30:.\Generated_Source\PSoC5/cyPm.c **** /* `#START CY_PM_HEADER_INCLUDE` */
  31:.\Generated_Source\PSoC5/cyPm.c **** 
  32:.\Generated_Source\PSoC5/cyPm.c **** /* `#END` */
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 2


  33:.\Generated_Source\PSoC5/cyPm.c **** 
  34:.\Generated_Source\PSoC5/cyPm.c **** 
  35:.\Generated_Source\PSoC5/cyPm.c **** static CY_PM_BACKUP_STRUCT          cyPmBackup;
  36:.\Generated_Source\PSoC5/cyPm.c **** static CY_PM_CLOCK_BACKUP_STRUCT    cyPmClockBackup;
  37:.\Generated_Source\PSoC5/cyPm.c **** 
  38:.\Generated_Source\PSoC5/cyPm.c **** /* Convertion table between register's values and frequency in MHz  */
  39:.\Generated_Source\PSoC5/cyPm.c **** static const uint8 CYCODE cyPmImoFreqReg2Mhz[7u] = {12u, 6u, 24u, 3u, 48u, 62u, 74u};
  40:.\Generated_Source\PSoC5/cyPm.c **** 
  41:.\Generated_Source\PSoC5/cyPm.c **** /* Function Prototypes */
  42:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSaveSet(void);
  43:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibRestore(void) ;
  44:.\Generated_Source\PSoC5/cyPm.c **** 
  45:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpSaveSet(void) ;
  46:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpRestore(void) ;
  47:.\Generated_Source\PSoC5/cyPm.c **** 
  48:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviSaveDisable(void) ;
  49:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviRestore(void) ;
  50:.\Generated_Source\PSoC5/cyPm.c **** 
  51:.\Generated_Source\PSoC5/cyPm.c **** 
  52:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
  53:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmSaveClocks
  54:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
  55:.\Generated_Source\PSoC5/cyPm.c **** *
  56:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
  57:.\Generated_Source\PSoC5/cyPm.c **** *  This function is called in preparation for entering sleep or hibernate low
  58:.\Generated_Source\PSoC5/cyPm.c **** *  power modes. Saves all the states of the clocking system that do not persist
  59:.\Generated_Source\PSoC5/cyPm.c **** *  during sleep/hibernate or that need to be altered in preparation for
  60:.\Generated_Source\PSoC5/cyPm.c **** *  sleep/hibernate. Shutdowns all the digital and analog clock dividers for the
  61:.\Generated_Source\PSoC5/cyPm.c **** *  active power mode configuration.
  62:.\Generated_Source\PSoC5/cyPm.c **** *
  63:.\Generated_Source\PSoC5/cyPm.c **** *  Switches the master clock over to the IMO and shuts down the PLL and MHz
  64:.\Generated_Source\PSoC5/cyPm.c **** *  Crystal. The IMO frequency is set to either 12 MHz or 48 MHz to match the
  65:.\Generated_Source\PSoC5/cyPm.c **** *  Design-Wide Resources System Editor "Enable Fast IMO During Startup" setting.
  66:.\Generated_Source\PSoC5/cyPm.c **** *  The ILO and 32 KHz oscillators are not impacted. The current Flash wait state
  67:.\Generated_Source\PSoC5/cyPm.c **** *  setting is saved and the Flash wait state setting is set for the current IMO
  68:.\Generated_Source\PSoC5/cyPm.c **** *  speed.
  69:.\Generated_Source\PSoC5/cyPm.c **** *
  70:.\Generated_Source\PSoC5/cyPm.c **** *  Note If the Master Clock source is routed through the DSI inputs, then it
  71:.\Generated_Source\PSoC5/cyPm.c **** *  must be set manually to another source before using the
  72:.\Generated_Source\PSoC5/cyPm.c **** *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
  73:.\Generated_Source\PSoC5/cyPm.c **** *
  74:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
  75:.\Generated_Source\PSoC5/cyPm.c **** *  None
  76:.\Generated_Source\PSoC5/cyPm.c **** *
  77:.\Generated_Source\PSoC5/cyPm.c **** * Return:
  78:.\Generated_Source\PSoC5/cyPm.c **** *  None
  79:.\Generated_Source\PSoC5/cyPm.c **** *
  80:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
  81:.\Generated_Source\PSoC5/cyPm.c **** *  All peripheral clocks are going to be off after this API method call.
  82:.\Generated_Source\PSoC5/cyPm.c **** *
  83:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/cyPm.c **** void CyPmSaveClocks(void) 
  85:.\Generated_Source\PSoC5/cyPm.c **** {
  86:.\Generated_Source\PSoC5/cyPm.c ****     /* Digital and analog clocks - save enable state and disable them all */
  87:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
  88:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
  89:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_A_MASK));
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 3


  90:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_D_MASK));
  91:.\Generated_Source\PSoC5/cyPm.c **** 
  92:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current flash wait cycles and set the maximum value */
  93:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
  94:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
  95:.\Generated_Source\PSoC5/cyPm.c **** 
  96:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save current IMO MHz OSC frequency and USB mode is on bit */
  97:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
  98:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
  99:.\Generated_Source\PSoC5/cyPm.c **** 
 100:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO doubler - save enable state */
 101:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 102:.\Generated_Source\PSoC5/cyPm.c ****     {
 103:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO doubler enabled - save and disable */
 104:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_ENABLED;
 105:.\Generated_Source\PSoC5/cyPm.c ****     }
 106:.\Generated_Source\PSoC5/cyPm.c ****     else
 107:.\Generated_Source\PSoC5/cyPm.c ****     {
 108:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO doubler disabled */
 109:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_DISABLED;
 110:.\Generated_Source\PSoC5/cyPm.c ****     }
 111:.\Generated_Source\PSoC5/cyPm.c **** 
 112:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock - save source */
 113:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 114:.\Generated_Source\PSoC5/cyPm.c **** 
 115:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch Master clock's source from PLL's output to PLL's source */
 116:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 117:.\Generated_Source\PSoC5/cyPm.c ****     {
 118:.\Generated_Source\PSoC5/cyPm.c ****         switch (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_PLL_SRC_MASK)
 119:.\Generated_Source\PSoC5/cyPm.c ****         {
 120:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_IMO:
 121:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 122:.\Generated_Source\PSoC5/cyPm.c ****             break;
 123:.\Generated_Source\PSoC5/cyPm.c **** 
 124:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_XTAL:
 125:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_XTAL);
 126:.\Generated_Source\PSoC5/cyPm.c ****             break;
 127:.\Generated_Source\PSoC5/cyPm.c **** 
 128:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_DSI:
 129:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 130:.\Generated_Source\PSoC5/cyPm.c ****             break;
 131:.\Generated_Source\PSoC5/cyPm.c **** 
 132:.\Generated_Source\PSoC5/cyPm.c ****         default:
 133:.\Generated_Source\PSoC5/cyPm.c ****             CYASSERT(0u != 0u);
 134:.\Generated_Source\PSoC5/cyPm.c ****             break;
 135:.\Generated_Source\PSoC5/cyPm.c ****         }
 136:.\Generated_Source\PSoC5/cyPm.c ****     }
 137:.\Generated_Source\PSoC5/cyPm.c **** 
 138:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL - check enable state, disable if needed */
 139:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 140:.\Generated_Source\PSoC5/cyPm.c ****     {
 141:.\Generated_Source\PSoC5/cyPm.c ****         /* PLL is enabled - save state and disable */
 142:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 143:.\Generated_Source\PSoC5/cyPm.c ****         CyPLL_OUT_Stop();
 144:.\Generated_Source\PSoC5/cyPm.c ****     }
 145:.\Generated_Source\PSoC5/cyPm.c ****     else
 146:.\Generated_Source\PSoC5/cyPm.c ****     {
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 4


 147:.\Generated_Source\PSoC5/cyPm.c ****         /* PLL is disabled - save state */
 148:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 149:.\Generated_Source\PSoC5/cyPm.c ****     }
 150:.\Generated_Source\PSoC5/cyPm.c **** 
 151:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - set appropriate frequency for LPM */
 152:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 153:.\Generated_Source\PSoC5/cyPm.c **** 
 154:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save enable state and enable without wait to settle */
 155:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 156:.\Generated_Source\PSoC5/cyPm.c ****     {
 157:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - save enabled state */
 158:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 159:.\Generated_Source\PSoC5/cyPm.c ****     }
 160:.\Generated_Source\PSoC5/cyPm.c ****     else
 161:.\Generated_Source\PSoC5/cyPm.c ****     {
 162:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - save disabled state */
 163:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 164:.\Generated_Source\PSoC5/cyPm.c **** 
 165:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable the IMO. Use software delay instead of the FTW-based inside */
 166:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 167:.\Generated_Source\PSoC5/cyPm.c **** 
 168:.\Generated_Source\PSoC5/cyPm.c ****         /* Settling time of the IMO is of the order of less than 6us */
 169:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs(6u);
 170:.\Generated_Source\PSoC5/cyPm.c ****     }
 171:.\Generated_Source\PSoC5/cyPm.c **** 
 172:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save the current IMOCLK source and set to IMO if not yet */
 173:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 174:.\Generated_Source\PSoC5/cyPm.c ****     {
 175:.\Generated_Source\PSoC5/cyPm.c ****         /* DSI or XTAL CLK */
 176:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc =
 177:.\Generated_Source\PSoC5/cyPm.c ****             (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_S
 178:.\Generated_Source\PSoC5/cyPm.c **** 
 179:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO -  set IMOCLK source to IMO */
 180:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 181:.\Generated_Source\PSoC5/cyPm.c ****     }
 182:.\Generated_Source\PSoC5/cyPm.c ****     else
 183:.\Generated_Source\PSoC5/cyPm.c ****     {
 184:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO */
 185:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
 186:.\Generated_Source\PSoC5/cyPm.c ****     }
 187:.\Generated_Source\PSoC5/cyPm.c **** 
 188:.\Generated_Source\PSoC5/cyPm.c ****     /* Save clk_imo source */
 189:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 190:.\Generated_Source\PSoC5/cyPm.c **** 
 191:.\Generated_Source\PSoC5/cyPm.c ****     /* If IMOCLK2X or SPC OSC is source for clk_imo, set it to IMOCLK */
 192:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 193:.\Generated_Source\PSoC5/cyPm.c ****     {
 194:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMOCLK to source for clk_imo */
 195:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 196:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_CLKDIST_IMO_OUT_IMO;
 197:.\Generated_Source\PSoC5/cyPm.c ****     }    /* Need to change nothing if IMOCLK is source clk_imo */
 198:.\Generated_Source\PSoC5/cyPm.c **** 
 199:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO doubler - disable it (saved above) */
 200:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 201:.\Generated_Source\PSoC5/cyPm.c ****     {
 202:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_DisableDoubler();
 203:.\Generated_Source\PSoC5/cyPm.c ****     }
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 5


 204:.\Generated_Source\PSoC5/cyPm.c **** 
 205:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock - save divider and set it to divide-by-one (if no yet) */
 206:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 207:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
 208:.\Generated_Source\PSoC5/cyPm.c ****     {
 209:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 210:.\Generated_Source\PSoC5/cyPm.c ****     }    /* No change if master clock divider is 1 */
 211:.\Generated_Source\PSoC5/cyPm.c **** 
 212:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock source - set it to IMO if not yet. */
 213:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 214:.\Generated_Source\PSoC5/cyPm.c ****     {
 215:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 216:.\Generated_Source\PSoC5/cyPm.c ****     }    /* No change if master clock source is IMO */
 217:.\Generated_Source\PSoC5/cyPm.c **** 
 218:.\Generated_Source\PSoC5/cyPm.c ****     /* Bus clock - save divider and set it, if needed, to divide-by-one */
 219:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 220:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 221:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 222:.\Generated_Source\PSoC5/cyPm.c ****     {
 223:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 224:.\Generated_Source\PSoC5/cyPm.c ****     }    /* Do nothing if saved and actual values are equal */
 225:.\Generated_Source\PSoC5/cyPm.c **** 
 226:.\Generated_Source\PSoC5/cyPm.c ****     /* Set number of wait cycles for flash according to CPU frequency in MHz */
 227:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles((uint8)CY_PM_GET_CPU_FREQ_MHZ);
 228:.\Generated_Source\PSoC5/cyPm.c **** 
 229:.\Generated_Source\PSoC5/cyPm.c ****     /* MHz ECO - check enable state and disable if needed */
 230:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 231:.\Generated_Source\PSoC5/cyPm.c ****     {
 232:.\Generated_Source\PSoC5/cyPm.c ****         /* MHz ECO is enabled - save state and disable */
 233:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 234:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_Stop();
 235:.\Generated_Source\PSoC5/cyPm.c ****     }
 236:.\Generated_Source\PSoC5/cyPm.c ****     else
 237:.\Generated_Source\PSoC5/cyPm.c ****     {
 238:.\Generated_Source\PSoC5/cyPm.c ****         /* MHz ECO is disabled - save state */
 239:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 240:.\Generated_Source\PSoC5/cyPm.c ****     }
 241:.\Generated_Source\PSoC5/cyPm.c **** 
 242:.\Generated_Source\PSoC5/cyPm.c **** 
 243:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
 244:.\Generated_Source\PSoC5/cyPm.c ****     * Save the enable state of delay between the system bus clock and each of the
 245:.\Generated_Source\PSoC5/cyPm.c ****     * 4 individual analog clocks. This bit non-retention and its value should
 246:.\Generated_Source\PSoC5/cyPm.c ****     * be restored on wakeup.
 247:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
 248:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
 249:.\Generated_Source\PSoC5/cyPm.c ****     {
 250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_ENABLED;
 251:.\Generated_Source\PSoC5/cyPm.c ****     }
 252:.\Generated_Source\PSoC5/cyPm.c ****     else
 253:.\Generated_Source\PSoC5/cyPm.c ****     {
 254:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_DISABLED;
 255:.\Generated_Source\PSoC5/cyPm.c ****     }
 256:.\Generated_Source\PSoC5/cyPm.c **** }
 257:.\Generated_Source\PSoC5/cyPm.c **** 
 258:.\Generated_Source\PSoC5/cyPm.c **** 
 259:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmRestoreClocks
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 6


 261:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 262:.\Generated_Source\PSoC5/cyPm.c **** *
 263:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 264:.\Generated_Source\PSoC5/cyPm.c **** *  Restores any state that was preserved by the last call to CyPmSaveClocks().
 265:.\Generated_Source\PSoC5/cyPm.c **** *  The Flash wait state setting is also restored.
 266:.\Generated_Source\PSoC5/cyPm.c **** *
 267:.\Generated_Source\PSoC5/cyPm.c **** *  Note If the Master Clock source is routed through the DSI inputs, then it
 268:.\Generated_Source\PSoC5/cyPm.c **** *  must be set manually to another source before using the
 269:.\Generated_Source\PSoC5/cyPm.c **** *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
 270:.\Generated_Source\PSoC5/cyPm.c **** *
 271:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3 and PSoC 5LP:
 272:.\Generated_Source\PSoC5/cyPm.c **** *  The merge region could be used to process state when the megahertz crystal is
 273:.\Generated_Source\PSoC5/cyPm.c **** *  not ready after a hold-off timeout.
 274:.\Generated_Source\PSoC5/cyPm.c **** *
 275:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5:
 276:.\Generated_Source\PSoC5/cyPm.c **** *  The 130 ms is given for the megahertz crystal to stabilize. Its readiness is
 277:.\Generated_Source\PSoC5/cyPm.c **** *  not verified after a hold-off timeout.
 278:.\Generated_Source\PSoC5/cyPm.c **** *
 279:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 280:.\Generated_Source\PSoC5/cyPm.c **** *  None
 281:.\Generated_Source\PSoC5/cyPm.c **** *
 282:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 283:.\Generated_Source\PSoC5/cyPm.c **** *  None
 284:.\Generated_Source\PSoC5/cyPm.c **** *
 285:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 286:.\Generated_Source\PSoC5/cyPm.c **** void CyPmRestoreClocks(void) 
 287:.\Generated_Source\PSoC5/cyPm.c **** {
 288:.\Generated_Source\PSoC5/cyPm.c ****     cystatus status = CYRET_TIMEOUT;
 289:.\Generated_Source\PSoC5/cyPm.c ****     uint16 i;
 290:.\Generated_Source\PSoC5/cyPm.c ****     uint16 clkBusDivTmp;
 291:.\Generated_Source\PSoC5/cyPm.c **** 
 292:.\Generated_Source\PSoC5/cyPm.c **** 
 293:.\Generated_Source\PSoC5/cyPm.c ****     /* Convertion table between CyIMO_SetFreq() parameters and register's value */
 294:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 295:.\Generated_Source\PSoC5/cyPm.c ****         CY_IMO_FREQ_12MHZ, CY_IMO_FREQ_6MHZ,  CY_IMO_FREQ_24MHZ, CY_IMO_FREQ_3MHZ,
 296:.\Generated_Source\PSoC5/cyPm.c ****         CY_IMO_FREQ_48MHZ, 5u, 6u};
 297:.\Generated_Source\PSoC5/cyPm.c **** 
 298:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore enable state of delay between system bus clock and ACLKs. */
 299:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 300:.\Generated_Source\PSoC5/cyPm.c ****     {
 301:.\Generated_Source\PSoC5/cyPm.c ****         /* Delay for both bandgap and delay line to settle out */
 302:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) 
 303:.\Generated_Source\PSoC5/cyPm.c ****                         CY_PM_GET_CPU_FREQ_MHZ);
 304:.\Generated_Source\PSoC5/cyPm.c **** 
 305:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
 306:.\Generated_Source\PSoC5/cyPm.c ****     }
 307:.\Generated_Source\PSoC5/cyPm.c **** 
 308:.\Generated_Source\PSoC5/cyPm.c ****     /* MHz ECO restore state */
 309:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 310:.\Generated_Source\PSoC5/cyPm.c ****     {
 311:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
 312:.\Generated_Source\PSoC5/cyPm.c ****         * Enabling XMHZ XTAL. The actual CyXTAL_Start() with a non zero wait
 313:.\Generated_Source\PSoC5/cyPm.c ****         * period uses FTW for period measurement. This could cause a problem
 314:.\Generated_Source\PSoC5/cyPm.c ****         * if CTW/FTW is used as a wake up time in the low power modes APIs.
 315:.\Generated_Source\PSoC5/cyPm.c ****         * So, the XTAL wait procedure is implemented with a software delay.
 316:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
 317:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 7


 318:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable XMHZ XTAL with no wait */
 319:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 320:.\Generated_Source\PSoC5/cyPm.c **** 
 321:.\Generated_Source\PSoC5/cyPm.c ****         /* Read XERR bit to clear it */
 322:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 323:.\Generated_Source\PSoC5/cyPm.c **** 
 324:.\Generated_Source\PSoC5/cyPm.c ****         /* Wait */
 325:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 326:.\Generated_Source\PSoC5/cyPm.c ****         {
 327:.\Generated_Source\PSoC5/cyPm.c ****             /* Make a 200 microseconds delay */
 328:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayCycles((uint32)CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 329:.\Generated_Source\PSoC5/cyPm.c **** 
 330:.\Generated_Source\PSoC5/cyPm.c ****             /* High output indicates oscillator failure */
 331:.\Generated_Source\PSoC5/cyPm.c ****             if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 332:.\Generated_Source\PSoC5/cyPm.c ****             {
 333:.\Generated_Source\PSoC5/cyPm.c ****                 status = CYRET_SUCCESS;
 334:.\Generated_Source\PSoC5/cyPm.c ****                 break;
 335:.\Generated_Source\PSoC5/cyPm.c ****             }
 336:.\Generated_Source\PSoC5/cyPm.c ****         }
 337:.\Generated_Source\PSoC5/cyPm.c **** 
 338:.\Generated_Source\PSoC5/cyPm.c ****         if(CYRET_TIMEOUT == status)
 339:.\Generated_Source\PSoC5/cyPm.c ****         {
 340:.\Generated_Source\PSoC5/cyPm.c ****             /*******************************************************************
 341:.\Generated_Source\PSoC5/cyPm.c ****             * Process the situation when megahertz crystal is not ready.
 342:.\Generated_Source\PSoC5/cyPm.c ****             * Time to stabilize the value is crystal specific.
 343:.\Generated_Source\PSoC5/cyPm.c ****             *******************************************************************/
 344:.\Generated_Source\PSoC5/cyPm.c ****            /* `#START_MHZ_ECO_TIMEOUT` */
 345:.\Generated_Source\PSoC5/cyPm.c **** 
 346:.\Generated_Source\PSoC5/cyPm.c ****            /* `#END` */
 347:.\Generated_Source\PSoC5/cyPm.c **** 
 348:.\Generated_Source\PSoC5/cyPm.c ****         #ifdef CY_BOOT_CY_PM_RESTORE_CLOCKS_ECO_TIMEOUT_CALLBACK
 349:.\Generated_Source\PSoC5/cyPm.c ****             CyBoot_CyPmRestoreClocks_EcoTimeout_Callback();
 350:.\Generated_Source\PSoC5/cyPm.c ****         #endif /* CY_BOOT_CY_PM_RESTORE_CLOCKS_ECO_TIMEOUT_CALLBACK */
 351:.\Generated_Source\PSoC5/cyPm.c ****         }
 352:.\Generated_Source\PSoC5/cyPm.c ****     }   /* (CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState) */
 353:.\Generated_Source\PSoC5/cyPm.c **** 
 354:.\Generated_Source\PSoC5/cyPm.c **** 
 355:.\Generated_Source\PSoC5/cyPm.c ****     /* Temporary set maximum flash wait cycles */
 356:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 357:.\Generated_Source\PSoC5/cyPm.c **** 
 358:.\Generated_Source\PSoC5/cyPm.c ****     /* XTAL and DSI clocks are ready to be source for Master clock. */
 359:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 360:.\Generated_Source\PSoC5/cyPm.c ****        (CY_PM_MASTER_CLK_SRC_DSI  == cyPmClockBackup.masterClkSrc))
 361:.\Generated_Source\PSoC5/cyPm.c ****     {
 362:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock's divider */
 363:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 364:.\Generated_Source\PSoC5/cyPm.c ****         {
 365:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore Master clock divider */
 366:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 367:.\Generated_Source\PSoC5/cyPm.c ****         }
 368:.\Generated_Source\PSoC5/cyPm.c **** 
 369:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock source */
 370:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 371:.\Generated_Source\PSoC5/cyPm.c ****     }
 372:.\Generated_Source\PSoC5/cyPm.c **** 
 373:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore IMO frequency */
 374:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 8


 375:.\Generated_Source\PSoC5/cyPm.c ****         (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 376:.\Generated_Source\PSoC5/cyPm.c ****     {
 377:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore IMO frequency (24 MHz) and trim it for USB */
 378:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(CY_IMO_FREQ_USB);
 379:.\Generated_Source\PSoC5/cyPm.c ****     }
 380:.\Generated_Source\PSoC5/cyPm.c ****     else
 381:.\Generated_Source\PSoC5/cyPm.c ****     {
 382:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore IMO frequency */
 383:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 384:.\Generated_Source\PSoC5/cyPm.c **** 
 385:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 386:.\Generated_Source\PSoC5/cyPm.c ****         {
 387:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 388:.\Generated_Source\PSoC5/cyPm.c ****         }
 389:.\Generated_Source\PSoC5/cyPm.c ****         else
 390:.\Generated_Source\PSoC5/cyPm.c ****         {
 391:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_PM_FASTCLK_IMO_CR_USB));
 392:.\Generated_Source\PSoC5/cyPm.c ****         }
 393:.\Generated_Source\PSoC5/cyPm.c ****     }
 394:.\Generated_Source\PSoC5/cyPm.c **** 
 395:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore enable state if needed */
 396:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 397:.\Generated_Source\PSoC5/cyPm.c ****        (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 398:.\Generated_Source\PSoC5/cyPm.c ****     {
 399:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - restore enabled state */
 400:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 401:.\Generated_Source\PSoC5/cyPm.c ****     }
 402:.\Generated_Source\PSoC5/cyPm.c **** 
 403:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore IMOCLK source */
 404:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 405:.\Generated_Source\PSoC5/cyPm.c **** 
 406:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore IMO doubler enable state (turned off by CyPmSaveClocks()) */
 407:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 408:.\Generated_Source\PSoC5/cyPm.c ****     {
 409:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_EnableDoubler();
 410:.\Generated_Source\PSoC5/cyPm.c ****     }
 411:.\Generated_Source\PSoC5/cyPm.c **** 
 412:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore clk_imo source, if needed */
 413:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 414:.\Generated_Source\PSoC5/cyPm.c ****     {
 415:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 416:.\Generated_Source\PSoC5/cyPm.c ****                                 cyPmClockBackup.clkImoSrc;
 417:.\Generated_Source\PSoC5/cyPm.c ****     }
 418:.\Generated_Source\PSoC5/cyPm.c **** 
 419:.\Generated_Source\PSoC5/cyPm.c **** 
 420:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL restore state */
 421:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 422:.\Generated_Source\PSoC5/cyPm.c ****     {
 423:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
 424:.\Generated_Source\PSoC5/cyPm.c ****         * Enable PLL. The actual CyPLL_OUT_Start() without wait period uses FTW
 425:.\Generated_Source\PSoC5/cyPm.c ****         * for period measurement. This could cause a problem if CTW/FTW is used
 426:.\Generated_Source\PSoC5/cyPm.c ****         * as a wakeup time in the low power modes APIs. To omit this issue PLL
 427:.\Generated_Source\PSoC5/cyPm.c ****         * wait procedure is implemented with a software delay.
 428:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
 429:.\Generated_Source\PSoC5/cyPm.c ****         status = CYRET_TIMEOUT;
 430:.\Generated_Source\PSoC5/cyPm.c **** 
 431:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable PLL */
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 9


 432:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
 433:.\Generated_Source\PSoC5/cyPm.c **** 
 434:.\Generated_Source\PSoC5/cyPm.c ****         /* Read to clear lock status after delay */
 435:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs((uint32)80u);
 436:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_PLL_SR_REG;
 437:.\Generated_Source\PSoC5/cyPm.c **** 
 438:.\Generated_Source\PSoC5/cyPm.c ****         /* It should take 250 us lock: 251-80 = 171 */
 439:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
 440:.\Generated_Source\PSoC5/cyPm.c ****         {
 441:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayUs((uint32)1u);
 442:.\Generated_Source\PSoC5/cyPm.c **** 
 443:.\Generated_Source\PSoC5/cyPm.c ****             /* Accept PLL is OK after two consecutive polls indicate PLL lock */
 444:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 445:.\Generated_Source\PSoC5/cyPm.c ****                (0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)))
 446:.\Generated_Source\PSoC5/cyPm.c ****             {
 447:.\Generated_Source\PSoC5/cyPm.c ****                 status = CYRET_SUCCESS;
 448:.\Generated_Source\PSoC5/cyPm.c ****                 break;
 449:.\Generated_Source\PSoC5/cyPm.c ****             }
 450:.\Generated_Source\PSoC5/cyPm.c ****         }
 451:.\Generated_Source\PSoC5/cyPm.c **** 
 452:.\Generated_Source\PSoC5/cyPm.c ****         if(CYRET_TIMEOUT == status)
 453:.\Generated_Source\PSoC5/cyPm.c ****         {
 454:.\Generated_Source\PSoC5/cyPm.c ****             /*******************************************************************
 455:.\Generated_Source\PSoC5/cyPm.c ****             * Process the situation when PLL is not ready.
 456:.\Generated_Source\PSoC5/cyPm.c ****             *******************************************************************/
 457:.\Generated_Source\PSoC5/cyPm.c ****            /* `#START_PLL_TIMEOUT` */
 458:.\Generated_Source\PSoC5/cyPm.c **** 
 459:.\Generated_Source\PSoC5/cyPm.c ****            /* `#END` */
 460:.\Generated_Source\PSoC5/cyPm.c **** 
 461:.\Generated_Source\PSoC5/cyPm.c ****         #ifdef CY_BOOT_CY_PM_RESTORE_CLOCKS_PLL_TIMEOUT_CALLBACK
 462:.\Generated_Source\PSoC5/cyPm.c ****             CyBoot_CyPmRestoreClocks_PllTimeout_Callback();
 463:.\Generated_Source\PSoC5/cyPm.c ****         #endif /* CY_BOOT_CY_PM_RESTORE_CLOCKS_PLL_TIMEOUT_CALLBACK */
 464:.\Generated_Source\PSoC5/cyPm.c ****         }
 465:.\Generated_Source\PSoC5/cyPm.c ****     }   /* (CY_PM_ENABLED == cyPmClockBackup.pllEnableState) */
 466:.\Generated_Source\PSoC5/cyPm.c **** 
 467:.\Generated_Source\PSoC5/cyPm.c **** 
 468:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL and IMO is ready to be source for Master clock */
 469:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 470:.\Generated_Source\PSoC5/cyPm.c ****        (CY_PM_MASTER_CLK_SRC_PLL == cyPmClockBackup.masterClkSrc))
 471:.\Generated_Source\PSoC5/cyPm.c ****     {
 472:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock divider */
 473:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 474:.\Generated_Source\PSoC5/cyPm.c ****         {
 475:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 476:.\Generated_Source\PSoC5/cyPm.c ****         }
 477:.\Generated_Source\PSoC5/cyPm.c **** 
 478:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock source */
 479:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 480:.\Generated_Source\PSoC5/cyPm.c ****     }
 481:.\Generated_Source\PSoC5/cyPm.c **** 
 482:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - disable if it was originally disabled */
 483:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 484:.\Generated_Source\PSoC5/cyPm.c ****        (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 485:.\Generated_Source\PSoC5/cyPm.c ****     {
 486:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Stop();
 487:.\Generated_Source\PSoC5/cyPm.c ****     }
 488:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 10


 489:.\Generated_Source\PSoC5/cyPm.c ****     /* Bus clock - restore divider, if needed */
 490:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 491:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp |= CY_PM_CLK_BUS_LSB_DIV_REG;
 492:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 493:.\Generated_Source\PSoC5/cyPm.c ****     {
 494:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 495:.\Generated_Source\PSoC5/cyPm.c ****     }
 496:.\Generated_Source\PSoC5/cyPm.c **** 
 497:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore flash wait cycles */
 498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
 499:.\Generated_Source\PSoC5/cyPm.c ****                            cyPmClockBackup.flashWaitCycles);
 500:.\Generated_Source\PSoC5/cyPm.c **** 
 501:.\Generated_Source\PSoC5/cyPm.c ****     /* Digital and analog clocks - restore state */
 502:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 503:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 504:.\Generated_Source\PSoC5/cyPm.c **** }
 505:.\Generated_Source\PSoC5/cyPm.c **** 
 506:.\Generated_Source\PSoC5/cyPm.c **** 
 507:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 508:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmAltAct
 509:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 510:.\Generated_Source\PSoC5/cyPm.c **** *
 511:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 512:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Alternate Active (Standby) state. The Alternate Active
 513:.\Generated_Source\PSoC5/cyPm.c **** *  state can allow for any of the capabilities of the device to be active, but
 514:.\Generated_Source\PSoC5/cyPm.c **** *  the operation of this function is dependent on the CPU being disabled during
 515:.\Generated_Source\PSoC5/cyPm.c **** *  the Alternate Active state. The configuration code and the component APIs
 516:.\Generated_Source\PSoC5/cyPm.c **** *  will configure the template for the Alternate Active state to be the same as
 517:.\Generated_Source\PSoC5/cyPm.c **** *  the Active state with the exception that the CPU will be disabled during
 518:.\Generated_Source\PSoC5/cyPm.c **** *  Alternate Active.
 519:.\Generated_Source\PSoC5/cyPm.c **** *
 520:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must manually configure the power mode
 521:.\Generated_Source\PSoC5/cyPm.c **** *  of the source clocks for the timer that is used as the wakeup timer.
 522:.\Generated_Source\PSoC5/cyPm.c **** *
 523:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3:
 524:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Alternate Active, if a wakeupTime other than NONE is
 525:.\Generated_Source\PSoC5/cyPm.c **** *  specified, then the appropriate timer state is configured as specified with
 526:.\Generated_Source\PSoC5/cyPm.c **** *  the interrupt for that timer disabled.  The wakeup source will be the
 527:.\Generated_Source\PSoC5/cyPm.c **** *  combination of the values specified in the wakeupSource and any timer
 528:.\Generated_Source\PSoC5/cyPm.c **** *  specified in the wakeupTime argument.  Once the wakeup condition is
 529:.\Generated_Source\PSoC5/cyPm.c **** *  satisfied, then all saved state is restored and the function returns in the
 530:.\Generated_Source\PSoC5/cyPm.c **** *  Active state.
 531:.\Generated_Source\PSoC5/cyPm.c **** *
 532:.\Generated_Source\PSoC5/cyPm.c **** *  Note that if the wakeupTime is made with a different value, the period before
 533:.\Generated_Source\PSoC5/cyPm.c **** *  the wakeup occurs can be significantly shorter than the specified time.  If
 534:.\Generated_Source\PSoC5/cyPm.c **** *  the next call is made with the same wakeupTime value, then the wakeup will
 535:.\Generated_Source\PSoC5/cyPm.c **** *  occur the specified period after the previous wakeup occurred.
 536:.\Generated_Source\PSoC5/cyPm.c **** *
 537:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 538:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 539:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  If the CTW, FTW or One PPS is already
 540:.\Generated_Source\PSoC5/cyPm.c **** *  configured for wakeup, for example with the SleepTimer or RTC components,
 541:.\Generated_Source\PSoC5/cyPm.c **** *  then specify NONE for the wakeupTime and include the appropriate source for
 542:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupSource.
 543:.\Generated_Source\PSoC5/cyPm.c **** *
 544:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5LP:
 545:.\Generated_Source\PSoC5/cyPm.c **** *  This function is used to both enter the Alternate Active mode and halt the
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 11


 546:.\Generated_Source\PSoC5/cyPm.c **** *  processor.  For PSoC 3 these two actions must be paired together.  With PSoC
 547:.\Generated_Source\PSoC5/cyPm.c **** *  5LP the processor can be halted independently with the __WFI() function from
 548:.\Generated_Source\PSoC5/cyPm.c **** *  the CMSIS library that is included in Creator.  This function should be used
 549:.\Generated_Source\PSoC5/cyPm.c **** *  instead when the action required is just to halt the processor until an
 550:.\Generated_Source\PSoC5/cyPm.c **** *  enabled interrupt occurs.
 551:.\Generated_Source\PSoC5/cyPm.c **** *
 552:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeupTime parameter is not used for this device. It must be set to zero
 553:.\Generated_Source\PSoC5/cyPm.c **** *  (PM_ALT_ACT_TIME_NONE). The wake up time configuration can be done by a
 554:.\Generated_Source\PSoC5/cyPm.c **** *  separate component: the CTW wakeup interval should be configured with the
 555:.\Generated_Source\PSoC5/cyPm.c **** *  Sleep Timer component and one second interval should be configured with the
 556:.\Generated_Source\PSoC5/cyPm.c **** *  RTC component.
 557:.\Generated_Source\PSoC5/cyPm.c **** *
 558:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeup behavior depends on the wakeupSource parameter in the following
 559:.\Generated_Source\PSoC5/cyPm.c **** *  manner: upon function execution the device will be switched from Active to
 560:.\Generated_Source\PSoC5/cyPm.c **** *  Alternate Active mode and then the CPU will be halted. When an enabled wakeup
 561:.\Generated_Source\PSoC5/cyPm.c **** *  event occurs the device will return to Active mode.  Similarly when an
 562:.\Generated_Source\PSoC5/cyPm.c **** *  enabled interrupt occurs the CPU will be started. These two actions will
 563:.\Generated_Source\PSoC5/cyPm.c **** *  occur together provided that the event that occurs is an enabled wakeup
 564:.\Generated_Source\PSoC5/cyPm.c **** *  source and also generates an interrupt. If just the wakeup event occurs then
 565:.\Generated_Source\PSoC5/cyPm.c **** *  the device will be in Active mode, but the CPU will remain halted waiting for
 566:.\Generated_Source\PSoC5/cyPm.c **** *  an interrupt. If an interrupt occurs from something other than a wakeup
 567:.\Generated_Source\PSoC5/cyPm.c **** *  source, then the CPU will restart with the device in Alternate Active mode
 568:.\Generated_Source\PSoC5/cyPm.c **** *  until a wakeup event occurs.
 569:.\Generated_Source\PSoC5/cyPm.c **** *
 570:.\Generated_Source\PSoC5/cyPm.c **** *  For example, if CyPmAltAct(PM_ALT_ACT_TIME_NONE, PM_ALT_ACT_SRC_PICU) is
 571:.\Generated_Source\PSoC5/cyPm.c **** *  called and PICU interrupt occurs, the CPU will be started and device will be
 572:.\Generated_Source\PSoC5/cyPm.c **** *  switched into Active mode. And if CyPmAltAct(PM_ALT_ACT_TIME_NONE,
 573:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_NONE) is called and PICU interrupt occurs, the CPU will be
 574:.\Generated_Source\PSoC5/cyPm.c **** *  started while device remains in Alternate Active mode.
 575:.\Generated_Source\PSoC5/cyPm.c **** *
 576:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 577:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime: Specifies a timer wakeup source and the frequency of that
 578:.\Generated_Source\PSoC5/cyPm.c **** *              source. For PSoC 5LP this parameter is ignored.
 579:.\Generated_Source\PSoC5/cyPm.c **** *
 580:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Time
 581:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_NONE             None
 582:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_ONE_PPS          One PPS: 1 second
 583:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_2MS          CTW: 2 ms
 584:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_4MS          CTW: 4 ms
 585:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_8MS          CTW: 8 ms
 586:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_16MS         CTW: 16 ms
 587:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_32MS         CTW: 32 ms
 588:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_64MS         CTW: 64 ms
 589:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_128MS        CTW: 128 ms
 590:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_256MS        CTW: 256 ms
 591:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_512MS        CTW: 512 ms
 592:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_1024MS       CTW: 1024 ms
 593:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_2048MS       CTW: 2048 ms
 594:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_4096MS       CTW: 4096 ms
 595:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_FTW(1-256)*       FTW: 10us to 2.56 ms
 596:.\Generated_Source\PSoC5/cyPm.c **** *
 597:.\Generated_Source\PSoC5/cyPm.c **** *  *Note:   PM_ALT_ACT_TIME_FTW() is a macro that takes an argument that
 598:.\Generated_Source\PSoC5/cyPm.c **** *           specifies how many increments of 10 us to delay.
 599:.\Generated_Source\PSoC5/cyPm.c ****             For PSoC 3 silicon the valid range of  values is 1 to 256.
 600:.\Generated_Source\PSoC5/cyPm.c **** *
 601:.\Generated_Source\PSoC5/cyPm.c **** *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 602:.\Generated_Source\PSoC5/cyPm.c **** *                   a wakeupTime has been specified, the associated timer will
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 12


 603:.\Generated_Source\PSoC5/cyPm.c **** *                   be included as a wakeup source.
 604:.\Generated_Source\PSoC5/cyPm.c **** *
 605:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Source
 606:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_NONE              None
 607:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR0       Comparator 0
 608:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR1       Comparator 1
 609:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR2       Comparator 2
 610:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR3       Comparator 3
 611:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_INTERRUPT         Interrupt
 612:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_PICU              PICU
 613:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_I2C               I2C
 614:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_BOOSTCONVERTER    Boost Converter
 615:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_FTW               Fast Timewheel*
 616:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_VD                High and Low Voltage Detection (HVI, LVI)*
 617:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_CTW               Central Timewheel**
 618:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_ONE_PPS           One PPS**
 619:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_LCD               LCD
 620:.\Generated_Source\PSoC5/cyPm.c **** *
 621:.\Generated_Source\PSoC5/cyPm.c **** *  *Note : FTW and HVI/LVI wakeup signals are in the same mask bit.
 622:.\Generated_Source\PSoC5/cyPm.c **** *  **Note: CTW and One PPS wakeup signals are in the same mask bit.
 623:.\Generated_Source\PSoC5/cyPm.c **** *
 624:.\Generated_Source\PSoC5/cyPm.c **** *  When specifying a Comparator as the wakeupSource, an instance specific define
 625:.\Generated_Source\PSoC5/cyPm.c **** *  that will track with the specific comparator that the instance
 626:.\Generated_Source\PSoC5/cyPm.c **** *  is placed into should be used. As an example, for a Comparator instance named
 627:.\Generated_Source\PSoC5/cyPm.c **** *  MyComp the value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 628:.\Generated_Source\PSoC5/cyPm.c **** *
 629:.\Generated_Source\PSoC5/cyPm.c **** *  When CTW, FTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 630:.\Generated_Source\PSoC5/cyPm.c **** *  function must be called upon wakeup with a corresponding parameter. Please
 631:.\Generated_Source\PSoC5/cyPm.c **** *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 632:.\Generated_Source\PSoC5/cyPm.c **** *  information.
 633:.\Generated_Source\PSoC5/cyPm.c **** *
 634:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 635:.\Generated_Source\PSoC5/cyPm.c **** *  None
 636:.\Generated_Source\PSoC5/cyPm.c **** *
 637:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
 638:.\Generated_Source\PSoC5/cyPm.c **** *  No
 639:.\Generated_Source\PSoC5/cyPm.c **** *
 640:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
 641:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 642:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 643:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  Also, the ILO 1 KHz (if CTW timer is
 644:.\Generated_Source\PSoC5/cyPm.c **** *  used as wakeup time) or ILO 100 KHz (if the FTW timer is used as wakeup time)
 645:.\Generated_Source\PSoC5/cyPm.c **** *  will be left started.
 646:.\Generated_Source\PSoC5/cyPm.c **** *
 647:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 648:.\Generated_Source\PSoC5/cyPm.c **** void CyPmAltAct(uint16 wakeupTime, uint16 wakeupSource) 
 649:.\Generated_Source\PSoC5/cyPm.c **** {
 650:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC5)
 651:.\Generated_Source\PSoC5/cyPm.c **** 
 652:.\Generated_Source\PSoC5/cyPm.c ****         /* Arguments expected to be 0 */
 653:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_ALT_ACT_TIME_NONE == wakeupTime);
 654:.\Generated_Source\PSoC5/cyPm.c **** 
 655:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != wakeupTime)
 656:.\Generated_Source\PSoC5/cyPm.c ****         {
 657:.\Generated_Source\PSoC5/cyPm.c ****             /* To remove unreferenced local variable warning */
 658:.\Generated_Source\PSoC5/cyPm.c ****         }
 659:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 13


 660:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC5) */
 661:.\Generated_Source\PSoC5/cyPm.c **** 
 662:.\Generated_Source\PSoC5/cyPm.c **** 
 663:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 664:.\Generated_Source\PSoC5/cyPm.c **** 
 665:.\Generated_Source\PSoC5/cyPm.c ****         /* FTW - save current and set new configuration */
 666:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_ALT_ACT_TIME_FTW(1u)) && (wakeupTime <= PM_ALT_ACT_TIME_FTW(256u)))
 667:.\Generated_Source\PSoC5/cyPm.c ****         {
 668:.\Generated_Source\PSoC5/cyPm.c ****             CyPmFtwSetInterval(PM_ALT_ACT_FTW_INTERVAL(wakeupTime));
 669:.\Generated_Source\PSoC5/cyPm.c **** 
 670:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 671:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_FTW;
 672:.\Generated_Source\PSoC5/cyPm.c ****         }
 673:.\Generated_Source\PSoC5/cyPm.c **** 
 674:.\Generated_Source\PSoC5/cyPm.c ****         /* CTW - save current and set new configuration */
 675:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_ALT_ACT_TIME_CTW_2MS) && (wakeupTime <= PM_ALT_ACT_TIME_CTW_4096MS))
 676:.\Generated_Source\PSoC5/cyPm.c ****         {
 677:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current CTW configuration and set new one */
 678:.\Generated_Source\PSoC5/cyPm.c ****             CyPmCtwSetInterval((uint8)(wakeupTime - 1u));
 679:.\Generated_Source\PSoC5/cyPm.c **** 
 680:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 681:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_CTW;
 682:.\Generated_Source\PSoC5/cyPm.c ****         }
 683:.\Generated_Source\PSoC5/cyPm.c **** 
 684:.\Generated_Source\PSoC5/cyPm.c ****         /* 1PPS - save current and set new configuration */
 685:.\Generated_Source\PSoC5/cyPm.c ****         if(PM_ALT_ACT_TIME_ONE_PPS == wakeupTime)
 686:.\Generated_Source\PSoC5/cyPm.c ****         {
 687:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current 1PPS configuration and set new one */
 688:.\Generated_Source\PSoC5/cyPm.c ****             CyPmOppsSet();
 689:.\Generated_Source\PSoC5/cyPm.c **** 
 690:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 691:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_ONE_PPS;
 692:.\Generated_Source\PSoC5/cyPm.c ****         }
 693:.\Generated_Source\PSoC5/cyPm.c **** 
 694:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 695:.\Generated_Source\PSoC5/cyPm.c **** 
 696:.\Generated_Source\PSoC5/cyPm.c **** 
 697:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and set new wake up configuration */
 698:.\Generated_Source\PSoC5/cyPm.c **** 
 699:.\Generated_Source\PSoC5/cyPm.c ****     /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 700:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 701:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 702:.\Generated_Source\PSoC5/cyPm.c **** 
 703:.\Generated_Source\PSoC5/cyPm.c ****     /* Comparators */
 704:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 705:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 706:.\Generated_Source\PSoC5/cyPm.c **** 
 707:.\Generated_Source\PSoC5/cyPm.c ****     /* LCD */
 708:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 709:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 710:.\Generated_Source\PSoC5/cyPm.c **** 
 711:.\Generated_Source\PSoC5/cyPm.c **** 
 712:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to the Alternate Active mode */
 713:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_A
 714:.\Generated_Source\PSoC5/cyPm.c **** 
 715:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
 716:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 14


 717:.\Generated_Source\PSoC5/cyPm.c **** 
 718:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into the mode. */
 719:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 720:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 721:.\Generated_Source\PSoC5/cyPm.c **** 
 722:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
 723:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 724:.\Generated_Source\PSoC5/cyPm.c **** 
 725:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Alternate Active Mode */
 726:.\Generated_Source\PSoC5/cyPm.c **** 
 727:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore wake up configuration */
 728:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 729:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 730:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 731:.\Generated_Source\PSoC5/cyPm.c **** }
 732:.\Generated_Source\PSoC5/cyPm.c **** 
 733:.\Generated_Source\PSoC5/cyPm.c **** 
 734:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 735:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmSleep
 736:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 737:.\Generated_Source\PSoC5/cyPm.c **** *
 738:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 739:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Sleep state.
 740:.\Generated_Source\PSoC5/cyPm.c **** *
 741:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must manually configure the power
 742:.\Generated_Source\PSoC5/cyPm.c **** *  mode of the source clocks for the timer that is used as the wakeup timer.
 743:.\Generated_Source\PSoC5/cyPm.c **** *
 744:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must prepare clock tree configuration
 745:.\Generated_Source\PSoC5/cyPm.c **** *  for the low power mode by calling CyPmSaveClocks(). And restore clock
 746:.\Generated_Source\PSoC5/cyPm.c **** *  configuration after CyPmSleep() execution by calling CyPmRestoreClocks(). See
 747:.\Generated_Source\PSoC5/cyPm.c **** *  Power Management section, Clock Configuration subsection of the System
 748:.\Generated_Source\PSoC5/cyPm.c **** *  Reference Guide for more information.
 749:.\Generated_Source\PSoC5/cyPm.c **** *
 750:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3:
 751:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Sleep, if a wakeupTime other than NONE is specified,
 752:.\Generated_Source\PSoC5/cyPm.c **** *  then the appropriate timer state is configured as specified with the
 753:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt for that timer disabled.  The wakeup source will be a combination
 754:.\Generated_Source\PSoC5/cyPm.c **** *  of the values specified in the wakeupSource and any timer specified in the
 755:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime argument.  Once the wakeup condition is satisfied, then all saved
 756:.\Generated_Source\PSoC5/cyPm.c **** *  state is restored and the function returns in the Active state.
 757:.\Generated_Source\PSoC5/cyPm.c **** *
 758:.\Generated_Source\PSoC5/cyPm.c **** *  Note that if the wakeupTime is made with a different value, the period before
 759:.\Generated_Source\PSoC5/cyPm.c **** *  the wakeup occurs can be significantly shorter than the specified time.  If
 760:.\Generated_Source\PSoC5/cyPm.c **** *  the next call is made with the same wakeupTime value, then the wakeup will
 761:.\Generated_Source\PSoC5/cyPm.c **** *  occur the specified period after the previous wakeup occurred.
 762:.\Generated_Source\PSoC5/cyPm.c **** *
 763:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 764:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 765:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  If the CTW or One PPS is already
 766:.\Generated_Source\PSoC5/cyPm.c **** *  configured for wakeup, for example with the SleepTimer or RTC components,
 767:.\Generated_Source\PSoC5/cyPm.c **** *  then specify NONE for the wakeupTime and include the appropriate source for
 768:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupSource.
 769:.\Generated_Source\PSoC5/cyPm.c **** *
 770:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5LP:
 771:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeupTime parameter is not used and the only NONE can be specified.
 772:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeup time must be configured with the component, SleepTimer for CTW
 773:.\Generated_Source\PSoC5/cyPm.c **** *  intervals and RTC for 1PPS interval. The component must be configured to
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 15


 774:.\Generated_Source\PSoC5/cyPm.c **** *  generate interrupt.
 775:.\Generated_Source\PSoC5/cyPm.c **** *
 776:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 777:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime:      Specifies a timer wakeup source and the frequency of that
 778:.\Generated_Source\PSoC5/cyPm.c **** *                   source. For PSoC 5LP, this parameter is ignored.
 779:.\Generated_Source\PSoC5/cyPm.c **** *
 780:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Time
 781:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_NONE               None
 782:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_ONE_PPS            One PPS: 1 second
 783:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_2MS            CTW: 2 ms
 784:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_4MS            CTW: 4 ms
 785:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_8MS            CTW: 8 ms
 786:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_16MS           CTW: 16 ms
 787:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_32MS           CTW: 32 ms
 788:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_64MS           CTW: 64 ms
 789:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_128MS          CTW: 128 ms
 790:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_256MS          CTW: 256 ms
 791:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_512MS          CTW: 512 ms
 792:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_1024MS         CTW: 1024 ms
 793:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_2048MS         CTW: 2048 ms
 794:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_4096MS         CTW: 4096 ms
 795:.\Generated_Source\PSoC5/cyPm.c **** *
 796:.\Generated_Source\PSoC5/cyPm.c **** *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 797:.\Generated_Source\PSoC5/cyPm.c **** *                   a wakeupTime has been specified the associated timer will be
 798:.\Generated_Source\PSoC5/cyPm.c **** *                   included as a wakeup source.
 799:.\Generated_Source\PSoC5/cyPm.c **** *
 800:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Source
 801:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_NONE                None
 802:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR0         Comparator 0
 803:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR1         Comparator 1
 804:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR2         Comparator 2
 805:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR3         Comparator 3
 806:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_PICU                PICU
 807:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_I2C                 I2C
 808:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_BOOSTCONVERTER      Boost Converter
 809:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_VD                  High and Low Voltage Detection (HVI, LVI)
 810:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_CTW                 Central Timewheel*
 811:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_ONE_PPS             One PPS*
 812:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_LCD                 LCD
 813:.\Generated_Source\PSoC5/cyPm.c **** *
 814:.\Generated_Source\PSoC5/cyPm.c **** *  *Note:   CTW and One PPS wakeup signals are in the same mask bit.
 815:.\Generated_Source\PSoC5/cyPm.c **** *
 816:.\Generated_Source\PSoC5/cyPm.c **** *  When specifying a Comparator as the wakeupSource an instance specific define
 817:.\Generated_Source\PSoC5/cyPm.c **** *  should be used that will track with the specific comparator that the instance
 818:.\Generated_Source\PSoC5/cyPm.c **** *  is placed into. As an example for a Comparator instance named MyComp the
 819:.\Generated_Source\PSoC5/cyPm.c **** *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 820:.\Generated_Source\PSoC5/cyPm.c **** *
 821:.\Generated_Source\PSoC5/cyPm.c **** *  When CTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 822:.\Generated_Source\PSoC5/cyPm.c **** *  function must be called upon wakeup with corresponding parameter. Please
 823:.\Generated_Source\PSoC5/cyPm.c **** *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 824:.\Generated_Source\PSoC5/cyPm.c **** *  information.
 825:.\Generated_Source\PSoC5/cyPm.c **** *
 826:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 827:.\Generated_Source\PSoC5/cyPm.c **** *  None
 828:.\Generated_Source\PSoC5/cyPm.c **** *
 829:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
 830:.\Generated_Source\PSoC5/cyPm.c **** *  No
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 16


 831:.\Generated_Source\PSoC5/cyPm.c **** *
 832:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects and Restrictions:
 833:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 834:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 835:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled. Also, the ILO 1 KHz (if CTW timer is
 836:.\Generated_Source\PSoC5/cyPm.c **** *  used as wake up time) will be left started.
 837:.\Generated_Source\PSoC5/cyPm.c **** *
 838:.\Generated_Source\PSoC5/cyPm.c **** *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
 839:.\Generated_Source\PSoC5/cyPm.c **** *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
 840:.\Generated_Source\PSoC5/cyPm.c **** *  delay is measured using rising edges of the 1 kHz ILO.
 841:.\Generated_Source\PSoC5/cyPm.c **** *
 842:.\Generated_Source\PSoC5/cyPm.c **** *  For PSoC 3 silicon hardware buzz should be disabled before entering a sleep
 843:.\Generated_Source\PSoC5/cyPm.c **** *  power mode. It is disabled by PSoC Creator during startup.
 844:.\Generated_Source\PSoC5/cyPm.c **** *  If a Low Voltage Interrupt (LVI), High Voltage Interrupt (HVI) or Brown Out
 845:.\Generated_Source\PSoC5/cyPm.c **** *  detect (power supply supervising capabilities) are required in a design
 846:.\Generated_Source\PSoC5/cyPm.c **** *  during sleep, use the Central Time Wheel (CTW) to periodically wake the
 847:.\Generated_Source\PSoC5/cyPm.c **** *  device, perform software buzz, and refresh the supervisory services. If LVI,
 848:.\Generated_Source\PSoC5/cyPm.c **** *  HVI, or Brown Out is not required, then CTW is not required.
 849:.\Generated_Source\PSoC5/cyPm.c **** *  Refer to the device errata for more information.
 850:.\Generated_Source\PSoC5/cyPm.c **** *
 851:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC5/cyPm.c **** void CyPmSleep(uint8 wakeupTime, uint16 wakeupSource) 
 853:.\Generated_Source\PSoC5/cyPm.c **** {
 854:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
 855:.\Generated_Source\PSoC5/cyPm.c **** 
 856:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current global interrupt enable and disable it */
 857:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 858:.\Generated_Source\PSoC5/cyPm.c **** 
 859:.\Generated_Source\PSoC5/cyPm.c **** 
 860:.\Generated_Source\PSoC5/cyPm.c ****     /***********************************************************************
 861:.\Generated_Source\PSoC5/cyPm.c ****     * The Hibernate/Sleep regulator has a settling time after a reset.
 862:.\Generated_Source\PSoC5/cyPm.c ****     * During this time, the system ignores requests to enter Sleep and
 863:.\Generated_Source\PSoC5/cyPm.c ****     * Hibernate modes. The holdoff delay is measured using rising edges of
 864:.\Generated_Source\PSoC5/cyPm.c ****     * the 1 kHz ILO.
 865:.\Generated_Source\PSoC5/cyPm.c ****     ***********************************************************************/
 866:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 867:.\Generated_Source\PSoC5/cyPm.c ****     {
 868:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable hold off - no action on restore */
 869:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 870:.\Generated_Source\PSoC5/cyPm.c ****     }
 871:.\Generated_Source\PSoC5/cyPm.c ****     else
 872:.\Generated_Source\PSoC5/cyPm.c ****     {
 873:.\Generated_Source\PSoC5/cyPm.c ****         /* Abort, device is not ready for low power mode entry */
 874:.\Generated_Source\PSoC5/cyPm.c **** 
 875:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore global interrupt enable state */
 876:.\Generated_Source\PSoC5/cyPm.c ****         CyExitCriticalSection(interruptState);
 877:.\Generated_Source\PSoC5/cyPm.c **** 
 878:.\Generated_Source\PSoC5/cyPm.c ****         return;
 879:.\Generated_Source\PSoC5/cyPm.c ****     }
 880:.\Generated_Source\PSoC5/cyPm.c **** 
 881:.\Generated_Source\PSoC5/cyPm.c **** 
 882:.\Generated_Source\PSoC5/cyPm.c ****     /***********************************************************************
 883:.\Generated_Source\PSoC5/cyPm.c ****     * PSoC3 < TO6:
 884:.\Generated_Source\PSoC5/cyPm.c ****     * - Hardware buzz must be disabled before the sleep mode entry.
 885:.\Generated_Source\PSoC5/cyPm.c ****     * - Voltage supervision (HVI/LVI) requires hardware buzz, so they must
 886:.\Generated_Source\PSoC5/cyPm.c ****     *   be also disabled.
 887:.\Generated_Source\PSoC5/cyPm.c ****     *
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 17


 888:.\Generated_Source\PSoC5/cyPm.c ****     * PSoC3 >= TO6:
 889:.\Generated_Source\PSoC5/cyPm.c ****     * - Voltage supervision (HVI/LVI) requires hardware buzz, so hardware
 890:.\Generated_Source\PSoC5/cyPm.c ****     *   buzz must be enabled before the sleep mode entry and restored on
 891:.\Generated_Source\PSoC5/cyPm.c ****     *   the wakeup.
 892:.\Generated_Source\PSoC5/cyPm.c ****     ***********************************************************************/
 893:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 894:.\Generated_Source\PSoC5/cyPm.c **** 
 895:.\Generated_Source\PSoC5/cyPm.c ****         /* Silicon Revision ID is below TO6 */
 896:.\Generated_Source\PSoC5/cyPm.c ****         if(CYDEV_CHIP_REV_ACTUAL < 5u)
 897:.\Generated_Source\PSoC5/cyPm.c ****         {
 898:.\Generated_Source\PSoC5/cyPm.c ****             /* Hardware buzz expected to be disabled in Sleep mode */
 899:.\Generated_Source\PSoC5/cyPm.c ****             CYASSERT(0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ));
 900:.\Generated_Source\PSoC5/cyPm.c ****         }
 901:.\Generated_Source\PSoC5/cyPm.c **** 
 902:.\Generated_Source\PSoC5/cyPm.c **** 
 903:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
 904:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
 905:.\Generated_Source\PSoC5/cyPm.c ****         {
 906:.\Generated_Source\PSoC5/cyPm.c ****             if(CYDEV_CHIP_REV_ACTUAL < 5u)
 907:.\Generated_Source\PSoC5/cyPm.c ****             {
 908:.\Generated_Source\PSoC5/cyPm.c ****                 /* LVI/HVI requires hardware buzz to be enabled */
 909:.\Generated_Source\PSoC5/cyPm.c ****                 CYASSERT(0u != 0u);
 910:.\Generated_Source\PSoC5/cyPm.c ****             }
 911:.\Generated_Source\PSoC5/cyPm.c ****             else
 912:.\Generated_Source\PSoC5/cyPm.c ****             {
 913:.\Generated_Source\PSoC5/cyPm.c ****                 if (0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ))
 914:.\Generated_Source\PSoC5/cyPm.c ****                 {
 915:.\Generated_Source\PSoC5/cyPm.c ****                     cyPmBackup.hardwareBuzz = CY_PM_DISABLED;
 916:.\Generated_Source\PSoC5/cyPm.c ****                     CY_PM_PWRSYS_WAKE_TR2_REG |= CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ;
 917:.\Generated_Source\PSoC5/cyPm.c ****                 }
 918:.\Generated_Source\PSoC5/cyPm.c ****                 else
 919:.\Generated_Source\PSoC5/cyPm.c ****                 {
 920:.\Generated_Source\PSoC5/cyPm.c ****                     cyPmBackup.hardwareBuzz = CY_PM_ENABLED;
 921:.\Generated_Source\PSoC5/cyPm.c ****                 }
 922:.\Generated_Source\PSoC5/cyPm.c ****             }
 923:.\Generated_Source\PSoC5/cyPm.c ****         }
 924:.\Generated_Source\PSoC5/cyPm.c **** 
 925:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 926:.\Generated_Source\PSoC5/cyPm.c **** 
 927:.\Generated_Source\PSoC5/cyPm.c **** 
 928:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************************
 929:.\Generated_Source\PSoC5/cyPm.c ****     * For ARM-based devices,interrupt is required for the CPU to wake up. The
 930:.\Generated_Source\PSoC5/cyPm.c ****     * Power Management implementation assumes that wakeup time is configured with a
 931:.\Generated_Source\PSoC5/cyPm.c ****     * separate component (component-based wakeup time configuration) for
 932:.\Generated_Source\PSoC5/cyPm.c ****     * interrupt to be issued on terminal count. For more information, refer to the
 933:.\Generated_Source\PSoC5/cyPm.c ****     * Wakeup Time Configuration section of System Reference Guide.
 934:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************************/
 935:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC5)
 936:.\Generated_Source\PSoC5/cyPm.c **** 
 937:.\Generated_Source\PSoC5/cyPm.c ****         /* Arguments expected to be 0 */
 938:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_SLEEP_TIME_NONE == wakeupTime);
 939:.\Generated_Source\PSoC5/cyPm.c **** 
 940:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != wakeupTime)
 941:.\Generated_Source\PSoC5/cyPm.c ****         {
 942:.\Generated_Source\PSoC5/cyPm.c ****             /* To remove unreferenced local variable warning */
 943:.\Generated_Source\PSoC5/cyPm.c ****         }
 944:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 18


 945:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC5) */
 946:.\Generated_Source\PSoC5/cyPm.c **** 
 947:.\Generated_Source\PSoC5/cyPm.c **** 
 948:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 949:.\Generated_Source\PSoC5/cyPm.c **** 
 950:.\Generated_Source\PSoC5/cyPm.c **** 
 951:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 952:.\Generated_Source\PSoC5/cyPm.c **** 
 953:.\Generated_Source\PSoC5/cyPm.c ****         /* CTW - save current and set new configuration */
 954:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_SLEEP_TIME_CTW_2MS) && (wakeupTime <= PM_SLEEP_TIME_CTW_4096MS))
 955:.\Generated_Source\PSoC5/cyPm.c ****         {
 956:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current and set new configuration of CTW */
 957:.\Generated_Source\PSoC5/cyPm.c ****             CyPmCtwSetInterval((uint8)(wakeupTime - 1u));
 958:.\Generated_Source\PSoC5/cyPm.c **** 
 959:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 960:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_SLEEP_SRC_CTW;
 961:.\Generated_Source\PSoC5/cyPm.c ****         }
 962:.\Generated_Source\PSoC5/cyPm.c **** 
 963:.\Generated_Source\PSoC5/cyPm.c ****         /* 1PPS - save current and set new configuration */
 964:.\Generated_Source\PSoC5/cyPm.c ****         if(PM_SLEEP_TIME_ONE_PPS == wakeupTime)
 965:.\Generated_Source\PSoC5/cyPm.c ****         {
 966:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current and set new configuration of the 1PPS */
 967:.\Generated_Source\PSoC5/cyPm.c ****             CyPmOppsSet();
 968:.\Generated_Source\PSoC5/cyPm.c **** 
 969:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 970:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_SLEEP_SRC_ONE_PPS;
 971:.\Generated_Source\PSoC5/cyPm.c ****         }
 972:.\Generated_Source\PSoC5/cyPm.c **** 
 973:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 974:.\Generated_Source\PSoC5/cyPm.c **** 
 975:.\Generated_Source\PSoC5/cyPm.c **** 
 976:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and set new wake up configuration */
 977:.\Generated_Source\PSoC5/cyPm.c **** 
 978:.\Generated_Source\PSoC5/cyPm.c ****     /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 979:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 980:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 981:.\Generated_Source\PSoC5/cyPm.c **** 
 982:.\Generated_Source\PSoC5/cyPm.c ****     /* Comparators */
 983:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 984:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 985:.\Generated_Source\PSoC5/cyPm.c **** 
 986:.\Generated_Source\PSoC5/cyPm.c ****     /* LCD */
 987:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 988:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 989:.\Generated_Source\PSoC5/cyPm.c **** 
 990:.\Generated_Source\PSoC5/cyPm.c **** 
 991:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************
 992:.\Generated_Source\PSoC5/cyPm.c ****     * Do not use the merge region below unless any component datasheet
 993:.\Generated_Source\PSoC5/cyPm.c ****     * suggests doing so.
 994:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************/
 995:.\Generated_Source\PSoC5/cyPm.c ****     /* `#START CY_PM_JUST_BEFORE_SLEEP` */
 996:.\Generated_Source\PSoC5/cyPm.c **** 
 997:.\Generated_Source\PSoC5/cyPm.c ****     /* `#END` */
 998:.\Generated_Source\PSoC5/cyPm.c **** 
 999:.\Generated_Source\PSoC5/cyPm.c ****     #ifdef CY_BOOT_CY_PM_SLEEP_BEFORE_SLEEP_CALLBACK
1000:.\Generated_Source\PSoC5/cyPm.c ****         CyBoot_CyPmSleep_BeforeSleep_Callback();
1001:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* CY_BOOT_CY_PM_SLEEP_BEFORE_SLEEP_CALLBACK */
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 19


1002:.\Generated_Source\PSoC5/cyPm.c **** 
1003:.\Generated_Source\PSoC5/cyPm.c ****     /* Last moment IMO frequency change */
1004:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
1005:.\Generated_Source\PSoC5/cyPm.c ****     {
1006:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is 12 MHz */
1007:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
1008:.\Generated_Source\PSoC5/cyPm.c ****     }
1009:.\Generated_Source\PSoC5/cyPm.c ****     else
1010:.\Generated_Source\PSoC5/cyPm.c ****     {
1011:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is not 12 MHz */
1012:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
1013:.\Generated_Source\PSoC5/cyPm.c **** 
1014:.\Generated_Source\PSoC5/cyPm.c ****         /* Save IMO frequency */
1015:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1016:.\Generated_Source\PSoC5/cyPm.c **** 
1017:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMO frequency to 12 MHz */
1018:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
1019:.\Generated_Source\PSoC5/cyPm.c ****     }
1020:.\Generated_Source\PSoC5/cyPm.c **** 
1021:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to Sleep mode */
1022:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_S
1023:.\Generated_Source\PSoC5/cyPm.c **** 
1024:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
1025:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
1026:.\Generated_Source\PSoC5/cyPm.c **** 
1027:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into mode. */
1028:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1029:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1030:.\Generated_Source\PSoC5/cyPm.c **** 
1031:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
1032:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
1033:.\Generated_Source\PSoC5/cyPm.c **** 
1034:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Sleep Mode */
1035:.\Generated_Source\PSoC5/cyPm.c **** 
1036:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore last moment IMO frequency change */
1037:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1038:.\Generated_Source\PSoC5/cyPm.c ****     {
1039:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
1040:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.imoActFreq;
1041:.\Generated_Source\PSoC5/cyPm.c ****     }
1042:.\Generated_Source\PSoC5/cyPm.c **** 
1043:.\Generated_Source\PSoC5/cyPm.c **** 
1044:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************
1045:.\Generated_Source\PSoC5/cyPm.c ****     * Do not use merge region below unless any component datasheet
1046:.\Generated_Source\PSoC5/cyPm.c ****     * suggest to do so.
1047:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************/
1048:.\Generated_Source\PSoC5/cyPm.c ****     /* `#START CY_PM_JUST_AFTER_WAKEUP_FROM_SLEEP` */
1049:.\Generated_Source\PSoC5/cyPm.c **** 
1050:.\Generated_Source\PSoC5/cyPm.c ****     /* `#END` */
1051:.\Generated_Source\PSoC5/cyPm.c **** 
1052:.\Generated_Source\PSoC5/cyPm.c ****     #ifdef CY_BOOT_CY_PM_SLEEP_AFTER_SLEEP_CALLBACK
1053:.\Generated_Source\PSoC5/cyPm.c ****         CyBoot_CyPmSleep_AfterSleep_Callback();
1054:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* CY_BOOT_CY_PM_SLEEP_AFTER_SLEEP_CALLBACK */
1055:.\Generated_Source\PSoC5/cyPm.c **** 
1056:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore hardware configuration */
1057:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
1058:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 20


1059:.\Generated_Source\PSoC5/cyPm.c **** 
1060:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable hardware buzz, if it was previously enabled */
1061:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1062:.\Generated_Source\PSoC5/cyPm.c **** 
1063:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
1064:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
1065:.\Generated_Source\PSoC5/cyPm.c ****         {
1066:.\Generated_Source\PSoC5/cyPm.c ****             if(CYDEV_CHIP_REV_ACTUAL >= 5u)
1067:.\Generated_Source\PSoC5/cyPm.c ****             {
1068:.\Generated_Source\PSoC5/cyPm.c ****                 if (CY_PM_DISABLED == cyPmBackup.hardwareBuzz)
1069:.\Generated_Source\PSoC5/cyPm.c ****                 {
1070:.\Generated_Source\PSoC5/cyPm.c ****                     CY_PM_PWRSYS_WAKE_TR2_REG &= (uint8)(~CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ);
1071:.\Generated_Source\PSoC5/cyPm.c ****                 }
1072:.\Generated_Source\PSoC5/cyPm.c ****             }
1073:.\Generated_Source\PSoC5/cyPm.c ****         }
1074:.\Generated_Source\PSoC5/cyPm.c **** 
1075:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
1076:.\Generated_Source\PSoC5/cyPm.c **** 
1077:.\Generated_Source\PSoC5/cyPm.c **** 
1078:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore current wake up configuration */
1079:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1080:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1081:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1082:.\Generated_Source\PSoC5/cyPm.c **** 
1083:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore global interrupt enable state */
1084:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1085:.\Generated_Source\PSoC5/cyPm.c **** }
1086:.\Generated_Source\PSoC5/cyPm.c **** 
1087:.\Generated_Source\PSoC5/cyPm.c **** 
1088:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1089:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibernate
1090:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1091:.\Generated_Source\PSoC5/cyPm.c **** *
1092:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1093:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Hibernate state.
1094:.\Generated_Source\PSoC5/cyPm.c **** *
1095:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Hibernate, the current status of the PICU wakeup source
1096:.\Generated_Source\PSoC5/cyPm.c **** *  bit is saved and then set. This configures the device to wake up from the
1097:.\Generated_Source\PSoC5/cyPm.c **** *  PICU. Make sure you have at least one pin configured to generate PICU
1098:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt. For pin Px.y, the register "PICU_INTTYPE_PICUx_INTTYPEy" controls
1099:.\Generated_Source\PSoC5/cyPm.c **** *  the PICU behavior. In the TRM, this register is "PICU[0..15]_INTTYPE[0..7]."
1100:.\Generated_Source\PSoC5/cyPm.c **** *  In the Pins component datasheet, this register is referred to as the IRQ
1101:.\Generated_Source\PSoC5/cyPm.c **** *  option. Once the wakeup occurs, the PICU wakeup source bit is restored and
1102:.\Generated_Source\PSoC5/cyPm.c **** *  the PSoC returns to the Active state.
1103:.\Generated_Source\PSoC5/cyPm.c **** *
1104:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1105:.\Generated_Source\PSoC5/cyPm.c **** *  None
1106:.\Generated_Source\PSoC5/cyPm.c **** *
1107:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1108:.\Generated_Source\PSoC5/cyPm.c **** *  None
1109:.\Generated_Source\PSoC5/cyPm.c **** *
1110:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1111:.\Generated_Source\PSoC5/cyPm.c **** *  No
1112:.\Generated_Source\PSoC5/cyPm.c **** *
1113:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1114:.\Generated_Source\PSoC5/cyPm.c **** *  Applications must wait 20 us before re-entering hibernate or sleep after
1115:.\Generated_Source\PSoC5/cyPm.c **** *  waking up from hibernate. The 20 us allows the sleep regulator time to
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 21


1116:.\Generated_Source\PSoC5/cyPm.c **** *  stabilize before the next hibernate / sleep event occurs. The 20 us
1117:.\Generated_Source\PSoC5/cyPm.c **** *  requirement begins when the device wakes up. There is no hardware check that
1118:.\Generated_Source\PSoC5/cyPm.c **** *  this requirement is met. The specified delay should be done on ISR entry.
1119:.\Generated_Source\PSoC5/cyPm.c **** *
1120:.\Generated_Source\PSoC5/cyPm.c **** *  After the wakeup PICU interrupt occurs, the Pin_ClearInterrupt() (where Pin
1121:.\Generated_Source\PSoC5/cyPm.c **** *  is instance name of the Pins component) function must be called to clear the
1122:.\Generated_Source\PSoC5/cyPm.c **** *  latched pin events to allow the proper Hibernate mode entry and to enable
1123:.\Generated_Source\PSoC5/cyPm.c **** *  detection of future events.
1124:.\Generated_Source\PSoC5/cyPm.c **** *
1125:.\Generated_Source\PSoC5/cyPm.c **** *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
1126:.\Generated_Source\PSoC5/cyPm.c **** *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
1127:.\Generated_Source\PSoC5/cyPm.c **** *  delay is measured using the rising edges of the 1 kHz ILO.
1128:.\Generated_Source\PSoC5/cyPm.c **** *
1129:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1130:.\Generated_Source\PSoC5/cyPm.c **** void CyPmHibernate(void) 
1131:.\Generated_Source\PSoC5/cyPm.c **** {
1132:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibernateEx(CY_PM_HIB_SRC_PICU);
1133:.\Generated_Source\PSoC5/cyPm.c **** }
1134:.\Generated_Source\PSoC5/cyPm.c **** 
1135:.\Generated_Source\PSoC5/cyPm.c **** 
1136:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1137:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibernateEx
1138:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1139:.\Generated_Source\PSoC5/cyPm.c **** *
1140:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1141:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Hibernate state.
1142:.\Generated_Source\PSoC5/cyPm.c **** *
1143:.\Generated_Source\PSoC5/cyPm.c **** *  The following wake up sources can be configured: PICU interrupt, Comparator0,
1144:.\Generated_Source\PSoC5/cyPm.c **** *  Comparator1, Comparator2, and Comparator3 output.
1145:.\Generated_Source\PSoC5/cyPm.c **** *
1146:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Hibernate, the current status of the PICU wakeup source
1147:.\Generated_Source\PSoC5/cyPm.c **** *  bit is saved and then set.
1148:.\Generated_Source\PSoC5/cyPm.c **** *
1149:.\Generated_Source\PSoC5/cyPm.c **** *  If using PICU as the wake up source, make sure you have at least one pin
1150:.\Generated_Source\PSoC5/cyPm.c **** *  configured to generate a PICU interrupt. For pin Px.y, the register
1151:.\Generated_Source\PSoC5/cyPm.c **** *  "PICU_INTTYPE_PICUx_INTTYPEy" controls  the PICU behavior. In the TRM, this
1152:.\Generated_Source\PSoC5/cyPm.c **** *  register is "PICU[0..15]_INTTYPE[0..7]." In the Pins component datasheet,
1153:.\Generated_Source\PSoC5/cyPm.c **** *  this register is referred to as the IRQ option. Once the wakeup occurs, the
1154:.\Generated_Source\PSoC5/cyPm.c **** *  PICU wakeup source bit is restored and the PSoC returns to the Active state.
1155:.\Generated_Source\PSoC5/cyPm.c **** *
1156:.\Generated_Source\PSoC5/cyPm.c **** *  If using a comparator as the wake up source, make sure you call this function
1157:.\Generated_Source\PSoC5/cyPm.c **** *  with the 'wakeupSource' parameter set to the appropriate comparator. The part
1158:.\Generated_Source\PSoC5/cyPm.c **** *  is configured for the requested wakeup source by setting the corresponding
1159:.\Generated_Source\PSoC5/cyPm.c **** *  bits in PM_WAKEUP_CFG1 register.
1160:.\Generated_Source\PSoC5/cyPm.c **** *
1161:.\Generated_Source\PSoC5/cyPm.c **** *  Function call CyPmHibernateEx(CY_PM_HIB_SRC_PICU) will act in the same way as
1162:.\Generated_Source\PSoC5/cyPm.c **** *  CyPmHibernate().
1163:.\Generated_Source\PSoC5/cyPm.c **** *
1164:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1165:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupSource:
1166:.\Generated_Source\PSoC5/cyPm.c **** *           Parameter Value             Description
1167:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_PICU          PICU interrupt is set as the wake up source.
1168:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_COMPARATOR0   Comparator 0 is set as the wake up source.
1169:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_COMPARATOR1   Comparator 1 is set as the wake up source.
1170:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_COMPARATOR2   Comparator 2 is set as the wake up source.
1171:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_COMPARATOR3   Comparator 3 is set as the wake up source.
1172:.\Generated_Source\PSoC5/cyPm.c **** *
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 22


1173:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1174:.\Generated_Source\PSoC5/cyPm.c **** *  None
1175:.\Generated_Source\PSoC5/cyPm.c **** *
1176:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1177:.\Generated_Source\PSoC5/cyPm.c **** *  No
1178:.\Generated_Source\PSoC5/cyPm.c **** *
1179:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1180:.\Generated_Source\PSoC5/cyPm.c **** *  Applications must wait 20 us before re-entering hibernate or sleep after
1181:.\Generated_Source\PSoC5/cyPm.c **** *  waking up from hibernate. The 20 us allows the sleep regulator time to
1182:.\Generated_Source\PSoC5/cyPm.c **** *  stabilize before the next hibernate / sleep event occurs. The 20 us
1183:.\Generated_Source\PSoC5/cyPm.c **** *  requirement begins when the device wakes up. There is no hardware check that
1184:.\Generated_Source\PSoC5/cyPm.c **** *  this requirement is met. The specified delay should be done on ISR entry.
1185:.\Generated_Source\PSoC5/cyPm.c **** *
1186:.\Generated_Source\PSoC5/cyPm.c **** *  After the wakeup PICU interrupt occurs, the Pin_ClearInterrupt() (where Pin
1187:.\Generated_Source\PSoC5/cyPm.c **** *  is instance name of the Pins component) function must be called to clear the
1188:.\Generated_Source\PSoC5/cyPm.c **** *  latched pin events to allow the proper Hibernate mode entry and to enable
1189:.\Generated_Source\PSoC5/cyPm.c **** *  detection of future events.
1190:.\Generated_Source\PSoC5/cyPm.c **** *
1191:.\Generated_Source\PSoC5/cyPm.c **** *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
1192:.\Generated_Source\PSoC5/cyPm.c **** *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
1193:.\Generated_Source\PSoC5/cyPm.c **** *  delay is measured using the rising edges of the 1 kHz ILO.
1194:.\Generated_Source\PSoC5/cyPm.c **** *
1195:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1196:.\Generated_Source\PSoC5/cyPm.c **** void CyPmHibernateEx(uint16 wakeupSource) 
1197:.\Generated_Source\PSoC5/cyPm.c **** {
1198:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
1199:.\Generated_Source\PSoC5/cyPm.c **** 
1200:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current global interrupt enable and disable it */
1201:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
1202:.\Generated_Source\PSoC5/cyPm.c **** 
1203:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
1204:.\Generated_Source\PSoC5/cyPm.c ****         * The Hibernate/Sleep regulator has a settling time after a reset.
1205:.\Generated_Source\PSoC5/cyPm.c ****         * During this time, the system ignores requests to enter the Sleep and
1206:.\Generated_Source\PSoC5/cyPm.c ****         * Hibernate modes. The holdoff delay is measured using the rising edges of
1207:.\Generated_Source\PSoC5/cyPm.c ****         * the 1 kHz ILO.
1208:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
1209:.\Generated_Source\PSoC5/cyPm.c ****         if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
1210:.\Generated_Source\PSoC5/cyPm.c ****         {
1211:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable hold off - no action on restore */
1212:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
1213:.\Generated_Source\PSoC5/cyPm.c ****         }
1214:.\Generated_Source\PSoC5/cyPm.c ****         else
1215:.\Generated_Source\PSoC5/cyPm.c ****         {
1216:.\Generated_Source\PSoC5/cyPm.c ****             /* Abort, device is not ready for low power mode entry */
1217:.\Generated_Source\PSoC5/cyPm.c **** 
1218:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore global interrupt enable state */
1219:.\Generated_Source\PSoC5/cyPm.c ****             CyExitCriticalSection(interruptState);
1220:.\Generated_Source\PSoC5/cyPm.c **** 
1221:.\Generated_Source\PSoC5/cyPm.c ****             return;
1222:.\Generated_Source\PSoC5/cyPm.c ****         }
1223:.\Generated_Source\PSoC5/cyPm.c **** 
1224:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSaveSet();
1225:.\Generated_Source\PSoC5/cyPm.c **** 
1226:.\Generated_Source\PSoC5/cyPm.c **** 
1227:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and set new wake up configuration */
1228:.\Generated_Source\PSoC5/cyPm.c **** 
1229:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and enable only wakeup on PICU */
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 23


1230:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
1231:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = ((uint8) (wakeupSource >> 4u) & CY_PM_WAKEUP_PICU);
1232:.\Generated_Source\PSoC5/cyPm.c **** 
1233:.\Generated_Source\PSoC5/cyPm.c ****     /* Comparators */
1234:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
1235:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
1236:.\Generated_Source\PSoC5/cyPm.c **** 
1237:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
1238:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = 0x00u;
1239:.\Generated_Source\PSoC5/cyPm.c **** 
1240:.\Generated_Source\PSoC5/cyPm.c **** 
1241:.\Generated_Source\PSoC5/cyPm.c ****     /* Last moment IMO frequency change */
1242:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
1243:.\Generated_Source\PSoC5/cyPm.c ****     {
1244:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is 12 MHz */
1245:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
1246:.\Generated_Source\PSoC5/cyPm.c ****     }
1247:.\Generated_Source\PSoC5/cyPm.c ****     else
1248:.\Generated_Source\PSoC5/cyPm.c ****     {
1249:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is not 12 MHz */
1250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
1251:.\Generated_Source\PSoC5/cyPm.c **** 
1252:.\Generated_Source\PSoC5/cyPm.c ****         /* Save IMO frequency */
1253:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1254:.\Generated_Source\PSoC5/cyPm.c **** 
1255:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMO frequency to 12 MHz */
1256:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
1257:.\Generated_Source\PSoC5/cyPm.c ****     }
1258:.\Generated_Source\PSoC5/cyPm.c **** 
1259:.\Generated_Source\PSoC5/cyPm.c **** 
1260:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to Hibernate Mode */
1261:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = (CY_PM_MODE_CSR_REG & ((uint8) (~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_H
1262:.\Generated_Source\PSoC5/cyPm.c **** 
1263:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
1264:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
1265:.\Generated_Source\PSoC5/cyPm.c **** 
1266:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into mode. */
1267:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1268:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1269:.\Generated_Source\PSoC5/cyPm.c **** 
1270:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
1271:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
1272:.\Generated_Source\PSoC5/cyPm.c **** 
1273:.\Generated_Source\PSoC5/cyPm.c **** 
1274:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Hibernate mode */
1275:.\Generated_Source\PSoC5/cyPm.c **** 
1276:.\Generated_Source\PSoC5/cyPm.c **** 
1277:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore last moment IMO frequency change */
1278:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1279:.\Generated_Source\PSoC5/cyPm.c ****     {
1280:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
1281:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.imoActFreq;
1282:.\Generated_Source\PSoC5/cyPm.c ****     }
1283:.\Generated_Source\PSoC5/cyPm.c **** 
1284:.\Generated_Source\PSoC5/cyPm.c **** 
1285:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore device for proper Hibernate mode exit*/
1286:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibRestore();
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 24


1287:.\Generated_Source\PSoC5/cyPm.c **** 
1288:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore current wake up configuration */
1289:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1290:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1291:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1292:.\Generated_Source\PSoC5/cyPm.c **** 
1293:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore global interrupt enable state */
1294:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1295:.\Generated_Source\PSoC5/cyPm.c **** }
1296:.\Generated_Source\PSoC5/cyPm.c **** 
1297:.\Generated_Source\PSoC5/cyPm.c **** 
1298:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1299:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmReadStatus
1300:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1301:.\Generated_Source\PSoC5/cyPm.c **** *
1302:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1303:.\Generated_Source\PSoC5/cyPm.c **** *  Manages the Power Manager Interrupt Status Register.  This register has the
1304:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt status for the one pulse per second, central timewheel and fast
1305:.\Generated_Source\PSoC5/cyPm.c **** *  timewheel timers.  This hardware register clears on read.  To allow for only
1306:.\Generated_Source\PSoC5/cyPm.c **** *  clearing the bits of interest and preserving the other bits, this function
1307:.\Generated_Source\PSoC5/cyPm.c **** *  uses a shadow register that retains the state.  This function reads the
1308:.\Generated_Source\PSoC5/cyPm.c **** *  status register and ORs that value with the shadow register.  That is the
1309:.\Generated_Source\PSoC5/cyPm.c **** *  value that is returned.  Then the bits in the mask that are set are cleared
1310:.\Generated_Source\PSoC5/cyPm.c **** *  from this value and written back to the shadow register.
1311:.\Generated_Source\PSoC5/cyPm.c **** *
1312:.\Generated_Source\PSoC5/cyPm.c **** *  Note You must call this function within 1 ms (1 clock cycle of the ILO)
1313:.\Generated_Source\PSoC5/cyPm.c **** *  after a CTW event has occurred.
1314:.\Generated_Source\PSoC5/cyPm.c **** *
1315:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1316:.\Generated_Source\PSoC5/cyPm.c **** *  mask: Bits in the shadow register to clear.
1317:.\Generated_Source\PSoC5/cyPm.c **** *
1318:.\Generated_Source\PSoC5/cyPm.c **** *       Define                      Source
1319:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_FTW_INT                Fast Timewheel
1320:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_CTW_INT                Central Timewheel
1321:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_ONEPPS_INT             One Pulse Per Second
1322:.\Generated_Source\PSoC5/cyPm.c **** *
1323:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1324:.\Generated_Source\PSoC5/cyPm.c **** *  Status.  Same bits values as the mask parameter.
1325:.\Generated_Source\PSoC5/cyPm.c **** *
1326:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1327:.\Generated_Source\PSoC5/cyPm.c **** uint8 CyPmReadStatus(uint8 mask) 
1328:.\Generated_Source\PSoC5/cyPm.c **** {
1329:.\Generated_Source\PSoC5/cyPm.c ****     static uint8 interruptStatus;
1330:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
1331:.\Generated_Source\PSoC5/cyPm.c ****     uint8 tmpStatus;
1332:.\Generated_Source\PSoC5/cyPm.c **** 
1333:.\Generated_Source\PSoC5/cyPm.c ****     /* Enter critical section */
1334:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
1335:.\Generated_Source\PSoC5/cyPm.c **** 
1336:.\Generated_Source\PSoC5/cyPm.c ****     /* Save value of register, copy it and clear desired bit */
1337:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus |= CY_PM_INT_SR_REG;
1338:.\Generated_Source\PSoC5/cyPm.c ****     tmpStatus = interruptStatus & (CY_PM_FTW_INT | CY_PM_CTW_INT | CY_PM_ONEPPS_INT);
1339:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus &= ((uint8)(~mask));
1340:.\Generated_Source\PSoC5/cyPm.c **** 
1341:.\Generated_Source\PSoC5/cyPm.c ****     /* Exit critical section */
1342:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1343:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 25


1344:.\Generated_Source\PSoC5/cyPm.c ****     return(tmpStatus);
1345:.\Generated_Source\PSoC5/cyPm.c **** }
1346:.\Generated_Source\PSoC5/cyPm.c **** 
1347:.\Generated_Source\PSoC5/cyPm.c **** 
1348:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSaveSet
1350:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1351:.\Generated_Source\PSoC5/cyPm.c **** *
1352:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1353:.\Generated_Source\PSoC5/cyPm.c **** *  Prepare device for proper Hibernate low power mode entry:
1354:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables I2C backup regulator
1355:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves ILO power down mode state and enable it
1356:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves state of 1 kHz and 100 kHz ILO and disable them
1357:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables sleep regulator and shorts vccd to vpwrsleep
1358:.\Generated_Source\PSoC5/cyPm.c **** *  - Save LVI/HVI configuration and disable them - CyPmHviLviSaveDisable()
1359:.\Generated_Source\PSoC5/cyPm.c **** *  - CyPmHibSlpSaveSet() function is called
1360:.\Generated_Source\PSoC5/cyPm.c **** *
1361:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1362:.\Generated_Source\PSoC5/cyPm.c **** *  None
1363:.\Generated_Source\PSoC5/cyPm.c **** *
1364:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1365:.\Generated_Source\PSoC5/cyPm.c **** *  None
1366:.\Generated_Source\PSoC5/cyPm.c **** *
1367:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1368:.\Generated_Source\PSoC5/cyPm.c **** *  No
1369:.\Generated_Source\PSoC5/cyPm.c **** *
1370:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1371:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSaveSet(void) 
1372:.\Generated_Source\PSoC5/cyPm.c **** {
1373:.\Generated_Source\PSoC5/cyPm.c ****     /* I2C backup reg must be off when the sleep regulator is unavailable */
1374:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
1375:.\Generated_Source\PSoC5/cyPm.c ****     {
1376:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
1377:.\Generated_Source\PSoC5/cyPm.c ****         * If the I2C backup regulator is enabled, all the fixed-function registers
1378:.\Generated_Source\PSoC5/cyPm.c ****         * store their values while the device is in the low power mode, otherwise their
1379:.\Generated_Source\PSoC5/cyPm.c ****         * configuration is lost. The I2C API makes a decision to restore or not
1380:.\Generated_Source\PSoC5/cyPm.c ****         * to restore I2C registers based on this. If this regulator will be
1381:.\Generated_Source\PSoC5/cyPm.c ****         * disabled and then enabled, I2C API will suppose that the I2C block
1382:.\Generated_Source\PSoC5/cyPm.c ****         * registers preserved their values, while this is not true. So, the
1383:.\Generated_Source\PSoC5/cyPm.c ****         * backup regulator is disabled. The I2C sleep APIs is responsible for
1384:.\Generated_Source\PSoC5/cyPm.c ****         * restoration.
1385:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
1386:.\Generated_Source\PSoC5/cyPm.c **** 
1387:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable I2C backup register */
1388:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_CR1_REG &= ((uint8)(~CY_PM_PWRSYS_CR1_I2CREG_BACKUP));
1389:.\Generated_Source\PSoC5/cyPm.c ****     }
1390:.\Generated_Source\PSoC5/cyPm.c **** 
1391:.\Generated_Source\PSoC5/cyPm.c **** 
1392:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current ILO power mode and ensure low power mode */
1393:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
1394:.\Generated_Source\PSoC5/cyPm.c **** 
1395:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current 1kHz ILO enable state. Disabled automatically. */
1396:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
1397:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
1398:.\Generated_Source\PSoC5/cyPm.c **** 
1399:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current 100kHz ILO enable state. Disabled automatically. */
1400:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 26


1401:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
1402:.\Generated_Source\PSoC5/cyPm.c **** 
1403:.\Generated_Source\PSoC5/cyPm.c **** 
1404:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable the sleep regulator and shorts vccd to vpwrsleep */
1405:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
1406:.\Generated_Source\PSoC5/cyPm.c ****     {
1407:.\Generated_Source\PSoC5/cyPm.c ****         /* Save current bypass state */
1408:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_DISABLED;
1409:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
1410:.\Generated_Source\PSoC5/cyPm.c ****     }
1411:.\Generated_Source\PSoC5/cyPm.c ****     else
1412:.\Generated_Source\PSoC5/cyPm.c ****     {
1413:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_ENABLED;
1414:.\Generated_Source\PSoC5/cyPm.c ****     }
1415:.\Generated_Source\PSoC5/cyPm.c **** 
1416:.\Generated_Source\PSoC5/cyPm.c ****     /* LPCOMPs are always enabled (even when BOTH ext_vccd=1 and ext_vcca=1)*/
1417:.\Generated_Source\PSoC5/cyPm.c **** 
1418:.\Generated_Source\PSoC5/cyPm.c **** 
1419:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1420:.\Generated_Source\PSoC5/cyPm.c ****     * LVI/HVI must be disabled in Hibernate
1421:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1422:.\Generated_Source\PSoC5/cyPm.c **** 
1423:.\Generated_Source\PSoC5/cyPm.c ****     /* Save LVI/HVI configuration and disable them */
1424:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHviLviSaveDisable();
1425:.\Generated_Source\PSoC5/cyPm.c **** 
1426:.\Generated_Source\PSoC5/cyPm.c **** 
1427:.\Generated_Source\PSoC5/cyPm.c ****     /* Make the same preparations for Hibernate and Sleep modes */
1428:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
1429:.\Generated_Source\PSoC5/cyPm.c **** 
1430:.\Generated_Source\PSoC5/cyPm.c **** 
1431:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1432:.\Generated_Source\PSoC5/cyPm.c ****     * Save and set the power mode wakeup trim registers
1433:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1434:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
1435:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
1436:.\Generated_Source\PSoC5/cyPm.c **** 
1437:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = CY_PM_PWRSYS_WAKE_TR0;
1438:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = CY_PM_PWRSYS_WAKE_TR1;
1439:.\Generated_Source\PSoC5/cyPm.c **** }
1440:.\Generated_Source\PSoC5/cyPm.c **** 
1441:.\Generated_Source\PSoC5/cyPm.c **** 
1442:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1443:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibRestore
1444:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1445:.\Generated_Source\PSoC5/cyPm.c **** *
1446:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1447:.\Generated_Source\PSoC5/cyPm.c **** *  Restores the device for the proper Hibernate mode exit:
1448:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores LVI/HVI configuration - calsl CyPmHviLviRestore()
1449:.\Generated_Source\PSoC5/cyPm.c **** *  - CyPmHibSlpSaveRestore() function is called
1450:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores ILO power down mode state and enables it
1451:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the state of 1 kHz and 100 kHz ILO and disables them
1452:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the sleep regulator settings
1453:.\Generated_Source\PSoC5/cyPm.c **** *
1454:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1455:.\Generated_Source\PSoC5/cyPm.c **** *  None
1456:.\Generated_Source\PSoC5/cyPm.c **** *
1457:.\Generated_Source\PSoC5/cyPm.c **** * Return:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 27


1458:.\Generated_Source\PSoC5/cyPm.c **** *  None
1459:.\Generated_Source\PSoC5/cyPm.c **** *
1460:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1461:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibRestore(void) 
1462:.\Generated_Source\PSoC5/cyPm.c **** {
1463:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore LVI/HVI configuration */
1464:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHviLviRestore();
1465:.\Generated_Source\PSoC5/cyPm.c **** 
1466:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore the same configuration for Hibernate and Sleep modes */
1467:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
1468:.\Generated_Source\PSoC5/cyPm.c **** 
1469:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore 1kHz ILO enable state */
1470:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
1471:.\Generated_Source\PSoC5/cyPm.c ****     {
1472:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 1kHz ILO */
1473:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start1K();
1474:.\Generated_Source\PSoC5/cyPm.c ****     }
1475:.\Generated_Source\PSoC5/cyPm.c **** 
1476:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore 100kHz ILO enable state */
1477:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
1478:.\Generated_Source\PSoC5/cyPm.c ****     {
1479:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 100kHz ILO */
1480:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start100K();
1481:.\Generated_Source\PSoC5/cyPm.c ****     }
1482:.\Generated_Source\PSoC5/cyPm.c **** 
1483:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore ILO power mode */
1484:.\Generated_Source\PSoC5/cyPm.c ****     (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
1485:.\Generated_Source\PSoC5/cyPm.c **** 
1486:.\Generated_Source\PSoC5/cyPm.c **** 
1487:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
1488:.\Generated_Source\PSoC5/cyPm.c ****     {
1489:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable the sleep regulator */
1490:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= ((uint8)(~CY_PM_PWRSYS_SLP_TR_BYPASS));
1491:.\Generated_Source\PSoC5/cyPm.c ****     }
1492:.\Generated_Source\PSoC5/cyPm.c **** 
1493:.\Generated_Source\PSoC5/cyPm.c **** 
1494:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1495:.\Generated_Source\PSoC5/cyPm.c ****     * Restore the power mode wakeup trim registers
1496:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1497:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = cyPmBackup.wakeupTrim0;
1498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = cyPmBackup.wakeupTrim1;
1499:.\Generated_Source\PSoC5/cyPm.c **** }
1500:.\Generated_Source\PSoC5/cyPm.c **** 
1501:.\Generated_Source\PSoC5/cyPm.c **** 
1502:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1503:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmCtwSetInterval
1504:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1505:.\Generated_Source\PSoC5/cyPm.c **** *
1506:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1507:.\Generated_Source\PSoC5/cyPm.c **** *  Performs the CTW configuration:
1508:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the CTW interrupt
1509:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 1 kHz ILO
1510:.\Generated_Source\PSoC5/cyPm.c **** *  - Sets a new CTW interval
1511:.\Generated_Source\PSoC5/cyPm.c **** *
1512:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1513:.\Generated_Source\PSoC5/cyPm.c **** *  ctwInterval: the CTW interval to be set.
1514:.\Generated_Source\PSoC5/cyPm.c **** *
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 28


1515:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1516:.\Generated_Source\PSoC5/cyPm.c **** *  None
1517:.\Generated_Source\PSoC5/cyPm.c **** *
1518:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1519:.\Generated_Source\PSoC5/cyPm.c **** *  Enables ILO 1 KHz clock and leaves it enabled.
1520:.\Generated_Source\PSoC5/cyPm.c **** *
1521:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1522:.\Generated_Source\PSoC5/cyPm.c **** void CyPmCtwSetInterval(uint8 ctwInterval) 
1523:.\Generated_Source\PSoC5/cyPm.c **** {
1524:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable CTW interrupt enable */
1525:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
1526:.\Generated_Source\PSoC5/cyPm.c **** 
1527:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 1kHz ILO (required for CTW operation) */
1528:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start1K();
1529:.\Generated_Source\PSoC5/cyPm.c **** 
1530:.\Generated_Source\PSoC5/cyPm.c ****     /* Interval could be set only while CTW is disabled */
1531:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
1532:.\Generated_Source\PSoC5/cyPm.c ****     {
1533:.\Generated_Source\PSoC5/cyPm.c ****         /* Set CTW interval if needed */
1534:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
1535:.\Generated_Source\PSoC5/cyPm.c ****         {
1536:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable the CTW, set new CTW interval and enable it again */
1537:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_EN));
1538:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
1539:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1540:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1541:.\Generated_Source\PSoC5/cyPm.c ****     }
1542:.\Generated_Source\PSoC5/cyPm.c ****     else
1543:.\Generated_Source\PSoC5/cyPm.c ****     {
1544:.\Generated_Source\PSoC5/cyPm.c ****         /* Set CTW interval if needed */
1545:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
1546:.\Generated_Source\PSoC5/cyPm.c ****         {
1547:.\Generated_Source\PSoC5/cyPm.c ****             /* Set new CTW interval. Could be changed if CTW is disabled */
1548:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
1549:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1550:.\Generated_Source\PSoC5/cyPm.c **** 
1551:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable CTW */
1552:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1553:.\Generated_Source\PSoC5/cyPm.c ****     }
1554:.\Generated_Source\PSoC5/cyPm.c **** }
1555:.\Generated_Source\PSoC5/cyPm.c **** 
1556:.\Generated_Source\PSoC5/cyPm.c **** 
1557:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1558:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmOppsSet
1559:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1560:.\Generated_Source\PSoC5/cyPm.c **** *
1561:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1562:.\Generated_Source\PSoC5/cyPm.c **** *  Performs 1PPS configuration:
1563:.\Generated_Source\PSoC5/cyPm.c **** *  - Starts 32 KHz XTAL
1564:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables 1PPS interrupts
1565:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 1PPS
1566:.\Generated_Source\PSoC5/cyPm.c **** *
1567:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1568:.\Generated_Source\PSoC5/cyPm.c **** *  None
1569:.\Generated_Source\PSoC5/cyPm.c **** *
1570:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1571:.\Generated_Source\PSoC5/cyPm.c **** *  None
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 29


1572:.\Generated_Source\PSoC5/cyPm.c **** *
1573:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1574:.\Generated_Source\PSoC5/cyPm.c **** void CyPmOppsSet(void) 
1575:.\Generated_Source\PSoC5/cyPm.c **** {
1576:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 32kHz XTAL if needed */
1577:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
1578:.\Generated_Source\PSoC5/cyPm.c ****     {
1579:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 32kHz XTAL */
1580:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_32KHZ_Start();
1581:.\Generated_Source\PSoC5/cyPm.c ****     }
1582:.\Generated_Source\PSoC5/cyPm.c **** 
1583:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable 1PPS interrupt enable */
1584:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_1PPS_IE));
1585:.\Generated_Source\PSoC5/cyPm.c **** 
1586:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 1PPS operation */
1587:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
1588:.\Generated_Source\PSoC5/cyPm.c **** }
1589:.\Generated_Source\PSoC5/cyPm.c **** 
1590:.\Generated_Source\PSoC5/cyPm.c **** 
1591:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1592:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmFtwSetInterval
1593:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1594:.\Generated_Source\PSoC5/cyPm.c **** *
1595:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1596:.\Generated_Source\PSoC5/cyPm.c **** *  Performs the FTW configuration:
1597:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the FTW interrupt
1598:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 100 kHz ILO
1599:.\Generated_Source\PSoC5/cyPm.c **** *  - Sets a new FTW interval.
1600:.\Generated_Source\PSoC5/cyPm.c **** *
1601:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1602:.\Generated_Source\PSoC5/cyPm.c **** *  ftwInterval - FTW counter interval.
1603:.\Generated_Source\PSoC5/cyPm.c **** *
1604:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1605:.\Generated_Source\PSoC5/cyPm.c **** *  None
1606:.\Generated_Source\PSoC5/cyPm.c **** *
1607:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1608:.\Generated_Source\PSoC5/cyPm.c **** *  Enables the ILO 100 KHz clock and leaves it enabled.
1609:.\Generated_Source\PSoC5/cyPm.c **** *
1610:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1611:.\Generated_Source\PSoC5/cyPm.c **** void CyPmFtwSetInterval(uint8 ftwInterval) 
1612:.\Generated_Source\PSoC5/cyPm.c **** {
1613:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable FTW interrupt enable */
1614:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
1615:.\Generated_Source\PSoC5/cyPm.c **** 
1616:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 100kHz ILO */
1617:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start100K();
1618:.\Generated_Source\PSoC5/cyPm.c **** 
1619:.\Generated_Source\PSoC5/cyPm.c ****     /* Interval could be set only while FTW is disabled */
1620:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
1621:.\Generated_Source\PSoC5/cyPm.c ****     {
1622:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable FTW, set new FTW interval if needed and enable it again */
1623:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
1624:.\Generated_Source\PSoC5/cyPm.c ****         {
1625:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable CTW, set new CTW interval and enable it again */
1626:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_EN));
1627:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
1628:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 30


1629:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1630:.\Generated_Source\PSoC5/cyPm.c ****     }
1631:.\Generated_Source\PSoC5/cyPm.c ****     else
1632:.\Generated_Source\PSoC5/cyPm.c ****     {
1633:.\Generated_Source\PSoC5/cyPm.c ****         /* Set new FTW counter interval if needed. FTW is disabled. */
1634:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
1635:.\Generated_Source\PSoC5/cyPm.c ****         {
1636:.\Generated_Source\PSoC5/cyPm.c ****             /* Set new CTW interval. Could be changed if CTW is disabled */
1637:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
1638:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1639:.\Generated_Source\PSoC5/cyPm.c **** 
1640:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable FTW */
1641:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1642:.\Generated_Source\PSoC5/cyPm.c ****     }
1643:.\Generated_Source\PSoC5/cyPm.c **** }
1644:.\Generated_Source\PSoC5/cyPm.c **** 
1645:.\Generated_Source\PSoC5/cyPm.c **** 
1646:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1647:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSlpSaveSet
1648:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1649:.\Generated_Source\PSoC5/cyPm.c **** *
1650:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1651:.\Generated_Source\PSoC5/cyPm.c **** *  This API is used for preparing the device for the Sleep and Hibernate low
1652:.\Generated_Source\PSoC5/cyPm.c **** *  power modes entry:
1653:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the COMP, VIDAC, DSM, and SAR routing connections (PSoC 5)
1654:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the SC/CT routing connections (PSoC 3/5/5LP)
1655:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the Serial Wire Viewer (SWV) (PSoC 3)
1656:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the boost reference selection and sets it to internal
1657:.\Generated_Source\PSoC5/cyPm.c **** *
1658:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1659:.\Generated_Source\PSoC5/cyPm.c **** *  None
1660:.\Generated_Source\PSoC5/cyPm.c **** *
1661:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1662:.\Generated_Source\PSoC5/cyPm.c **** *  None
1663:.\Generated_Source\PSoC5/cyPm.c **** *
1664:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1665:.\Generated_Source\PSoC5/cyPm.c **** *  No
1666:.\Generated_Source\PSoC5/cyPm.c **** *
1667:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1668:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpSaveSet(void) 
1669:.\Generated_Source\PSoC5/cyPm.c **** {
  26              		.loc 1 1669 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  31              		.cfi_def_cfa_offset 36
  32              		.cfi_offset 4, -36
  33              		.cfi_offset 5, -32
  34              		.cfi_offset 6, -28
  35              		.cfi_offset 7, -24
  36              		.cfi_offset 8, -20
  37              		.cfi_offset 9, -16
  38              		.cfi_offset 10, -12
  39              		.cfi_offset 11, -8
  40              		.cfi_offset 14, -4
1670:.\Generated_Source\PSoC5/cyPm.c ****     /* Save SC/CT routing registers */
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 31


1671:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[0u]   = CY_GET_REG8(CYREG_SC0_SW0 );
  41              		.loc 1 1671 0
  42 0004 DFF844B1 		ldr	fp, .L5+32
  43 0008 484B     		ldr	r3, .L5
  44 000a 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
1672:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[1u]   = CY_GET_REG8(CYREG_SC0_SW2 );
  45              		.loc 1 1672 0
  46 000e 4849     		ldr	r1, .L5+4
1671:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[0u]   = CY_GET_REG8(CYREG_SC0_SW0 );
  47              		.loc 1 1671 0
  48 0010 5A72     		strb	r2, [r3, #9]
  49              		.loc 1 1672 0
  50 0012 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
1673:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[2u]   = CY_GET_REG8(CYREG_SC0_SW3 );
  51              		.loc 1 1673 0
  52 0014 474F     		ldr	r7, .L5+8
1672:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[1u]   = CY_GET_REG8(CYREG_SC0_SW2 );
  53              		.loc 1 1672 0
  54 0016 9A72     		strb	r2, [r3, #10]
  55              		.loc 1 1673 0
  56 0018 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
1674:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
1675:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
1676:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
1677:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
1678:.\Generated_Source\PSoC5/cyPm.c **** 
1679:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
1680:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
1681:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
1682:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
1683:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[11u]  = CY_GET_REG8(CYREG_SC1_SW6 );
1684:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[12u]  = CY_GET_REG8(CYREG_SC1_SW8 );
1685:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[13u]  = CY_GET_REG8(CYREG_SC1_SW10);
1686:.\Generated_Source\PSoC5/cyPm.c **** 
1687:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[14u]  = CY_GET_REG8(CYREG_SC2_SW0 );
1688:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[15u]  = CY_GET_REG8(CYREG_SC2_SW2 );
1689:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[16u]  = CY_GET_REG8(CYREG_SC2_SW3 );
1690:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[17u]  = CY_GET_REG8(CYREG_SC2_SW4 );
1691:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[18u]  = CY_GET_REG8(CYREG_SC2_SW6 );
  57              		.loc 1 1691 0
  58 001a DFF834A1 		ldr	r10, .L5+36
1673:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[2u]   = CY_GET_REG8(CYREG_SC0_SW3 );
  59              		.loc 1 1673 0
  60 001e DA72     		strb	r2, [r3, #11]
1674:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
  61              		.loc 1 1674 0
  62 0020 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
1692:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[19u]  = CY_GET_REG8(CYREG_SC2_SW8 );
  63              		.loc 1 1692 0
  64 0022 DFF83091 		ldr	r9, .L5+40
1674:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
  65              		.loc 1 1674 0
  66 0026 1A73     		strb	r2, [r3, #12]
1675:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
  67              		.loc 1 1675 0
  68 0028 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
1693:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 32


  69              		.loc 1 1693 0
  70 002a DFF82C81 		ldr	r8, .L5+44
1675:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
  71              		.loc 1 1675 0
  72 002e 5A73     		strb	r2, [r3, #13]
1676:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
  73              		.loc 1 1676 0
  74 0030 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
1694:.\Generated_Source\PSoC5/cyPm.c **** 
1695:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[21u]  = CY_GET_REG8(CYREG_SC3_SW0 );
  75              		.loc 1 1695 0
  76 0032 DFF828C1 		ldr	ip, .L5+48
1676:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
  77              		.loc 1 1676 0
  78 0036 9A73     		strb	r2, [r3, #14]
1677:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
  79              		.loc 1 1677 0
  80 0038 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
1696:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[22u]  = CY_GET_REG8(CYREG_SC3_SW2 );
1697:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[23u]  = CY_GET_REG8(CYREG_SC3_SW3 );
  81              		.loc 1 1697 0
  82 003a 3F4E     		ldr	r6, .L5+12
1677:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
  83              		.loc 1 1677 0
  84 003c DA73     		strb	r2, [r3, #15]
1679:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
  85              		.loc 1 1679 0
  86 003e 8A7B     		ldrb	r2, [r1, #14]	@ zero_extendqisi2
1698:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[24u]  = CY_GET_REG8(CYREG_SC3_SW4 );
  87              		.loc 1 1698 0
  88 0040 3E4D     		ldr	r5, .L5+16
1679:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
  89              		.loc 1 1679 0
  90 0042 1A74     		strb	r2, [r3, #16]
1680:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
  91              		.loc 1 1680 0
  92 0044 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
1699:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[25u]  = CY_GET_REG8(CYREG_SC3_SW6 );
  93              		.loc 1 1699 0
  94 0046 3E4C     		ldr	r4, .L5+20
1680:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
  95              		.loc 1 1680 0
  96 0048 5A74     		strb	r2, [r3, #17]
1681:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
  97              		.loc 1 1681 0
  98 004a 4A7C     		ldrb	r2, [r1, #17]	@ zero_extendqisi2
1700:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[26u]  = CY_GET_REG8(CYREG_SC3_SW8 );
  99              		.loc 1 1700 0
 100 004c 3D48     		ldr	r0, .L5+24
1681:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
 101              		.loc 1 1681 0
 102 004e 9A74     		strb	r2, [r3, #18]
1682:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
 103              		.loc 1 1682 0
 104 0050 7A7C     		ldrb	r2, [r7, #17]	@ zero_extendqisi2
1675:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
 105              		.loc 1 1675 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 33


 106 0052 0337     		adds	r7, r7, #3
1682:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
 107              		.loc 1 1682 0
 108 0054 DA74     		strb	r2, [r3, #19]
1683:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[11u]  = CY_GET_REG8(CYREG_SC1_SW6 );
 109              		.loc 1 1683 0
 110 0056 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 111 0058 1A75     		strb	r2, [r3, #20]
1684:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[12u]  = CY_GET_REG8(CYREG_SC1_SW8 );
 112              		.loc 1 1684 0
 113 005a BA7C     		ldrb	r2, [r7, #18]	@ zero_extendqisi2
 114 005c 5A75     		strb	r2, [r3, #21]
1685:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[13u]  = CY_GET_REG8(CYREG_SC1_SW10);
 115              		.loc 1 1685 0
 116 005e 0A7E     		ldrb	r2, [r1, #24]	@ zero_extendqisi2
 117 0060 9A75     		strb	r2, [r3, #22]
1687:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[14u]  = CY_GET_REG8(CYREG_SC2_SW0 );
 118              		.loc 1 1687 0
 119 0062 BA7E     		ldrb	r2, [r7, #26]	@ zero_extendqisi2
 120 0064 DA75     		strb	r2, [r3, #23]
1688:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[15u]  = CY_GET_REG8(CYREG_SC2_SW2 );
 121              		.loc 1 1688 0
 122 0066 91F82020 		ldrb	r2, [r1, #32]	@ zero_extendqisi2
 123 006a 1A76     		strb	r2, [r3, #24]
1689:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[16u]  = CY_GET_REG8(CYREG_SC2_SW3 );
 124              		.loc 1 1689 0
 125 006c 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 126 006e 5A76     		strb	r2, [r3, #25]
1690:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[17u]  = CY_GET_REG8(CYREG_SC2_SW4 );
 127              		.loc 1 1690 0
 128 0070 91F82220 		ldrb	r2, [r1, #34]	@ zero_extendqisi2
 129 0074 9A76     		strb	r2, [r3, #26]
1691:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[18u]  = CY_GET_REG8(CYREG_SC2_SW6 );
 130              		.loc 1 1691 0
 131 0076 9AF80020 		ldrb	r2, [r10]	@ zero_extendqisi2
 132 007a DA76     		strb	r2, [r3, #27]
1692:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[19u]  = CY_GET_REG8(CYREG_SC2_SW8 );
 133              		.loc 1 1692 0
 134 007c 99F80020 		ldrb	r2, [r9]	@ zero_extendqisi2
 135 0080 1A77     		strb	r2, [r3, #28]
1693:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
 136              		.loc 1 1693 0
 137 0082 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 138 0086 5A77     		strb	r2, [r3, #29]
1695:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[21u]  = CY_GET_REG8(CYREG_SC3_SW0 );
 139              		.loc 1 1695 0
 140 0088 9CF80020 		ldrb	r2, [ip]	@ zero_extendqisi2
 141 008c 9A77     		strb	r2, [r3, #30]
1696:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[22u]  = CY_GET_REG8(CYREG_SC3_SW2 );
 142              		.loc 1 1696 0
 143 008e 97F82C20 		ldrb	r2, [r7, #44]	@ zero_extendqisi2
 144 0092 DA77     		strb	r2, [r3, #31]
1697:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[23u]  = CY_GET_REG8(CYREG_SC3_SW3 );
 145              		.loc 1 1697 0
 146 0094 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 147 0096 83F82020 		strb	r2, [r3, #32]
1698:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[24u]  = CY_GET_REG8(CYREG_SC3_SW4 );
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 34


 148              		.loc 1 1698 0
 149 009a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 150 009c 83F82120 		strb	r2, [r3, #33]
1699:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[25u]  = CY_GET_REG8(CYREG_SC3_SW6 );
 151              		.loc 1 1699 0
 152 00a0 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 153 00a2 83F82220 		strb	r2, [r3, #34]
 154              		.loc 1 1700 0
 155 00a6 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 156 00a8 83F82320 		strb	r2, [r3, #35]
1701:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[27u]  = CY_GET_REG8(CYREG_SC3_SW10);
 157              		.loc 1 1701 0
 158 00ac 91F83820 		ldrb	r2, [r1, #56]	@ zero_extendqisi2
 159 00b0 83F82420 		strb	r2, [r3, #36]
1702:.\Generated_Source\PSoC5/cyPm.c **** 
1703:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW0 , 0u);
 160              		.loc 1 1703 0
 161 00b4 0022     		movs	r2, #0
 162 00b6 8BF80020 		strb	r2, [fp]
1704:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW2 , 0u);
 163              		.loc 1 1704 0
 164 00ba 07F8042C 		strb	r2, [r7, #-4]
1705:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW3 , 0u);
 165              		.loc 1 1705 0
 166 00be 07F8032C 		strb	r2, [r7, #-3]
1706:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW4 , 0u);
 167              		.loc 1 1706 0
 168 00c2 023F     		subs	r7, r7, #2
 169 00c4 3A70     		strb	r2, [r7]
1707:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW6 , 0u);
 170              		.loc 1 1707 0
 171 00c6 BA70     		strb	r2, [r7, #2]
1708:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW8 , 0u);
 172              		.loc 1 1708 0
 173 00c8 3A71     		strb	r2, [r7, #4]
1709:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW10, 0u);
 174              		.loc 1 1709 0
 175 00ca BA71     		strb	r2, [r7, #6]
1710:.\Generated_Source\PSoC5/cyPm.c **** 
1711:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW0 , 0u);
 176              		.loc 1 1711 0
 177 00cc 3A73     		strb	r2, [r7, #12]
1712:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW2 , 0u);
 178              		.loc 1 1712 0
 179 00ce BA73     		strb	r2, [r7, #14]
1713:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW3 , 0u);
 180              		.loc 1 1713 0
 181 00d0 FA73     		strb	r2, [r7, #15]
1714:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW4 , 0u);
 182              		.loc 1 1714 0
 183 00d2 3A74     		strb	r2, [r7, #16]
1715:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW6 , 0u);
 184              		.loc 1 1715 0
 185 00d4 BA74     		strb	r2, [r7, #18]
1716:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW8 , 0u);
 186              		.loc 1 1716 0
 187 00d6 3A75     		strb	r2, [r7, #20]
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 35


1717:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW10, 0u);
 188              		.loc 1 1717 0
 189 00d8 BA75     		strb	r2, [r7, #22]
1718:.\Generated_Source\PSoC5/cyPm.c **** 
1719:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW0 , 0u);
 190              		.loc 1 1719 0
 191 00da 3A77     		strb	r2, [r7, #28]
1720:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW2 , 0u);
 192              		.loc 1 1720 0
 193 00dc BA77     		strb	r2, [r7, #30]
1721:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW3 , 0u);
 194              		.loc 1 1721 0
 195 00de FA77     		strb	r2, [r7, #31]
1722:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW4 , 0u);
 196              		.loc 1 1722 0
 197 00e0 87F82020 		strb	r2, [r7, #32]
1723:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW6 , 0u);
 198              		.loc 1 1723 0
 199 00e4 8AF80020 		strb	r2, [r10]
1724:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW8 , 0u);
 200              		.loc 1 1724 0
 201 00e8 89F80020 		strb	r2, [r9]
1725:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW10, 0u);
 202              		.loc 1 1725 0
 203 00ec 88F80020 		strb	r2, [r8]
1726:.\Generated_Source\PSoC5/cyPm.c **** 
1727:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW0 , 0u);
 204              		.loc 1 1727 0
 205 00f0 8CF80020 		strb	r2, [ip]
1728:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW2 , 0u);
 206              		.loc 1 1728 0
 207 00f4 87F82E20 		strb	r2, [r7, #46]
1729:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW3 , 0u);
 208              		.loc 1 1729 0
 209 00f8 3270     		strb	r2, [r6]
1730:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW4 , 0u);
 210              		.loc 1 1730 0
 211 00fa 2A70     		strb	r2, [r5]
1731:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW6 , 0u);
 212              		.loc 1 1731 0
 213 00fc 2270     		strb	r2, [r4]
1732:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW8 , 0u);
 214              		.loc 1 1732 0
 215 00fe 0270     		strb	r2, [r0]
1733:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW10, 0u);
 216              		.loc 1 1733 0
 217 0100 81F83820 		strb	r2, [r1, #56]
1734:.\Generated_Source\PSoC5/cyPm.c **** 
1735:.\Generated_Source\PSoC5/cyPm.c **** 
1736:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1737:.\Generated_Source\PSoC5/cyPm.c **** 
1738:.\Generated_Source\PSoC5/cyPm.c ****         /* Serial Wire Viewer (SWV) workaround */
1739:.\Generated_Source\PSoC5/cyPm.c **** 
1740:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable SWV before entering low power mode */
1741:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_MLOGIC_DBG_REG & CY_PM_MLOGIC_DBG_SWV_CLK_EN))
1742:.\Generated_Source\PSoC5/cyPm.c ****         {
1743:.\Generated_Source\PSoC5/cyPm.c ****             /* Save SWV clock enabled state */
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 36


1744:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.swvClkEnabled = CY_PM_ENABLED;
1745:.\Generated_Source\PSoC5/cyPm.c **** 
1746:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current ports drive mode settings */
1747:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.prt1Dm = CY_PM_PRT1_PC3_REG & ((uint8)(~CY_PM_PRT1_PC3_DM_MASK));
1748:.\Generated_Source\PSoC5/cyPm.c **** 
1749:.\Generated_Source\PSoC5/cyPm.c ****             /* Set drive mode to strong output */
1750:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
1751:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_PRT1_PC3_DM_STRONG;
1752:.\Generated_Source\PSoC5/cyPm.c **** 
1753:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable SWV clocks */
1754:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_MLOGIC_DBG_REG &= ((uint8)(~CY_PM_MLOGIC_DBG_SWV_CLK_EN));
1755:.\Generated_Source\PSoC5/cyPm.c ****         }
1756:.\Generated_Source\PSoC5/cyPm.c ****         else
1757:.\Generated_Source\PSoC5/cyPm.c ****         {
1758:.\Generated_Source\PSoC5/cyPm.c ****             /* Save SWV clock disabled state */
1759:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.swvClkEnabled = CY_PM_DISABLED;
1760:.\Generated_Source\PSoC5/cyPm.c ****         }
1761:.\Generated_Source\PSoC5/cyPm.c **** 
1762:.\Generated_Source\PSoC5/cyPm.c ****     #endif  /* (CY_PSOC3) */
1763:.\Generated_Source\PSoC5/cyPm.c **** 
1764:.\Generated_Source\PSoC5/cyPm.c **** 
1765:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1766:.\Generated_Source\PSoC5/cyPm.c ****     * Save boost reference and set it to boost's internal by clearing the bit.
1767:.\Generated_Source\PSoC5/cyPm.c ****     * External (chip bandgap) reference is not available in Sleep and Hibernate.
1768:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1769:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_BOOST_CR2_REG & CY_PM_BOOST_CR2_EREFSEL_EXT))
 218              		.loc 1 1769 0
 219 0104 104A     		ldr	r2, .L5+28
 220 0106 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 221 0108 01F00801 		and	r1, r1, #8
 222 010c 01F0FF00 		and	r0, r1, #255
 223 0110 41B1     		cbz	r1, .L2
1770:.\Generated_Source\PSoC5/cyPm.c ****     {
1771:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.boostRefExt = CY_PM_ENABLED;
 224              		.loc 1 1771 0
 225 0112 0121     		movs	r1, #1
 226 0114 83F82E10 		strb	r1, [r3, #46]
1772:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_BOOST_CR2_REG &= ((uint8)(~CY_PM_BOOST_CR2_EREFSEL_EXT));
 227              		.loc 1 1772 0
 228 0118 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 229 011a 03F0F703 		and	r3, r3, #247
 230 011e 1370     		strb	r3, [r2]
 231 0120 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 232              	.L2:
1773:.\Generated_Source\PSoC5/cyPm.c ****     }
1774:.\Generated_Source\PSoC5/cyPm.c ****     else
1775:.\Generated_Source\PSoC5/cyPm.c ****     {
1776:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.boostRefExt = CY_PM_DISABLED;
 233              		.loc 1 1776 0
 234 0124 83F82E00 		strb	r0, [r3, #46]
 235 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 236              	.L6:
 237              		.align	2
 238              	.L5:
 239 012c 00000000 		.word	.LANCHOR0
 240 0130 025A0040 		.word	1073764866
 241 0134 035A0040 		.word	1073764867
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 37


 242 0138 335A0040 		.word	1073764915
 243 013c 345A0040 		.word	1073764916
 244 0140 365A0040 		.word	1073764918
 245 0144 385A0040 		.word	1073764920
 246 0148 22430040 		.word	1073759010
 247 014c 005A0040 		.word	1073764864
 248 0150 265A0040 		.word	1073764902
 249 0154 285A0040 		.word	1073764904
 250 0158 2A5A0040 		.word	1073764906
 251 015c 305A0040 		.word	1073764912
 252              		.cfi_endproc
 253              	.LFE12:
 254              		.size	CyPmHibSlpSaveSet, .-CyPmHibSlpSaveSet
 255              		.section	.text.CyPmHibSlpRestore,"ax",%progbits
 256              		.align	1
 257              		.thumb
 258              		.thumb_func
 259              		.type	CyPmHibSlpRestore, %function
 260              	CyPmHibSlpRestore:
 261              	.LFB13:
1777:.\Generated_Source\PSoC5/cyPm.c ****     }
1778:.\Generated_Source\PSoC5/cyPm.c **** }
1779:.\Generated_Source\PSoC5/cyPm.c **** 
1780:.\Generated_Source\PSoC5/cyPm.c **** 
1781:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1782:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSlpRestore
1783:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1784:.\Generated_Source\PSoC5/cyPm.c **** *
1785:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1786:.\Generated_Source\PSoC5/cyPm.c **** *  This API is used for restoring the device configurations after wakeup from
1787:.\Generated_Source\PSoC5/cyPm.c **** *  the Sleep and Hibernate low power modes:
1788:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the SC/CT routing connections
1789:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the enable state of the Serial Wire Viewer (SWV) (PSoC 3)
1790:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the  boost reference selection
1791:.\Generated_Source\PSoC5/cyPm.c **** *
1792:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1793:.\Generated_Source\PSoC5/cyPm.c **** *  None
1794:.\Generated_Source\PSoC5/cyPm.c **** *
1795:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1796:.\Generated_Source\PSoC5/cyPm.c **** *  None
1797:.\Generated_Source\PSoC5/cyPm.c **** *
1798:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1799:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpRestore(void) 
1800:.\Generated_Source\PSoC5/cyPm.c **** {
 262              		.loc 1 1800 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
1801:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore SC/CT routing registers */
1802:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW0 , cyPmBackup.scctData[0u] );
 267              		.loc 1 1802 0
 268 0000 2B4B     		ldr	r3, .L9
 269 0002 2C4A     		ldr	r2, .L9+4
 270 0004 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
1803:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW2 , cyPmBackup.scctData[1u] );
1804:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW3 , cyPmBackup.scctData[2u] );
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 38


1805:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW4 , cyPmBackup.scctData[3u] );
1806:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW6 , cyPmBackup.scctData[4u] );
1807:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW8 , cyPmBackup.scctData[5u] );
1808:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW10, cyPmBackup.scctData[6u] );
1809:.\Generated_Source\PSoC5/cyPm.c **** 
1810:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW0 , cyPmBackup.scctData[7u] );
1811:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW2 , cyPmBackup.scctData[8u] );
1812:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW3 , cyPmBackup.scctData[9u] );
1813:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW4 , cyPmBackup.scctData[10u]);
1814:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW6 , cyPmBackup.scctData[11u]);
1815:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW8 , cyPmBackup.scctData[12u]);
 271              		.loc 1 1815 0
 272 0006 1832     		adds	r2, r2, #24
1802:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW0 , cyPmBackup.scctData[0u] );
 273              		.loc 1 1802 0
 274 0008 02F8181C 		strb	r1, [r2, #-24]
1803:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW2 , cyPmBackup.scctData[1u] );
 275              		.loc 1 1803 0
 276 000c 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 277 000e 02F8161C 		strb	r1, [r2, #-22]
1804:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW3 , cyPmBackup.scctData[2u] );
 278              		.loc 1 1804 0
 279 0012 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 280 0014 02F8151C 		strb	r1, [r2, #-21]
1805:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW4 , cyPmBackup.scctData[3u] );
 281              		.loc 1 1805 0
 282 0018 197B     		ldrb	r1, [r3, #12]	@ zero_extendqisi2
 283 001a 02F8141C 		strb	r1, [r2, #-20]
1806:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW6 , cyPmBackup.scctData[4u] );
 284              		.loc 1 1806 0
 285 001e 597B     		ldrb	r1, [r3, #13]	@ zero_extendqisi2
 286 0020 02F8121C 		strb	r1, [r2, #-18]
1807:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW8 , cyPmBackup.scctData[5u] );
 287              		.loc 1 1807 0
 288 0024 997B     		ldrb	r1, [r3, #14]	@ zero_extendqisi2
 289 0026 02F8101C 		strb	r1, [r2, #-16]
1808:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW10, cyPmBackup.scctData[6u] );
 290              		.loc 1 1808 0
 291 002a D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 292 002c 02F80E1C 		strb	r1, [r2, #-14]
1810:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW0 , cyPmBackup.scctData[7u] );
 293              		.loc 1 1810 0
 294 0030 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
 295 0032 02F8081C 		strb	r1, [r2, #-8]
1811:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW2 , cyPmBackup.scctData[8u] );
 296              		.loc 1 1811 0
 297 0036 597C     		ldrb	r1, [r3, #17]	@ zero_extendqisi2
 298 0038 02F8061C 		strb	r1, [r2, #-6]
1812:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW3 , cyPmBackup.scctData[9u] );
 299              		.loc 1 1812 0
 300 003c 997C     		ldrb	r1, [r3, #18]	@ zero_extendqisi2
 301 003e 02F8051C 		strb	r1, [r2, #-5]
1813:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW4 , cyPmBackup.scctData[10u]);
 302              		.loc 1 1813 0
 303 0042 D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 304 0044 02F8041C 		strb	r1, [r2, #-4]
1814:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW6 , cyPmBackup.scctData[11u]);
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 39


 305              		.loc 1 1814 0
 306 0048 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
 307 004a 02F8021C 		strb	r1, [r2, #-2]
 308              		.loc 1 1815 0
 309 004e 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
 310 0050 1170     		strb	r1, [r2]
1816:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW10, cyPmBackup.scctData[13u]);
 311              		.loc 1 1816 0
 312 0052 997D     		ldrb	r1, [r3, #22]	@ zero_extendqisi2
 313 0054 9170     		strb	r1, [r2, #2]
1817:.\Generated_Source\PSoC5/cyPm.c **** 
1818:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW0 , cyPmBackup.scctData[14u]);
 314              		.loc 1 1818 0
 315 0056 D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
 316 0058 1172     		strb	r1, [r2, #8]
1819:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW2 , cyPmBackup.scctData[15u]);
 317              		.loc 1 1819 0
 318 005a 197E     		ldrb	r1, [r3, #24]	@ zero_extendqisi2
 319 005c 9172     		strb	r1, [r2, #10]
1820:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW3 , cyPmBackup.scctData[16u]);
 320              		.loc 1 1820 0
 321 005e 597E     		ldrb	r1, [r3, #25]	@ zero_extendqisi2
 322 0060 D172     		strb	r1, [r2, #11]
1821:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW4 , cyPmBackup.scctData[17u]);
 323              		.loc 1 1821 0
 324 0062 997E     		ldrb	r1, [r3, #26]	@ zero_extendqisi2
 325 0064 1173     		strb	r1, [r2, #12]
1822:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW6 , cyPmBackup.scctData[18u]);
 326              		.loc 1 1822 0
 327 0066 D97E     		ldrb	r1, [r3, #27]	@ zero_extendqisi2
 328 0068 9173     		strb	r1, [r2, #14]
1823:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW8 , cyPmBackup.scctData[19u]);
 329              		.loc 1 1823 0
 330 006a 197F     		ldrb	r1, [r3, #28]	@ zero_extendqisi2
 331 006c 1174     		strb	r1, [r2, #16]
1824:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW10, cyPmBackup.scctData[20u]);
 332              		.loc 1 1824 0
 333 006e 597F     		ldrb	r1, [r3, #29]	@ zero_extendqisi2
 334 0070 9174     		strb	r1, [r2, #18]
1825:.\Generated_Source\PSoC5/cyPm.c **** 
1826:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW0 , cyPmBackup.scctData[21u]);
 335              		.loc 1 1826 0
 336 0072 997F     		ldrb	r1, [r3, #30]	@ zero_extendqisi2
 337 0074 1176     		strb	r1, [r2, #24]
1827:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW2 , cyPmBackup.scctData[22u]);
 338              		.loc 1 1827 0
 339 0076 D97F     		ldrb	r1, [r3, #31]	@ zero_extendqisi2
 340 0078 9176     		strb	r1, [r2, #26]
1828:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW3 , cyPmBackup.scctData[23u]);
 341              		.loc 1 1828 0
 342 007a 93F82010 		ldrb	r1, [r3, #32]	@ zero_extendqisi2
 343 007e D176     		strb	r1, [r2, #27]
1829:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW4 , cyPmBackup.scctData[24u]);
 344              		.loc 1 1829 0
 345 0080 93F82110 		ldrb	r1, [r3, #33]	@ zero_extendqisi2
 346 0084 1177     		strb	r1, [r2, #28]
1830:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW6 , cyPmBackup.scctData[25u]);
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 40


 347              		.loc 1 1830 0
 348 0086 93F82210 		ldrb	r1, [r3, #34]	@ zero_extendqisi2
 349 008a 9177     		strb	r1, [r2, #30]
1831:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW8 , cyPmBackup.scctData[26u]);
 350              		.loc 1 1831 0
 351 008c 93F82310 		ldrb	r1, [r3, #35]	@ zero_extendqisi2
 352 0090 82F82010 		strb	r1, [r2, #32]
1832:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW10, cyPmBackup.scctData[27u]);
 353              		.loc 1 1832 0
 354 0094 93F82410 		ldrb	r1, [r3, #36]	@ zero_extendqisi2
 355 0098 82F82210 		strb	r1, [r2, #34]
1833:.\Generated_Source\PSoC5/cyPm.c **** 
1834:.\Generated_Source\PSoC5/cyPm.c **** 
1835:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1836:.\Generated_Source\PSoC5/cyPm.c **** 
1837:.\Generated_Source\PSoC5/cyPm.c ****         /* Serial Wire Viewer (SWV) workaround */
1838:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_ENABLED == cyPmBackup.swvClkEnabled)
1839:.\Generated_Source\PSoC5/cyPm.c ****         {
1840:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore ports drive mode */
1841:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
1842:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.prt1Dm;
1843:.\Generated_Source\PSoC5/cyPm.c **** 
1844:.\Generated_Source\PSoC5/cyPm.c ****             /* Enable SWV clocks */
1845:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_MLOGIC_DBG_REG |= CY_PM_MLOGIC_DBG_SWV_CLK_EN;
1846:.\Generated_Source\PSoC5/cyPm.c ****         }
1847:.\Generated_Source\PSoC5/cyPm.c **** 
1848:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
1849:.\Generated_Source\PSoC5/cyPm.c **** 
1850:.\Generated_Source\PSoC5/cyPm.c **** 
1851:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore boost reference */
1852:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.boostRefExt)
 356              		.loc 1 1852 0
 357 009c 93F82E30 		ldrb	r3, [r3, #46]	@ zero_extendqisi2
 358 00a0 012B     		cmp	r3, #1
 359 00a2 04D1     		bne	.L7
1853:.\Generated_Source\PSoC5/cyPm.c ****     {
1854:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_BOOST_CR2_REG |= CY_PM_BOOST_CR2_EREFSEL_EXT;
 360              		.loc 1 1854 0
 361 00a4 044B     		ldr	r3, .L9+8
 362 00a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 363 00a8 42F00802 		orr	r2, r2, #8
 364 00ac 1A70     		strb	r2, [r3]
 365              	.L7:
 366 00ae 7047     		bx	lr
 367              	.L10:
 368              		.align	2
 369              	.L9:
 370 00b0 00000000 		.word	.LANCHOR0
 371 00b4 005A0040 		.word	1073764864
 372 00b8 22430040 		.word	1073759010
 373              		.cfi_endproc
 374              	.LFE13:
 375              		.size	CyPmHibSlpRestore, .-CyPmHibSlpRestore
 376              		.section	.text.CyPmSaveClocks,"ax",%progbits
 377              		.align	1
 378              		.global	CyPmSaveClocks
 379              		.thumb
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 41


 380              		.thumb_func
 381              		.type	CyPmSaveClocks, %function
 382              	CyPmSaveClocks:
 383              	.LFB0:
  85:.\Generated_Source\PSoC5/cyPm.c **** {
 384              		.loc 1 85 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388 0000 10B5     		push	{r4, lr}
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
  87:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
 392              		.loc 1 87 0
 393 0002 6A4A     		ldr	r2, .L51
 394 0004 6A4C     		ldr	r4, .L51+4
 395 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  94:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 396              		.loc 1 94 0
 397 0008 3720     		movs	r0, #55
  87:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
 398              		.loc 1 87 0
 399 000a 03F00F03 		and	r3, r3, #15
 400 000e 84F83030 		strb	r3, [r4, #48]
  88:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
 401              		.loc 1 88 0
 402 0012 684B     		ldr	r3, .L51+8
 403 0014 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 404 0016 84F83110 		strb	r1, [r4, #49]
  89:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_A_MASK));
 405              		.loc 1 89 0
 406 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 407 001c 01F0F001 		and	r1, r1, #240
 408 0020 1170     		strb	r1, [r2]
  90:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_D_MASK));
 409              		.loc 1 90 0
 410 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 411 0024 0022     		movs	r2, #0
 412 0026 1A70     		strb	r2, [r3]
  93:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
 413              		.loc 1 93 0
 414 0028 03F25E43 		addw	r3, r3, #1118
 415 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 002e 03F0C003 		and	r3, r3, #192
 417 0032 84F83530 		strb	r3, [r4, #53]
  94:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 418              		.loc 1 94 0
 419 0036 FFF7FEFF 		bl	CyFlash_SetWaitCycles
 420              	.LVL0:
  97:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 421              		.loc 1 97 0
 422 003a 5F4B     		ldr	r3, .L51+12
 423 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 424 003e 02F00702 		and	r2, r2, #7
 425 0042 84F83320 		strb	r2, [r4, #51]
  98:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 42


 426              		.loc 1 98 0
 427 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 428 0048 02F04002 		and	r2, r2, #64
 429 004c 84F83420 		strb	r2, [r4, #52]
 101:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 430              		.loc 1 101 0
 431 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 0052 03F01003 		and	r3, r3, #16
 433 0056 03F0FF02 		and	r2, r3, #255
 434 005a 1BB1     		cbz	r3, .L12
 104:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_ENABLED;
 435              		.loc 1 104 0
 436 005c 0123     		movs	r3, #1
 437 005e 84F83930 		strb	r3, [r4, #57]
 438 0062 01E0     		b	.L13
 439              	.L12:
 109:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_DISABLED;
 440              		.loc 1 109 0
 441 0064 84F83920 		strb	r2, [r4, #57]
 442              	.L13:
 113:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 443              		.loc 1 113 0
 444 0068 544B     		ldr	r3, .L51+16
 445 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446 006c 03F00303 		and	r3, r3, #3
 116:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 447              		.loc 1 116 0
 448 0070 012B     		cmp	r3, #1
 113:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 449              		.loc 1 113 0
 450 0072 84F83230 		strb	r3, [r4, #50]
 116:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 451              		.loc 1 116 0
 452 0076 10D1     		bne	.L14
 118:.\Generated_Source\PSoC5/cyPm.c ****         switch (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_PLL_SRC_MASK)
 453              		.loc 1 118 0
 454 0078 4FF04023 		mov	r3, #1073758208
 455 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 456 007e 03F00303 		and	r3, r3, #3
 457 0082 012B     		cmp	r3, #1
 458 0084 06D0     		beq	.L15
 459 0086 03D3     		bcc	.L16
 460 0088 022B     		cmp	r3, #2
 461 008a 06D1     		bne	.L14
 129:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 462              		.loc 1 129 0
 463 008c 0320     		movs	r0, #3
 464 008e 02E0     		b	.L50
 465              	.L16:
 121:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 466              		.loc 1 121 0
 467 0090 0020     		movs	r0, #0
 468 0092 00E0     		b	.L50
 469              	.L15:
 125:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_XTAL);
 470              		.loc 1 125 0
 471 0094 0220     		movs	r0, #2
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 43


 472              	.L50:
 129:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 473              		.loc 1 129 0
 474 0096 FFF7FEFF 		bl	CyMasterClk_SetSource
 475              	.LVL1:
 476              	.L14:
 139:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 477              		.loc 1 139 0
 478 009a 494B     		ldr	r3, .L51+20
 479 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 480 009e 13F00103 		ands	r3, r3, #1
 481 00a2 05D0     		beq	.L18
 142:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 482              		.loc 1 142 0
 483 00a4 0123     		movs	r3, #1
 484 00a6 84F83E30 		strb	r3, [r4, #62]
 143:.\Generated_Source\PSoC5/cyPm.c ****         CyPLL_OUT_Stop();
 485              		.loc 1 143 0
 486 00aa FFF7FEFF 		bl	CyPLL_OUT_Stop
 487              	.LVL2:
 488 00ae 01E0     		b	.L19
 489              	.L18:
 148:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 490              		.loc 1 148 0
 491 00b0 84F83E30 		strb	r3, [r4, #62]
 492              	.L19:
 152:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 493              		.loc 1 152 0
 494 00b4 0420     		movs	r0, #4
 495 00b6 FFF7FEFF 		bl	CyIMO_SetFreq
 496              	.LVL3:
 155:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 497              		.loc 1 155 0
 498 00ba 424B     		ldr	r3, .L51+24
 499 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 500 00be 03F01003 		and	r3, r3, #16
 501 00c2 03F0FF00 		and	r0, r3, #255
 502 00c6 1BB1     		cbz	r3, .L20
 158:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 503              		.loc 1 158 0
 504 00c8 0123     		movs	r3, #1
 505 00ca 84F83630 		strb	r3, [r4, #54]
 506 00ce 06E0     		b	.L21
 507              	.L20:
 163:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 508              		.loc 1 163 0
 509 00d0 84F83600 		strb	r0, [r4, #54]
 166:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 510              		.loc 1 166 0
 511 00d4 FFF7FEFF 		bl	CyIMO_Start
 512              	.LVL4:
 169:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs(6u);
 513              		.loc 1 169 0
 514 00d8 0620     		movs	r0, #6
 515 00da FFF7FEFF 		bl	CyDelayUs
 516              	.LVL5:
 517              	.L21:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 44


 173:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 518              		.loc 1 173 0
 519 00de 364B     		ldr	r3, .L51+12
 520 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 521 00e2 03F02003 		and	r3, r3, #32
 522 00e6 03F0FF02 		and	r2, r3, #255
 523 00ea 6BB1     		cbz	r3, .L22
 177:.\Generated_Source\PSoC5/cyPm.c ****             (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_S
 524              		.loc 1 177 0
 525 00ec 4FF04023 		mov	r3, #1073758208
 526 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 180:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 527              		.loc 1 180 0
 528 00f2 0020     		movs	r0, #0
 176:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc =
 529              		.loc 1 176 0
 530 00f4 13F0400F 		tst	r3, #64
 531 00f8 14BF     		ite	ne
 532 00fa 0123     		movne	r3, #1
 533 00fc 0223     		moveq	r3, #2
 534 00fe 84F83730 		strb	r3, [r4, #55]
 180:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 535              		.loc 1 180 0
 536 0102 FFF7FEFF 		bl	CyIMO_SetSource
 537              	.LVL6:
 538 0106 01E0     		b	.L24
 539              	.L22:
 185:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
 540              		.loc 1 185 0
 541 0108 84F83720 		strb	r2, [r4, #55]
 542              	.L24:
 189:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 543              		.loc 1 189 0
 544 010c 4FF04023 		mov	r3, #1073758208
 545 0110 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 546 0112 02F03002 		and	r2, r2, #48
 547 0116 84F83820 		strb	r2, [r4, #56]
 192:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 548              		.loc 1 192 0
 549 011a 1AB1     		cbz	r2, .L25
 195:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 550              		.loc 1 195 0
 551 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 552 011e 02F0CF02 		and	r2, r2, #207
 553 0122 1A70     		strb	r2, [r3]
 554              	.L25:
 200:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 555              		.loc 1 200 0
 556 0124 244B     		ldr	r3, .L51+12
 557 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 558 0128 DB06     		lsls	r3, r3, #27
 559 012a 01D5     		bpl	.L26
 202:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_DisableDoubler();
 560              		.loc 1 202 0
 561 012c FFF7FEFF 		bl	CyIMO_DisableDoubler
 562              	.LVL7:
 563              	.L26:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 45


 206:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 564              		.loc 1 206 0
 565 0130 254B     		ldr	r3, .L51+28
 566 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 567 0134 DBB2     		uxtb	r3, r3
 568 0136 84F83A30 		strb	r3, [r4, #58]
 207:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
 569              		.loc 1 207 0
 570 013a 13B1     		cbz	r3, .L27
 209:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 571              		.loc 1 209 0
 572 013c 0020     		movs	r0, #0
 573 013e FFF7FEFF 		bl	CyMasterClk_SetDivider
 574              	.LVL8:
 575              	.L27:
 213:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 576              		.loc 1 213 0
 577 0142 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 578 0146 13B1     		cbz	r3, .L28
 215:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 579              		.loc 1 215 0
 580 0148 0020     		movs	r0, #0
 581 014a FFF7FEFF 		bl	CyMasterClk_SetSource
 582              	.LVL9:
 583              	.L28:
 219:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 584              		.loc 1 219 0
 585 014e 1F4B     		ldr	r3, .L51+32
 220:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 586              		.loc 1 220 0
 587 0150 1F4A     		ldr	r2, .L51+36
 219:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 588              		.loc 1 219 0
 589 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 590 0154 1B02     		lsls	r3, r3, #8
 591 0156 A387     		strh	r3, [r4, #60]	@ movhi
 220:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 592              		.loc 1 220 0
 593 0158 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 594 015a 1343     		orrs	r3, r3, r2
 595 015c A387     		strh	r3, [r4, #60]	@ movhi
 221:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 596              		.loc 1 221 0
 597 015e 13B1     		cbz	r3, .L29
 223:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 598              		.loc 1 223 0
 599 0160 0020     		movs	r0, #0
 600 0162 FFF7FEFF 		bl	CyBusClk_SetDivider
 601              	.LVL10:
 602              	.L29:
 227:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles((uint8)CY_PM_GET_CPU_FREQ_MHZ);
 603              		.loc 1 227 0
 604 0166 144B     		ldr	r3, .L51+12
 605 0168 1A4A     		ldr	r2, .L51+40
 606 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 607 016c 03F00703 		and	r3, r3, #7
 608 0170 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 46


 609 0172 FFF7FEFF 		bl	CyFlash_SetWaitCycles
 610              	.LVL11:
 230:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 611              		.loc 1 230 0
 612 0176 184B     		ldr	r3, .L51+44
 613 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 017a 13F00103 		ands	r3, r3, #1
 615 017e 05D0     		beq	.L30
 233:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 616              		.loc 1 233 0
 617 0180 0123     		movs	r3, #1
 618 0182 84F83F30 		strb	r3, [r4, #63]
 234:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_Stop();
 619              		.loc 1 234 0
 620 0186 FFF7FEFF 		bl	CyXTAL_Stop
 621              	.LVL12:
 622 018a 01E0     		b	.L31
 623              	.L30:
 239:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 624              		.loc 1 239 0
 625 018c 84F83F30 		strb	r3, [r4, #63]
 626              	.L31:
 248:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
 627              		.loc 1 248 0
 628 0190 124B     		ldr	r3, .L51+48
 629 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 0194 03F00403 		and	r3, r3, #4
 631 0198 03F0FF02 		and	r2, r3, #255
 632 019c 1BB1     		cbz	r3, .L32
 250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_ENABLED;
 633              		.loc 1 250 0
 634 019e 0123     		movs	r3, #1
 635 01a0 84F84030 		strb	r3, [r4, #64]
 636 01a4 10BD     		pop	{r4, pc}
 637              	.L32:
 254:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_DISABLED;
 638              		.loc 1 254 0
 639 01a6 84F84020 		strb	r2, [r4, #64]
 640 01aa 10BD     		pop	{r4, pc}
 641              	.L52:
 642              		.align	2
 643              	.L51:
 644 01ac A1430040 		.word	1073759137
 645 01b0 00000000 		.word	.LANCHOR0
 646 01b4 A2430040 		.word	1073759138
 647 01b8 00420040 		.word	1073758720
 648 01bc 05400040 		.word	1073758213
 649 01c0 20420040 		.word	1073758752
 650 01c4 A0430040 		.word	1073759136
 651 01c8 04400040 		.word	1073758212
 652 01cc 07400040 		.word	1073758215
 653 01d0 06400040 		.word	1073758214
 654 01d4 00000000 		.word	.LANCHOR1
 655 01d8 10420040 		.word	1073758736
 656 01dc 0B400040 		.word	1073758219
 657              		.cfi_endproc
 658              	.LFE0:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 47


 659              		.size	CyPmSaveClocks, .-CyPmSaveClocks
 660              		.section	.text.CyPmRestoreClocks,"ax",%progbits
 661              		.align	1
 662              		.global	CyPmRestoreClocks
 663              		.thumb
 664              		.thumb_func
 665              		.type	CyPmRestoreClocks, %function
 666              	CyPmRestoreClocks:
 667              	.LFB1:
 287:.\Generated_Source\PSoC5/cyPm.c **** {
 668              		.loc 1 287 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 8
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              	.LVL13:
 673 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 674              		.cfi_def_cfa_offset 32
 675              		.cfi_offset 0, -32
 676              		.cfi_offset 1, -28
 677              		.cfi_offset 2, -24
 678              		.cfi_offset 4, -20
 679              		.cfi_offset 5, -16
 680              		.cfi_offset 6, -12
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 294:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 683              		.loc 1 294 0
 684 0002 784E     		ldr	r6, .L94
 299:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 685              		.loc 1 299 0
 686 0004 784C     		ldr	r4, .L94+4
 294:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 687              		.loc 1 294 0
 688 0006 3346     		mov	r3, r6
 689 0008 53F8070F 		ldr	r0, [r3, #7]!	@ unaligned
 690 000c 9A88     		ldrh	r2, [r3, #4]	@ unaligned
 691 000e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 692 0010 0090     		str	r0, [sp]	@ unaligned
 693 0012 8DF80630 		strb	r3, [sp, #6]
 299:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 694              		.loc 1 299 0
 695 0016 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 294:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 696              		.loc 1 294 0
 697 001a ADF80420 		strh	r2, [sp, #4]	@ unaligned
 299:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 698              		.loc 1 299 0
 699 001e 012B     		cmp	r3, #1
 700 0020 0DD1     		bne	.L54
 303:.\Generated_Source\PSoC5/cyPm.c ****                         CY_PM_GET_CPU_FREQ_MHZ);
 701              		.loc 1 303 0
 702 0022 724B     		ldr	r3, .L94+8
 302:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) 
 703              		.loc 1 302 0
 704 0024 4B20     		movs	r0, #75
 303:.\Generated_Source\PSoC5/cyPm.c ****                         CY_PM_GET_CPU_FREQ_MHZ);
 705              		.loc 1 303 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 48


 706 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 707 0028 03F00703 		and	r3, r3, #7
 302:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) 
 708              		.loc 1 302 0
 709 002c F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 710 002e 5843     		muls	r0, r3, r0
 711 0030 FFF7FEFF 		bl	CyDelayCycles
 712              	.LVL14:
 305:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
 713              		.loc 1 305 0
 714 0034 6E4B     		ldr	r3, .L94+12
 715 0036 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 716 0038 42F00402 		orr	r2, r2, #4
 717 003c 1A70     		strb	r2, [r3]
 718              	.L54:
 309:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 719              		.loc 1 309 0
 720 003e 94F83F30 		ldrb	r3, [r4, #63]	@ zero_extendqisi2
 721 0042 012B     		cmp	r3, #1
 722 0044 08D0     		beq	.L55
 723              	.L58:
 356:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 724              		.loc 1 356 0
 725 0046 3720     		movs	r0, #55
 726 0048 FFF7FEFF 		bl	CyFlash_SetWaitCycles
 727              	.LVL15:
 359:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 728              		.loc 1 359 0
 729 004c 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 730 0050 023B     		subs	r3, r3, #2
 731 0052 012B     		cmp	r3, #1
 732 0054 25D8     		bhi	.L57
 733 0056 17E0     		b	.L92
 734              	.L55:
 319:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 735              		.loc 1 319 0
 736 0058 0020     		movs	r0, #0
 737 005a FFF7FEFF 		bl	CyXTAL_Start
 738              	.LVL16:
 322:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 739              		.loc 1 322 0
 740 005e 654B     		ldr	r3, .L94+16
 741 0060 0525     		movs	r5, #5
 742 0062 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 743              	.LVL17:
 744 0064 1F46     		mov	r7, r3
 745              	.LVL18:
 746              	.L59:
 328:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayCycles((uint32)CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 747              		.loc 1 328 0
 748 0066 614B     		ldr	r3, .L94+8
 749 0068 C820     		movs	r0, #200
 750 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 751 006c 03F00703 		and	r3, r3, #7
 752 0070 F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 753 0072 5843     		muls	r0, r3, r0
 754 0074 FFF7FEFF 		bl	CyDelayCycles
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 49


 755              	.LVL19:
 331:.\Generated_Source\PSoC5/cyPm.c ****             if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 756              		.loc 1 331 0
 757 0078 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 758 007a 1B06     		lsls	r3, r3, #24
 759 007c E3D5     		bpl	.L58
 760              	.LVL20:
 761 007e 013D     		subs	r5, r5, #1
 762              	.LVL21:
 763 0080 ADB2     		uxth	r5, r5
 764              	.LVL22:
 325:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 765              		.loc 1 325 0
 766 0082 002D     		cmp	r5, #0
 767 0084 EFD1     		bne	.L59
 768 0086 DEE7     		b	.L58
 769              	.L92:
 363:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 770              		.loc 1 363 0
 771 0088 5B4B     		ldr	r3, .L94+20
 772 008a 574A     		ldr	r2, .L94+4
 773 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 774 008e 92F83A00 		ldrb	r0, [r2, #58]	@ zero_extendqisi2
 775 0092 8342     		cmp	r3, r0
 776 0094 01D0     		beq	.L60
 366:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 777              		.loc 1 366 0
 778 0096 FFF7FEFF 		bl	CyMasterClk_SetDivider
 779              	.LVL23:
 780              	.L60:
 370:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 781              		.loc 1 370 0
 782 009a 94F83200 		ldrb	r0, [r4, #50]	@ zero_extendqisi2
 783 009e FFF7FEFF 		bl	CyMasterClk_SetSource
 784              	.LVL24:
 785              	.L57:
 374:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 786              		.loc 1 374 0
 787 00a2 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 788 00a6 5806     		lsls	r0, r3, #25
 789 00a8 0CD5     		bpl	.L61
 375:.\Generated_Source\PSoC5/cyPm.c ****         (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 790              		.loc 1 375 0 discriminator 1
 791 00aa 4F4B     		ldr	r3, .L94+4
 792 00ac 02AA     		add	r2, sp, #8
 793 00ae 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 794 00b2 1344     		add	r3, r3, r2
 374:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 795              		.loc 1 374 0 discriminator 1
 796 00b4 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 797 00b8 032B     		cmp	r3, #3
 798 00ba 03D1     		bne	.L61
 378:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(CY_IMO_FREQ_USB);
 799              		.loc 1 378 0
 800 00bc 0820     		movs	r0, #8
 801 00be FFF7FEFF 		bl	CyIMO_SetFreq
 802              	.LVL25:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 50


 803 00c2 13E0     		b	.L62
 804              	.L61:
 383:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 805              		.loc 1 383 0
 806 00c4 94F83330 		ldrb	r3, [r4, #51]	@ zero_extendqisi2
 807 00c8 02AA     		add	r2, sp, #8
 808 00ca 1344     		add	r3, r3, r2
 809 00cc 13F8080C 		ldrb	r0, [r3, #-8]	@ zero_extendqisi2
 810 00d0 FFF7FEFF 		bl	CyIMO_SetFreq
 811              	.LVL26:
 385:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 812              		.loc 1 385 0
 813 00d4 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 814 00d8 13F0400F 		tst	r3, #64
 815 00dc 434B     		ldr	r3, .L94+8
 387:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 816              		.loc 1 387 0
 817 00de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 818 00e0 14BF     		ite	ne
 819 00e2 42F04002 		orrne	r2, r2, #64
 391:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_PM_FASTCLK_IMO_CR_USB));
 820              		.loc 1 391 0
 821 00e6 02F0BF02 		andeq	r2, r2, #191
 822 00ea 1A70     		strb	r2, [r3]
 823              	.L62:
 396:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 824              		.loc 1 396 0
 825 00ec 94F83630 		ldrb	r3, [r4, #54]	@ zero_extendqisi2
 826 00f0 012B     		cmp	r3, #1
 827 00f2 08D1     		bne	.L64
 397:.\Generated_Source\PSoC5/cyPm.c ****        (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 828              		.loc 1 397 0 discriminator 1
 829 00f4 414B     		ldr	r3, .L94+24
 830 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 831 00f8 03F01003 		and	r3, r3, #16
 396:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 832              		.loc 1 396 0 discriminator 1
 833 00fc 03F0FF00 		and	r0, r3, #255
 834 0100 0BB9     		cbnz	r3, .L64
 400:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 835              		.loc 1 400 0
 836 0102 FFF7FEFF 		bl	CyIMO_Start
 837              	.LVL27:
 838              	.L64:
 404:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 839              		.loc 1 404 0
 840 0106 94F83700 		ldrb	r0, [r4, #55]	@ zero_extendqisi2
 841 010a FFF7FEFF 		bl	CyIMO_SetSource
 842              	.LVL28:
 407:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 843              		.loc 1 407 0
 844 010e 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 845 0112 012B     		cmp	r3, #1
 846 0114 01D1     		bne	.L65
 409:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_EnableDoubler();
 847              		.loc 1 409 0
 848 0116 FFF7FEFF 		bl	CyIMO_EnableDoubler
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 51


 849              	.LVL29:
 850              	.L65:
 413:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 851              		.loc 1 413 0
 852 011a 4FF04023 		mov	r3, #1073758208
 853 011e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 854 0120 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 855 0124 01F03001 		and	r1, r1, #48
 856 0128 8A42     		cmp	r2, r1
 857 012a 04D0     		beq	.L66
 415:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 858              		.loc 1 415 0
 859 012c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 860 012e 01F0CF01 		and	r1, r1, #207
 861 0132 0A43     		orrs	r2, r2, r1
 862 0134 1A70     		strb	r2, [r3]
 863              	.L66:
 421:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 864              		.loc 1 421 0
 865 0136 94F83E30 		ldrb	r3, [r4, #62]	@ zero_extendqisi2
 866 013a 012B     		cmp	r3, #1
 867 013c 04D0     		beq	.L67
 868              	.L71:
 469:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 869              		.loc 1 469 0
 870 013e 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 871 0142 012B     		cmp	r3, #1
 872 0144 26D8     		bhi	.L69
 873 0146 18E0     		b	.L93
 874              	.L67:
 432:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
 875              		.loc 1 432 0
 876 0148 0020     		movs	r0, #0
 877 014a FFF7FEFF 		bl	CyPLL_OUT_Start
 878              	.LVL30:
 435:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs((uint32)80u);
 879              		.loc 1 435 0
 880 014e 5020     		movs	r0, #80
 881 0150 FFF7FEFF 		bl	CyDelayUs
 882              	.LVL31:
 436:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_PLL_SR_REG;
 883              		.loc 1 436 0
 884 0154 2A4B     		ldr	r3, .L94+28
 885 0156 AB25     		movs	r5, #171
 886 0158 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 887              	.LVL32:
 888 015a 1E46     		mov	r6, r3
 889              	.LVL33:
 890              	.L72:
 441:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayUs((uint32)1u);
 891              		.loc 1 441 0
 892 015c 0120     		movs	r0, #1
 893 015e FFF7FEFF 		bl	CyDelayUs
 894              	.LVL34:
 444:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 895              		.loc 1 444 0
 896 0162 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 52


 897 0164 D907     		lsls	r1, r3, #31
 898 0166 03D5     		bpl	.L70
 445:.\Generated_Source\PSoC5/cyPm.c ****                (0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)))
 899              		.loc 1 445 0 discriminator 1
 900 0168 254B     		ldr	r3, .L94+28
 901 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 902              		.loc 1 444 0 discriminator 1
 903 016c DA07     		lsls	r2, r3, #31
 904 016e E6D4     		bmi	.L71
 905              	.L70:
 906              	.LVL35:
 907 0170 013D     		subs	r5, r5, #1
 908              	.LVL36:
 909 0172 ADB2     		uxth	r5, r5
 910              	.LVL37:
 439:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
 911              		.loc 1 439 0
 912 0174 002D     		cmp	r5, #0
 913 0176 F1D1     		bne	.L72
 914 0178 E1E7     		b	.L71
 915              	.L93:
 473:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 916              		.loc 1 473 0
 917 017a 1F4B     		ldr	r3, .L94+20
 918 017c 1A4A     		ldr	r2, .L94+4
 919 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 0180 92F83A00 		ldrb	r0, [r2, #58]	@ zero_extendqisi2
 921 0184 8342     		cmp	r3, r0
 922 0186 01D0     		beq	.L73
 475:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 923              		.loc 1 475 0
 924 0188 FFF7FEFF 		bl	CyMasterClk_SetDivider
 925              	.LVL38:
 926              	.L73:
 479:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 927              		.loc 1 479 0
 928 018c 94F83200 		ldrb	r0, [r4, #50]	@ zero_extendqisi2
 929 0190 FFF7FEFF 		bl	CyMasterClk_SetSource
 930              	.LVL39:
 931              	.L69:
 483:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 932              		.loc 1 483 0
 933 0194 94F83630 		ldrb	r3, [r4, #54]	@ zero_extendqisi2
 934 0198 2BB9     		cbnz	r3, .L74
 484:.\Generated_Source\PSoC5/cyPm.c ****        (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 935              		.loc 1 484 0 discriminator 1
 936 019a 184B     		ldr	r3, .L94+24
 937 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 938              		.loc 1 483 0 discriminator 1
 939 019e DB06     		lsls	r3, r3, #27
 940 01a0 01D5     		bpl	.L74
 486:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Stop();
 941              		.loc 1 486 0
 942 01a2 FFF7FEFF 		bl	CyIMO_Stop
 943              	.LVL40:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 53


 944              	.L74:
 490:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 945              		.loc 1 490 0
 946 01a6 174B     		ldr	r3, .L94+32
 492:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 947              		.loc 1 492 0
 948 01a8 A08F     		ldrh	r0, [r4, #60]
 490:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 949              		.loc 1 490 0
 950 01aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 951              	.LVL41:
 491:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp |= CY_PM_CLK_BUS_LSB_DIV_REG;
 952              		.loc 1 491 0
 953 01ac 013B     		subs	r3, r3, #1
 954 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 955              	.LVL42:
 492:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 956              		.loc 1 492 0
 957 01b0 43EA0223 		orr	r3, r3, r2, lsl #8
 958              	.LVL43:
 959 01b4 9842     		cmp	r0, r3
 960 01b6 01D0     		beq	.L75
 494:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 961              		.loc 1 494 0
 962 01b8 FFF7FEFF 		bl	CyBusClk_SetDivider
 963              	.LVL44:
 964              	.L75:
 498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
 965              		.loc 1 498 0
 966 01bc 124B     		ldr	r3, .L94+36
 967 01be 94F83510 		ldrb	r1, [r4, #53]	@ zero_extendqisi2
 968 01c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 502:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 969              		.loc 1 502 0
 970 01c4 A3F25F43 		subw	r3, r3, #1119
 498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
 971              		.loc 1 498 0
 972 01c8 02F03F02 		and	r2, r2, #63
 973 01cc 0A43     		orrs	r2, r2, r1
 974 01ce 83F85F24 		strb	r2, [r3, #1119]
 502:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 975              		.loc 1 502 0
 976 01d2 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 977 01d6 1A70     		strb	r2, [r3]
 503:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 978              		.loc 1 503 0
 979 01d8 94F83120 		ldrb	r2, [r4, #49]	@ zero_extendqisi2
 980 01dc 5A70     		strb	r2, [r3, #1]
 504:.\Generated_Source\PSoC5/cyPm.c **** }
 981              		.loc 1 504 0
 982 01de 03B0     		add	sp, sp, #12
 983              		@ sp needed
 984 01e0 F0BD     		pop	{r4, r5, r6, r7, pc}
 985              	.L95:
 986 01e2 00BF     		.align	2
 987              	.L94:
 988 01e4 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 54


 989 01e8 00000000 		.word	.LANCHOR0
 990 01ec 00420040 		.word	1073758720
 991 01f0 0B400040 		.word	1073758219
 992 01f4 10420040 		.word	1073758736
 993 01f8 04400040 		.word	1073758212
 994 01fc A0430040 		.word	1073759136
 995 0200 25420040 		.word	1073758757
 996 0204 07400040 		.word	1073758215
 997 0208 00480040 		.word	1073760256
 998              		.cfi_endproc
 999              	.LFE1:
 1000              		.size	CyPmRestoreClocks, .-CyPmRestoreClocks
 1001              		.section	.text.CyPmAltAct,"ax",%progbits
 1002              		.align	1
 1003              		.global	CyPmAltAct
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	CyPmAltAct, %function
 1007              	CyPmAltAct:
 1008              	.LFB2:
 649:.\Generated_Source\PSoC5/cyPm.c **** {
 1009              		.loc 1 649 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              	.LVL45:
 1014 0000 30B5     		push	{r4, r5, lr}
 1015              		.cfi_def_cfa_offset 12
 1016              		.cfi_offset 4, -12
 1017              		.cfi_offset 5, -8
 1018              		.cfi_offset 14, -4
 700:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1019              		.loc 1 700 0
 1020 0002 124C     		ldr	r4, .L97
 1021 0004 124B     		ldr	r3, .L97+4
 1022 0006 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 704:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1023              		.loc 1 704 0
 1024 0008 1248     		ldr	r0, .L97+8
 1025              	.LVL46:
 700:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1026              		.loc 1 700 0
 1027 000a 1A71     		strb	r2, [r3, #4]
 701:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 1028              		.loc 1 701 0
 1029 000c C1F30712 		ubfx	r2, r1, #4, #8
 1030 0010 2270     		strb	r2, [r4]
 704:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1031              		.loc 1 704 0
 1032 0012 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 1033 0014 5A71     		strb	r2, [r3, #5]
 705:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1034              		.loc 1 705 0
 1035 0016 01F00F02 		and	r2, r1, #15
 1036 001a 0270     		strb	r2, [r0]
 708:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1037              		.loc 1 708 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 55


 1038 001c 0E4A     		ldr	r2, .L97+12
 709:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1039              		.loc 1 709 0
 1040 001e C1F30031 		ubfx	r1, r1, #12, #1
 1041              	.LVL47:
 708:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1042              		.loc 1 708 0
 1043 0022 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 1044 0024 9D71     		strb	r5, [r3, #6]
 709:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1045              		.loc 1 709 0
 1046 0026 1170     		strb	r1, [r2]
 713:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_A
 1047              		.loc 1 713 0
 1048 0028 0C49     		ldr	r1, .L97+16
 1049 002a 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 1050 002c 05F0F805 		and	r5, r5, #248
 1051 0030 45F00105 		orr	r5, r5, #1
 1052 0034 0D70     		strb	r5, [r1]
 716:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 1053              		.loc 1 716 0
 1054 0036 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 719:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1055              		.loc 1 719 0
 1056              	@ 719 ".\Generated_Source\PSoC5\cyPm.c" 1
 1057 0038 00BF     		NOP
 1058              	
 1059              	@ 0 "" 2
 720:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1060              		.loc 1 720 0
 1061              	@ 720 ".\Generated_Source\PSoC5\cyPm.c" 1
 1062 003a 00BF     		NOP
 1063              	
 1064              	@ 0 "" 2
 723:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1065              		.loc 1 723 0
 1066              	@ 723 ".\Generated_Source\PSoC5\cyPm.c" 1
 1067 003c 30BF     		WFI 
 1068              	
 1069              	@ 0 "" 2
 728:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1070              		.loc 1 728 0
 1071              		.thumb
 1072 003e 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1073 0040 2170     		strb	r1, [r4]
 729:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1074              		.loc 1 729 0
 1075 0042 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
 1076 0044 0170     		strb	r1, [r0]
 730:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1077              		.loc 1 730 0
 1078 0046 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1079 0048 1370     		strb	r3, [r2]
 1080 004a 30BD     		pop	{r4, r5, pc}
 1081              	.L98:
 1082              		.align	2
 1083              	.L97:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 56


 1084 004c 98430040 		.word	1073759128
 1085 0050 00000000 		.word	.LANCHOR0
 1086 0054 99430040 		.word	1073759129
 1087 0058 9A430040 		.word	1073759130
 1088 005c 93430040 		.word	1073759123
 1089              		.cfi_endproc
 1090              	.LFE2:
 1091              		.size	CyPmAltAct, .-CyPmAltAct
 1092              		.section	.text.CyPmSleep,"ax",%progbits
 1093              		.align	1
 1094              		.global	CyPmSleep
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	CyPmSleep, %function
 1098              	CyPmSleep:
 1099              	.LFB3:
 853:.\Generated_Source\PSoC5/cyPm.c **** {
 1100              		.loc 1 853 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL48:
 1105 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1106              		.cfi_def_cfa_offset 32
 1107              		.cfi_offset 4, -32
 1108              		.cfi_offset 5, -28
 1109              		.cfi_offset 6, -24
 1110              		.cfi_offset 7, -20
 1111              		.cfi_offset 8, -16
 1112              		.cfi_offset 9, -12
 1113              		.cfi_offset 10, -8
 1114              		.cfi_offset 14, -4
 853:.\Generated_Source\PSoC5/cyPm.c **** {
 1115              		.loc 1 853 0
 1116 0004 0E46     		mov	r6, r1
 857:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1117              		.loc 1 857 0
 1118 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1119              	.LVL49:
 866:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1120              		.loc 1 866 0
 1121 000a 304D     		ldr	r5, .L111
 857:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1122              		.loc 1 857 0
 1123 000c 0746     		mov	r7, r0
 1124              	.LVL50:
 866:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1125              		.loc 1 866 0
 1126 000e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1127 0010 03F00803 		and	r3, r3, #8
 1128 0014 03F0FF08 		and	r8, r3, #255
 1129 0018 002B     		cmp	r3, #0
 1130 001a 52D1     		bne	.L109
 869:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 1131              		.loc 1 869 0
 1132 001c 2C4B     		ldr	r3, .L111+4
 979:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 57


 1133              		.loc 1 979 0
 1134 001e 2D4C     		ldr	r4, .L111+8
 869:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 1135              		.loc 1 869 0
 1136 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1137 0022 02F01F02 		and	r2, r2, #31
 1138 0026 1A70     		strb	r2, [r3]
 948:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 1139              		.loc 1 948 0
 1140 0028 FFF7FEFF 		bl	CyPmHibSlpSaveSet
 1141              	.LVL51:
 979:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1142              		.loc 1 979 0
 1143 002c 2A48     		ldr	r0, .L111+12
 983:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1144              		.loc 1 983 0
 1145 002e 2B49     		ldr	r1, .L111+16
 979:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1146              		.loc 1 979 0
 1147 0030 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 987:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1148              		.loc 1 987 0
 1149 0032 2B4A     		ldr	r2, .L111+20
 979:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1150              		.loc 1 979 0
 1151 0034 2371     		strb	r3, [r4, #4]
 980:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 1152              		.loc 1 980 0
 1153 0036 C6F30713 		ubfx	r3, r6, #4, #8
 1154 003a 0370     		strb	r3, [r0]
 983:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1155              		.loc 1 983 0
 1156 003c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1157 003e 8246     		mov	r10, r0
 1158 0040 6371     		strb	r3, [r4, #5]
 984:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1159              		.loc 1 984 0
 1160 0042 06F00F03 		and	r3, r6, #15
 1161 0046 0B70     		strb	r3, [r1]
 987:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1162              		.loc 1 987 0
 1163 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 988:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1164              		.loc 1 988 0
 1165 004a C6F30036 		ubfx	r6, r6, #12, #1
 987:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1166              		.loc 1 987 0
 1167 004e A371     		strb	r3, [r4, #6]
1004:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 1168              		.loc 1 1004 0
 1169 0050 244B     		ldr	r3, .L111+24
 988:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1170              		.loc 1 988 0
 1171 0052 1670     		strb	r6, [r2]
1004:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 1172              		.loc 1 1004 0
 1173 0054 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 58


 1174 0056 8946     		mov	r9, r1
 1175 0058 16F0070F 		tst	r6, #7
 1176 005c 1646     		mov	r6, r2
 1177 005e 03D1     		bne	.L110
1007:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 1178              		.loc 1 1007 0
 1179 0060 0123     		movs	r3, #1
 1180 0062 84F82D30 		strb	r3, [r4, #45]
 1181 0066 0AE0     		b	.L103
 1182              	.L110:
1012:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 1183              		.loc 1 1012 0
 1184 0068 84F82D80 		strb	r8, [r4, #45]
1015:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 1185              		.loc 1 1015 0
 1186 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1187 006e 02F00702 		and	r2, r2, #7
 1188 0072 84F82C20 		strb	r2, [r4, #44]
1018:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
 1189              		.loc 1 1018 0
 1190 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1191 0078 02F0F802 		and	r2, r2, #248
 1192 007c 1A70     		strb	r2, [r3]
 1193              	.L103:
1022:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_S
 1194              		.loc 1 1022 0
 1195 007e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1196 0080 03F0F803 		and	r3, r3, #248
 1197 0084 43F00303 		orr	r3, r3, #3
 1198 0088 2B70     		strb	r3, [r5]
1025:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 1199              		.loc 1 1025 0
 1200 008a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
1028:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1201              		.loc 1 1028 0
 1202              	@ 1028 ".\Generated_Source\PSoC5\cyPm.c" 1
 1203 008c 00BF     		NOP
 1204              	
 1205              	@ 0 "" 2
1029:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1206              		.loc 1 1029 0
 1207              	@ 1029 ".\Generated_Source\PSoC5\cyPm.c" 1
 1208 008e 00BF     		NOP
 1209              	
 1210              	@ 0 "" 2
1032:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1211              		.loc 1 1032 0
 1212              	@ 1032 ".\Generated_Source\PSoC5\cyPm.c" 1
 1213 0090 30BF     		WFI 
 1214              	
 1215              	@ 0 "" 2
1037:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
 1216              		.loc 1 1037 0
 1217              		.thumb
 1218 0092 94F82D30 		ldrb	r3, [r4, #45]	@ zero_extendqisi2
 1219 0096 012B     		cmp	r3, #1
 1220 0098 08D0     		beq	.L104
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 59


1039:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
 1221              		.loc 1 1039 0
 1222 009a 124B     		ldr	r3, .L111+24
 1223 009c 0D49     		ldr	r1, .L111+8
 1224 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1225 00a0 91F82C10 		ldrb	r1, [r1, #44]	@ zero_extendqisi2
 1226 00a4 02F0F802 		and	r2, r2, #248
 1227 00a8 0A43     		orrs	r2, r2, r1
 1228 00aa 1A70     		strb	r2, [r3]
 1229              	.L104:
1057:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
 1230              		.loc 1 1057 0
 1231 00ac FFF7FEFF 		bl	CyPmHibSlpRestore
 1232              	.LVL52:
1079:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1233              		.loc 1 1079 0
 1234 00b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
1084:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1235              		.loc 1 1084 0
 1236 00b2 3846     		mov	r0, r7
1079:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1237              		.loc 1 1079 0
 1238 00b4 8AF80030 		strb	r3, [r10]
1080:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1239              		.loc 1 1080 0
 1240 00b8 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 1241 00ba 89F80030 		strb	r3, [r9]
1081:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1242              		.loc 1 1081 0
 1243 00be A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1244 00c0 3370     		strb	r3, [r6]
 1245              	.LVL53:
 1246              	.L109:
1085:.\Generated_Source\PSoC5/cyPm.c **** }
 1247              		.loc 1 1085 0
 1248 00c2 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
1084:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1249              		.loc 1 1084 0
 1250 00c6 FFF7FEBF 		b	CyExitCriticalSection
 1251              	.LVL54:
 1252              	.L112:
 1253 00ca 00BF     		.align	2
 1254              	.L111:
 1255 00cc 93430040 		.word	1073759123
 1256 00d0 83460040 		.word	1073759875
 1257 00d4 00000000 		.word	.LANCHOR0
 1258 00d8 98430040 		.word	1073759128
 1259 00dc 99430040 		.word	1073759129
 1260 00e0 9A430040 		.word	1073759130
 1261 00e4 00420040 		.word	1073758720
 1262              		.cfi_endproc
 1263              	.LFE3:
 1264              		.size	CyPmSleep, .-CyPmSleep
 1265              		.section	.text.CyPmHibernateEx,"ax",%progbits
 1266              		.align	1
 1267              		.global	CyPmHibernateEx
 1268              		.thumb
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 60


 1269              		.thumb_func
 1270              		.type	CyPmHibernateEx, %function
 1271              	CyPmHibernateEx:
 1272              	.LFB5:
1197:.\Generated_Source\PSoC5/cyPm.c **** {
 1273              		.loc 1 1197 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 8
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              	.LVL55:
 1278 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1279              		.cfi_def_cfa_offset 48
 1280              		.cfi_offset 0, -48
 1281              		.cfi_offset 1, -44
 1282              		.cfi_offset 2, -40
 1283              		.cfi_offset 4, -36
 1284              		.cfi_offset 5, -32
 1285              		.cfi_offset 6, -28
 1286              		.cfi_offset 7, -24
 1287              		.cfi_offset 8, -20
 1288              		.cfi_offset 9, -16
 1289              		.cfi_offset 10, -12
 1290              		.cfi_offset 11, -8
 1291              		.cfi_offset 14, -4
1197:.\Generated_Source\PSoC5/cyPm.c **** {
 1292              		.loc 1 1197 0
 1293 0004 0746     		mov	r7, r0
1201:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1294              		.loc 1 1201 0
 1295 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1296              	.LVL56:
1209:.\Generated_Source\PSoC5/cyPm.c ****         if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1297              		.loc 1 1209 0
 1298 000a 874D     		ldr	r5, .L143
1201:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1299              		.loc 1 1201 0
 1300 000c 0190     		str	r0, [sp, #4]
 1301              	.LVL57:
1209:.\Generated_Source\PSoC5/cyPm.c ****         if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1302              		.loc 1 1209 0
 1303 000e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1304 0010 1907     		lsls	r1, r3, #28
 1305 0012 00F10381 		bmi	.L141
1212:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 1306              		.loc 1 1212 0
 1307 0016 854C     		ldr	r4, .L143+4
 1308 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1309 001a 03F01F03 		and	r3, r3, #31
 1310 001e 2370     		strb	r3, [r4]
 1311              	.LVL58:
 1312              	.LBB10:
 1313              	.LBB11:
1374:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
 1314              		.loc 1 1374 0
 1315 0020 834B     		ldr	r3, .L143+8
 1316 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1317 0024 5207     		lsls	r2, r2, #29
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 61


 1318 0026 03D5     		bpl	.L115
1388:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_CR1_REG &= ((uint8)(~CY_PM_PWRSYS_CR1_I2CREG_BACKUP));
 1319              		.loc 1 1388 0
 1320 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1321 002a 02F0FB02 		and	r2, r2, #251
 1322 002e 1A70     		strb	r2, [r3]
 1323              	.L115:
1393:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
 1324              		.loc 1 1393 0
 1325 0030 0120     		movs	r0, #1
 1326 0032 FFF7FEFF 		bl	CyILO_SetPowerMode
 1327              	.LVL59:
 1328 0036 7F4B     		ldr	r3, .L143+12
1396:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
 1329              		.loc 1 1396 0
 1330 0038 7F4A     		ldr	r2, .L143+16
1393:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
 1331              		.loc 1 1393 0
 1332 003a 1870     		strb	r0, [r3]
1396:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
 1333              		.loc 1 1396 0
 1334 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1335 003e 1E46     		mov	r6, r3
1397:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
 1336              		.loc 1 1397 0
 1337 0040 C1F34001 		ubfx	r1, r1, #1, #1
1396:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
 1338              		.loc 1 1396 0
 1339 0044 5970     		strb	r1, [r3, #1]
1400:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
 1340              		.loc 1 1400 0
 1341 0046 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1401:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
 1342              		.loc 1 1401 0
 1343 0048 C2F38002 		ubfx	r2, r2, #2, #1
1400:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
 1344              		.loc 1 1400 0
 1345 004c 9A70     		strb	r2, [r3, #2]
1405:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
 1346              		.loc 1 1405 0
 1347 004e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1348 0050 764A     		ldr	r2, .L143+4
 1349 0052 01F01001 		and	r1, r1, #16
 1350 0056 01F0FF00 		and	r0, r1, #255
 1351 005a 29B9     		cbnz	r1, .L116
1408:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_DISABLED;
 1352              		.loc 1 1408 0
 1353 005c D870     		strb	r0, [r3, #3]
1409:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
 1354              		.loc 1 1409 0
 1355 005e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1356 0060 41F01001 		orr	r1, r1, #16
 1357 0064 1170     		strb	r1, [r2]
 1358 0066 01E0     		b	.L117
 1359              	.L116:
1413:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_ENABLED;
 1360              		.loc 1 1413 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 62


 1361 0068 0122     		movs	r2, #1
 1362 006a DA70     		strb	r2, [r3, #3]
 1363              	.L117:
 1364              	.LBB12:
 1365              	.LBB13:
1855:.\Generated_Source\PSoC5/cyPm.c ****     }
1856:.\Generated_Source\PSoC5/cyPm.c **** }
1857:.\Generated_Source\PSoC5/cyPm.c **** 
1858:.\Generated_Source\PSoC5/cyPm.c **** 
1859:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1860:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHviLviSaveDisable
1861:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1862:.\Generated_Source\PSoC5/cyPm.c **** *
1863:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1864:.\Generated_Source\PSoC5/cyPm.c **** *  Saves analog and digital LVI and HVI configuration and disables them.
1865:.\Generated_Source\PSoC5/cyPm.c **** *
1866:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1867:.\Generated_Source\PSoC5/cyPm.c **** *  None
1868:.\Generated_Source\PSoC5/cyPm.c **** *
1869:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1870:.\Generated_Source\PSoC5/cyPm.c **** *  None
1871:.\Generated_Source\PSoC5/cyPm.c **** *
1872:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1873:.\Generated_Source\PSoC5/cyPm.c **** *  No
1874:.\Generated_Source\PSoC5/cyPm.c **** *
1875:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1876:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviSaveDisable(void) 
1877:.\Generated_Source\PSoC5/cyPm.c **** {
1878:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVID_EN))
 1366              		.loc 1 1878 0
 1367 006c 734A     		ldr	r2, .L143+20
 1368 006e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1369 0070 9046     		mov	r8, r2
 1370 0072 11F00101 		ands	r1, r1, #1
 1371 0076 11D0     		beq	.L118
1879:.\Generated_Source\PSoC5/cyPm.c ****     {
1880:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidEn = CY_PM_ENABLED;
 1372              		.loc 1 1880 0
 1373 0078 0122     		movs	r2, #1
 1374 007a 86F82520 		strb	r2, [r6, #37]
1881:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidTrip = CY_VD_LVI_TRIP_REG & CY_VD_LVI_TRIP_LVID_MASK;
 1375              		.loc 1 1881 0
 1376 007e 704A     		ldr	r2, .L143+24
 1377 0080 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1378 0082 02F00F02 		and	r2, r2, #15
 1379 0086 86F82620 		strb	r2, [r6, #38]
1882:.\Generated_Source\PSoC5/cyPm.c **** 
1883:.\Generated_Source\PSoC5/cyPm.c ****         /* Save state of reset device at specified Vddd threshold */
1884:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESD_EN)) ? \
 1380              		.loc 1 1884 0
 1381 008a 6E4A     		ldr	r2, .L143+28
 1382 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1885:.\Generated_Source\PSoC5/cyPm.c ****                              CY_PM_DISABLED : CY_PM_ENABLED;
 1383              		.loc 1 1885 0
 1384 008e C2F38012 		ubfx	r2, r2, #6, #1
1884:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESD_EN)) ? \
 1385              		.loc 1 1884 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 63


 1386 0092 86F82A20 		strb	r2, [r6, #42]
1886:.\Generated_Source\PSoC5/cyPm.c **** 
1887:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvDigitDisable();
 1387              		.loc 1 1887 0
 1388 0096 FFF7FEFF 		bl	CyVdLvDigitDisable
 1389              	.LVL60:
 1390 009a 01E0     		b	.L119
 1391              	.L118:
1888:.\Generated_Source\PSoC5/cyPm.c ****     }
1889:.\Generated_Source\PSoC5/cyPm.c ****     else
1890:.\Generated_Source\PSoC5/cyPm.c ****     {
1891:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidEn = CY_PM_DISABLED;
 1392              		.loc 1 1891 0
 1393 009c 86F82510 		strb	r1, [r6, #37]
 1394              	.L119:
1892:.\Generated_Source\PSoC5/cyPm.c ****     }
1893:.\Generated_Source\PSoC5/cyPm.c **** 
1894:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVIA_EN))
 1395              		.loc 1 1894 0
 1396 00a0 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 1397 00a4 02F00202 		and	r2, r2, #2
 1398 00a8 02F0FF01 		and	r1, r2, #255
 1399 00ac 7AB1     		cbz	r2, .L120
1895:.\Generated_Source\PSoC5/cyPm.c ****     {
1896:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaEn = CY_PM_ENABLED;
 1400              		.loc 1 1896 0
 1401 00ae 0122     		movs	r2, #1
 1402 00b0 86F82720 		strb	r2, [r6, #39]
1897:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaTrip = CY_VD_LVI_TRIP_REG >> 4u;
 1403              		.loc 1 1897 0
 1404 00b4 624A     		ldr	r2, .L143+24
 1405 00b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1406 00b8 1209     		lsrs	r2, r2, #4
 1407 00ba 86F82820 		strb	r2, [r6, #40]
1898:.\Generated_Source\PSoC5/cyPm.c **** 
1899:.\Generated_Source\PSoC5/cyPm.c ****         /* Save state of reset device at specified Vdda threshold */
1900:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESA_EN)) ? \
 1408              		.loc 1 1900 0
 1409 00be 614A     		ldr	r2, .L143+28
 1410 00c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1901:.\Generated_Source\PSoC5/cyPm.c ****                              CY_PM_DISABLED : CY_PM_ENABLED;
 1411              		.loc 1 1901 0
 1412 00c2 D209     		lsrs	r2, r2, #7
1900:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESA_EN)) ? \
 1413              		.loc 1 1900 0
 1414 00c4 86F82B20 		strb	r2, [r6, #43]
1902:.\Generated_Source\PSoC5/cyPm.c **** 
1903:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvAnalogDisable();
 1415              		.loc 1 1903 0
 1416 00c8 FFF7FEFF 		bl	CyVdLvAnalogDisable
 1417              	.LVL61:
 1418 00cc 01E0     		b	.L121
 1419              	.L120:
1904:.\Generated_Source\PSoC5/cyPm.c ****     }
1905:.\Generated_Source\PSoC5/cyPm.c ****     else
1906:.\Generated_Source\PSoC5/cyPm.c ****     {
1907:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaEn = CY_PM_DISABLED;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 64


 1420              		.loc 1 1907 0
 1421 00ce 86F82710 		strb	r1, [r6, #39]
 1422              	.L121:
1908:.\Generated_Source\PSoC5/cyPm.c ****     }
1909:.\Generated_Source\PSoC5/cyPm.c **** 
1910:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_HVIA_EN))
 1423              		.loc 1 1910 0
 1424 00d2 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 1425 00d6 02F00402 		and	r2, r2, #4
 1426 00da 02F0FF01 		and	r1, r2, #255
 1427 00de 2AB1     		cbz	r2, .L122
1911:.\Generated_Source\PSoC5/cyPm.c ****     {
1912:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.hviaEn = CY_PM_ENABLED;
 1428              		.loc 1 1912 0
 1429 00e0 0122     		movs	r2, #1
 1430 00e2 86F82920 		strb	r2, [r6, #41]
1913:.\Generated_Source\PSoC5/cyPm.c ****         CyVdHvAnalogDisable();
 1431              		.loc 1 1913 0
 1432 00e6 FFF7FEFF 		bl	CyVdHvAnalogDisable
 1433              	.LVL62:
 1434 00ea 01E0     		b	.L123
 1435              	.L122:
1914:.\Generated_Source\PSoC5/cyPm.c ****     }
1915:.\Generated_Source\PSoC5/cyPm.c ****     else
1916:.\Generated_Source\PSoC5/cyPm.c ****     {
1917:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.hviaEn = CY_PM_DISABLED;
 1436              		.loc 1 1917 0
 1437 00ec 86F82910 		strb	r1, [r6, #41]
 1438              	.L123:
 1439              	.LBE13:
 1440              	.LBE12:
1434:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
 1441              		.loc 1 1434 0
 1442 00f0 DFF860B1 		ldr	fp, .L143+44
1428:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 1443              		.loc 1 1428 0
 1444 00f4 FFF7FEFF 		bl	CyPmHibSlpSaveSet
 1445              	.LVL63:
1434:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
 1446              		.loc 1 1434 0
 1447 00f8 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
1435:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
 1448              		.loc 1 1435 0
 1449 00fc DFF858A1 		ldr	r10, .L143+48
1434:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
 1450              		.loc 1 1434 0
 1451 0100 F271     		strb	r2, [r6, #7]
1435:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
 1452              		.loc 1 1435 0
 1453 0102 9AF80020 		ldrb	r2, [r10]	@ zero_extendqisi2
 1454              	.LBE11:
 1455              	.LBE10:
1230:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1456              		.loc 1 1230 0
 1457 0106 DFF85491 		ldr	r9, .L143+52
 1458              	.LBB16:
 1459              	.LBB14:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 65


1435:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
 1460              		.loc 1 1435 0
 1461 010a 3272     		strb	r2, [r6, #8]
1437:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = CY_PM_PWRSYS_WAKE_TR0;
 1462              		.loc 1 1437 0
 1463 010c FF22     		movs	r2, #255
 1464 010e 8BF80020 		strb	r2, [fp]
1438:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = CY_PM_PWRSYS_WAKE_TR1;
 1465              		.loc 1 1438 0
 1466 0112 B022     		movs	r2, #176
 1467 0114 8AF80020 		strb	r2, [r10]
 1468              	.LBE14:
 1469              	.LBE16:
1230:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1470              		.loc 1 1230 0
 1471 0118 99F80020 		ldrb	r2, [r9]	@ zero_extendqisi2
1234:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1472              		.loc 1 1234 0
 1473 011c 4A4B     		ldr	r3, .L143+32
1230:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1474              		.loc 1 1230 0
 1475 011e 3271     		strb	r2, [r6, #4]
1231:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = ((uint8) (wakeupSource >> 4u) & CY_PM_WAKEUP_PICU);
 1476              		.loc 1 1231 0
 1477 0120 3A09     		lsrs	r2, r7, #4
 1478 0122 02F00402 		and	r2, r2, #4
 1479 0126 D2B2     		uxtb	r2, r2
 1480 0128 89F80020 		strb	r2, [r9]
1234:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1481              		.loc 1 1234 0
 1482 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1235:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1483              		.loc 1 1235 0
 1484 012e 07F00F07 		and	r7, r7, #15
1234:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1485              		.loc 1 1234 0
 1486 0132 7271     		strb	r2, [r6, #5]
1235:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1487              		.loc 1 1235 0
 1488 0134 1F70     		strb	r7, [r3]
1237:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1489              		.loc 1 1237 0
 1490 0136 454F     		ldr	r7, .L143+36
1238:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = 0x00u;
 1491              		.loc 1 1238 0
 1492 0138 0020     		movs	r0, #0
1237:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1493              		.loc 1 1237 0
 1494 013a 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 1495              	.LBB17:
 1496              	.LBB15:
1434:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
 1497              		.loc 1 1434 0
 1498 013c 3D49     		ldr	r1, .L143+12
 1499              	.LBE15:
 1500              	.LBE17:
1237:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 66


 1501              		.loc 1 1237 0
 1502 013e B271     		strb	r2, [r6, #6]
1242:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 1503              		.loc 1 1242 0
 1504 0140 434A     		ldr	r2, .L143+40
1238:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = 0x00u;
 1505              		.loc 1 1238 0
 1506 0142 3870     		strb	r0, [r7]
1242:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 1507              		.loc 1 1242 0
 1508 0144 92F800E0 		ldrb	lr, [r2]	@ zero_extendqisi2
 1509 0148 9846     		mov	r8, r3
 1510 014a 1EF0070F 		tst	lr, #7
 1511 014e 03D1     		bne	.L142
1245:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 1512              		.loc 1 1245 0
 1513 0150 0122     		movs	r2, #1
 1514 0152 81F82D20 		strb	r2, [r1, #45]
 1515 0156 0AE0     		b	.L126
 1516              	.L142:
1250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 1517              		.loc 1 1250 0
 1518 0158 81F82D00 		strb	r0, [r1, #45]
1253:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 1519              		.loc 1 1253 0
 1520 015c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1521 015e 00F00700 		and	r0, r0, #7
 1522 0162 81F82C00 		strb	r0, [r1, #44]
1256:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
 1523              		.loc 1 1256 0
 1524 0166 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1525 0168 01F0F801 		and	r1, r1, #248
 1526 016c 1170     		strb	r1, [r2]
 1527              	.L126:
1261:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = (CY_PM_MODE_CSR_REG & ((uint8) (~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_H
 1528              		.loc 1 1261 0
 1529 016e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1530 0170 02F0F802 		and	r2, r2, #248
 1531 0174 42F00402 		orr	r2, r2, #4
 1532 0178 2A70     		strb	r2, [r5]
1264:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 1533              		.loc 1 1264 0
 1534 017a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
1267:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1535              		.loc 1 1267 0
 1536              	@ 1267 ".\Generated_Source\PSoC5\cyPm.c" 1
 1537 017c 00BF     		NOP
 1538              	
 1539              	@ 0 "" 2
1268:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1540              		.loc 1 1268 0
 1541              	@ 1268 ".\Generated_Source\PSoC5\cyPm.c" 1
 1542 017e 00BF     		NOP
 1543              	
 1544              	@ 0 "" 2
1271:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1545              		.loc 1 1271 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 67


 1546              	@ 1271 ".\Generated_Source\PSoC5\cyPm.c" 1
 1547 0180 30BF     		WFI 
 1548              	
 1549              	@ 0 "" 2
1278:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
 1550              		.loc 1 1278 0
 1551              		.thumb
 1552 0182 96F82D20 		ldrb	r2, [r6, #45]	@ zero_extendqisi2
 1553 0186 012A     		cmp	r2, #1
 1554 0188 08D0     		beq	.L127
1280:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
 1555              		.loc 1 1280 0
 1556 018a 314A     		ldr	r2, .L143+40
 1557 018c 2948     		ldr	r0, .L143+12
 1558 018e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1559 0190 90F82C00 		ldrb	r0, [r0, #44]	@ zero_extendqisi2
 1560 0194 01F0F801 		and	r1, r1, #248
 1561 0198 0143     		orrs	r1, r1, r0
 1562 019a 1170     		strb	r1, [r2]
 1563              	.L127:
 1564              	.LBB18:
 1565              	.LBB19:
 1566              	.LBB20:
 1567              	.LBB21:
1918:.\Generated_Source\PSoC5/cyPm.c ****     }
1919:.\Generated_Source\PSoC5/cyPm.c **** }
1920:.\Generated_Source\PSoC5/cyPm.c **** 
1921:.\Generated_Source\PSoC5/cyPm.c **** 
1922:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1923:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHviLviRestore
1924:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1925:.\Generated_Source\PSoC5/cyPm.c **** *
1926:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1927:.\Generated_Source\PSoC5/cyPm.c **** *  Restores the analog and digital LVI and HVI configuration.
1928:.\Generated_Source\PSoC5/cyPm.c **** *
1929:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1930:.\Generated_Source\PSoC5/cyPm.c **** *  None
1931:.\Generated_Source\PSoC5/cyPm.c **** *
1932:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1933:.\Generated_Source\PSoC5/cyPm.c **** *  None
1934:.\Generated_Source\PSoC5/cyPm.c **** *
1935:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1936:.\Generated_Source\PSoC5/cyPm.c **** *  No
1937:.\Generated_Source\PSoC5/cyPm.c **** *
1938:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1939:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviRestore(void) 
1940:.\Generated_Source\PSoC5/cyPm.c **** {
1941:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore LVI/HVI configuration */
1942:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.lvidEn)
 1568              		.loc 1 1942 0
 1569 019c 96F82510 		ldrb	r1, [r6, #37]	@ zero_extendqisi2
 1570 01a0 244A     		ldr	r2, .L143+12
 1571 01a2 0129     		cmp	r1, #1
 1572 01a4 05D1     		bne	.L128
1943:.\Generated_Source\PSoC5/cyPm.c ****     {
1944:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvDigitEnable(cyPmBackup.lvidRst, cyPmBackup.lvidTrip);
 1573              		.loc 1 1944 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 68


 1574 01a6 92F82A00 		ldrb	r0, [r2, #42]	@ zero_extendqisi2
 1575 01aa 92F82610 		ldrb	r1, [r2, #38]	@ zero_extendqisi2
 1576 01ae FFF7FEFF 		bl	CyVdLvDigitEnable
 1577              	.LVL64:
 1578              	.L128:
1945:.\Generated_Source\PSoC5/cyPm.c ****     }
1946:.\Generated_Source\PSoC5/cyPm.c **** 
1947:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.lviaEn)
 1579              		.loc 1 1947 0
 1580 01b2 96F82710 		ldrb	r1, [r6, #39]	@ zero_extendqisi2
 1581 01b6 1F4A     		ldr	r2, .L143+12
 1582 01b8 0129     		cmp	r1, #1
 1583 01ba 05D1     		bne	.L129
1948:.\Generated_Source\PSoC5/cyPm.c ****     {
1949:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvAnalogEnable(cyPmBackup.lviaRst, cyPmBackup.lviaTrip);
 1584              		.loc 1 1949 0
 1585 01bc 92F82B00 		ldrb	r0, [r2, #43]	@ zero_extendqisi2
 1586 01c0 92F82810 		ldrb	r1, [r2, #40]	@ zero_extendqisi2
 1587 01c4 FFF7FEFF 		bl	CyVdLvAnalogEnable
 1588              	.LVL65:
 1589              	.L129:
1950:.\Generated_Source\PSoC5/cyPm.c ****     }
1951:.\Generated_Source\PSoC5/cyPm.c **** 
1952:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.hviaEn)
 1590              		.loc 1 1952 0
 1591 01c8 96F82920 		ldrb	r2, [r6, #41]	@ zero_extendqisi2
 1592 01cc 012A     		cmp	r2, #1
 1593 01ce 01D1     		bne	.L130
1953:.\Generated_Source\PSoC5/cyPm.c ****     {
1954:.\Generated_Source\PSoC5/cyPm.c ****         CyVdHvAnalogEnable();
 1594              		.loc 1 1954 0
 1595 01d0 FFF7FEFF 		bl	CyVdHvAnalogEnable
 1596              	.LVL66:
 1597              	.L130:
 1598              	.LBE21:
 1599              	.LBE20:
1467:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
 1600              		.loc 1 1467 0
 1601 01d4 FFF7FEFF 		bl	CyPmHibSlpRestore
 1602              	.LVL67:
1470:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
 1603              		.loc 1 1470 0
 1604 01d8 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 1605 01da 012A     		cmp	r2, #1
 1606 01dc 01D1     		bne	.L131
1473:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start1K();
 1607              		.loc 1 1473 0
 1608 01de FFF7FEFF 		bl	CyILO_Start1K
 1609              	.LVL68:
 1610              	.L131:
1477:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
 1611              		.loc 1 1477 0
 1612 01e2 B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
 1613 01e4 012A     		cmp	r2, #1
 1614 01e6 01D1     		bne	.L132
1480:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start100K();
 1615              		.loc 1 1480 0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 69


 1616 01e8 FFF7FEFF 		bl	CyILO_Start100K
 1617              	.LVL69:
 1618              	.L132:
1484:.\Generated_Source\PSoC5/cyPm.c ****     (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
 1619              		.loc 1 1484 0
 1620 01ec 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 1621 01ee FFF7FEFF 		bl	CyILO_SetPowerMode
 1622              	.LVL70:
1487:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
 1623              		.loc 1 1487 0
 1624 01f2 F278     		ldrb	r2, [r6, #3]	@ zero_extendqisi2
 1625 01f4 1AB9     		cbnz	r2, .L133
1490:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= ((uint8)(~CY_PM_PWRSYS_SLP_TR_BYPASS));
 1626              		.loc 1 1490 0
 1627 01f6 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1628 01f8 02F0EF02 		and	r2, r2, #239
 1629 01fc 2270     		strb	r2, [r4]
 1630              	.L133:
1497:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = cyPmBackup.wakeupTrim0;
 1631              		.loc 1 1497 0
 1632 01fe F279     		ldrb	r2, [r6, #7]	@ zero_extendqisi2
 1633 0200 8BF80020 		strb	r2, [fp]
1498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = cyPmBackup.wakeupTrim1;
 1634              		.loc 1 1498 0
 1635 0204 327A     		ldrb	r2, [r6, #8]	@ zero_extendqisi2
 1636 0206 8AF80020 		strb	r2, [r10]
 1637              	.LBE19:
 1638              	.LBE18:
1289:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1639              		.loc 1 1289 0
 1640 020a 3279     		ldrb	r2, [r6, #4]	@ zero_extendqisi2
 1641 020c 89F80020 		strb	r2, [r9]
1290:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1642              		.loc 1 1290 0
 1643 0210 7279     		ldrb	r2, [r6, #5]	@ zero_extendqisi2
 1644 0212 88F80020 		strb	r2, [r8]
1291:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1645              		.loc 1 1291 0
 1646 0216 B379     		ldrb	r3, [r6, #6]	@ zero_extendqisi2
 1647 0218 3B70     		strb	r3, [r7]
1294:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1648              		.loc 1 1294 0
 1649 021a 0198     		ldr	r0, [sp, #4]
 1650              	.L141:
1295:.\Generated_Source\PSoC5/cyPm.c **** }
 1651              		.loc 1 1295 0
 1652 021c 03B0     		add	sp, sp, #12
 1653              		@ sp needed
 1654 021e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
1294:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1655              		.loc 1 1294 0
 1656 0222 FFF7FEBF 		b	CyExitCriticalSection
 1657              	.LVL71:
 1658              	.L144:
 1659 0226 00BF     		.align	2
 1660              	.L143:
 1661 0228 93430040 		.word	1073759123
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 70


 1662 022c 83460040 		.word	1073759875
 1663 0230 31430040 		.word	1073759025
 1664 0234 00000000 		.word	.LANCHOR0
 1665 0238 00430040 		.word	1073758976
 1666 023c F5460040 		.word	1073759989
 1667 0240 F4460040 		.word	1073759988
 1668 0244 F7460040 		.word	1073759991
 1669 0248 99430040 		.word	1073759129
 1670 024c 9A430040 		.word	1073759130
 1671 0250 00420040 		.word	1073758720
 1672 0254 85460040 		.word	1073759877
 1673 0258 86460040 		.word	1073759878
 1674 025c 98430040 		.word	1073759128
 1675              		.cfi_endproc
 1676              	.LFE5:
 1677              		.size	CyPmHibernateEx, .-CyPmHibernateEx
 1678              		.section	.text.CyPmHibernate,"ax",%progbits
 1679              		.align	1
 1680              		.global	CyPmHibernate
 1681              		.thumb
 1682              		.thumb_func
 1683              		.type	CyPmHibernate, %function
 1684              	CyPmHibernate:
 1685              	.LFB4:
1131:.\Generated_Source\PSoC5/cyPm.c **** {
 1686              		.loc 1 1131 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
1132:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibernateEx(CY_PM_HIB_SRC_PICU);
 1691              		.loc 1 1132 0
 1692 0000 4020     		movs	r0, #64
 1693 0002 FFF7FEBF 		b	CyPmHibernateEx
 1694              	.LVL72:
 1695              		.cfi_endproc
 1696              	.LFE4:
 1697              		.size	CyPmHibernate, .-CyPmHibernate
 1698              		.section	.text.CyPmReadStatus,"ax",%progbits
 1699              		.align	1
 1700              		.global	CyPmReadStatus
 1701              		.thumb
 1702              		.thumb_func
 1703              		.type	CyPmReadStatus, %function
 1704              	CyPmReadStatus:
 1705              	.LFB6:
1328:.\Generated_Source\PSoC5/cyPm.c **** {
 1706              		.loc 1 1328 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              	.LVL73:
 1711 0000 38B5     		push	{r3, r4, r5, lr}
 1712              		.cfi_def_cfa_offset 16
 1713              		.cfi_offset 3, -16
 1714              		.cfi_offset 4, -12
 1715              		.cfi_offset 5, -8
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 71


 1716              		.cfi_offset 14, -4
1328:.\Generated_Source\PSoC5/cyPm.c **** {
 1717              		.loc 1 1328 0
 1718 0002 0546     		mov	r5, r0
1334:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1719              		.loc 1 1334 0
 1720 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1721              	.LVL74:
1337:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus |= CY_PM_INT_SR_REG;
 1722              		.loc 1 1337 0
 1723 0008 074B     		ldr	r3, .L147
 1724 000a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1725 000c 074B     		ldr	r3, .L147+4
 1726 000e 93F84220 		ldrb	r2, [r3, #66]	@ zero_extendqisi2
 1727 0012 1443     		orrs	r4, r4, r2
 1728              	.LVL75:
1339:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus &= ((uint8)(~mask));
 1729              		.loc 1 1339 0
 1730 0014 24EA0505 		bic	r5, r4, r5
 1731 0018 83F84250 		strb	r5, [r3, #66]
1342:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1732              		.loc 1 1342 0
 1733 001c FFF7FEFF 		bl	CyExitCriticalSection
 1734              	.LVL76:
1345:.\Generated_Source\PSoC5/cyPm.c **** }
 1735              		.loc 1 1345 0
 1736 0020 04F00700 		and	r0, r4, #7
 1737 0024 38BD     		pop	{r3, r4, r5, pc}
 1738              	.LVL77:
 1739              	.L148:
 1740 0026 00BF     		.align	2
 1741              	.L147:
 1742 0028 90430040 		.word	1073759120
 1743 002c 00000000 		.word	.LANCHOR0
 1744              		.cfi_endproc
 1745              	.LFE6:
 1746              		.size	CyPmReadStatus, .-CyPmReadStatus
 1747              		.section	.text.CyPmCtwSetInterval,"ax",%progbits
 1748              		.align	1
 1749              		.global	CyPmCtwSetInterval
 1750              		.thumb
 1751              		.thumb_func
 1752              		.type	CyPmCtwSetInterval, %function
 1753              	CyPmCtwSetInterval:
 1754              	.LFB9:
1523:.\Generated_Source\PSoC5/cyPm.c **** {
 1755              		.loc 1 1523 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759              	.LVL78:
 1760 0000 38B5     		push	{r3, r4, r5, lr}
 1761              		.cfi_def_cfa_offset 16
 1762              		.cfi_offset 3, -16
 1763              		.cfi_offset 4, -12
 1764              		.cfi_offset 5, -8
 1765              		.cfi_offset 14, -4
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 72


1525:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
 1766              		.loc 1 1525 0
 1767 0002 114C     		ldr	r4, .L153
1523:.\Generated_Source\PSoC5/cyPm.c **** {
 1768              		.loc 1 1523 0
 1769 0004 0546     		mov	r5, r0
1525:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
 1770              		.loc 1 1525 0
 1771 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1772 0008 03F0F703 		and	r3, r3, #247
 1773 000c 2370     		strb	r3, [r4]
1528:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start1K();
 1774              		.loc 1 1528 0
 1775 000e FFF7FEFF 		bl	CyILO_Start1K
 1776              	.LVL79:
1531:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
 1777              		.loc 1 1531 0
 1778 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1779 0014 13F0040F 		tst	r3, #4
 1780 0018 0C4B     		ldr	r3, .L153+4
 1781 001a 0CD0     		beq	.L150
1534:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
 1782              		.loc 1 1534 0
 1783 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1784 001e AA42     		cmp	r2, r5
 1785 0020 11D0     		beq	.L149
1537:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_EN));
 1786              		.loc 1 1537 0
 1787 0022 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1788 0024 02F0FB02 		and	r2, r2, #251
 1789 0028 2270     		strb	r2, [r4]
1538:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
 1790              		.loc 1 1538 0
 1791 002a 1D70     		strb	r5, [r3]
1539:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
 1792              		.loc 1 1539 0
 1793 002c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1794 002e 43F00403 		orr	r3, r3, #4
 1795 0032 2370     		strb	r3, [r4]
 1796 0034 38BD     		pop	{r3, r4, r5, pc}
 1797              	.L150:
1545:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
 1798              		.loc 1 1545 0
 1799 0036 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1800 0038 A942     		cmp	r1, r5
1548:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
 1801              		.loc 1 1548 0
 1802 003a 18BF     		it	ne
 1803 003c 1D70     		strbne	r5, [r3]
1552:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
 1804              		.loc 1 1552 0
 1805 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1806 0040 43F00403 		orr	r3, r3, #4
 1807 0044 2370     		strb	r3, [r4]
 1808              	.L149:
 1809 0046 38BD     		pop	{r3, r4, r5, pc}
 1810              	.L154:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 73


 1811              		.align	2
 1812              	.L153:
 1813 0048 82430040 		.word	1073759106
 1814 004c 81430040 		.word	1073759105
 1815              		.cfi_endproc
 1816              	.LFE9:
 1817              		.size	CyPmCtwSetInterval, .-CyPmCtwSetInterval
 1818              		.section	.text.CyPmOppsSet,"ax",%progbits
 1819              		.align	1
 1820              		.global	CyPmOppsSet
 1821              		.thumb
 1822              		.thumb_func
 1823              		.type	CyPmOppsSet, %function
 1824              	CyPmOppsSet:
 1825              	.LFB10:
1575:.\Generated_Source\PSoC5/cyPm.c **** {
 1826              		.loc 1 1575 0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 0
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
 1830 0000 08B5     		push	{r3, lr}
 1831              		.cfi_def_cfa_offset 8
 1832              		.cfi_offset 3, -8
 1833              		.cfi_offset 14, -4
1577:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
 1834              		.loc 1 1577 0
 1835 0002 084B     		ldr	r3, .L157
 1836 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1837 0006 DB07     		lsls	r3, r3, #31
 1838 0008 01D4     		bmi	.L156
1580:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_32KHZ_Start();
 1839              		.loc 1 1580 0
 1840 000a FFF7FEFF 		bl	CyXTAL_32KHZ_Start
 1841              	.LVL80:
 1842              	.L156:
1584:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_1PPS_IE));
 1843              		.loc 1 1584 0
 1844 000e 064B     		ldr	r3, .L157+4
 1845 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1846 0012 02F0DF02 		and	r2, r2, #223
 1847 0016 1A70     		strb	r2, [r3]
1587:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
 1848              		.loc 1 1587 0
 1849 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1850 001a 42F01002 		orr	r2, r2, #16
 1851 001e 1A70     		strb	r2, [r3]
 1852 0020 08BD     		pop	{r3, pc}
 1853              	.L158:
 1854 0022 00BF     		.align	2
 1855              	.L157:
 1856 0024 08430040 		.word	1073758984
 1857 0028 82430040 		.word	1073759106
 1858              		.cfi_endproc
 1859              	.LFE10:
 1860              		.size	CyPmOppsSet, .-CyPmOppsSet
 1861              		.section	.text.CyPmFtwSetInterval,"ax",%progbits
 1862              		.align	1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 74


 1863              		.global	CyPmFtwSetInterval
 1864              		.thumb
 1865              		.thumb_func
 1866              		.type	CyPmFtwSetInterval, %function
 1867              	CyPmFtwSetInterval:
 1868              	.LFB11:
1612:.\Generated_Source\PSoC5/cyPm.c **** {
 1869              		.loc 1 1612 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873              	.LVL81:
 1874 0000 38B5     		push	{r3, r4, r5, lr}
 1875              		.cfi_def_cfa_offset 16
 1876              		.cfi_offset 3, -16
 1877              		.cfi_offset 4, -12
 1878              		.cfi_offset 5, -8
 1879              		.cfi_offset 14, -4
1614:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
 1880              		.loc 1 1614 0
 1881 0002 114C     		ldr	r4, .L163
1612:.\Generated_Source\PSoC5/cyPm.c **** {
 1882              		.loc 1 1612 0
 1883 0004 0546     		mov	r5, r0
1614:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
 1884              		.loc 1 1614 0
 1885 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1886 0008 03F0FD03 		and	r3, r3, #253
 1887 000c 2370     		strb	r3, [r4]
1617:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start100K();
 1888              		.loc 1 1617 0
 1889 000e FFF7FEFF 		bl	CyILO_Start100K
 1890              	.LVL82:
1620:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
 1891              		.loc 1 1620 0
 1892 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1893 0014 13F0010F 		tst	r3, #1
 1894 0018 0C4B     		ldr	r3, .L163+4
 1895 001a 0CD0     		beq	.L160
1623:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
 1896              		.loc 1 1623 0
 1897 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1898 001e AA42     		cmp	r2, r5
 1899 0020 11D0     		beq	.L159
1626:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_EN));
 1900              		.loc 1 1626 0
 1901 0022 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1902 0024 02F0FE02 		and	r2, r2, #254
 1903 0028 2270     		strb	r2, [r4]
1627:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
 1904              		.loc 1 1627 0
 1905 002a 1D70     		strb	r5, [r3]
1628:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
 1906              		.loc 1 1628 0
 1907 002c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1908 002e 43F00103 		orr	r3, r3, #1
 1909 0032 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 75


 1910 0034 38BD     		pop	{r3, r4, r5, pc}
 1911              	.L160:
1634:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
 1912              		.loc 1 1634 0
 1913 0036 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1914 0038 A942     		cmp	r1, r5
1637:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
 1915              		.loc 1 1637 0
 1916 003a 18BF     		it	ne
 1917 003c 1D70     		strbne	r5, [r3]
1641:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
 1918              		.loc 1 1641 0
 1919 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1920 0040 43F00103 		orr	r3, r3, #1
 1921 0044 2370     		strb	r3, [r4]
 1922              	.L159:
 1923 0046 38BD     		pop	{r3, r4, r5, pc}
 1924              	.L164:
 1925              		.align	2
 1926              	.L163:
 1927 0048 82430040 		.word	1073759106
 1928 004c 80430040 		.word	1073759104
 1929              		.cfi_endproc
 1930              	.LFE11:
 1931              		.size	CyPmFtwSetInterval, .-CyPmFtwSetInterval
 1932              		.section	.rodata
 1933              		.set	.LANCHOR1,. + 0
 1934              		.type	cyPmImoFreqReg2Mhz, %object
 1935              		.size	cyPmImoFreqReg2Mhz, 7
 1936              	cyPmImoFreqReg2Mhz:
 1937 0000 0C       		.byte	12
 1938 0001 06       		.byte	6
 1939 0002 18       		.byte	24
 1940 0003 03       		.byte	3
 1941 0004 30       		.byte	48
 1942 0005 3E       		.byte	62
 1943 0006 4A       		.byte	74
 1944              	.LC0:
 1945 0007 02       		.byte	2
 1946 0008 01       		.byte	1
 1947 0009 03       		.byte	3
 1948 000a 00       		.byte	0
 1949 000b 04       		.byte	4
 1950 000c 05       		.byte	5
 1951 000d 06       		.byte	6
 1952              		.bss
 1953              		.align	1
 1954              		.set	.LANCHOR0,. + 0
 1955              		.type	cyPmBackup, %object
 1956              		.size	cyPmBackup, 47
 1957              	cyPmBackup:
 1958 0000 00000000 		.space	47
 1958      00000000 
 1958      00000000 
 1958      00000000 
 1958      00000000 
 1959 002f 00       		.space	1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 76


 1960              		.type	cyPmClockBackup, %object
 1961              		.size	cyPmClockBackup, 18
 1962              	cyPmClockBackup:
 1963 0030 00000000 		.space	18
 1963      00000000 
 1963      00000000 
 1963      00000000 
 1963      0000
 1964              		.type	interruptStatus.4855, %object
 1965              		.size	interruptStatus.4855, 1
 1966              	interruptStatus.4855:
 1967 0042 00       		.space	1
 1968 0043 00       		.text
 1969              	.Letext0:
 1970              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1971              		.file 3 ".\\Generated_Source\\PSoC5\\cyPm.h"
 1972              		.file 4 ".\\Generated_Source\\PSoC5\\CyFlash.h"
 1973              		.file 5 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1974              		.section	.debug_info,"",%progbits
 1975              	.Ldebug_info0:
 1976 0000 9F090000 		.4byte	0x99f
 1977 0004 0400     		.2byte	0x4
 1978 0006 00000000 		.4byte	.Ldebug_abbrev0
 1979 000a 04       		.byte	0x4
 1980 000b 01       		.uleb128 0x1
 1981 000c B8040000 		.4byte	.LASF113
 1982 0010 01       		.byte	0x1
 1983 0011 AE010000 		.4byte	.LASF114
 1984 0015 7F050000 		.4byte	.LASF115
 1985 0019 20000000 		.4byte	.Ldebug_ranges0+0x20
 1986 001d 00000000 		.4byte	0
 1987 0021 00000000 		.4byte	.Ldebug_line0
 1988 0025 02       		.uleb128 0x2
 1989 0026 01       		.byte	0x1
 1990 0027 06       		.byte	0x6
 1991 0028 33010000 		.4byte	.LASF0
 1992 002c 02       		.uleb128 0x2
 1993 002d 01       		.byte	0x1
 1994 002e 08       		.byte	0x8
 1995 002f 55040000 		.4byte	.LASF1
 1996 0033 02       		.uleb128 0x2
 1997 0034 02       		.byte	0x2
 1998 0035 05       		.byte	0x5
 1999 0036 8E040000 		.4byte	.LASF2
 2000 003a 02       		.uleb128 0x2
 2001 003b 02       		.byte	0x2
 2002 003c 07       		.byte	0x7
 2003 003d C1020000 		.4byte	.LASF3
 2004 0041 02       		.uleb128 0x2
 2005 0042 04       		.byte	0x4
 2006 0043 05       		.byte	0x5
 2007 0044 6C010000 		.4byte	.LASF4
 2008 0048 02       		.uleb128 0x2
 2009 0049 04       		.byte	0x4
 2010 004a 07       		.byte	0x7
 2011 004b 32020000 		.4byte	.LASF5
 2012 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 77


 2013 0050 08       		.byte	0x8
 2014 0051 05       		.byte	0x5
 2015 0052 25010000 		.4byte	.LASF6
 2016 0056 02       		.uleb128 0x2
 2017 0057 08       		.byte	0x8
 2018 0058 07       		.byte	0x7
 2019 0059 A2000000 		.4byte	.LASF7
 2020 005d 03       		.uleb128 0x3
 2021 005e 04       		.byte	0x4
 2022 005f 05       		.byte	0x5
 2023 0060 696E7400 		.ascii	"int\000"
 2024 0064 02       		.uleb128 0x2
 2025 0065 04       		.byte	0x4
 2026 0066 07       		.byte	0x7
 2027 0067 04020000 		.4byte	.LASF8
 2028 006b 04       		.uleb128 0x4
 2029 006c 87010000 		.4byte	.LASF9
 2030 0070 02       		.byte	0x2
 2031 0071 B3       		.byte	0xb3
 2032 0072 2C000000 		.4byte	0x2c
 2033 0076 04       		.uleb128 0x4
 2034 0077 14000000 		.4byte	.LASF10
 2035 007b 02       		.byte	0x2
 2036 007c B4       		.byte	0xb4
 2037 007d 3A000000 		.4byte	0x3a
 2038 0081 04       		.uleb128 0x4
 2039 0082 CE010000 		.4byte	.LASF11
 2040 0086 02       		.byte	0x2
 2041 0087 B5       		.byte	0xb5
 2042 0088 48000000 		.4byte	0x48
 2043 008c 02       		.uleb128 0x2
 2044 008d 04       		.byte	0x4
 2045 008e 04       		.byte	0x4
 2046 008f FD030000 		.4byte	.LASF12
 2047 0093 02       		.uleb128 0x2
 2048 0094 08       		.byte	0x8
 2049 0095 04       		.byte	0x4
 2050 0096 A7010000 		.4byte	.LASF13
 2051 009a 02       		.uleb128 0x2
 2052 009b 01       		.byte	0x1
 2053 009c 08       		.byte	0x8
 2054 009d 34050000 		.4byte	.LASF14
 2055 00a1 05       		.uleb128 0x5
 2056 00a2 A2060000 		.4byte	.LASF15
 2057 00a6 02       		.byte	0x2
 2058 00a7 5501     		.2byte	0x155
 2059 00a9 48000000 		.4byte	0x48
 2060 00ad 05       		.uleb128 0x5
 2061 00ae 44040000 		.4byte	.LASF16
 2062 00b2 02       		.byte	0x2
 2063 00b3 5D01     		.2byte	0x15d
 2064 00b5 B9000000 		.4byte	0xb9
 2065 00b9 06       		.uleb128 0x6
 2066 00ba 6B000000 		.4byte	0x6b
 2067 00be 02       		.uleb128 0x2
 2068 00bf 04       		.byte	0x4
 2069 00c0 07       		.byte	0x7
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 78


 2070 00c1 76030000 		.4byte	.LASF17
 2071 00c5 07       		.uleb128 0x7
 2072 00c6 4B020000 		.4byte	.LASF34
 2073 00ca 12       		.byte	0x12
 2074 00cb 03       		.byte	0x3
 2075 00cc F9       		.byte	0xf9
 2076 00cd 91010000 		.4byte	0x191
 2077 00d1 08       		.uleb128 0x8
 2078 00d2 A2030000 		.4byte	.LASF18
 2079 00d6 03       		.byte	0x3
 2080 00d7 FC       		.byte	0xfc
 2081 00d8 6B000000 		.4byte	0x6b
 2082 00dc 00       		.byte	0
 2083 00dd 08       		.uleb128 0x8
 2084 00de A9030000 		.4byte	.LASF19
 2085 00e2 03       		.byte	0x3
 2086 00e3 FD       		.byte	0xfd
 2087 00e4 6B000000 		.4byte	0x6b
 2088 00e8 01       		.byte	0x1
 2089 00e9 08       		.uleb128 0x8
 2090 00ea 51000000 		.4byte	.LASF20
 2091 00ee 03       		.byte	0x3
 2092 00ef FE       		.byte	0xfe
 2093 00f0 6B000000 		.4byte	0x6b
 2094 00f4 02       		.byte	0x2
 2095 00f5 08       		.uleb128 0x8
 2096 00f6 2A020000 		.4byte	.LASF21
 2097 00fa 03       		.byte	0x3
 2098 00fb FF       		.byte	0xff
 2099 00fc 6B000000 		.4byte	0x6b
 2100 0100 03       		.byte	0x3
 2101 0101 09       		.uleb128 0x9
 2102 0102 E2000000 		.4byte	.LASF22
 2103 0106 03       		.byte	0x3
 2104 0107 0001     		.2byte	0x100
 2105 0109 6B000000 		.4byte	0x6b
 2106 010d 04       		.byte	0x4
 2107 010e 09       		.uleb128 0x9
 2108 010f AB060000 		.4byte	.LASF23
 2109 0113 03       		.byte	0x3
 2110 0114 0101     		.2byte	0x101
 2111 0116 6B000000 		.4byte	0x6b
 2112 011a 05       		.byte	0x5
 2113 011b 09       		.uleb128 0x9
 2114 011c F6060000 		.4byte	.LASF24
 2115 0120 03       		.byte	0x3
 2116 0121 0201     		.2byte	0x102
 2117 0123 6B000000 		.4byte	0x6b
 2118 0127 06       		.byte	0x6
 2119 0128 09       		.uleb128 0x9
 2120 0129 F3030000 		.4byte	.LASF25
 2121 012d 03       		.byte	0x3
 2122 012e 0301     		.2byte	0x103
 2123 0130 6B000000 		.4byte	0x6b
 2124 0134 07       		.byte	0x7
 2125 0135 09       		.uleb128 0x9
 2126 0136 44030000 		.4byte	.LASF26
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 79


 2127 013a 03       		.byte	0x3
 2128 013b 0401     		.2byte	0x104
 2129 013d 6B000000 		.4byte	0x6b
 2130 0141 08       		.byte	0x8
 2131 0142 09       		.uleb128 0x9
 2132 0143 66010000 		.4byte	.LASF27
 2133 0147 03       		.byte	0x3
 2134 0148 0501     		.2byte	0x105
 2135 014a 6B000000 		.4byte	0x6b
 2136 014e 09       		.byte	0x9
 2137 014f 09       		.uleb128 0x9
 2138 0150 85000000 		.4byte	.LASF28
 2139 0154 03       		.byte	0x3
 2140 0155 0601     		.2byte	0x106
 2141 0157 6B000000 		.4byte	0x6b
 2142 015b 0A       		.byte	0xa
 2143 015c 09       		.uleb128 0x9
 2144 015d 3F010000 		.4byte	.LASF29
 2145 0161 03       		.byte	0x3
 2146 0162 0701     		.2byte	0x107
 2147 0164 76000000 		.4byte	0x76
 2148 0168 0C       		.byte	0xc
 2149 0169 09       		.uleb128 0x9
 2150 016a 73040000 		.4byte	.LASF30
 2151 016e 03       		.byte	0x3
 2152 016f 0801     		.2byte	0x108
 2153 0171 6B000000 		.4byte	0x6b
 2154 0175 0E       		.byte	0xe
 2155 0176 09       		.uleb128 0x9
 2156 0177 D5010000 		.4byte	.LASF31
 2157 017b 03       		.byte	0x3
 2158 017c 0901     		.2byte	0x109
 2159 017e 6B000000 		.4byte	0x6b
 2160 0182 0F       		.byte	0xf
 2161 0183 09       		.uleb128 0x9
 2162 0184 25060000 		.4byte	.LASF32
 2163 0188 03       		.byte	0x3
 2164 0189 0A01     		.2byte	0x10a
 2165 018b 6B000000 		.4byte	0x6b
 2166 018f 10       		.byte	0x10
 2167 0190 00       		.byte	0
 2168 0191 05       		.uleb128 0x5
 2169 0192 A7020000 		.4byte	.LASF33
 2170 0196 03       		.byte	0x3
 2171 0197 0C01     		.2byte	0x10c
 2172 0199 C5000000 		.4byte	0xc5
 2173 019d 0A       		.uleb128 0xa
 2174 019e 78020000 		.4byte	.LASF35
 2175 01a2 2F       		.byte	0x2f
 2176 01a3 03       		.byte	0x3
 2177 01a4 0F01     		.2byte	0x10f
 2178 01a6 AF020000 		.4byte	0x2af
 2179 01aa 09       		.uleb128 0x9
 2180 01ab 18010000 		.4byte	.LASF36
 2181 01af 03       		.byte	0x3
 2182 01b0 1101     		.2byte	0x111
 2183 01b2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 80


 2184 01b6 00       		.byte	0
 2185 01b7 09       		.uleb128 0x9
 2186 01b8 82040000 		.4byte	.LASF37
 2187 01bc 03       		.byte	0x3
 2188 01bd 1201     		.2byte	0x112
 2189 01bf 6B000000 		.4byte	0x6b
 2190 01c3 01       		.byte	0x1
 2191 01c4 09       		.uleb128 0x9
 2192 01c5 AA040000 		.4byte	.LASF38
 2193 01c9 03       		.byte	0x3
 2194 01ca 1301     		.2byte	0x113
 2195 01cc 6B000000 		.4byte	0x6b
 2196 01d0 02       		.byte	0x2
 2197 01d1 09       		.uleb128 0x9
 2198 01d2 6A030000 		.4byte	.LASF39
 2199 01d6 03       		.byte	0x3
 2200 01d7 1501     		.2byte	0x115
 2201 01d9 6B000000 		.4byte	0x6b
 2202 01dd 03       		.byte	0x3
 2203 01de 09       		.uleb128 0x9
 2204 01df 0A030000 		.4byte	.LASF40
 2205 01e3 03       		.byte	0x3
 2206 01e4 1F01     		.2byte	0x11f
 2207 01e6 6B000000 		.4byte	0x6b
 2208 01ea 04       		.byte	0x4
 2209 01eb 09       		.uleb128 0x9
 2210 01ec 15030000 		.4byte	.LASF41
 2211 01f0 03       		.byte	0x3
 2212 01f1 2001     		.2byte	0x120
 2213 01f3 6B000000 		.4byte	0x6b
 2214 01f7 05       		.byte	0x5
 2215 01f8 09       		.uleb128 0x9
 2216 01f9 20030000 		.4byte	.LASF42
 2217 01fd 03       		.byte	0x3
 2218 01fe 2101     		.2byte	0x121
 2219 0200 6B000000 		.4byte	0x6b
 2220 0204 06       		.byte	0x6
 2221 0205 09       		.uleb128 0x9
 2222 0206 39000000 		.4byte	.LASF43
 2223 020a 03       		.byte	0x3
 2224 020b 2301     		.2byte	0x123
 2225 020d 6B000000 		.4byte	0x6b
 2226 0211 07       		.byte	0x7
 2227 0212 09       		.uleb128 0x9
 2228 0213 45000000 		.4byte	.LASF44
 2229 0217 03       		.byte	0x3
 2230 0218 2401     		.2byte	0x124
 2231 021a 6B000000 		.4byte	0x6b
 2232 021e 08       		.byte	0x8
 2233 021f 09       		.uleb128 0x9
 2234 0220 11020000 		.4byte	.LASF45
 2235 0224 03       		.byte	0x3
 2236 0225 2601     		.2byte	0x126
 2237 0227 AF020000 		.4byte	0x2af
 2238 022b 09       		.byte	0x9
 2239 022c 09       		.uleb128 0x9
 2240 022d 44020000 		.4byte	.LASF46
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 81


 2241 0231 03       		.byte	0x3
 2242 0232 2901     		.2byte	0x129
 2243 0234 6B000000 		.4byte	0x6b
 2244 0238 25       		.byte	0x25
 2245 0239 09       		.uleb128 0x9
 2246 023a ED060000 		.4byte	.LASF47
 2247 023e 03       		.byte	0x3
 2248 023f 2A01     		.2byte	0x12a
 2249 0241 6B000000 		.4byte	0x6b
 2250 0245 26       		.byte	0x26
 2251 0246 09       		.uleb128 0x9
 2252 0247 4C060000 		.4byte	.LASF48
 2253 024b 03       		.byte	0x3
 2254 024c 2B01     		.2byte	0x12b
 2255 024e 6B000000 		.4byte	0x6b
 2256 0252 27       		.byte	0x27
 2257 0253 09       		.uleb128 0x9
 2258 0254 D9000000 		.4byte	.LASF49
 2259 0258 03       		.byte	0x3
 2260 0259 2C01     		.2byte	0x12c
 2261 025b 6B000000 		.4byte	0x6b
 2262 025f 28       		.byte	0x28
 2263 0260 09       		.uleb128 0x9
 2264 0261 FF000000 		.4byte	.LASF50
 2265 0265 03       		.byte	0x3
 2266 0266 2D01     		.2byte	0x12d
 2267 0268 6B000000 		.4byte	0x6b
 2268 026c 29       		.byte	0x29
 2269 026d 09       		.uleb128 0x9
 2270 026e 23040000 		.4byte	.LASF51
 2271 0272 03       		.byte	0x3
 2272 0273 2E01     		.2byte	0x12e
 2273 0275 6B000000 		.4byte	0x6b
 2274 0279 2A       		.byte	0x2a
 2275 027a 09       		.uleb128 0x9
 2276 027b BB060000 		.4byte	.LASF52
 2277 027f 03       		.byte	0x3
 2278 0280 2F01     		.2byte	0x12f
 2279 0282 6B000000 		.4byte	0x6b
 2280 0286 2B       		.byte	0x2b
 2281 0287 09       		.uleb128 0x9
 2282 0288 F9010000 		.4byte	.LASF53
 2283 028c 03       		.byte	0x3
 2284 028d 3101     		.2byte	0x131
 2285 028f 6B000000 		.4byte	0x6b
 2286 0293 2C       		.byte	0x2c
 2287 0294 09       		.uleb128 0x9
 2288 0295 61050000 		.4byte	.LASF54
 2289 0299 03       		.byte	0x3
 2290 029a 3201     		.2byte	0x132
 2291 029c 6B000000 		.4byte	0x6b
 2292 02a0 2D       		.byte	0x2d
 2293 02a1 09       		.uleb128 0x9
 2294 02a2 38030000 		.4byte	.LASF55
 2295 02a6 03       		.byte	0x3
 2296 02a7 3401     		.2byte	0x134
 2297 02a9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 82


 2298 02ad 2E       		.byte	0x2e
 2299 02ae 00       		.byte	0
 2300 02af 0B       		.uleb128 0xb
 2301 02b0 6B000000 		.4byte	0x6b
 2302 02b4 BF020000 		.4byte	0x2bf
 2303 02b8 0C       		.uleb128 0xc
 2304 02b9 BE000000 		.4byte	0xbe
 2305 02bd 1B       		.byte	0x1b
 2306 02be 00       		.byte	0
 2307 02bf 05       		.uleb128 0x5
 2308 02c0 5E000000 		.4byte	.LASF56
 2309 02c4 03       		.byte	0x3
 2310 02c5 3601     		.2byte	0x136
 2311 02c7 9D010000 		.4byte	0x19d
 2312 02cb 0D       		.uleb128 0xd
 2313 02cc 98040000 		.4byte	.LASF57
 2314 02d0 01       		.byte	0x1
 2315 02d1 8406     		.2byte	0x684
 2316 02d3 00000000 		.4byte	.LFB12
 2317 02d7 60010000 		.4byte	.LFE12-.LFB12
 2318 02db 01       		.uleb128 0x1
 2319 02dc 9C       		.byte	0x9c
 2320 02dd 0D       		.uleb128 0xd
 2321 02de 27000000 		.4byte	.LASF58
 2322 02e2 01       		.byte	0x1
 2323 02e3 0707     		.2byte	0x707
 2324 02e5 00000000 		.4byte	.LFB13
 2325 02e9 BC000000 		.4byte	.LFE13-.LFB13
 2326 02ed 01       		.uleb128 0x1
 2327 02ee 9C       		.byte	0x9c
 2328 02ef 0E       		.uleb128 0xe
 2329 02f0 4E030000 		.4byte	.LASF59
 2330 02f4 01       		.byte	0x1
 2331 02f5 54       		.byte	0x54
 2332 02f6 00000000 		.4byte	.LFB0
 2333 02fa E0010000 		.4byte	.LFE0-.LFB0
 2334 02fe 01       		.uleb128 0x1
 2335 02ff 9C       		.byte	0x9c
 2336 0300 C1030000 		.4byte	0x3c1
 2337 0304 0F       		.uleb128 0xf
 2338 0305 3A000000 		.4byte	.LVL0
 2339 0309 2E080000 		.4byte	0x82e
 2340 030d 18030000 		.4byte	0x318
 2341 0311 10       		.uleb128 0x10
 2342 0312 01       		.uleb128 0x1
 2343 0313 50       		.byte	0x50
 2344 0314 02       		.uleb128 0x2
 2345 0315 08       		.byte	0x8
 2346 0316 37       		.byte	0x37
 2347 0317 00       		.byte	0
 2348 0318 11       		.uleb128 0x11
 2349 0319 9A000000 		.4byte	.LVL1
 2350 031d 3F080000 		.4byte	0x83f
 2351 0321 11       		.uleb128 0x11
 2352 0322 AE000000 		.4byte	.LVL2
 2353 0326 50080000 		.4byte	0x850
 2354 032a 0F       		.uleb128 0xf
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 83


 2355 032b BA000000 		.4byte	.LVL3
 2356 032f 57080000 		.4byte	0x857
 2357 0333 3D030000 		.4byte	0x33d
 2358 0337 10       		.uleb128 0x10
 2359 0338 01       		.uleb128 0x1
 2360 0339 50       		.byte	0x50
 2361 033a 01       		.uleb128 0x1
 2362 033b 34       		.byte	0x34
 2363 033c 00       		.byte	0
 2364 033d 11       		.uleb128 0x11
 2365 033e D8000000 		.4byte	.LVL4
 2366 0342 68080000 		.4byte	0x868
 2367 0346 0F       		.uleb128 0xf
 2368 0347 DE000000 		.4byte	.LVL5
 2369 034b 79080000 		.4byte	0x879
 2370 034f 59030000 		.4byte	0x359
 2371 0353 10       		.uleb128 0x10
 2372 0354 01       		.uleb128 0x1
 2373 0355 50       		.byte	0x50
 2374 0356 01       		.uleb128 0x1
 2375 0357 36       		.byte	0x36
 2376 0358 00       		.byte	0
 2377 0359 0F       		.uleb128 0xf
 2378 035a 06010000 		.4byte	.LVL6
 2379 035e 8A080000 		.4byte	0x88a
 2380 0362 6C030000 		.4byte	0x36c
 2381 0366 10       		.uleb128 0x10
 2382 0367 01       		.uleb128 0x1
 2383 0368 50       		.byte	0x50
 2384 0369 01       		.uleb128 0x1
 2385 036a 30       		.byte	0x30
 2386 036b 00       		.byte	0
 2387 036c 11       		.uleb128 0x11
 2388 036d 30010000 		.4byte	.LVL7
 2389 0371 9B080000 		.4byte	0x89b
 2390 0375 0F       		.uleb128 0xf
 2391 0376 42010000 		.4byte	.LVL8
 2392 037a A2080000 		.4byte	0x8a2
 2393 037e 88030000 		.4byte	0x388
 2394 0382 10       		.uleb128 0x10
 2395 0383 01       		.uleb128 0x1
 2396 0384 50       		.byte	0x50
 2397 0385 01       		.uleb128 0x1
 2398 0386 30       		.byte	0x30
 2399 0387 00       		.byte	0
 2400 0388 0F       		.uleb128 0xf
 2401 0389 4E010000 		.4byte	.LVL9
 2402 038d 3F080000 		.4byte	0x83f
 2403 0391 9B030000 		.4byte	0x39b
 2404 0395 10       		.uleb128 0x10
 2405 0396 01       		.uleb128 0x1
 2406 0397 50       		.byte	0x50
 2407 0398 01       		.uleb128 0x1
 2408 0399 30       		.byte	0x30
 2409 039a 00       		.byte	0
 2410 039b 0F       		.uleb128 0xf
 2411 039c 66010000 		.4byte	.LVL10
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 84


 2412 03a0 B3080000 		.4byte	0x8b3
 2413 03a4 AE030000 		.4byte	0x3ae
 2414 03a8 10       		.uleb128 0x10
 2415 03a9 01       		.uleb128 0x1
 2416 03aa 50       		.byte	0x50
 2417 03ab 01       		.uleb128 0x1
 2418 03ac 30       		.byte	0x30
 2419 03ad 00       		.byte	0
 2420 03ae 11       		.uleb128 0x11
 2421 03af 76010000 		.4byte	.LVL11
 2422 03b3 2E080000 		.4byte	0x82e
 2423 03b7 11       		.uleb128 0x11
 2424 03b8 8A010000 		.4byte	.LVL12
 2425 03bc C4080000 		.4byte	0x8c4
 2426 03c0 00       		.byte	0
 2427 03c1 12       		.uleb128 0x12
 2428 03c2 90000000 		.4byte	.LASF60
 2429 03c6 01       		.byte	0x1
 2430 03c7 1E01     		.2byte	0x11e
 2431 03c9 00000000 		.4byte	.LFB1
 2432 03cd 0C020000 		.4byte	.LFE1-.LFB1
 2433 03d1 01       		.uleb128 0x1
 2434 03d2 9C       		.byte	0x9c
 2435 03d3 F2040000 		.4byte	0x4f2
 2436 03d7 13       		.uleb128 0x13
 2437 03d8 45060000 		.4byte	.LASF61
 2438 03dc 01       		.byte	0x1
 2439 03dd 2001     		.2byte	0x120
 2440 03df A1000000 		.4byte	0xa1
 2441 03e3 10       		.byte	0x10
 2442 03e4 14       		.uleb128 0x14
 2443 03e5 6900     		.ascii	"i\000"
 2444 03e7 01       		.byte	0x1
 2445 03e8 2101     		.2byte	0x121
 2446 03ea 76000000 		.4byte	0x76
 2447 03ee 00000000 		.4byte	.LLST0
 2448 03f2 15       		.uleb128 0x15
 2449 03f3 2B030000 		.4byte	.LASF62
 2450 03f7 01       		.byte	0x1
 2451 03f8 2201     		.2byte	0x122
 2452 03fa 76000000 		.4byte	0x76
 2453 03fe 6B000000 		.4byte	.LLST1
 2454 0402 16       		.uleb128 0x16
 2455 0403 8F030000 		.4byte	.LASF63
 2456 0407 01       		.byte	0x1
 2457 0408 2601     		.2byte	0x126
 2458 040a 02050000 		.4byte	0x502
 2459 040e 02       		.uleb128 0x2
 2460 040f 91       		.byte	0x91
 2461 0410 60       		.sleb128 -32
 2462 0411 11       		.uleb128 0x11
 2463 0412 34000000 		.4byte	.LVL14
 2464 0416 CB080000 		.4byte	0x8cb
 2465 041a 0F       		.uleb128 0xf
 2466 041b 4C000000 		.4byte	.LVL15
 2467 041f 2E080000 		.4byte	0x82e
 2468 0423 2E040000 		.4byte	0x42e
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 85


 2469 0427 10       		.uleb128 0x10
 2470 0428 01       		.uleb128 0x1
 2471 0429 50       		.byte	0x50
 2472 042a 02       		.uleb128 0x2
 2473 042b 08       		.byte	0x8
 2474 042c 37       		.byte	0x37
 2475 042d 00       		.byte	0
 2476 042e 0F       		.uleb128 0xf
 2477 042f 5E000000 		.4byte	.LVL16
 2478 0433 DC080000 		.4byte	0x8dc
 2479 0437 41040000 		.4byte	0x441
 2480 043b 10       		.uleb128 0x10
 2481 043c 01       		.uleb128 0x1
 2482 043d 50       		.byte	0x50
 2483 043e 01       		.uleb128 0x1
 2484 043f 30       		.byte	0x30
 2485 0440 00       		.byte	0
 2486 0441 11       		.uleb128 0x11
 2487 0442 78000000 		.4byte	.LVL19
 2488 0446 CB080000 		.4byte	0x8cb
 2489 044a 11       		.uleb128 0x11
 2490 044b 9A000000 		.4byte	.LVL23
 2491 044f A2080000 		.4byte	0x8a2
 2492 0453 11       		.uleb128 0x11
 2493 0454 A2000000 		.4byte	.LVL24
 2494 0458 3F080000 		.4byte	0x83f
 2495 045c 0F       		.uleb128 0xf
 2496 045d C2000000 		.4byte	.LVL25
 2497 0461 57080000 		.4byte	0x857
 2498 0465 6F040000 		.4byte	0x46f
 2499 0469 10       		.uleb128 0x10
 2500 046a 01       		.uleb128 0x1
 2501 046b 50       		.byte	0x50
 2502 046c 01       		.uleb128 0x1
 2503 046d 38       		.byte	0x38
 2504 046e 00       		.byte	0
 2505 046f 11       		.uleb128 0x11
 2506 0470 D4000000 		.4byte	.LVL26
 2507 0474 57080000 		.4byte	0x857
 2508 0478 11       		.uleb128 0x11
 2509 0479 06010000 		.4byte	.LVL27
 2510 047d 68080000 		.4byte	0x868
 2511 0481 11       		.uleb128 0x11
 2512 0482 0E010000 		.4byte	.LVL28
 2513 0486 8A080000 		.4byte	0x88a
 2514 048a 11       		.uleb128 0x11
 2515 048b 1A010000 		.4byte	.LVL29
 2516 048f F1080000 		.4byte	0x8f1
 2517 0493 0F       		.uleb128 0xf
 2518 0494 4E010000 		.4byte	.LVL30
 2519 0498 F8080000 		.4byte	0x8f8
 2520 049c A6040000 		.4byte	0x4a6
 2521 04a0 10       		.uleb128 0x10
 2522 04a1 01       		.uleb128 0x1
 2523 04a2 50       		.byte	0x50
 2524 04a3 01       		.uleb128 0x1
 2525 04a4 30       		.byte	0x30
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 86


 2526 04a5 00       		.byte	0
 2527 04a6 0F       		.uleb128 0xf
 2528 04a7 54010000 		.4byte	.LVL31
 2529 04ab 79080000 		.4byte	0x879
 2530 04af BA040000 		.4byte	0x4ba
 2531 04b3 10       		.uleb128 0x10
 2532 04b4 01       		.uleb128 0x1
 2533 04b5 50       		.byte	0x50
 2534 04b6 02       		.uleb128 0x2
 2535 04b7 08       		.byte	0x8
 2536 04b8 50       		.byte	0x50
 2537 04b9 00       		.byte	0
 2538 04ba 0F       		.uleb128 0xf
 2539 04bb 62010000 		.4byte	.LVL34
 2540 04bf 79080000 		.4byte	0x879
 2541 04c3 CD040000 		.4byte	0x4cd
 2542 04c7 10       		.uleb128 0x10
 2543 04c8 01       		.uleb128 0x1
 2544 04c9 50       		.byte	0x50
 2545 04ca 01       		.uleb128 0x1
 2546 04cb 31       		.byte	0x31
 2547 04cc 00       		.byte	0
 2548 04cd 11       		.uleb128 0x11
 2549 04ce 8C010000 		.4byte	.LVL38
 2550 04d2 A2080000 		.4byte	0x8a2
 2551 04d6 11       		.uleb128 0x11
 2552 04d7 94010000 		.4byte	.LVL39
 2553 04db 3F080000 		.4byte	0x83f
 2554 04df 11       		.uleb128 0x11
 2555 04e0 A6010000 		.4byte	.LVL40
 2556 04e4 0D090000 		.4byte	0x90d
 2557 04e8 11       		.uleb128 0x11
 2558 04e9 BC010000 		.4byte	.LVL44
 2559 04ed B3080000 		.4byte	0x8b3
 2560 04f1 00       		.byte	0
 2561 04f2 0B       		.uleb128 0xb
 2562 04f3 6B000000 		.4byte	0x6b
 2563 04f7 02050000 		.4byte	0x502
 2564 04fb 0C       		.uleb128 0xc
 2565 04fc BE000000 		.4byte	0xbe
 2566 0500 06       		.byte	0x6
 2567 0501 00       		.byte	0
 2568 0502 17       		.uleb128 0x17
 2569 0503 F2040000 		.4byte	0x4f2
 2570 0507 12       		.uleb128 0x12
 2571 0508 2B040000 		.4byte	.LASF64
 2572 050c 01       		.byte	0x1
 2573 050d 8802     		.2byte	0x288
 2574 050f 00000000 		.4byte	.LFB2
 2575 0513 60000000 		.4byte	.LFE2-.LFB2
 2576 0517 01       		.uleb128 0x1
 2577 0518 9C       		.byte	0x9c
 2578 0519 3E050000 		.4byte	0x53e
 2579 051d 18       		.uleb128 0x18
 2580 051e 84060000 		.4byte	.LASF65
 2581 0522 01       		.byte	0x1
 2582 0523 8802     		.2byte	0x288
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 87


 2583 0525 76000000 		.4byte	0x76
 2584 0529 97000000 		.4byte	.LLST2
 2585 052d 18       		.uleb128 0x18
 2586 052e C0030000 		.4byte	.LASF66
 2587 0532 01       		.byte	0x1
 2588 0533 8802     		.2byte	0x288
 2589 0535 76000000 		.4byte	0x76
 2590 0539 B8000000 		.4byte	.LLST3
 2591 053d 00       		.byte	0
 2592 053e 12       		.uleb128 0x12
 2593 053f 19040000 		.4byte	.LASF67
 2594 0543 01       		.byte	0x1
 2595 0544 5403     		.2byte	0x354
 2596 0546 00000000 		.4byte	.LFB3
 2597 054a E8000000 		.4byte	.LFE3-.LFB3
 2598 054e 01       		.uleb128 0x1
 2599 054f 9C       		.byte	0x9c
 2600 0550 A9050000 		.4byte	0x5a9
 2601 0554 18       		.uleb128 0x18
 2602 0555 84060000 		.4byte	.LASF65
 2603 0559 01       		.byte	0x1
 2604 055a 5403     		.2byte	0x354
 2605 055c 6B000000 		.4byte	0x6b
 2606 0560 D9000000 		.4byte	.LLST4
 2607 0564 18       		.uleb128 0x18
 2608 0565 C0030000 		.4byte	.LASF66
 2609 0569 01       		.byte	0x1
 2610 056a 5403     		.2byte	0x354
 2611 056c 76000000 		.4byte	0x76
 2612 0570 FA000000 		.4byte	.LLST5
 2613 0574 15       		.uleb128 0x15
 2614 0575 49010000 		.4byte	.LASF68
 2615 0579 01       		.byte	0x1
 2616 057a 5603     		.2byte	0x356
 2617 057c 6B000000 		.4byte	0x6b
 2618 0580 1B010000 		.4byte	.LLST6
 2619 0584 11       		.uleb128 0x11
 2620 0585 0A000000 		.4byte	.LVL49
 2621 0589 14090000 		.4byte	0x914
 2622 058d 11       		.uleb128 0x11
 2623 058e 2C000000 		.4byte	.LVL51
 2624 0592 CB020000 		.4byte	0x2cb
 2625 0596 11       		.uleb128 0x11
 2626 0597 B0000000 		.4byte	.LVL52
 2627 059b DD020000 		.4byte	0x2dd
 2628 059f 19       		.uleb128 0x19
 2629 05a0 CA000000 		.4byte	.LVL54
 2630 05a4 1F090000 		.4byte	0x91f
 2631 05a8 00       		.byte	0
 2632 05a9 1A       		.uleb128 0x1a
 2633 05aa 75060000 		.4byte	.LASF69
 2634 05ae 01       		.byte	0x1
 2635 05af 5B05     		.2byte	0x55b
 2636 05b1 01       		.byte	0x1
 2637 05b2 1A       		.uleb128 0x1a
 2638 05b3 B9000000 		.4byte	.LASF70
 2639 05b7 01       		.byte	0x1
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 88


 2640 05b8 5407     		.2byte	0x754
 2641 05ba 01       		.byte	0x1
 2642 05bb 1A       		.uleb128 0x1a
 2643 05bc E5010000 		.4byte	.LASF71
 2644 05c0 01       		.byte	0x1
 2645 05c1 B505     		.2byte	0x5b5
 2646 05c3 01       		.byte	0x1
 2647 05c4 1A       		.uleb128 0x1a
 2648 05c5 75010000 		.4byte	.LASF72
 2649 05c9 01       		.byte	0x1
 2650 05ca 9307     		.2byte	0x793
 2651 05cc 01       		.byte	0x1
 2652 05cd 12       		.uleb128 0x12
 2653 05ce 7F030000 		.4byte	.LASF73
 2654 05d2 01       		.byte	0x1
 2655 05d3 AC04     		.2byte	0x4ac
 2656 05d5 00000000 		.4byte	.LFB5
 2657 05d9 60020000 		.4byte	.LFE5-.LFB5
 2658 05dd 01       		.uleb128 0x1
 2659 05de 9C       		.byte	0x9c
 2660 05df E0060000 		.4byte	0x6e0
 2661 05e3 18       		.uleb128 0x18
 2662 05e4 C0030000 		.4byte	.LASF66
 2663 05e8 01       		.byte	0x1
 2664 05e9 AC04     		.2byte	0x4ac
 2665 05eb 76000000 		.4byte	0x76
 2666 05ef 44010000 		.4byte	.LLST7
 2667 05f3 15       		.uleb128 0x15
 2668 05f4 49010000 		.4byte	.LASF68
 2669 05f8 01       		.byte	0x1
 2670 05f9 AE04     		.2byte	0x4ae
 2671 05fb 6B000000 		.4byte	0x6b
 2672 05ff 65010000 		.4byte	.LLST8
 2673 0603 1B       		.uleb128 0x1b
 2674 0604 A9050000 		.4byte	0x5a9
 2675 0608 20000000 		.4byte	.LBB10
 2676 060c 00000000 		.4byte	.Ldebug_ranges0+0
 2677 0610 01       		.byte	0x1
 2678 0611 C804     		.2byte	0x4c8
 2679 0613 64060000 		.4byte	0x664
 2680 0617 1C       		.uleb128 0x1c
 2681 0618 B2050000 		.4byte	0x5b2
 2682 061c 6C000000 		.4byte	.LBB12
 2683 0620 84000000 		.4byte	.LBE12-.LBB12
 2684 0624 01       		.byte	0x1
 2685 0625 9005     		.2byte	0x590
 2686 0627 47060000 		.4byte	0x647
 2687 062b 11       		.uleb128 0x11
 2688 062c 9A000000 		.4byte	.LVL60
 2689 0630 30090000 		.4byte	0x930
 2690 0634 11       		.uleb128 0x11
 2691 0635 CC000000 		.4byte	.LVL61
 2692 0639 37090000 		.4byte	0x937
 2693 063d 11       		.uleb128 0x11
 2694 063e EA000000 		.4byte	.LVL62
 2695 0642 3E090000 		.4byte	0x93e
 2696 0646 00       		.byte	0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 89


 2697 0647 0F       		.uleb128 0xf
 2698 0648 36000000 		.4byte	.LVL59
 2699 064c 45090000 		.4byte	0x945
 2700 0650 5A060000 		.4byte	0x65a
 2701 0654 10       		.uleb128 0x10
 2702 0655 01       		.uleb128 0x1
 2703 0656 50       		.byte	0x50
 2704 0657 01       		.uleb128 0x1
 2705 0658 31       		.byte	0x31
 2706 0659 00       		.byte	0
 2707 065a 11       		.uleb128 0x11
 2708 065b F8000000 		.4byte	.LVL63
 2709 065f CB020000 		.4byte	0x2cb
 2710 0663 00       		.byte	0
 2711 0664 1C       		.uleb128 0x1c
 2712 0665 BB050000 		.4byte	0x5bb
 2713 0669 9C010000 		.4byte	.LBB18
 2714 066d 6E000000 		.4byte	.LBE18-.LBB18
 2715 0671 01       		.byte	0x1
 2716 0672 0605     		.2byte	0x506
 2717 0674 CD060000 		.4byte	0x6cd
 2718 0678 1C       		.uleb128 0x1c
 2719 0679 C4050000 		.4byte	0x5c4
 2720 067d 9C010000 		.4byte	.LBB20
 2721 0681 38000000 		.4byte	.LBE20-.LBB20
 2722 0685 01       		.byte	0x1
 2723 0686 B805     		.2byte	0x5b8
 2724 0688 A8060000 		.4byte	0x6a8
 2725 068c 11       		.uleb128 0x11
 2726 068d B2010000 		.4byte	.LVL64
 2727 0691 5A090000 		.4byte	0x95a
 2728 0695 11       		.uleb128 0x11
 2729 0696 C8010000 		.4byte	.LVL65
 2730 069a 70090000 		.4byte	0x970
 2731 069e 11       		.uleb128 0x11
 2732 069f D4010000 		.4byte	.LVL66
 2733 06a3 86090000 		.4byte	0x986
 2734 06a7 00       		.byte	0
 2735 06a8 11       		.uleb128 0x11
 2736 06a9 D8010000 		.4byte	.LVL67
 2737 06ad DD020000 		.4byte	0x2dd
 2738 06b1 11       		.uleb128 0x11
 2739 06b2 E2010000 		.4byte	.LVL68
 2740 06b6 8D090000 		.4byte	0x98d
 2741 06ba 11       		.uleb128 0x11
 2742 06bb EC010000 		.4byte	.LVL69
 2743 06bf 94090000 		.4byte	0x994
 2744 06c3 11       		.uleb128 0x11
 2745 06c4 F2010000 		.4byte	.LVL70
 2746 06c8 45090000 		.4byte	0x945
 2747 06cc 00       		.byte	0
 2748 06cd 11       		.uleb128 0x11
 2749 06ce 0A000000 		.4byte	.LVL56
 2750 06d2 14090000 		.4byte	0x914
 2751 06d6 19       		.uleb128 0x19
 2752 06d7 26020000 		.4byte	.LVL71
 2753 06db 1F090000 		.4byte	0x91f
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 90


 2754 06df 00       		.byte	0
 2755 06e0 12       		.uleb128 0x12
 2756 06e1 71050000 		.4byte	.LASF74
 2757 06e5 01       		.byte	0x1
 2758 06e6 6A04     		.2byte	0x46a
 2759 06e8 00000000 		.4byte	.LFB4
 2760 06ec 06000000 		.4byte	.LFE4-.LFB4
 2761 06f0 01       		.uleb128 0x1
 2762 06f1 9C       		.byte	0x9c
 2763 06f2 07070000 		.4byte	0x707
 2764 06f6 1D       		.uleb128 0x1d
 2765 06f7 06000000 		.4byte	.LVL72
 2766 06fb CD050000 		.4byte	0x5cd
 2767 06ff 10       		.uleb128 0x10
 2768 0700 01       		.uleb128 0x1
 2769 0701 50       		.byte	0x50
 2770 0702 02       		.uleb128 0x2
 2771 0703 08       		.byte	0x8
 2772 0704 40       		.byte	0x40
 2773 0705 00       		.byte	0
 2774 0706 00       		.byte	0
 2775 0707 1E       		.uleb128 0x1e
 2776 0708 02060000 		.4byte	.LASF116
 2777 070c 01       		.byte	0x1
 2778 070d 2F05     		.2byte	0x52f
 2779 070f 6B000000 		.4byte	0x6b
 2780 0713 00000000 		.4byte	.LFB6
 2781 0717 30000000 		.4byte	.LFE6-.LFB6
 2782 071b 01       		.uleb128 0x1
 2783 071c 9C       		.byte	0x9c
 2784 071d 76070000 		.4byte	0x776
 2785 0721 18       		.uleb128 0x18
 2786 0722 F4010000 		.4byte	.LASF75
 2787 0726 01       		.byte	0x1
 2788 0727 2F05     		.2byte	0x52f
 2789 0729 6B000000 		.4byte	0x6b
 2790 072d 79010000 		.4byte	.LLST9
 2791 0731 16       		.uleb128 0x16
 2792 0732 00070000 		.4byte	.LASF76
 2793 0736 01       		.byte	0x1
 2794 0737 3105     		.2byte	0x531
 2795 0739 6B000000 		.4byte	0x6b
 2796 073d 05       		.uleb128 0x5
 2797 073e 03       		.byte	0x3
 2798 073f 42000000 		.4byte	interruptStatus.4855
 2799 0743 15       		.uleb128 0x15
 2800 0744 49010000 		.4byte	.LASF68
 2801 0748 01       		.byte	0x1
 2802 0749 3205     		.2byte	0x532
 2803 074b 6B000000 		.4byte	0x6b
 2804 074f 9A010000 		.4byte	.LLST10
 2805 0753 15       		.uleb128 0x15
 2806 0754 CF000000 		.4byte	.LASF77
 2807 0758 01       		.byte	0x1
 2808 0759 3305     		.2byte	0x533
 2809 075b 6B000000 		.4byte	0x6b
 2810 075f AD010000 		.4byte	.LLST11
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 91


 2811 0763 11       		.uleb128 0x11
 2812 0764 08000000 		.4byte	.LVL74
 2813 0768 14090000 		.4byte	0x914
 2814 076c 11       		.uleb128 0x11
 2815 076d 20000000 		.4byte	.LVL76
 2816 0771 1F090000 		.4byte	0x91f
 2817 0775 00       		.byte	0
 2818 0776 12       		.uleb128 0x12
 2819 0777 32060000 		.4byte	.LASF78
 2820 077b 01       		.byte	0x1
 2821 077c F205     		.2byte	0x5f2
 2822 077e 00000000 		.4byte	.LFB9
 2823 0782 50000000 		.4byte	.LFE9-.LFB9
 2824 0786 01       		.uleb128 0x1
 2825 0787 9C       		.byte	0x9c
 2826 0788 A6070000 		.4byte	0x7a6
 2827 078c 18       		.uleb128 0x18
 2828 078d D4020000 		.4byte	.LASF79
 2829 0791 01       		.byte	0x1
 2830 0792 F205     		.2byte	0x5f2
 2831 0794 6B000000 		.4byte	0x6b
 2832 0798 C4010000 		.4byte	.LLST12
 2833 079c 11       		.uleb128 0x11
 2834 079d 12000000 		.4byte	.LVL79
 2835 07a1 8D090000 		.4byte	0x98d
 2836 07a5 00       		.byte	0
 2837 07a6 12       		.uleb128 0x12
 2838 07a7 49040000 		.4byte	.LASF80
 2839 07ab 01       		.byte	0x1
 2840 07ac 2606     		.2byte	0x626
 2841 07ae 00000000 		.4byte	.LFB10
 2842 07b2 2C000000 		.4byte	.LFE10-.LFB10
 2843 07b6 01       		.uleb128 0x1
 2844 07b7 9C       		.byte	0x9c
 2845 07b8 C6070000 		.4byte	0x7c6
 2846 07bc 11       		.uleb128 0x11
 2847 07bd 0E000000 		.4byte	.LVL80
 2848 07c1 9B090000 		.4byte	0x99b
 2849 07c5 00       		.byte	0
 2850 07c6 12       		.uleb128 0x12
 2851 07c7 EC000000 		.4byte	.LASF81
 2852 07cb 01       		.byte	0x1
 2853 07cc 4B06     		.2byte	0x64b
 2854 07ce 00000000 		.4byte	.LFB11
 2855 07d2 50000000 		.4byte	.LFE11-.LFB11
 2856 07d6 01       		.uleb128 0x1
 2857 07d7 9C       		.byte	0x9c
 2858 07d8 F6070000 		.4byte	0x7f6
 2859 07dc 18       		.uleb128 0x18
 2860 07dd E3050000 		.4byte	.LASF82
 2861 07e1 01       		.byte	0x1
 2862 07e2 4B06     		.2byte	0x64b
 2863 07e4 6B000000 		.4byte	0x6b
 2864 07e8 E5010000 		.4byte	.LLST13
 2865 07ec 11       		.uleb128 0x11
 2866 07ed 12000000 		.4byte	.LVL82
 2867 07f1 94090000 		.4byte	0x994
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 92


 2868 07f5 00       		.byte	0
 2869 07f6 1F       		.uleb128 0x1f
 2870 07f7 E2060000 		.4byte	.LASF83
 2871 07fb 01       		.byte	0x1
 2872 07fc 23       		.byte	0x23
 2873 07fd BF020000 		.4byte	0x2bf
 2874 0801 05       		.uleb128 0x5
 2875 0802 03       		.byte	0x3
 2876 0803 00000000 		.4byte	cyPmBackup
 2877 0807 1F       		.uleb128 0x1f
 2878 0808 63040000 		.4byte	.LASF84
 2879 080c 01       		.byte	0x1
 2880 080d 24       		.byte	0x24
 2881 080e 91010000 		.4byte	0x191
 2882 0812 05       		.uleb128 0x5
 2883 0813 03       		.byte	0x3
 2884 0814 30000000 		.4byte	cyPmClockBackup
 2885 0818 1F       		.uleb128 0x1f
 2886 0819 EF050000 		.4byte	.LASF85
 2887 081d 01       		.byte	0x1
 2888 081e 27       		.byte	0x27
 2889 081f 29080000 		.4byte	0x829
 2890 0823 05       		.uleb128 0x5
 2891 0824 03       		.byte	0x3
 2892 0825 00000000 		.4byte	cyPmImoFreqReg2Mhz
 2893 0829 17       		.uleb128 0x17
 2894 082a F2040000 		.4byte	0x4f2
 2895 082e 20       		.uleb128 0x20
 2896 082f CD050000 		.4byte	.LASF86
 2897 0833 04       		.byte	0x4
 2898 0834 51       		.byte	0x51
 2899 0835 3F080000 		.4byte	0x83f
 2900 0839 21       		.uleb128 0x21
 2901 083a 6B000000 		.4byte	0x6b
 2902 083e 00       		.byte	0
 2903 083f 20       		.uleb128 0x20
 2904 0840 F4020000 		.4byte	.LASF87
 2905 0844 05       		.byte	0x5
 2906 0845 4E       		.byte	0x4e
 2907 0846 50080000 		.4byte	0x850
 2908 084a 21       		.uleb128 0x21
 2909 084b 6B000000 		.4byte	0x6b
 2910 084f 00       		.byte	0
 2911 0850 22       		.uleb128 0x22
 2912 0851 CD030000 		.4byte	.LASF92
 2913 0855 05       		.byte	0x5
 2914 0856 43       		.byte	0x43
 2915 0857 20       		.uleb128 0x20
 2916 0858 53060000 		.4byte	.LASF88
 2917 085c 05       		.byte	0x5
 2918 085d 49       		.byte	0x49
 2919 085e 68080000 		.4byte	0x868
 2920 0862 21       		.uleb128 0x21
 2921 0863 6B000000 		.4byte	0x6b
 2922 0867 00       		.byte	0
 2923 0868 20       		.uleb128 0x20
 2924 0869 1B000000 		.4byte	.LASF89
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 93


 2925 086d 05       		.byte	0x5
 2926 086e 47       		.byte	0x47
 2927 086f 79080000 		.4byte	0x879
 2928 0873 21       		.uleb128 0x21
 2929 0874 6B000000 		.4byte	0x6b
 2930 0878 00       		.byte	0
 2931 0879 20       		.uleb128 0x20
 2932 087a 9D010000 		.4byte	.LASF90
 2933 087e 05       		.byte	0x5
 2934 087f 78       		.byte	0x78
 2935 0880 8A080000 		.4byte	0x88a
 2936 0884 21       		.uleb128 0x21
 2937 0885 76000000 		.4byte	0x76
 2938 0889 00       		.byte	0
 2939 088a 20       		.uleb128 0x20
 2940 088b 1A020000 		.4byte	.LASF91
 2941 088f 05       		.byte	0x5
 2942 0890 4A       		.byte	0x4a
 2943 0891 9B080000 		.4byte	0x89b
 2944 0895 21       		.uleb128 0x21
 2945 0896 6B000000 		.4byte	0x6b
 2946 089a 00       		.byte	0
 2947 089b 22       		.uleb128 0x22
 2948 089c 39050000 		.4byte	.LASF93
 2949 08a0 05       		.byte	0x5
 2950 08a1 4C       		.byte	0x4c
 2951 08a2 20       		.uleb128 0x20
 2952 08a3 DC030000 		.4byte	.LASF94
 2953 08a7 05       		.byte	0x5
 2954 08a8 4F       		.byte	0x4f
 2955 08a9 B3080000 		.4byte	0x8b3
 2956 08ad 21       		.uleb128 0x21
 2957 08ae 6B000000 		.4byte	0x6b
 2958 08b2 00       		.byte	0
 2959 08b3 20       		.uleb128 0x20
 2960 08b4 11060000 		.4byte	.LASF95
 2961 08b8 05       		.byte	0x5
 2962 08b9 50       		.byte	0x50
 2963 08ba C4080000 		.4byte	0x8c4
 2964 08be 21       		.uleb128 0x21
 2965 08bf 76000000 		.4byte	0x76
 2966 08c3 00       		.byte	0
 2967 08c4 22       		.uleb128 0x22
 2968 08c5 D6060000 		.4byte	.LASF96
 2969 08c9 05       		.byte	0x5
 2970 08ca 67       		.byte	0x67
 2971 08cb 20       		.uleb128 0x20
 2972 08cc 36040000 		.4byte	.LASF97
 2973 08d0 05       		.byte	0x5
 2974 08d1 7A       		.byte	0x7a
 2975 08d2 DC080000 		.4byte	0x8dc
 2976 08d6 21       		.uleb128 0x21
 2977 08d7 81000000 		.4byte	0x81
 2978 08db 00       		.byte	0
 2979 08dc 23       		.uleb128 0x23
 2980 08dd 5D030000 		.4byte	.LASF99
 2981 08e1 05       		.byte	0x5
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 94


 2982 08e2 66       		.byte	0x66
 2983 08e3 A1000000 		.4byte	0xa1
 2984 08e7 F1080000 		.4byte	0x8f1
 2985 08eb 21       		.uleb128 0x21
 2986 08ec 6B000000 		.4byte	0x6b
 2987 08f0 00       		.byte	0
 2988 08f1 22       		.uleb128 0x22
 2989 08f2 61060000 		.4byte	.LASF98
 2990 08f6 05       		.byte	0x5
 2991 08f7 4B       		.byte	0x4b
 2992 08f8 23       		.uleb128 0x23
 2993 08f9 8D010000 		.4byte	.LASF100
 2994 08fd 05       		.byte	0x5
 2995 08fe 42       		.byte	0x42
 2996 08ff A1000000 		.4byte	0xa1
 2997 0903 0D090000 		.4byte	0x90d
 2998 0907 21       		.uleb128 0x21
 2999 0908 6B000000 		.4byte	0x6b
 3000 090c 00       		.byte	0
 3001 090d 22       		.uleb128 0x22
 3002 090e 9C020000 		.4byte	.LASF101
 3003 0912 05       		.byte	0x5
 3004 0913 48       		.byte	0x48
 3005 0914 24       		.uleb128 0x24
 3006 0915 61020000 		.4byte	.LASF117
 3007 0919 05       		.byte	0x5
 3008 091a 7E       		.byte	0x7e
 3009 091b 6B000000 		.4byte	0x6b
 3010 091f 20       		.uleb128 0x20
 3011 0920 03040000 		.4byte	.LASF102
 3012 0924 05       		.byte	0x5
 3013 0925 7F       		.byte	0x7f
 3014 0926 30090000 		.4byte	0x930
 3015 092a 21       		.uleb128 0x21
 3016 092b 6B000000 		.4byte	0x6b
 3017 092f 00       		.byte	0
 3018 0930 22       		.uleb128 0x22
 3019 0931 4E050000 		.4byte	.LASF103
 3020 0935 05       		.byte	0x5
 3021 0936 9D       		.byte	0x9d
 3022 0937 22       		.uleb128 0x22
 3023 0938 00000000 		.4byte	.LASF104
 3024 093c 05       		.byte	0x5
 3025 093d 9E       		.byte	0x9e
 3026 093e 22       		.uleb128 0x22
 3027 093f E0020000 		.4byte	.LASF105
 3028 0943 05       		.byte	0x5
 3029 0944 A0       		.byte	0xa0
 3030 0945 23       		.uleb128 0x23
 3031 0946 89020000 		.4byte	.LASF106
 3032 094a 05       		.byte	0x5
 3033 094b 5F       		.byte	0x5f
 3034 094c 6B000000 		.4byte	0x6b
 3035 0950 5A090000 		.4byte	0x95a
 3036 0954 21       		.uleb128 0x21
 3037 0955 6B000000 		.4byte	0x6b
 3038 0959 00       		.byte	0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 95


 3039 095a 20       		.uleb128 0x20
 3040 095b 06010000 		.4byte	.LASF107
 3041 095f 05       		.byte	0x5
 3042 0960 9B       		.byte	0x9b
 3043 0961 70090000 		.4byte	0x970
 3044 0965 21       		.uleb128 0x21
 3045 0966 6B000000 		.4byte	0x6b
 3046 096a 21       		.uleb128 0x21
 3047 096b 6B000000 		.4byte	0x6b
 3048 096f 00       		.byte	0
 3049 0970 20       		.uleb128 0x20
 3050 0971 8F060000 		.4byte	.LASF108
 3051 0975 05       		.byte	0x5
 3052 0976 9C       		.byte	0x9c
 3053 0977 86090000 		.4byte	0x986
 3054 097b 21       		.uleb128 0x21
 3055 097c 6B000000 		.4byte	0x6b
 3056 0980 21       		.uleb128 0x21
 3057 0981 6B000000 		.4byte	0x6b
 3058 0985 00       		.byte	0
 3059 0986 22       		.uleb128 0x22
 3060 0987 C3060000 		.4byte	.LASF109
 3061 098b 05       		.byte	0x5
 3062 098c 9F       		.byte	0x9f
 3063 098d 22       		.uleb128 0x22
 3064 098e 58010000 		.4byte	.LASF110
 3065 0992 05       		.byte	0x5
 3066 0993 58       		.byte	0x58
 3067 0994 22       		.uleb128 0x22
 3068 0995 B0030000 		.4byte	.LASF111
 3069 0999 05       		.byte	0x5
 3070 099a 5A       		.byte	0x5a
 3071 099b 22       		.uleb128 0x22
 3072 099c 72000000 		.4byte	.LASF112
 3073 09a0 05       		.byte	0x5
 3074 09a1 63       		.byte	0x63
 3075 09a2 00       		.byte	0
 3076              		.section	.debug_abbrev,"",%progbits
 3077              	.Ldebug_abbrev0:
 3078 0000 01       		.uleb128 0x1
 3079 0001 11       		.uleb128 0x11
 3080 0002 01       		.byte	0x1
 3081 0003 25       		.uleb128 0x25
 3082 0004 0E       		.uleb128 0xe
 3083 0005 13       		.uleb128 0x13
 3084 0006 0B       		.uleb128 0xb
 3085 0007 03       		.uleb128 0x3
 3086 0008 0E       		.uleb128 0xe
 3087 0009 1B       		.uleb128 0x1b
 3088 000a 0E       		.uleb128 0xe
 3089 000b 55       		.uleb128 0x55
 3090 000c 17       		.uleb128 0x17
 3091 000d 11       		.uleb128 0x11
 3092 000e 01       		.uleb128 0x1
 3093 000f 10       		.uleb128 0x10
 3094 0010 17       		.uleb128 0x17
 3095 0011 00       		.byte	0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 96


 3096 0012 00       		.byte	0
 3097 0013 02       		.uleb128 0x2
 3098 0014 24       		.uleb128 0x24
 3099 0015 00       		.byte	0
 3100 0016 0B       		.uleb128 0xb
 3101 0017 0B       		.uleb128 0xb
 3102 0018 3E       		.uleb128 0x3e
 3103 0019 0B       		.uleb128 0xb
 3104 001a 03       		.uleb128 0x3
 3105 001b 0E       		.uleb128 0xe
 3106 001c 00       		.byte	0
 3107 001d 00       		.byte	0
 3108 001e 03       		.uleb128 0x3
 3109 001f 24       		.uleb128 0x24
 3110 0020 00       		.byte	0
 3111 0021 0B       		.uleb128 0xb
 3112 0022 0B       		.uleb128 0xb
 3113 0023 3E       		.uleb128 0x3e
 3114 0024 0B       		.uleb128 0xb
 3115 0025 03       		.uleb128 0x3
 3116 0026 08       		.uleb128 0x8
 3117 0027 00       		.byte	0
 3118 0028 00       		.byte	0
 3119 0029 04       		.uleb128 0x4
 3120 002a 16       		.uleb128 0x16
 3121 002b 00       		.byte	0
 3122 002c 03       		.uleb128 0x3
 3123 002d 0E       		.uleb128 0xe
 3124 002e 3A       		.uleb128 0x3a
 3125 002f 0B       		.uleb128 0xb
 3126 0030 3B       		.uleb128 0x3b
 3127 0031 0B       		.uleb128 0xb
 3128 0032 49       		.uleb128 0x49
 3129 0033 13       		.uleb128 0x13
 3130 0034 00       		.byte	0
 3131 0035 00       		.byte	0
 3132 0036 05       		.uleb128 0x5
 3133 0037 16       		.uleb128 0x16
 3134 0038 00       		.byte	0
 3135 0039 03       		.uleb128 0x3
 3136 003a 0E       		.uleb128 0xe
 3137 003b 3A       		.uleb128 0x3a
 3138 003c 0B       		.uleb128 0xb
 3139 003d 3B       		.uleb128 0x3b
 3140 003e 05       		.uleb128 0x5
 3141 003f 49       		.uleb128 0x49
 3142 0040 13       		.uleb128 0x13
 3143 0041 00       		.byte	0
 3144 0042 00       		.byte	0
 3145 0043 06       		.uleb128 0x6
 3146 0044 35       		.uleb128 0x35
 3147 0045 00       		.byte	0
 3148 0046 49       		.uleb128 0x49
 3149 0047 13       		.uleb128 0x13
 3150 0048 00       		.byte	0
 3151 0049 00       		.byte	0
 3152 004a 07       		.uleb128 0x7
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 97


 3153 004b 13       		.uleb128 0x13
 3154 004c 01       		.byte	0x1
 3155 004d 03       		.uleb128 0x3
 3156 004e 0E       		.uleb128 0xe
 3157 004f 0B       		.uleb128 0xb
 3158 0050 0B       		.uleb128 0xb
 3159 0051 3A       		.uleb128 0x3a
 3160 0052 0B       		.uleb128 0xb
 3161 0053 3B       		.uleb128 0x3b
 3162 0054 0B       		.uleb128 0xb
 3163 0055 01       		.uleb128 0x1
 3164 0056 13       		.uleb128 0x13
 3165 0057 00       		.byte	0
 3166 0058 00       		.byte	0
 3167 0059 08       		.uleb128 0x8
 3168 005a 0D       		.uleb128 0xd
 3169 005b 00       		.byte	0
 3170 005c 03       		.uleb128 0x3
 3171 005d 0E       		.uleb128 0xe
 3172 005e 3A       		.uleb128 0x3a
 3173 005f 0B       		.uleb128 0xb
 3174 0060 3B       		.uleb128 0x3b
 3175 0061 0B       		.uleb128 0xb
 3176 0062 49       		.uleb128 0x49
 3177 0063 13       		.uleb128 0x13
 3178 0064 38       		.uleb128 0x38
 3179 0065 0B       		.uleb128 0xb
 3180 0066 00       		.byte	0
 3181 0067 00       		.byte	0
 3182 0068 09       		.uleb128 0x9
 3183 0069 0D       		.uleb128 0xd
 3184 006a 00       		.byte	0
 3185 006b 03       		.uleb128 0x3
 3186 006c 0E       		.uleb128 0xe
 3187 006d 3A       		.uleb128 0x3a
 3188 006e 0B       		.uleb128 0xb
 3189 006f 3B       		.uleb128 0x3b
 3190 0070 05       		.uleb128 0x5
 3191 0071 49       		.uleb128 0x49
 3192 0072 13       		.uleb128 0x13
 3193 0073 38       		.uleb128 0x38
 3194 0074 0B       		.uleb128 0xb
 3195 0075 00       		.byte	0
 3196 0076 00       		.byte	0
 3197 0077 0A       		.uleb128 0xa
 3198 0078 13       		.uleb128 0x13
 3199 0079 01       		.byte	0x1
 3200 007a 03       		.uleb128 0x3
 3201 007b 0E       		.uleb128 0xe
 3202 007c 0B       		.uleb128 0xb
 3203 007d 0B       		.uleb128 0xb
 3204 007e 3A       		.uleb128 0x3a
 3205 007f 0B       		.uleb128 0xb
 3206 0080 3B       		.uleb128 0x3b
 3207 0081 05       		.uleb128 0x5
 3208 0082 01       		.uleb128 0x1
 3209 0083 13       		.uleb128 0x13
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 98


 3210 0084 00       		.byte	0
 3211 0085 00       		.byte	0
 3212 0086 0B       		.uleb128 0xb
 3213 0087 01       		.uleb128 0x1
 3214 0088 01       		.byte	0x1
 3215 0089 49       		.uleb128 0x49
 3216 008a 13       		.uleb128 0x13
 3217 008b 01       		.uleb128 0x1
 3218 008c 13       		.uleb128 0x13
 3219 008d 00       		.byte	0
 3220 008e 00       		.byte	0
 3221 008f 0C       		.uleb128 0xc
 3222 0090 21       		.uleb128 0x21
 3223 0091 00       		.byte	0
 3224 0092 49       		.uleb128 0x49
 3225 0093 13       		.uleb128 0x13
 3226 0094 2F       		.uleb128 0x2f
 3227 0095 0B       		.uleb128 0xb
 3228 0096 00       		.byte	0
 3229 0097 00       		.byte	0
 3230 0098 0D       		.uleb128 0xd
 3231 0099 2E       		.uleb128 0x2e
 3232 009a 00       		.byte	0
 3233 009b 03       		.uleb128 0x3
 3234 009c 0E       		.uleb128 0xe
 3235 009d 3A       		.uleb128 0x3a
 3236 009e 0B       		.uleb128 0xb
 3237 009f 3B       		.uleb128 0x3b
 3238 00a0 05       		.uleb128 0x5
 3239 00a1 27       		.uleb128 0x27
 3240 00a2 19       		.uleb128 0x19
 3241 00a3 11       		.uleb128 0x11
 3242 00a4 01       		.uleb128 0x1
 3243 00a5 12       		.uleb128 0x12
 3244 00a6 06       		.uleb128 0x6
 3245 00a7 40       		.uleb128 0x40
 3246 00a8 18       		.uleb128 0x18
 3247 00a9 9742     		.uleb128 0x2117
 3248 00ab 19       		.uleb128 0x19
 3249 00ac 00       		.byte	0
 3250 00ad 00       		.byte	0
 3251 00ae 0E       		.uleb128 0xe
 3252 00af 2E       		.uleb128 0x2e
 3253 00b0 01       		.byte	0x1
 3254 00b1 3F       		.uleb128 0x3f
 3255 00b2 19       		.uleb128 0x19
 3256 00b3 03       		.uleb128 0x3
 3257 00b4 0E       		.uleb128 0xe
 3258 00b5 3A       		.uleb128 0x3a
 3259 00b6 0B       		.uleb128 0xb
 3260 00b7 3B       		.uleb128 0x3b
 3261 00b8 0B       		.uleb128 0xb
 3262 00b9 27       		.uleb128 0x27
 3263 00ba 19       		.uleb128 0x19
 3264 00bb 11       		.uleb128 0x11
 3265 00bc 01       		.uleb128 0x1
 3266 00bd 12       		.uleb128 0x12
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 99


 3267 00be 06       		.uleb128 0x6
 3268 00bf 40       		.uleb128 0x40
 3269 00c0 18       		.uleb128 0x18
 3270 00c1 9742     		.uleb128 0x2117
 3271 00c3 19       		.uleb128 0x19
 3272 00c4 01       		.uleb128 0x1
 3273 00c5 13       		.uleb128 0x13
 3274 00c6 00       		.byte	0
 3275 00c7 00       		.byte	0
 3276 00c8 0F       		.uleb128 0xf
 3277 00c9 898201   		.uleb128 0x4109
 3278 00cc 01       		.byte	0x1
 3279 00cd 11       		.uleb128 0x11
 3280 00ce 01       		.uleb128 0x1
 3281 00cf 31       		.uleb128 0x31
 3282 00d0 13       		.uleb128 0x13
 3283 00d1 01       		.uleb128 0x1
 3284 00d2 13       		.uleb128 0x13
 3285 00d3 00       		.byte	0
 3286 00d4 00       		.byte	0
 3287 00d5 10       		.uleb128 0x10
 3288 00d6 8A8201   		.uleb128 0x410a
 3289 00d9 00       		.byte	0
 3290 00da 02       		.uleb128 0x2
 3291 00db 18       		.uleb128 0x18
 3292 00dc 9142     		.uleb128 0x2111
 3293 00de 18       		.uleb128 0x18
 3294 00df 00       		.byte	0
 3295 00e0 00       		.byte	0
 3296 00e1 11       		.uleb128 0x11
 3297 00e2 898201   		.uleb128 0x4109
 3298 00e5 00       		.byte	0
 3299 00e6 11       		.uleb128 0x11
 3300 00e7 01       		.uleb128 0x1
 3301 00e8 31       		.uleb128 0x31
 3302 00e9 13       		.uleb128 0x13
 3303 00ea 00       		.byte	0
 3304 00eb 00       		.byte	0
 3305 00ec 12       		.uleb128 0x12
 3306 00ed 2E       		.uleb128 0x2e
 3307 00ee 01       		.byte	0x1
 3308 00ef 3F       		.uleb128 0x3f
 3309 00f0 19       		.uleb128 0x19
 3310 00f1 03       		.uleb128 0x3
 3311 00f2 0E       		.uleb128 0xe
 3312 00f3 3A       		.uleb128 0x3a
 3313 00f4 0B       		.uleb128 0xb
 3314 00f5 3B       		.uleb128 0x3b
 3315 00f6 05       		.uleb128 0x5
 3316 00f7 27       		.uleb128 0x27
 3317 00f8 19       		.uleb128 0x19
 3318 00f9 11       		.uleb128 0x11
 3319 00fa 01       		.uleb128 0x1
 3320 00fb 12       		.uleb128 0x12
 3321 00fc 06       		.uleb128 0x6
 3322 00fd 40       		.uleb128 0x40
 3323 00fe 18       		.uleb128 0x18
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 100


 3324 00ff 9742     		.uleb128 0x2117
 3325 0101 19       		.uleb128 0x19
 3326 0102 01       		.uleb128 0x1
 3327 0103 13       		.uleb128 0x13
 3328 0104 00       		.byte	0
 3329 0105 00       		.byte	0
 3330 0106 13       		.uleb128 0x13
 3331 0107 34       		.uleb128 0x34
 3332 0108 00       		.byte	0
 3333 0109 03       		.uleb128 0x3
 3334 010a 0E       		.uleb128 0xe
 3335 010b 3A       		.uleb128 0x3a
 3336 010c 0B       		.uleb128 0xb
 3337 010d 3B       		.uleb128 0x3b
 3338 010e 05       		.uleb128 0x5
 3339 010f 49       		.uleb128 0x49
 3340 0110 13       		.uleb128 0x13
 3341 0111 1C       		.uleb128 0x1c
 3342 0112 0B       		.uleb128 0xb
 3343 0113 00       		.byte	0
 3344 0114 00       		.byte	0
 3345 0115 14       		.uleb128 0x14
 3346 0116 34       		.uleb128 0x34
 3347 0117 00       		.byte	0
 3348 0118 03       		.uleb128 0x3
 3349 0119 08       		.uleb128 0x8
 3350 011a 3A       		.uleb128 0x3a
 3351 011b 0B       		.uleb128 0xb
 3352 011c 3B       		.uleb128 0x3b
 3353 011d 05       		.uleb128 0x5
 3354 011e 49       		.uleb128 0x49
 3355 011f 13       		.uleb128 0x13
 3356 0120 02       		.uleb128 0x2
 3357 0121 17       		.uleb128 0x17
 3358 0122 00       		.byte	0
 3359 0123 00       		.byte	0
 3360 0124 15       		.uleb128 0x15
 3361 0125 34       		.uleb128 0x34
 3362 0126 00       		.byte	0
 3363 0127 03       		.uleb128 0x3
 3364 0128 0E       		.uleb128 0xe
 3365 0129 3A       		.uleb128 0x3a
 3366 012a 0B       		.uleb128 0xb
 3367 012b 3B       		.uleb128 0x3b
 3368 012c 05       		.uleb128 0x5
 3369 012d 49       		.uleb128 0x49
 3370 012e 13       		.uleb128 0x13
 3371 012f 02       		.uleb128 0x2
 3372 0130 17       		.uleb128 0x17
 3373 0131 00       		.byte	0
 3374 0132 00       		.byte	0
 3375 0133 16       		.uleb128 0x16
 3376 0134 34       		.uleb128 0x34
 3377 0135 00       		.byte	0
 3378 0136 03       		.uleb128 0x3
 3379 0137 0E       		.uleb128 0xe
 3380 0138 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 101


 3381 0139 0B       		.uleb128 0xb
 3382 013a 3B       		.uleb128 0x3b
 3383 013b 05       		.uleb128 0x5
 3384 013c 49       		.uleb128 0x49
 3385 013d 13       		.uleb128 0x13
 3386 013e 02       		.uleb128 0x2
 3387 013f 18       		.uleb128 0x18
 3388 0140 00       		.byte	0
 3389 0141 00       		.byte	0
 3390 0142 17       		.uleb128 0x17
 3391 0143 26       		.uleb128 0x26
 3392 0144 00       		.byte	0
 3393 0145 49       		.uleb128 0x49
 3394 0146 13       		.uleb128 0x13
 3395 0147 00       		.byte	0
 3396 0148 00       		.byte	0
 3397 0149 18       		.uleb128 0x18
 3398 014a 05       		.uleb128 0x5
 3399 014b 00       		.byte	0
 3400 014c 03       		.uleb128 0x3
 3401 014d 0E       		.uleb128 0xe
 3402 014e 3A       		.uleb128 0x3a
 3403 014f 0B       		.uleb128 0xb
 3404 0150 3B       		.uleb128 0x3b
 3405 0151 05       		.uleb128 0x5
 3406 0152 49       		.uleb128 0x49
 3407 0153 13       		.uleb128 0x13
 3408 0154 02       		.uleb128 0x2
 3409 0155 17       		.uleb128 0x17
 3410 0156 00       		.byte	0
 3411 0157 00       		.byte	0
 3412 0158 19       		.uleb128 0x19
 3413 0159 898201   		.uleb128 0x4109
 3414 015c 00       		.byte	0
 3415 015d 11       		.uleb128 0x11
 3416 015e 01       		.uleb128 0x1
 3417 015f 9542     		.uleb128 0x2115
 3418 0161 19       		.uleb128 0x19
 3419 0162 31       		.uleb128 0x31
 3420 0163 13       		.uleb128 0x13
 3421 0164 00       		.byte	0
 3422 0165 00       		.byte	0
 3423 0166 1A       		.uleb128 0x1a
 3424 0167 2E       		.uleb128 0x2e
 3425 0168 00       		.byte	0
 3426 0169 03       		.uleb128 0x3
 3427 016a 0E       		.uleb128 0xe
 3428 016b 3A       		.uleb128 0x3a
 3429 016c 0B       		.uleb128 0xb
 3430 016d 3B       		.uleb128 0x3b
 3431 016e 05       		.uleb128 0x5
 3432 016f 27       		.uleb128 0x27
 3433 0170 19       		.uleb128 0x19
 3434 0171 20       		.uleb128 0x20
 3435 0172 0B       		.uleb128 0xb
 3436 0173 00       		.byte	0
 3437 0174 00       		.byte	0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 102


 3438 0175 1B       		.uleb128 0x1b
 3439 0176 1D       		.uleb128 0x1d
 3440 0177 01       		.byte	0x1
 3441 0178 31       		.uleb128 0x31
 3442 0179 13       		.uleb128 0x13
 3443 017a 52       		.uleb128 0x52
 3444 017b 01       		.uleb128 0x1
 3445 017c 55       		.uleb128 0x55
 3446 017d 17       		.uleb128 0x17
 3447 017e 58       		.uleb128 0x58
 3448 017f 0B       		.uleb128 0xb
 3449 0180 59       		.uleb128 0x59
 3450 0181 05       		.uleb128 0x5
 3451 0182 01       		.uleb128 0x1
 3452 0183 13       		.uleb128 0x13
 3453 0184 00       		.byte	0
 3454 0185 00       		.byte	0
 3455 0186 1C       		.uleb128 0x1c
 3456 0187 1D       		.uleb128 0x1d
 3457 0188 01       		.byte	0x1
 3458 0189 31       		.uleb128 0x31
 3459 018a 13       		.uleb128 0x13
 3460 018b 11       		.uleb128 0x11
 3461 018c 01       		.uleb128 0x1
 3462 018d 12       		.uleb128 0x12
 3463 018e 06       		.uleb128 0x6
 3464 018f 58       		.uleb128 0x58
 3465 0190 0B       		.uleb128 0xb
 3466 0191 59       		.uleb128 0x59
 3467 0192 05       		.uleb128 0x5
 3468 0193 01       		.uleb128 0x1
 3469 0194 13       		.uleb128 0x13
 3470 0195 00       		.byte	0
 3471 0196 00       		.byte	0
 3472 0197 1D       		.uleb128 0x1d
 3473 0198 898201   		.uleb128 0x4109
 3474 019b 01       		.byte	0x1
 3475 019c 11       		.uleb128 0x11
 3476 019d 01       		.uleb128 0x1
 3477 019e 9542     		.uleb128 0x2115
 3478 01a0 19       		.uleb128 0x19
 3479 01a1 31       		.uleb128 0x31
 3480 01a2 13       		.uleb128 0x13
 3481 01a3 00       		.byte	0
 3482 01a4 00       		.byte	0
 3483 01a5 1E       		.uleb128 0x1e
 3484 01a6 2E       		.uleb128 0x2e
 3485 01a7 01       		.byte	0x1
 3486 01a8 3F       		.uleb128 0x3f
 3487 01a9 19       		.uleb128 0x19
 3488 01aa 03       		.uleb128 0x3
 3489 01ab 0E       		.uleb128 0xe
 3490 01ac 3A       		.uleb128 0x3a
 3491 01ad 0B       		.uleb128 0xb
 3492 01ae 3B       		.uleb128 0x3b
 3493 01af 05       		.uleb128 0x5
 3494 01b0 27       		.uleb128 0x27
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 103


 3495 01b1 19       		.uleb128 0x19
 3496 01b2 49       		.uleb128 0x49
 3497 01b3 13       		.uleb128 0x13
 3498 01b4 11       		.uleb128 0x11
 3499 01b5 01       		.uleb128 0x1
 3500 01b6 12       		.uleb128 0x12
 3501 01b7 06       		.uleb128 0x6
 3502 01b8 40       		.uleb128 0x40
 3503 01b9 18       		.uleb128 0x18
 3504 01ba 9742     		.uleb128 0x2117
 3505 01bc 19       		.uleb128 0x19
 3506 01bd 01       		.uleb128 0x1
 3507 01be 13       		.uleb128 0x13
 3508 01bf 00       		.byte	0
 3509 01c0 00       		.byte	0
 3510 01c1 1F       		.uleb128 0x1f
 3511 01c2 34       		.uleb128 0x34
 3512 01c3 00       		.byte	0
 3513 01c4 03       		.uleb128 0x3
 3514 01c5 0E       		.uleb128 0xe
 3515 01c6 3A       		.uleb128 0x3a
 3516 01c7 0B       		.uleb128 0xb
 3517 01c8 3B       		.uleb128 0x3b
 3518 01c9 0B       		.uleb128 0xb
 3519 01ca 49       		.uleb128 0x49
 3520 01cb 13       		.uleb128 0x13
 3521 01cc 02       		.uleb128 0x2
 3522 01cd 18       		.uleb128 0x18
 3523 01ce 00       		.byte	0
 3524 01cf 00       		.byte	0
 3525 01d0 20       		.uleb128 0x20
 3526 01d1 2E       		.uleb128 0x2e
 3527 01d2 01       		.byte	0x1
 3528 01d3 3F       		.uleb128 0x3f
 3529 01d4 19       		.uleb128 0x19
 3530 01d5 03       		.uleb128 0x3
 3531 01d6 0E       		.uleb128 0xe
 3532 01d7 3A       		.uleb128 0x3a
 3533 01d8 0B       		.uleb128 0xb
 3534 01d9 3B       		.uleb128 0x3b
 3535 01da 0B       		.uleb128 0xb
 3536 01db 27       		.uleb128 0x27
 3537 01dc 19       		.uleb128 0x19
 3538 01dd 3C       		.uleb128 0x3c
 3539 01de 19       		.uleb128 0x19
 3540 01df 01       		.uleb128 0x1
 3541 01e0 13       		.uleb128 0x13
 3542 01e1 00       		.byte	0
 3543 01e2 00       		.byte	0
 3544 01e3 21       		.uleb128 0x21
 3545 01e4 05       		.uleb128 0x5
 3546 01e5 00       		.byte	0
 3547 01e6 49       		.uleb128 0x49
 3548 01e7 13       		.uleb128 0x13
 3549 01e8 00       		.byte	0
 3550 01e9 00       		.byte	0
 3551 01ea 22       		.uleb128 0x22
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 104


 3552 01eb 2E       		.uleb128 0x2e
 3553 01ec 00       		.byte	0
 3554 01ed 3F       		.uleb128 0x3f
 3555 01ee 19       		.uleb128 0x19
 3556 01ef 03       		.uleb128 0x3
 3557 01f0 0E       		.uleb128 0xe
 3558 01f1 3A       		.uleb128 0x3a
 3559 01f2 0B       		.uleb128 0xb
 3560 01f3 3B       		.uleb128 0x3b
 3561 01f4 0B       		.uleb128 0xb
 3562 01f5 27       		.uleb128 0x27
 3563 01f6 19       		.uleb128 0x19
 3564 01f7 3C       		.uleb128 0x3c
 3565 01f8 19       		.uleb128 0x19
 3566 01f9 00       		.byte	0
 3567 01fa 00       		.byte	0
 3568 01fb 23       		.uleb128 0x23
 3569 01fc 2E       		.uleb128 0x2e
 3570 01fd 01       		.byte	0x1
 3571 01fe 3F       		.uleb128 0x3f
 3572 01ff 19       		.uleb128 0x19
 3573 0200 03       		.uleb128 0x3
 3574 0201 0E       		.uleb128 0xe
 3575 0202 3A       		.uleb128 0x3a
 3576 0203 0B       		.uleb128 0xb
 3577 0204 3B       		.uleb128 0x3b
 3578 0205 0B       		.uleb128 0xb
 3579 0206 27       		.uleb128 0x27
 3580 0207 19       		.uleb128 0x19
 3581 0208 49       		.uleb128 0x49
 3582 0209 13       		.uleb128 0x13
 3583 020a 3C       		.uleb128 0x3c
 3584 020b 19       		.uleb128 0x19
 3585 020c 01       		.uleb128 0x1
 3586 020d 13       		.uleb128 0x13
 3587 020e 00       		.byte	0
 3588 020f 00       		.byte	0
 3589 0210 24       		.uleb128 0x24
 3590 0211 2E       		.uleb128 0x2e
 3591 0212 00       		.byte	0
 3592 0213 3F       		.uleb128 0x3f
 3593 0214 19       		.uleb128 0x19
 3594 0215 03       		.uleb128 0x3
 3595 0216 0E       		.uleb128 0xe
 3596 0217 3A       		.uleb128 0x3a
 3597 0218 0B       		.uleb128 0xb
 3598 0219 3B       		.uleb128 0x3b
 3599 021a 0B       		.uleb128 0xb
 3600 021b 27       		.uleb128 0x27
 3601 021c 19       		.uleb128 0x19
 3602 021d 49       		.uleb128 0x49
 3603 021e 13       		.uleb128 0x13
 3604 021f 3C       		.uleb128 0x3c
 3605 0220 19       		.uleb128 0x19
 3606 0221 00       		.byte	0
 3607 0222 00       		.byte	0
 3608 0223 00       		.byte	0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 105


 3609              		.section	.debug_loc,"",%progbits
 3610              	.Ldebug_loc0:
 3611              	.LLST0:
 3612 0000 64000000 		.4byte	.LVL17
 3613 0004 66000000 		.4byte	.LVL18
 3614 0008 0200     		.2byte	0x2
 3615 000a 35       		.byte	0x35
 3616 000b 9F       		.byte	0x9f
 3617 000c 66000000 		.4byte	.LVL18
 3618 0010 7E000000 		.4byte	.LVL20
 3619 0014 0100     		.2byte	0x1
 3620 0016 55       		.byte	0x55
 3621 0017 7E000000 		.4byte	.LVL20
 3622 001b 80000000 		.4byte	.LVL21
 3623 001f 0300     		.2byte	0x3
 3624 0021 75       		.byte	0x75
 3625 0022 7F       		.sleb128 -1
 3626 0023 9F       		.byte	0x9f
 3627 0024 80000000 		.4byte	.LVL21
 3628 0028 82000000 		.4byte	.LVL22
 3629 002c 0300     		.2byte	0x3
 3630 002e 75       		.byte	0x75
 3631 002f 00       		.sleb128 0
 3632 0030 9F       		.byte	0x9f
 3633 0031 5A010000 		.4byte	.LVL32
 3634 0035 5C010000 		.4byte	.LVL33
 3635 0039 0300     		.2byte	0x3
 3636 003b 08       		.byte	0x8
 3637 003c AB       		.byte	0xab
 3638 003d 9F       		.byte	0x9f
 3639 003e 5C010000 		.4byte	.LVL33
 3640 0042 70010000 		.4byte	.LVL35
 3641 0046 0100     		.2byte	0x1
 3642 0048 55       		.byte	0x55
 3643 0049 70010000 		.4byte	.LVL35
 3644 004d 72010000 		.4byte	.LVL36
 3645 0051 0300     		.2byte	0x3
 3646 0053 75       		.byte	0x75
 3647 0054 7F       		.sleb128 -1
 3648 0055 9F       		.byte	0x9f
 3649 0056 72010000 		.4byte	.LVL36
 3650 005a 74010000 		.4byte	.LVL37
 3651 005e 0300     		.2byte	0x3
 3652 0060 75       		.byte	0x75
 3653 0061 00       		.sleb128 0
 3654 0062 9F       		.byte	0x9f
 3655 0063 00000000 		.4byte	0
 3656 0067 00000000 		.4byte	0
 3657              	.LLST1:
 3658 006b AC010000 		.4byte	.LVL41
 3659 006f B0010000 		.4byte	.LVL42
 3660 0073 0500     		.2byte	0x5
 3661 0075 72       		.byte	0x72
 3662 0076 00       		.sleb128 0
 3663 0077 38       		.byte	0x38
 3664 0078 24       		.byte	0x24
 3665 0079 9F       		.byte	0x9f
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 106


 3666 007a B0010000 		.4byte	.LVL42
 3667 007e B4010000 		.4byte	.LVL43
 3668 0082 0B00     		.2byte	0xb
 3669 0084 72       		.byte	0x72
 3670 0085 00       		.sleb128 0
 3671 0086 38       		.byte	0x38
 3672 0087 24       		.byte	0x24
 3673 0088 73       		.byte	0x73
 3674 0089 00       		.sleb128 0
 3675 008a 08       		.byte	0x8
 3676 008b FF       		.byte	0xff
 3677 008c 1A       		.byte	0x1a
 3678 008d 21       		.byte	0x21
 3679 008e 9F       		.byte	0x9f
 3680 008f 00000000 		.4byte	0
 3681 0093 00000000 		.4byte	0
 3682              	.LLST2:
 3683 0097 00000000 		.4byte	.LVL45
 3684 009b 0A000000 		.4byte	.LVL46
 3685 009f 0100     		.2byte	0x1
 3686 00a1 50       		.byte	0x50
 3687 00a2 0A000000 		.4byte	.LVL46
 3688 00a6 60000000 		.4byte	.LFE2
 3689 00aa 0400     		.2byte	0x4
 3690 00ac F3       		.byte	0xf3
 3691 00ad 01       		.uleb128 0x1
 3692 00ae 50       		.byte	0x50
 3693 00af 9F       		.byte	0x9f
 3694 00b0 00000000 		.4byte	0
 3695 00b4 00000000 		.4byte	0
 3696              	.LLST3:
 3697 00b8 00000000 		.4byte	.LVL45
 3698 00bc 22000000 		.4byte	.LVL47
 3699 00c0 0100     		.2byte	0x1
 3700 00c2 51       		.byte	0x51
 3701 00c3 22000000 		.4byte	.LVL47
 3702 00c7 60000000 		.4byte	.LFE2
 3703 00cb 0400     		.2byte	0x4
 3704 00cd F3       		.byte	0xf3
 3705 00ce 01       		.uleb128 0x1
 3706 00cf 51       		.byte	0x51
 3707 00d0 9F       		.byte	0x9f
 3708 00d1 00000000 		.4byte	0
 3709 00d5 00000000 		.4byte	0
 3710              	.LLST4:
 3711 00d9 00000000 		.4byte	.LVL48
 3712 00dd 09000000 		.4byte	.LVL49-1
 3713 00e1 0100     		.2byte	0x1
 3714 00e3 50       		.byte	0x50
 3715 00e4 09000000 		.4byte	.LVL49-1
 3716 00e8 E8000000 		.4byte	.LFE3
 3717 00ec 0400     		.2byte	0x4
 3718 00ee F3       		.byte	0xf3
 3719 00ef 01       		.uleb128 0x1
 3720 00f0 50       		.byte	0x50
 3721 00f1 9F       		.byte	0x9f
 3722 00f2 00000000 		.4byte	0
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 107


 3723 00f6 00000000 		.4byte	0
 3724              	.LLST5:
 3725 00fa 00000000 		.4byte	.LVL48
 3726 00fe 09000000 		.4byte	.LVL49-1
 3727 0102 0100     		.2byte	0x1
 3728 0104 51       		.byte	0x51
 3729 0105 09000000 		.4byte	.LVL49-1
 3730 0109 E8000000 		.4byte	.LFE3
 3731 010d 0400     		.2byte	0x4
 3732 010f F3       		.byte	0xf3
 3733 0110 01       		.uleb128 0x1
 3734 0111 51       		.byte	0x51
 3735 0112 9F       		.byte	0x9f
 3736 0113 00000000 		.4byte	0
 3737 0117 00000000 		.4byte	0
 3738              	.LLST6:
 3739 011b 0E000000 		.4byte	.LVL50
 3740 011f 2B000000 		.4byte	.LVL51-1
 3741 0123 0100     		.2byte	0x1
 3742 0125 50       		.byte	0x50
 3743 0126 2B000000 		.4byte	.LVL51-1
 3744 012a C2000000 		.4byte	.LVL53
 3745 012e 0100     		.2byte	0x1
 3746 0130 57       		.byte	0x57
 3747 0131 C2000000 		.4byte	.LVL53
 3748 0135 C9000000 		.4byte	.LVL54-1
 3749 0139 0100     		.2byte	0x1
 3750 013b 50       		.byte	0x50
 3751 013c 00000000 		.4byte	0
 3752 0140 00000000 		.4byte	0
 3753              	.LLST7:
 3754 0144 00000000 		.4byte	.LVL55
 3755 0148 09000000 		.4byte	.LVL56-1
 3756 014c 0100     		.2byte	0x1
 3757 014e 50       		.byte	0x50
 3758 014f 09000000 		.4byte	.LVL56-1
 3759 0153 60020000 		.4byte	.LFE5
 3760 0157 0400     		.2byte	0x4
 3761 0159 F3       		.byte	0xf3
 3762 015a 01       		.uleb128 0x1
 3763 015b 50       		.byte	0x50
 3764 015c 9F       		.byte	0x9f
 3765 015d 00000000 		.4byte	0
 3766 0161 00000000 		.4byte	0
 3767              	.LLST8:
 3768 0165 0E000000 		.4byte	.LVL57
 3769 0169 20000000 		.4byte	.LVL58
 3770 016d 0200     		.2byte	0x2
 3771 016f 7D       		.byte	0x7d
 3772 0170 04       		.sleb128 4
 3773 0171 00000000 		.4byte	0
 3774 0175 00000000 		.4byte	0
 3775              	.LLST9:
 3776 0179 00000000 		.4byte	.LVL73
 3777 017d 07000000 		.4byte	.LVL74-1
 3778 0181 0100     		.2byte	0x1
 3779 0183 50       		.byte	0x50
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 108


 3780 0184 07000000 		.4byte	.LVL74-1
 3781 0188 30000000 		.4byte	.LFE6
 3782 018c 0400     		.2byte	0x4
 3783 018e F3       		.byte	0xf3
 3784 018f 01       		.uleb128 0x1
 3785 0190 50       		.byte	0x50
 3786 0191 9F       		.byte	0x9f
 3787 0192 00000000 		.4byte	0
 3788 0196 00000000 		.4byte	0
 3789              	.LLST10:
 3790 019a 08000000 		.4byte	.LVL74
 3791 019e 1F000000 		.4byte	.LVL76-1
 3792 01a2 0100     		.2byte	0x1
 3793 01a4 50       		.byte	0x50
 3794 01a5 00000000 		.4byte	0
 3795 01a9 00000000 		.4byte	0
 3796              	.LLST11:
 3797 01ad 14000000 		.4byte	.LVL75
 3798 01b1 26000000 		.4byte	.LVL77
 3799 01b5 0500     		.2byte	0x5
 3800 01b7 74       		.byte	0x74
 3801 01b8 00       		.sleb128 0
 3802 01b9 37       		.byte	0x37
 3803 01ba 1A       		.byte	0x1a
 3804 01bb 9F       		.byte	0x9f
 3805 01bc 00000000 		.4byte	0
 3806 01c0 00000000 		.4byte	0
 3807              	.LLST12:
 3808 01c4 00000000 		.4byte	.LVL78
 3809 01c8 11000000 		.4byte	.LVL79-1
 3810 01cc 0100     		.2byte	0x1
 3811 01ce 50       		.byte	0x50
 3812 01cf 11000000 		.4byte	.LVL79-1
 3813 01d3 50000000 		.4byte	.LFE9
 3814 01d7 0400     		.2byte	0x4
 3815 01d9 F3       		.byte	0xf3
 3816 01da 01       		.uleb128 0x1
 3817 01db 50       		.byte	0x50
 3818 01dc 9F       		.byte	0x9f
 3819 01dd 00000000 		.4byte	0
 3820 01e1 00000000 		.4byte	0
 3821              	.LLST13:
 3822 01e5 00000000 		.4byte	.LVL81
 3823 01e9 11000000 		.4byte	.LVL82-1
 3824 01ed 0100     		.2byte	0x1
 3825 01ef 50       		.byte	0x50
 3826 01f0 11000000 		.4byte	.LVL82-1
 3827 01f4 50000000 		.4byte	.LFE11
 3828 01f8 0400     		.2byte	0x4
 3829 01fa F3       		.byte	0xf3
 3830 01fb 01       		.uleb128 0x1
 3831 01fc 50       		.byte	0x50
 3832 01fd 9F       		.byte	0x9f
 3833 01fe 00000000 		.4byte	0
 3834 0202 00000000 		.4byte	0
 3835              		.section	.debug_aranges,"",%progbits
 3836 0000 74000000 		.4byte	0x74
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 109


 3837 0004 0200     		.2byte	0x2
 3838 0006 00000000 		.4byte	.Ldebug_info0
 3839 000a 04       		.byte	0x4
 3840 000b 00       		.byte	0
 3841 000c 0000     		.2byte	0
 3842 000e 0000     		.2byte	0
 3843 0010 00000000 		.4byte	.LFB12
 3844 0014 60010000 		.4byte	.LFE12-.LFB12
 3845 0018 00000000 		.4byte	.LFB13
 3846 001c BC000000 		.4byte	.LFE13-.LFB13
 3847 0020 00000000 		.4byte	.LFB0
 3848 0024 E0010000 		.4byte	.LFE0-.LFB0
 3849 0028 00000000 		.4byte	.LFB1
 3850 002c 0C020000 		.4byte	.LFE1-.LFB1
 3851 0030 00000000 		.4byte	.LFB2
 3852 0034 60000000 		.4byte	.LFE2-.LFB2
 3853 0038 00000000 		.4byte	.LFB3
 3854 003c E8000000 		.4byte	.LFE3-.LFB3
 3855 0040 00000000 		.4byte	.LFB5
 3856 0044 60020000 		.4byte	.LFE5-.LFB5
 3857 0048 00000000 		.4byte	.LFB4
 3858 004c 06000000 		.4byte	.LFE4-.LFB4
 3859 0050 00000000 		.4byte	.LFB6
 3860 0054 30000000 		.4byte	.LFE6-.LFB6
 3861 0058 00000000 		.4byte	.LFB9
 3862 005c 50000000 		.4byte	.LFE9-.LFB9
 3863 0060 00000000 		.4byte	.LFB10
 3864 0064 2C000000 		.4byte	.LFE10-.LFB10
 3865 0068 00000000 		.4byte	.LFB11
 3866 006c 50000000 		.4byte	.LFE11-.LFB11
 3867 0070 00000000 		.4byte	0
 3868 0074 00000000 		.4byte	0
 3869              		.section	.debug_ranges,"",%progbits
 3870              	.Ldebug_ranges0:
 3871 0000 20000000 		.4byte	.LBB10
 3872 0004 06010000 		.4byte	.LBE10
 3873 0008 0A010000 		.4byte	.LBB16
 3874 000c 18010000 		.4byte	.LBE16
 3875 0010 3C010000 		.4byte	.LBB17
 3876 0014 3E010000 		.4byte	.LBE17
 3877 0018 00000000 		.4byte	0
 3878 001c 00000000 		.4byte	0
 3879 0020 00000000 		.4byte	.LFB12
 3880 0024 60010000 		.4byte	.LFE12
 3881 0028 00000000 		.4byte	.LFB13
 3882 002c BC000000 		.4byte	.LFE13
 3883 0030 00000000 		.4byte	.LFB0
 3884 0034 E0010000 		.4byte	.LFE0
 3885 0038 00000000 		.4byte	.LFB1
 3886 003c 0C020000 		.4byte	.LFE1
 3887 0040 00000000 		.4byte	.LFB2
 3888 0044 60000000 		.4byte	.LFE2
 3889 0048 00000000 		.4byte	.LFB3
 3890 004c E8000000 		.4byte	.LFE3
 3891 0050 00000000 		.4byte	.LFB5
 3892 0054 60020000 		.4byte	.LFE5
 3893 0058 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 110


 3894 005c 06000000 		.4byte	.LFE4
 3895 0060 00000000 		.4byte	.LFB6
 3896 0064 30000000 		.4byte	.LFE6
 3897 0068 00000000 		.4byte	.LFB9
 3898 006c 50000000 		.4byte	.LFE9
 3899 0070 00000000 		.4byte	.LFB10
 3900 0074 2C000000 		.4byte	.LFE10
 3901 0078 00000000 		.4byte	.LFB11
 3902 007c 50000000 		.4byte	.LFE11
 3903 0080 00000000 		.4byte	0
 3904 0084 00000000 		.4byte	0
 3905              		.section	.debug_line,"",%progbits
 3906              	.Ldebug_line0:
 3907 0000 89030000 		.section	.debug_str,"MS",%progbits,1
 3907      02006500 
 3907      00000201 
 3907      FB0E0D00 
 3907      01010101 
 3908              	.LASF104:
 3909 0000 43795664 		.ascii	"CyVdLvAnalogDisable\000"
 3909      4C76416E 
 3909      616C6F67 
 3909      44697361 
 3909      626C6500 
 3910              	.LASF10:
 3911 0014 75696E74 		.ascii	"uint16\000"
 3911      313600
 3912              	.LASF89:
 3913 001b 4379494D 		.ascii	"CyIMO_Start\000"
 3913      4F5F5374 
 3913      61727400 
 3914              	.LASF58:
 3915 0027 4379506D 		.ascii	"CyPmHibSlpRestore\000"
 3915      48696253 
 3915      6C705265 
 3915      73746F72 
 3915      6500
 3916              	.LASF43:
 3917 0039 77616B65 		.ascii	"wakeupTrim0\000"
 3917      75705472 
 3917      696D3000 
 3918              	.LASF44:
 3919 0045 77616B65 		.ascii	"wakeupTrim1\000"
 3919      75705472 
 3919      696D3100 
 3920              	.LASF20:
 3921 0051 6D617374 		.ascii	"masterClkSrc\000"
 3921      6572436C 
 3921      6B537263 
 3921      00
 3922              	.LASF56:
 3923 005e 43595F50 		.ascii	"CY_PM_BACKUP_STRUCT\000"
 3923      4D5F4241 
 3923      434B5550 
 3923      5F535452 
 3923      55435400 
 3924              	.LASF112:
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 111


 3925 0072 43795854 		.ascii	"CyXTAL_32KHZ_Start\000"
 3925      414C5F33 
 3925      324B485A 
 3925      5F537461 
 3925      727400
 3926              	.LASF28:
 3927 0085 636C6B53 		.ascii	"clkSyncDiv\000"
 3927      796E6344 
 3927      697600
 3928              	.LASF60:
 3929 0090 4379506D 		.ascii	"CyPmRestoreClocks\000"
 3929      52657374 
 3929      6F726543 
 3929      6C6F636B 
 3929      7300
 3930              	.LASF7:
 3931 00a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 3931      206C6F6E 
 3931      6720756E 
 3931      7369676E 
 3931      65642069 
 3932              	.LASF70:
 3933 00b9 4379506D 		.ascii	"CyPmHviLviSaveDisable\000"
 3933      4876694C 
 3933      76695361 
 3933      76654469 
 3933      7361626C 
 3934              	.LASF77:
 3935 00cf 746D7053 		.ascii	"tmpStatus\000"
 3935      74617475 
 3935      7300
 3936              	.LASF49:
 3937 00d9 6C766961 		.ascii	"lviaTrip\000"
 3937      54726970 
 3937      00
 3938              	.LASF22:
 3939 00e2 696D6F55 		.ascii	"imoUsbClk\000"
 3939      7362436C 
 3939      6B00
 3940              	.LASF81:
 3941 00ec 4379506D 		.ascii	"CyPmFtwSetInterval\000"
 3941      46747753 
 3941      6574496E 
 3941      74657276 
 3941      616C00
 3942              	.LASF50:
 3943 00ff 68766961 		.ascii	"hviaEn\000"
 3943      456E00
 3944              	.LASF107:
 3945 0106 43795664 		.ascii	"CyVdLvDigitEnable\000"
 3945      4C764469 
 3945      67697445 
 3945      6E61626C 
 3945      6500
 3946              	.LASF36:
 3947 0118 696C6F50 		.ascii	"iloPowerMode\000"
 3947      6F776572 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 112


 3947      4D6F6465 
 3947      00
 3948              	.LASF6:
 3949 0125 6C6F6E67 		.ascii	"long long int\000"
 3949      206C6F6E 
 3949      6720696E 
 3949      7400
 3950              	.LASF0:
 3951 0133 7369676E 		.ascii	"signed char\000"
 3951      65642063 
 3951      68617200 
 3952              	.LASF29:
 3953 013f 636C6B42 		.ascii	"clkBusDiv\000"
 3953      75734469 
 3953      7600
 3954              	.LASF68:
 3955 0149 696E7465 		.ascii	"interruptState\000"
 3955      72727570 
 3955      74537461 
 3955      746500
 3956              	.LASF110:
 3957 0158 4379494C 		.ascii	"CyILO_Start1K\000"
 3957      4F5F5374 
 3957      61727431 
 3957      4B00
 3958              	.LASF27:
 3959 0166 696D6F32 		.ascii	"imo2x\000"
 3959      7800
 3960              	.LASF4:
 3961 016c 6C6F6E67 		.ascii	"long int\000"
 3961      20696E74 
 3961      00
 3962              	.LASF72:
 3963 0175 4379506D 		.ascii	"CyPmHviLviRestore\000"
 3963      4876694C 
 3963      76695265 
 3963      73746F72 
 3963      6500
 3964              	.LASF9:
 3965 0187 75696E74 		.ascii	"uint8\000"
 3965      3800
 3966              	.LASF100:
 3967 018d 4379504C 		.ascii	"CyPLL_OUT_Start\000"
 3967      4C5F4F55 
 3967      545F5374 
 3967      61727400 
 3968              	.LASF90:
 3969 019d 43794465 		.ascii	"CyDelayUs\000"
 3969      6C617955 
 3969      7300
 3970              	.LASF13:
 3971 01a7 646F7562 		.ascii	"double\000"
 3971      6C6500
 3972              	.LASF114:
 3973 01ae 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\cyPm.c\000"
 3973      6E657261 
 3973      7465645F 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 113


 3973      536F7572 
 3973      63655C50 
 3974              	.LASF11:
 3975 01ce 75696E74 		.ascii	"uint32\000"
 3975      333200
 3976              	.LASF31:
 3977 01d5 786D687A 		.ascii	"xmhzEnableState\000"
 3977      456E6162 
 3977      6C655374 
 3977      61746500 
 3978              	.LASF71:
 3979 01e5 4379506D 		.ascii	"CyPmHibRestore\000"
 3979      48696252 
 3979      6573746F 
 3979      726500
 3980              	.LASF75:
 3981 01f4 6D61736B 		.ascii	"mask\000"
 3981      00
 3982              	.LASF53:
 3983 01f9 696D6F41 		.ascii	"imoActFreq\000"
 3983      63744672 
 3983      657100
 3984              	.LASF8:
 3985 0204 756E7369 		.ascii	"unsigned int\000"
 3985      676E6564 
 3985      20696E74 
 3985      00
 3986              	.LASF45:
 3987 0211 73636374 		.ascii	"scctData\000"
 3987      44617461 
 3987      00
 3988              	.LASF91:
 3989 021a 4379494D 		.ascii	"CyIMO_SetSource\000"
 3989      4F5F5365 
 3989      74536F75 
 3989      72636500 
 3990              	.LASF21:
 3991 022a 696D6F46 		.ascii	"imoFreq\000"
 3991      72657100 
 3992              	.LASF5:
 3993 0232 6C6F6E67 		.ascii	"long unsigned int\000"
 3993      20756E73 
 3993      69676E65 
 3993      6420696E 
 3993      7400
 3994              	.LASF46:
 3995 0244 6C766964 		.ascii	"lvidEn\000"
 3995      456E00
 3996              	.LASF34:
 3997 024b 6379506D 		.ascii	"cyPmClockBackupStruct\000"
 3997      436C6F63 
 3997      6B426163 
 3997      6B757053 
 3997      74727563 
 3998              	.LASF117:
 3999 0261 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3999      74657243 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 114


 3999      72697469 
 3999      63616C53 
 3999      65637469 
 4000              	.LASF35:
 4001 0278 6379506D 		.ascii	"cyPmBackupStruct\000"
 4001      4261636B 
 4001      75705374 
 4001      72756374 
 4001      00
 4002              	.LASF106:
 4003 0289 4379494C 		.ascii	"CyILO_SetPowerMode\000"
 4003      4F5F5365 
 4003      74506F77 
 4003      65724D6F 
 4003      646500
 4004              	.LASF101:
 4005 029c 4379494D 		.ascii	"CyIMO_Stop\000"
 4005      4F5F5374 
 4005      6F7000
 4006              	.LASF33:
 4007 02a7 43595F50 		.ascii	"CY_PM_CLOCK_BACKUP_STRUCT\000"
 4007      4D5F434C 
 4007      4F434B5F 
 4007      4241434B 
 4007      55505F53 
 4008              	.LASF3:
 4009 02c1 73686F72 		.ascii	"short unsigned int\000"
 4009      7420756E 
 4009      7369676E 
 4009      65642069 
 4009      6E7400
 4010              	.LASF79:
 4011 02d4 63747749 		.ascii	"ctwInterval\000"
 4011      6E746572 
 4011      76616C00 
 4012              	.LASF105:
 4013 02e0 43795664 		.ascii	"CyVdHvAnalogDisable\000"
 4013      4876416E 
 4013      616C6F67 
 4013      44697361 
 4013      626C6500 
 4014              	.LASF87:
 4015 02f4 43794D61 		.ascii	"CyMasterClk_SetSource\000"
 4015      73746572 
 4015      436C6B5F 
 4015      53657453 
 4015      6F757263 
 4016              	.LASF40:
 4017 030a 77616B65 		.ascii	"wakeupCfg0\000"
 4017      75704366 
 4017      673000
 4018              	.LASF41:
 4019 0315 77616B65 		.ascii	"wakeupCfg1\000"
 4019      75704366 
 4019      673100
 4020              	.LASF42:
 4021 0320 77616B65 		.ascii	"wakeupCfg2\000"
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 115


 4021      75704366 
 4021      673200
 4022              	.LASF62:
 4023 032b 636C6B42 		.ascii	"clkBusDivTmp\000"
 4023      75734469 
 4023      76546D70 
 4023      00
 4024              	.LASF55:
 4025 0338 626F6F73 		.ascii	"boostRefExt\000"
 4025      74526566 
 4025      45787400 
 4026              	.LASF26:
 4027 0344 636C6B49 		.ascii	"clkImoSrc\000"
 4027      6D6F5372 
 4027      6300
 4028              	.LASF59:
 4029 034e 4379506D 		.ascii	"CyPmSaveClocks\000"
 4029      53617665 
 4029      436C6F63 
 4029      6B7300
 4030              	.LASF99:
 4031 035d 43795854 		.ascii	"CyXTAL_Start\000"
 4031      414C5F53 
 4031      74617274 
 4031      00
 4032              	.LASF39:
 4033 036a 736C7054 		.ascii	"slpTrBypass\000"
 4033      72427970 
 4033      61737300 
 4034              	.LASF17:
 4035 0376 73697A65 		.ascii	"sizetype\000"
 4035      74797065 
 4035      00
 4036              	.LASF73:
 4037 037f 4379506D 		.ascii	"CyPmHibernateEx\000"
 4037      48696265 
 4037      726E6174 
 4037      65457800 
 4038              	.LASF63:
 4039 038f 6379506D 		.ascii	"cyPmImoFreqMhz2Reg\000"
 4039      496D6F46 
 4039      7265714D 
 4039      687A3252 
 4039      656700
 4040              	.LASF18:
 4041 03a2 656E436C 		.ascii	"enClkA\000"
 4041      6B4100
 4042              	.LASF19:
 4043 03a9 656E436C 		.ascii	"enClkD\000"
 4043      6B4400
 4044              	.LASF111:
 4045 03b0 4379494C 		.ascii	"CyILO_Start100K\000"
 4045      4F5F5374 
 4045      61727431 
 4045      30304B00 
 4046              	.LASF66:
 4047 03c0 77616B65 		.ascii	"wakeupSource\000"
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 116


 4047      7570536F 
 4047      75726365 
 4047      00
 4048              	.LASF92:
 4049 03cd 4379504C 		.ascii	"CyPLL_OUT_Stop\000"
 4049      4C5F4F55 
 4049      545F5374 
 4049      6F7000
 4050              	.LASF94:
 4051 03dc 43794D61 		.ascii	"CyMasterClk_SetDivider\000"
 4051      73746572 
 4051      436C6B5F 
 4051      53657444 
 4051      69766964 
 4052              	.LASF25:
 4053 03f3 696D6F43 		.ascii	"imoClkSrc\000"
 4053      6C6B5372 
 4053      6300
 4054              	.LASF12:
 4055 03fd 666C6F61 		.ascii	"float\000"
 4055      7400
 4056              	.LASF102:
 4057 0403 43794578 		.ascii	"CyExitCriticalSection\000"
 4057      69744372 
 4057      69746963 
 4057      616C5365 
 4057      6374696F 
 4058              	.LASF67:
 4059 0419 4379506D 		.ascii	"CyPmSleep\000"
 4059      536C6565 
 4059      7000
 4060              	.LASF51:
 4061 0423 6C766964 		.ascii	"lvidRst\000"
 4061      52737400 
 4062              	.LASF64:
 4063 042b 4379506D 		.ascii	"CyPmAltAct\000"
 4063      416C7441 
 4063      637400
 4064              	.LASF97:
 4065 0436 43794465 		.ascii	"CyDelayCycles\000"
 4065      6C617943 
 4065      79636C65 
 4065      7300
 4066              	.LASF16:
 4067 0444 72656738 		.ascii	"reg8\000"
 4067      00
 4068              	.LASF80:
 4069 0449 4379506D 		.ascii	"CyPmOppsSet\000"
 4069      4F707073 
 4069      53657400 
 4070              	.LASF1:
 4071 0455 756E7369 		.ascii	"unsigned char\000"
 4071      676E6564 
 4071      20636861 
 4071      7200
 4072              	.LASF84:
 4073 0463 6379506D 		.ascii	"cyPmClockBackup\000"
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 117


 4073      436C6F63 
 4073      6B426163 
 4073      6B757000 
 4074              	.LASF30:
 4075 0473 706C6C45 		.ascii	"pllEnableState\000"
 4075      6E61626C 
 4075      65537461 
 4075      746500
 4076              	.LASF37:
 4077 0482 696C6F31 		.ascii	"ilo1kEnable\000"
 4077      6B456E61 
 4077      626C6500 
 4078              	.LASF2:
 4079 048e 73686F72 		.ascii	"short int\000"
 4079      7420696E 
 4079      7400
 4080              	.LASF57:
 4081 0498 4379506D 		.ascii	"CyPmHibSlpSaveSet\000"
 4081      48696253 
 4081      6C705361 
 4081      76655365 
 4081      7400
 4082              	.LASF38:
 4083 04aa 696C6F31 		.ascii	"ilo100kEnable\000"
 4083      30306B45 
 4083      6E61626C 
 4083      6500
 4084              	.LASF113:
 4085 04b8 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4085      4320342E 
 4085      382E3420 
 4085      32303134 
 4085      30353236 
 4086 04eb 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 4086      20726576 
 4086      6973696F 
 4086      6E203231 
 4086      31333538 
 4087 051e 73202D66 		.ascii	"s -ffunction-sections\000"
 4087      66756E63 
 4087      74696F6E 
 4087      2D736563 
 4087      74696F6E 
 4088              	.LASF14:
 4089 0534 63686172 		.ascii	"char\000"
 4089      00
 4090              	.LASF93:
 4091 0539 4379494D 		.ascii	"CyIMO_DisableDoubler\000"
 4091      4F5F4469 
 4091      7361626C 
 4091      65446F75 
 4091      626C6572 
 4092              	.LASF103:
 4093 054e 43795664 		.ascii	"CyVdLvDigitDisable\000"
 4093      4C764469 
 4093      67697444 
 4093      69736162 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 118


 4093      6C6500
 4094              	.LASF54:
 4095 0561 696D6F41 		.ascii	"imoActFreq12Mhz\000"
 4095      63744672 
 4095      65713132 
 4095      4D687A00 
 4096              	.LASF74:
 4097 0571 4379506D 		.ascii	"CyPmHibernate\000"
 4097      48696265 
 4097      726E6174 
 4097      6500
 4098              	.LASF115:
 4099 057f 433A5C55 		.ascii	"C:\\Users\\Yiquing\\Documents\\works\\NanoNXT\\f2f "
 4099      73657273 
 4099      5C596971 
 4099      75696E67 
 4099      5C446F63 
 4100 05ac 74657374 		.ascii	"testing\\3.2.0\\nanoNxt_ICM3.cydsn\000"
 4100      696E675C 
 4100      332E322E 
 4100      305C6E61 
 4100      6E6F4E78 
 4101              	.LASF86:
 4102 05cd 4379466C 		.ascii	"CyFlash_SetWaitCycles\000"
 4102      6173685F 
 4102      53657457 
 4102      61697443 
 4102      79636C65 
 4103              	.LASF82:
 4104 05e3 66747749 		.ascii	"ftwInterval\000"
 4104      6E746572 
 4104      76616C00 
 4105              	.LASF85:
 4106 05ef 6379506D 		.ascii	"cyPmImoFreqReg2Mhz\000"
 4106      496D6F46 
 4106      72657152 
 4106      6567324D 
 4106      687A00
 4107              	.LASF116:
 4108 0602 4379506D 		.ascii	"CyPmReadStatus\000"
 4108      52656164 
 4108      53746174 
 4108      757300
 4109              	.LASF95:
 4110 0611 43794275 		.ascii	"CyBusClk_SetDivider\000"
 4110      73436C6B 
 4110      5F536574 
 4110      44697669 
 4110      64657200 
 4111              	.LASF32:
 4112 0625 636C6B44 		.ascii	"clkDistDelay\000"
 4112      69737444 
 4112      656C6179 
 4112      00
 4113              	.LASF78:
 4114 0632 4379506D 		.ascii	"CyPmCtwSetInterval\000"
 4114      43747753 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 119


 4114      6574496E 
 4114      74657276 
 4114      616C00
 4115              	.LASF61:
 4116 0645 73746174 		.ascii	"status\000"
 4116      757300
 4117              	.LASF48:
 4118 064c 6C766961 		.ascii	"lviaEn\000"
 4118      456E00
 4119              	.LASF88:
 4120 0653 4379494D 		.ascii	"CyIMO_SetFreq\000"
 4120      4F5F5365 
 4120      74467265 
 4120      7100
 4121              	.LASF98:
 4122 0661 4379494D 		.ascii	"CyIMO_EnableDoubler\000"
 4122      4F5F456E 
 4122      61626C65 
 4122      446F7562 
 4122      6C657200 
 4123              	.LASF69:
 4124 0675 4379506D 		.ascii	"CyPmHibSaveSet\000"
 4124      48696253 
 4124      61766553 
 4124      657400
 4125              	.LASF65:
 4126 0684 77616B65 		.ascii	"wakeupTime\000"
 4126      75705469 
 4126      6D6500
 4127              	.LASF108:
 4128 068f 43795664 		.ascii	"CyVdLvAnalogEnable\000"
 4128      4C76416E 
 4128      616C6F67 
 4128      456E6162 
 4128      6C6500
 4129              	.LASF15:
 4130 06a2 63797374 		.ascii	"cystatus\000"
 4130      61747573 
 4130      00
 4131              	.LASF23:
 4132 06ab 666C6173 		.ascii	"flashWaitCycles\000"
 4132      68576169 
 4132      74437963 
 4132      6C657300 
 4133              	.LASF52:
 4134 06bb 6C766961 		.ascii	"lviaRst\000"
 4134      52737400 
 4135              	.LASF109:
 4136 06c3 43795664 		.ascii	"CyVdHvAnalogEnable\000"
 4136      4876416E 
 4136      616C6F67 
 4136      456E6162 
 4136      6C6500
 4137              	.LASF96:
 4138 06d6 43795854 		.ascii	"CyXTAL_Stop\000"
 4138      414C5F53 
 4138      746F7000 
ARM GAS  C:\Users\Yiquing\AppData\Local\Temp\ccMpXvam.s 			page 120


 4139              	.LASF83:
 4140 06e2 6379506D 		.ascii	"cyPmBackup\000"
 4140      4261636B 
 4140      757000
 4141              	.LASF47:
 4142 06ed 6C766964 		.ascii	"lvidTrip\000"
 4142      54726970 
 4142      00
 4143              	.LASF24:
 4144 06f6 696D6F45 		.ascii	"imoEnable\000"
 4144      6E61626C 
 4144      6500
 4145              	.LASF76:
 4146 0700 696E7465 		.ascii	"interruptStatus\000"
 4146      72727570 
 4146      74537461 
 4146      74757300 
 4147              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
